{
  "version": 3,
  "sources": ["../../neo4j-driver-core/lib/internal/object-util.js", "../../neo4j-driver-core/lib/json.js", "../../neo4j-driver-core/lib/gql-constants.js", "../../neo4j-driver-core/lib/error.js", "../../neo4j-driver-core/lib/integer.js", "../../neo4j-driver-core/lib/internal/util.js", "../../neo4j-driver-core/lib/internal/temporal-util.js", "../../neo4j-driver-core/lib/temporal-types.js", "../../neo4j-driver-core/lib/graph-types.js", "../../neo4j-driver-core/lib/record.js", "../../neo4j-driver-core/lib/spatial-types.js", "../../neo4j-driver-core/lib/internal/observers.js", "../../neo4j-driver-core/lib/internal/bookmarks.js", "../../neo4j-driver-core/lib/internal/constants.js", "../../neo4j-driver-core/lib/internal/logger.js", "../../neo4j-driver-core/lib/internal/connection-holder.js", "../../neo4j-driver-core/lib/internal/tx-config.js", "../../neo4j-driver-core/lib/internal/transaction-executor.js", "../../neo4j-driver-core/lib/internal/url-util.js", "../../neo4j-driver-core/lib/internal/server-address.js", "../../neo4j-driver-core/lib/internal/resolver/base-host-name-resolver.js", "../../neo4j-driver-core/lib/internal/resolver/configured-custom-resolver.js", "../../neo4j-driver-core/lib/internal/resolver/index.js", "../../neo4j-driver-core/lib/internal/bolt-agent/browser/bolt-agent.js", "../../neo4j-driver-core/lib/internal/bolt-agent/browser/index.js", "../../neo4j-driver-core/lib/internal/pool/pool-config.js", "../../neo4j-driver-core/lib/internal/pool/pool.js", "../../neo4j-driver-core/lib/internal/pool/index.js", "../../neo4j-driver-core/lib/internal/index.js", "../../neo4j-driver-core/lib/notification.js", "../../neo4j-driver-core/lib/result-summary.js", "../../neo4j-driver-core/lib/notification-filter.js", "../../neo4j-driver-core/lib/result.js", "../../neo4j-driver-core/lib/result-eager.js", "../../neo4j-driver-core/lib/connection-provider.js", "../../neo4j-driver-core/lib/connection.js", "../../neo4j-driver-core/lib/transaction.js", "../../neo4j-driver-core/lib/transaction-managed.js", "../../neo4j-driver-core/lib/transaction-promise.js", "../../neo4j-driver-core/lib/session.js", "../../neo4j-driver-core/lib/bookmark-manager.js", "../../neo4j-driver-core/lib/result-transformers.js", "../../neo4j-driver-core/lib/internal/query-executor.js", "../../neo4j-driver-core/lib/driver.js", "../../neo4j-driver-core/lib/auth.js", "../../neo4j-driver-core/lib/auth-token-manager.js", "../../neo4j-driver-core/lib/types.js", "../../neo4j-driver-core/lib/client-certificate.js", "../../neo4j-driver-core/lib/index.js", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/Observable.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/util/isObservable.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/lastValueFrom.ts", "../../rxjs/src/internal/firstValueFrom.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/util/isDate.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/observable/bindCallbackInternals.ts", "../../rxjs/src/internal/observable/bindCallback.ts", "../../rxjs/src/internal/observable/bindNodeCallback.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/operators/mergeAll.ts", "../../rxjs/src/internal/operators/concatAll.ts", "../../rxjs/src/internal/observable/concat.ts", "../../rxjs/src/internal/observable/defer.ts", "../../rxjs/src/internal/observable/connectable.ts", "../../rxjs/src/internal/observable/forkJoin.ts", "../../rxjs/src/internal/observable/fromEvent.ts", "../../rxjs/src/internal/observable/fromEventPattern.ts", "../../rxjs/src/internal/observable/generate.ts", "../../rxjs/src/internal/observable/iif.ts", "../../rxjs/src/internal/observable/timer.ts", "../../rxjs/src/internal/observable/interval.ts", "../../rxjs/src/internal/observable/merge.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/observable/onErrorResumeNext.ts", "../../rxjs/src/internal/observable/pairs.ts", "../../rxjs/src/internal/util/not.ts", "../../rxjs/src/internal/operators/filter.ts", "../../rxjs/src/internal/observable/partition.ts", "../../rxjs/src/internal/observable/race.ts", "../../rxjs/src/internal/observable/range.ts", "../../rxjs/src/internal/observable/using.ts", "../../rxjs/src/internal/observable/zip.ts", "../../rxjs/dist/cjs/internal/types.js", "../../rxjs/src/internal/operators/audit.ts", "../../rxjs/src/internal/operators/auditTime.ts", "../../rxjs/src/internal/operators/buffer.ts", "../../rxjs/src/internal/operators/bufferCount.ts", "../../rxjs/src/internal/operators/bufferTime.ts", "../../rxjs/src/internal/operators/bufferToggle.ts", "../../rxjs/src/internal/operators/bufferWhen.ts", "../../rxjs/src/internal/operators/catchError.ts", "../../rxjs/src/internal/operators/scanInternals.ts", "../../rxjs/src/internal/operators/reduce.ts", "../../rxjs/src/internal/operators/toArray.ts", "../../rxjs/src/internal/operators/joinAllInternals.ts", "../../rxjs/src/internal/operators/combineLatestAll.ts", "../../rxjs/src/internal/operators/combineAll.ts", "../../rxjs/src/internal/operators/combineLatest.ts", "../../rxjs/src/internal/operators/combineLatestWith.ts", "../../rxjs/src/internal/operators/concatMap.ts", "../../rxjs/src/internal/operators/concatMapTo.ts", "../../rxjs/src/internal/operators/concat.ts", "../../rxjs/src/internal/operators/concatWith.ts", "../../rxjs/src/internal/observable/fromSubscribable.ts", "../../rxjs/src/internal/operators/connect.ts", "../../rxjs/src/internal/operators/count.ts", "../../rxjs/src/internal/operators/debounce.ts", "../../rxjs/src/internal/operators/debounceTime.ts", "../../rxjs/src/internal/operators/defaultIfEmpty.ts", "../../rxjs/src/internal/operators/take.ts", "../../rxjs/src/internal/operators/ignoreElements.ts", "../../rxjs/src/internal/operators/mapTo.ts", "../../rxjs/src/internal/operators/delayWhen.ts", "../../rxjs/src/internal/operators/delay.ts", "../../rxjs/src/internal/operators/dematerialize.ts", "../../rxjs/src/internal/operators/distinct.ts", "../../rxjs/src/internal/operators/distinctUntilChanged.ts", "../../rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../rxjs/src/internal/operators/throwIfEmpty.ts", "../../rxjs/src/internal/operators/elementAt.ts", "../../rxjs/src/internal/operators/endWith.ts", "../../rxjs/src/internal/operators/every.ts", "../../rxjs/src/internal/operators/exhaustMap.ts", "../../rxjs/src/internal/operators/exhaustAll.ts", "../../rxjs/src/internal/operators/exhaust.ts", "../../rxjs/src/internal/operators/expand.ts", "../../rxjs/src/internal/operators/finalize.ts", "../../rxjs/src/internal/operators/find.ts", "../../rxjs/src/internal/operators/findIndex.ts", "../../rxjs/src/internal/operators/first.ts", "../../rxjs/src/internal/operators/groupBy.ts", "../../rxjs/src/internal/operators/isEmpty.ts", "../../rxjs/src/internal/operators/takeLast.ts", "../../rxjs/src/internal/operators/last.ts", "../../rxjs/src/internal/operators/materialize.ts", "../../rxjs/src/internal/operators/max.ts", "../../rxjs/src/internal/operators/flatMap.ts", "../../rxjs/src/internal/operators/mergeMapTo.ts", "../../rxjs/src/internal/operators/mergeScan.ts", "../../rxjs/src/internal/operators/merge.ts", "../../rxjs/src/internal/operators/mergeWith.ts", "../../rxjs/src/internal/operators/min.ts", "../../rxjs/src/internal/operators/multicast.ts", "../../rxjs/src/internal/operators/onErrorResumeNextWith.ts", "../../rxjs/src/internal/operators/pairwise.ts", "../../rxjs/src/internal/operators/pluck.ts", "../../rxjs/src/internal/operators/publish.ts", "../../rxjs/src/internal/operators/publishBehavior.ts", "../../rxjs/src/internal/operators/publishLast.ts", "../../rxjs/src/internal/operators/publishReplay.ts", "../../rxjs/src/internal/operators/raceWith.ts", "../../rxjs/src/internal/operators/repeat.ts", "../../rxjs/src/internal/operators/repeatWhen.ts", "../../rxjs/src/internal/operators/retry.ts", "../../rxjs/src/internal/operators/retryWhen.ts", "../../rxjs/src/internal/operators/sample.ts", "../../rxjs/src/internal/operators/sampleTime.ts", "../../rxjs/src/internal/operators/scan.ts", "../../rxjs/src/internal/operators/sequenceEqual.ts", "../../rxjs/src/internal/operators/share.ts", "../../rxjs/src/internal/operators/shareReplay.ts", "../../rxjs/src/internal/operators/single.ts", "../../rxjs/src/internal/operators/skip.ts", "../../rxjs/src/internal/operators/skipLast.ts", "../../rxjs/src/internal/operators/skipUntil.ts", "../../rxjs/src/internal/operators/skipWhile.ts", "../../rxjs/src/internal/operators/startWith.ts", "../../rxjs/src/internal/operators/switchMap.ts", "../../rxjs/src/internal/operators/switchAll.ts", "../../rxjs/src/internal/operators/switchMapTo.ts", "../../rxjs/src/internal/operators/switchScan.ts", "../../rxjs/src/internal/operators/takeUntil.ts", "../../rxjs/src/internal/operators/takeWhile.ts", "../../rxjs/src/internal/operators/tap.ts", "../../rxjs/src/internal/operators/throttle.ts", "../../rxjs/src/internal/operators/throttleTime.ts", "../../rxjs/src/internal/operators/timeInterval.ts", "../../rxjs/src/internal/operators/timeoutWith.ts", "../../rxjs/src/internal/operators/timestamp.ts", "../../rxjs/src/internal/operators/window.ts", "../../rxjs/src/internal/operators/windowCount.ts", "../../rxjs/src/internal/operators/windowTime.ts", "../../rxjs/src/internal/operators/windowToggle.ts", "../../rxjs/src/internal/operators/windowWhen.ts", "../../rxjs/src/internal/operators/withLatestFrom.ts", "../../rxjs/src/internal/operators/zipAll.ts", "../../rxjs/src/internal/operators/zip.ts", "../../rxjs/src/internal/operators/zipWith.ts", "../../rxjs/src/index.ts", "../../rxjs/src/internal/operators/partition.ts", "../../rxjs/src/internal/operators/race.ts", "../../rxjs/src/operators/index.ts", "../../neo4j-driver/lib/result-rx.js", "../../neo4j-driver/lib/transaction-rx.js", "../../neo4j-driver/lib/transaction-managed-rx.js", "../../neo4j-driver/lib/internal/retry-logic-rx.js", "../../neo4j-driver/lib/session-rx.js", "../../neo4j-driver/lib/driver.js", "../../neo4j-driver/lib/version.js", "../../neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js", "../../neo4j-driver-bolt-connection/lib/load-balancing/round-robin-array-index.js", "../../neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js", "../../neo4j-driver-bolt-connection/lib/load-balancing/index.js", "../../base64-js/index.js", "../../ieee754/index.js", "../../buffer/index.js", "../../neo4j-driver-bolt-connection/lib/buf/base-buf.js", "../../neo4j-driver-bolt-connection/lib/buf/index.js", "../../neo4j-driver-bolt-connection/lib/channel/channel-buf.js", "../../neo4j-driver-bolt-connection/lib/channel/browser/browser-channel.js", "../../neo4j-driver-bolt-connection/lib/channel/browser/browser-host-name-resolver.js", "../../neo4j-driver-bolt-connection/lib/channel/browser/browser-client-certificates-loader.js", "../../neo4j-driver-bolt-connection/lib/channel/browser/index.js", "../../neo4j-driver-bolt-connection/lib/channel/combined-buf.js", "../../neo4j-driver-bolt-connection/lib/channel/chunking.js", "../../neo4j-driver-bolt-connection/lib/channel/channel-config.js", "../../safe-buffer/index.js", "../../string_decoder/lib/string_decoder.js", "../../neo4j-driver-bolt-connection/lib/channel/utf8.js", "../../neo4j-driver-bolt-connection/lib/channel/index.js", "../../neo4j-driver-bolt-connection/lib/bolt/handshake.js", "../../neo4j-driver-bolt-connection/lib/bolt/routing-table-raw.js", "../../neo4j-driver-bolt-connection/lib/lang/functional.js", "../../neo4j-driver-bolt-connection/lib/lang/object.js", "../../neo4j-driver-bolt-connection/lib/lang/index.js", "../../neo4j-driver-bolt-connection/lib/bolt/stream-observers.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js", "../../neo4j-driver-bolt-connection/lib/packstream/structure.js", "../../neo4j-driver-bolt-connection/lib/packstream/packstream-v1.js", "../../neo4j-driver-bolt-connection/lib/packstream/packstream-v2.js", "../../neo4j-driver-bolt-connection/lib/packstream/index.js", "../../neo4j-driver-bolt-connection/lib/bolt/request-message.js", "../../neo4j-driver-bolt-connection/lib/bolt/transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js", "../../neo4j-driver-bolt-connection/lib/bolt/temporal-factory.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x5.transformer.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x5.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x6.js", "../../neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x7.js", "../../neo4j-driver-bolt-connection/lib/bolt/response-handler.js", "../../neo4j-driver-bolt-connection/lib/bolt/create.js", "../../neo4j-driver-bolt-connection/lib/bolt/index.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-single.js", "../../neo4j-driver-bolt-connection/lib/connection/connection.js", "../../neo4j-driver-bolt-connection/lib/connection/connection-channel.js", "../../neo4j-driver-bolt-connection/lib/connection/connection-delegate.js", "../../neo4j-driver-bolt-connection/lib/connection/connection-error-handler.js", "../../neo4j-driver-bolt-connection/lib/connection/index.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/authentication-provider.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/liveness-check-provider.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/client-certificate-holder.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-direct.js", "../../neo4j-driver-bolt-connection/lib/rediscovery/routing-table.js", "../../neo4j-driver-bolt-connection/lib/rediscovery/rediscovery.js", "../../neo4j-driver-bolt-connection/lib/rediscovery/index.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js", "../../neo4j-driver-bolt-connection/lib/connection-provider/index.js", "../../neo4j-driver-bolt-connection/lib/index.js", "../../neo4j-driver/lib/index.js"],
  "sourcesContent": ["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getBrokenObjectReason = exports.isBrokenObject = exports.createBrokenObject = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar __isBrokenObject__ = '__isBrokenObject__';\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar __reason__ = '__reason__';\r\n/**\r\n * Creates a object which all method call will throw the given error\r\n *\r\n * @param {Error} error The error\r\n * @param {any} object The object. Default: {}\r\n * @returns {any} A broken object\r\n */\r\nfunction createBrokenObject(error, object) {\r\n    if (object === void 0) { object = {}; }\r\n    var fail = function () {\r\n        throw error;\r\n    };\r\n    return new Proxy(object, {\r\n        get: function (_, p) {\r\n            if (p === __isBrokenObject__) {\r\n                return true;\r\n            }\r\n            else if (p === __reason__) {\r\n                return error;\r\n            }\r\n            else if (p === 'toJSON') {\r\n                return undefined;\r\n            }\r\n            fail();\r\n        },\r\n        set: fail,\r\n        apply: fail,\r\n        construct: fail,\r\n        defineProperty: fail,\r\n        deleteProperty: fail,\r\n        getOwnPropertyDescriptor: fail,\r\n        getPrototypeOf: fail,\r\n        has: fail,\r\n        isExtensible: fail,\r\n        ownKeys: fail,\r\n        preventExtensions: fail,\r\n        setPrototypeOf: fail\r\n    });\r\n}\r\nexports.createBrokenObject = createBrokenObject;\r\n/**\r\n * Verifies if it is a Broken Object\r\n * @param {any} object The object\r\n * @returns {boolean} If it was created with createBrokenObject\r\n */\r\nfunction isBrokenObject(object) {\r\n    return object !== null && typeof object === 'object' && object[__isBrokenObject__] === true;\r\n}\r\nexports.isBrokenObject = isBrokenObject;\r\n/**\r\n * Returns if the reason the object is broken.\r\n *\r\n * This method should only be called with instances create with {@link createBrokenObject}\r\n *\r\n * @param {any} object The object\r\n * @returns {Error} The reason the object is broken\r\n */\r\nfunction getBrokenObjectReason(object) {\r\n    return object[__reason__];\r\n}\r\nexports.getBrokenObjectReason = getBrokenObjectReason;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.stringify = void 0;\r\nvar object_util_1 = require(\"./internal/object-util\");\r\n/**\r\n * Custom version on JSON.stringify that can handle values that normally don't support serialization, such as BigInt.\r\n * @private\r\n * @param val A JavaScript value, usually an object or array, to be converted.\r\n * @returns A JSON string representing the given value.\r\n */\r\nfunction stringify(val, opts) {\r\n    return JSON.stringify(val, function (_, value) {\r\n        if ((0, object_util_1.isBrokenObject)(value)) {\r\n            return {\r\n                __isBrokenObject__: true,\r\n                __reason__: (0, object_util_1.getBrokenObjectReason)(value)\r\n            };\r\n        }\r\n        if (typeof value === 'bigint') {\r\n            return \"\".concat(value, \"n\");\r\n        }\r\n        if ((opts === null || opts === void 0 ? void 0 : opts.useCustomToString) === true &&\r\n            typeof value === 'object' &&\r\n            !Array.isArray(value) &&\r\n            typeof value.toString === 'function' &&\r\n            value.toString !== Object.prototype.toString) {\r\n            return value === null || value === void 0 ? void 0 : value.toString();\r\n        }\r\n        return value;\r\n    });\r\n}\r\nexports.stringify = stringify;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rawPolyfilledDiagnosticRecord = void 0;\r\nexports.rawPolyfilledDiagnosticRecord = {\r\n    OPERATION: '',\r\n    OPERATION_CODE: '0',\r\n    CURRENT_SCHEMA: '/'\r\n};\r\nObject.freeze(exports.rawPolyfilledDiagnosticRecord);\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PROTOCOL_ERROR = exports.SESSION_EXPIRED = exports.SERVICE_UNAVAILABLE = exports.GQLError = exports.Neo4jError = exports.isRetriableError = exports.newGQLError = exports.newError = void 0;\r\n// A common place for constructing error objects, to keep them\r\n// uniform across the driver surface.\r\nvar json = __importStar(require(\"./json\"));\r\nvar gql_constants_1 = require(\"./gql-constants\");\r\n/**\r\n * @typedef { 'DATABASE_ERROR' | 'CLIENT_ERROR' | 'TRANSIENT_ERROR' | 'UNKNOWN' } ErrorClassification\r\n * @experimental this is part of the preview of GQL-compliant errors\r\n */\r\nvar errorClassification = {\r\n    DATABASE_ERROR: 'DATABASE_ERROR',\r\n    CLIENT_ERROR: 'CLIENT_ERROR',\r\n    TRANSIENT_ERROR: 'TRANSIENT_ERROR',\r\n    UNKNOWN: 'UNKNOWN'\r\n};\r\nObject.freeze(errorClassification);\r\nvar classifications = Object.values(errorClassification);\r\n/**\r\n * Error code representing complete loss of service. Used by {@link Neo4jError#code}.\r\n * @type {string}\r\n */\r\nvar SERVICE_UNAVAILABLE = 'ServiceUnavailable';\r\nexports.SERVICE_UNAVAILABLE = SERVICE_UNAVAILABLE;\r\n/**\r\n * Error code representing transient loss of service. Used by {@link Neo4jError#code}.\r\n * @type {string}\r\n */\r\nvar SESSION_EXPIRED = 'SessionExpired';\r\nexports.SESSION_EXPIRED = SESSION_EXPIRED;\r\n/**\r\n * Error code representing serialization/deserialization issue in the Bolt protocol. Used by {@link Neo4jError#code}.\r\n * @type {string}\r\n */\r\nvar PROTOCOL_ERROR = 'ProtocolError';\r\nexports.PROTOCOL_ERROR = PROTOCOL_ERROR;\r\n/**\r\n * Error code representing an no classified error. Used by {@link Neo4jError#code}.\r\n * @type {string}\r\n */\r\nvar NOT_AVAILABLE = 'N/A';\r\n/// TODO: Remove definitions of this.constructor and this.__proto__\r\n/**\r\n * Class for nested errors, to be used as causes in {@link Neo4jError}\r\n * @experimental this class is part of the preview of GQL-compliant errors\r\n */\r\nvar GQLError = /** @class */ (function (_super) {\r\n    __extends(GQLError, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {string} message - the error message\r\n     * @param {string} gqlStatus - the GQL status code of the error\r\n     * @param {string} gqlStatusDescription - the GQL status description of the error\r\n     * @param {ErrorDiagnosticRecord} diagnosticRecord - the error diagnostic record\r\n     * @param {Error} cause - Optional nested error, the cause of the error\r\n     */\r\n    function GQLError(message, gqlStatus, gqlStatusDescription, diagnosticRecord, cause) {\r\n        var _this = this;\r\n        var _a;\r\n        // eslint-disable-next-line\r\n        // @ts-ignore: not available in ES6 yet\r\n        _this = _super.call(this, message, cause != null ? { cause: cause } : undefined) || this;\r\n        _this.constructor = GQLError;\r\n        // eslint-disable-next-line no-proto\r\n        _this.__proto__ = GQLError.prototype;\r\n        /**\r\n         * Optional, nested error which caused the error\r\n         *\r\n         * @type {Error?}\r\n         * @public\r\n         */\r\n        _this.cause = cause != null ? cause : undefined;\r\n        /**\r\n         * The GQL Status code\r\n         *\r\n         * @type {string}\r\n         * @experimental this property is part of the preview of GQL-compliant errors\r\n         * @public\r\n         */\r\n        _this.gqlStatus = gqlStatus;\r\n        /**\r\n         * The GQL Status Description\r\n         *\r\n         * @type {string}\r\n         * @experimental this property is part of the preview of GQL-compliant errors\r\n         * @public\r\n         */\r\n        _this.gqlStatusDescription = gqlStatusDescription;\r\n        /**\r\n         * The GQL diagnostic record\r\n         *\r\n         * @type {DiagnosticRecord}\r\n         * @experimental this property is part of the preview of GQL-compliant errors\r\n         * @public\r\n         */\r\n        _this.diagnosticRecord = diagnosticRecord;\r\n        /**\r\n         * The GQL error classification, extracted from the diagnostic record\r\n         *\r\n         * @type {ErrorClassification}\r\n         * @experimental this property is part of the preview of GQL-compliant errors\r\n         * @public\r\n         */\r\n        _this.classification = _extractClassification(_this.diagnosticRecord);\r\n        /**\r\n         * The GQL error classification, extracted from the diagnostic record as a raw string\r\n         *\r\n         * @type {string}\r\n         * @experimental this property is part of the preview of GQL-compliant errors\r\n         * @public\r\n         */\r\n        _this.rawClassification = (_a = diagnosticRecord === null || diagnosticRecord === void 0 ? void 0 : diagnosticRecord._classification) !== null && _a !== void 0 ? _a : undefined;\r\n        _this.name = 'GQLError';\r\n        return _this;\r\n    }\r\n    Object.defineProperty(GQLError.prototype, \"diagnosticRecordAsJsonString\", {\r\n        /**\r\n         * The json string representation of the diagnostic record.\r\n         * The goal of this method is provide a serialized object for human inspection.\r\n         *\r\n         * @type {string}\r\n         * @experimental this is part of the preview of GQL-compliant errors\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return json.stringify(this.diagnosticRecord, { useCustomToString: true });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return GQLError;\r\n}(Error));\r\nexports.GQLError = GQLError;\r\n/**\r\n * Class for all errors thrown/returned by the driver.\r\n */\r\nvar Neo4jError = /** @class */ (function (_super) {\r\n    __extends(Neo4jError, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {string} message - the error message\r\n     * @param {string} code - Optional error code. Will be populated when error originates in the database.\r\n     * @param {string} gqlStatus - the GQL status code of the error\r\n     * @param {string} gqlStatusDescription - the GQL status description of the error\r\n     * @param {DiagnosticRecord} diagnosticRecord - the error diagnostic record\r\n     * @param {Error} cause - Optional nested error, the cause of the error\r\n     */\r\n    function Neo4jError(message, code, gqlStatus, gqlStatusDescription, diagnosticRecord, cause) {\r\n        var _this = _super.call(this, message, gqlStatus, gqlStatusDescription, diagnosticRecord, cause) || this;\r\n        _this.constructor = Neo4jError;\r\n        // eslint-disable-next-line no-proto\r\n        _this.__proto__ = Neo4jError.prototype;\r\n        /**\r\n         * The Neo4j Error code\r\n         *\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        _this.code = code;\r\n        _this.name = 'Neo4jError';\r\n        _this.retriable = _isRetriableCode(code);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Verifies if the given error is retriable.\r\n     *\r\n     * @param {object|undefined|null} error the error object\r\n     * @returns {boolean} true if the error is retriable\r\n     */\r\n    Neo4jError.isRetriable = function (error) {\r\n        return error !== null &&\r\n            error !== undefined &&\r\n            error instanceof Neo4jError &&\r\n            error.retriable;\r\n    };\r\n    return Neo4jError;\r\n}(GQLError));\r\nexports.Neo4jError = Neo4jError;\r\n/**\r\n * Create a new error from a message and optional data\r\n * @param message the error message\r\n * @param {Neo4jErrorCode} [code] the error code\r\n * @param {Neo4jError} [cause]\r\n * @param {String} [gqlStatus]\r\n * @param {String} [gqlStatusDescription]\r\n * @param {DiagnosticRecord} diagnosticRecord - the error message\r\n * @return {Neo4jError} an {@link Neo4jError}\r\n * @private\r\n */\r\nfunction newError(message, code, cause, gqlStatus, gqlStatusDescription, diagnosticRecord) {\r\n    return new Neo4jError(message, code !== null && code !== void 0 ? code : NOT_AVAILABLE, gqlStatus !== null && gqlStatus !== void 0 ? gqlStatus : '50N42', gqlStatusDescription !== null && gqlStatusDescription !== void 0 ? gqlStatusDescription : 'error: general processing exception - unexpected error. ' + message, diagnosticRecord !== null && diagnosticRecord !== void 0 ? diagnosticRecord : gql_constants_1.rawPolyfilledDiagnosticRecord, cause);\r\n}\r\nexports.newError = newError;\r\n/**\r\n * Create a new GQL error from a message and optional data\r\n * @param message the error message\r\n * @param {Neo4jError} [cause]\r\n * @param {String} [gqlStatus]\r\n * @param {String} [gqlStatusDescription]\r\n * @param {DiagnosticRecord} diagnosticRecord - the error message\r\n * @return {Neo4jError} an {@link Neo4jError}\r\n * @experimental this is part of the preview of GQL-compliant errors\r\n * @private\r\n */\r\nfunction newGQLError(message, cause, gqlStatus, gqlStatusDescription, diagnosticRecord) {\r\n    return new GQLError(message, gqlStatus !== null && gqlStatus !== void 0 ? gqlStatus : '50N42', gqlStatusDescription !== null && gqlStatusDescription !== void 0 ? gqlStatusDescription : 'error: general processing exception - unexpected error. ' + message, diagnosticRecord !== null && diagnosticRecord !== void 0 ? diagnosticRecord : gql_constants_1.rawPolyfilledDiagnosticRecord, cause);\r\n}\r\nexports.newGQLError = newGQLError;\r\n/**\r\n * Verifies if the given error is retriable.\r\n *\r\n * @public\r\n * @param {object|undefined|null} error the error object\r\n * @returns {boolean} true if the error is retriable\r\n */\r\nvar isRetriableError = Neo4jError.isRetriable;\r\nexports.isRetriableError = isRetriableError;\r\n/**\r\n * @private\r\n * @param {string} code the error code\r\n * @returns {boolean} true if the error is a retriable error\r\n */\r\nfunction _isRetriableCode(code) {\r\n    return code === SERVICE_UNAVAILABLE ||\r\n        code === SESSION_EXPIRED ||\r\n        _isAuthorizationExpired(code) ||\r\n        _isTransientError(code);\r\n}\r\n/**\r\n * @private\r\n * @param {string} code the error to check\r\n * @return {boolean} true if the error is a transient error\r\n */\r\nfunction _isTransientError(code) {\r\n    return (code === null || code === void 0 ? void 0 : code.includes('TransientError')) === true;\r\n}\r\n/**\r\n * @private\r\n * @param {string} code the error to check\r\n * @returns {boolean} true if the error is a service unavailable error\r\n */\r\nfunction _isAuthorizationExpired(code) {\r\n    return code === 'Neo.ClientError.Security.AuthorizationExpired';\r\n}\r\n/**\r\n * extracts a typed classification from the diagnostic record.\r\n */\r\nfunction _extractClassification(diagnosticRecord) {\r\n    if (diagnosticRecord === undefined || diagnosticRecord._classification === undefined) {\r\n        return 'UNKNOWN';\r\n    }\r\n    return classifications.includes(diagnosticRecord._classification) ? diagnosticRecord === null || diagnosticRecord === void 0 ? void 0 : diagnosticRecord._classification : 'UNKNOWN';\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.toString = exports.toNumber = exports.inSafeRange = exports.isInt = exports.int = void 0;\r\n// 64-bit Integer library, originally from Long.js by dcodeIO\r\n// https://github.com/dcodeIO/Long.js\r\n// License Apache 2\r\nvar error_1 = require(\"./error\");\r\n/**\r\n * A cache of the Integer representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n * @private\r\n */\r\n// eslint-disable-next-line no-use-before-define\r\nvar INT_CACHE = new Map();\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n * See exported functions for more convenient ways of operating integers.\r\n * Use `int()` function to create new integers, `isInt()` to check if given object is integer,\r\n * `inSafeRange()` to check if it is safe to convert given value to native number,\r\n * `toNumber()` and `toString()` to convert given integer to number or string respectively.\r\n * @access public\r\n * @exports Integer\r\n * @class A Integer class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n *\r\n * @constructor\r\n */\r\nvar Integer = /** @class */ (function () {\r\n    function Integer(low, high) {\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.low = low !== null && low !== void 0 ? low : 0;\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.high = high !== null && high !== void 0 ? high : 0;\r\n    }\r\n    // The internal representation of an Integer is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // JavaScript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within JavaScript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n    Integer.prototype.inSafeRange = function () {\r\n        return (this.greaterThanOrEqual(Integer.MIN_SAFE_VALUE) &&\r\n            this.lessThanOrEqual(Integer.MAX_SAFE_VALUE));\r\n    };\r\n    /**\r\n     * Converts the Integer to an exact javascript Number, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Integer.prototype.toInt = function () {\r\n        return this.low;\r\n    };\r\n    /**\r\n     * Converts the Integer to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Integer.prototype.toNumber = function () {\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n    /**\r\n     * Converts the Integer to a BigInt representation of this value\r\n     * @returns {bigint}\r\n     * @expose\r\n     */\r\n    Integer.prototype.toBigInt = function () {\r\n        if (this.isZero()) {\r\n            return BigInt(0);\r\n        }\r\n        else if (this.isPositive()) {\r\n            return (BigInt(this.high >>> 0) * BigInt(TWO_PWR_32_DBL) +\r\n                BigInt(this.low >>> 0));\r\n        }\r\n        else {\r\n            var negate = this.negate();\r\n            return (BigInt(-1) *\r\n                (BigInt(negate.high >>> 0) * BigInt(TWO_PWR_32_DBL) +\r\n                    BigInt(negate.low >>> 0)));\r\n        }\r\n    };\r\n    /**\r\n     * Converts the Integer to native number or -Infinity/+Infinity when it does not fit.\r\n     * @return {number}\r\n     * @package\r\n     */\r\n    Integer.prototype.toNumberOrInfinity = function () {\r\n        if (this.lessThan(Integer.MIN_SAFE_VALUE)) {\r\n            return Number.NEGATIVE_INFINITY;\r\n        }\r\n        else if (this.greaterThan(Integer.MAX_SAFE_VALUE)) {\r\n            return Number.POSITIVE_INFINITY;\r\n        }\r\n        else {\r\n            return this.toNumber();\r\n        }\r\n    };\r\n    /**\r\n     * Converts the Integer to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     * @expose\r\n     */\r\n    Integer.prototype.toString = function (radix) {\r\n        radix = radix !== null && radix !== void 0 ? radix : 10;\r\n        if (radix < 2 || radix > 36) {\r\n            throw RangeError('radix out of range: ' + radix.toString());\r\n        }\r\n        if (this.isZero()) {\r\n            return '0';\r\n        }\r\n        var rem;\r\n        if (this.isNegative()) {\r\n            if (this.equals(Integer.MIN_VALUE)) {\r\n                // We need to change the Integer value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixInteger = Integer.fromNumber(radix);\r\n                var div = this.div(radixInteger);\r\n                rem = div.multiply(radixInteger).subtract(this);\r\n                return div.toString(radix) + rem.toInt().toString(radix);\r\n            }\r\n            else {\r\n                return '-' + this.negate().toString(radix);\r\n            }\r\n        }\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = Integer.fromNumber(Math.pow(radix, 6));\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower);\r\n            var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;\r\n            var digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero()) {\r\n                return digits + result;\r\n            }\r\n            else {\r\n                while (digits.length < 6) {\r\n                    digits = '0' + digits;\r\n                }\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Converts the Integer to it primitive value.\r\n     *\r\n     * @since 5.4.0\r\n     * @returns {bigint}\r\n     *\r\n     * @see {@link Integer#toBigInt}\r\n     * @see {@link Integer#toInt}\r\n     * @see {@link Integer#toNumber}\r\n     * @see {@link Integer#toString}\r\n     */\r\n    Integer.prototype.valueOf = function () {\r\n        return this.toBigInt();\r\n    };\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     * @expose\r\n     */\r\n    Integer.prototype.getHighBits = function () {\r\n        return this.high;\r\n    };\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     * @expose\r\n     */\r\n    Integer.prototype.getLowBits = function () {\r\n        return this.low;\r\n    };\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Integer.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Integer.prototype.getNumBitsAbs = function () {\r\n        if (this.isNegative()) {\r\n            return this.equals(Integer.MIN_VALUE) ? 64 : this.negate().getNumBitsAbs();\r\n        }\r\n        var val = this.high !== 0 ? this.high : this.low;\r\n        var bit = 0;\r\n        for (bit = 31; bit > 0; bit--) {\r\n            if ((val & (1 << bit)) !== 0) {\r\n                break;\r\n            }\r\n        }\r\n        return this.high !== 0 ? bit + 33 : bit + 1;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value equals zero.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.isZero = function () {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is negative.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.isNegative = function () {\r\n        return this.high < 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is positive.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.isPositive = function () {\r\n        return this.high >= 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is odd.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.isOdd = function () {\r\n        return (this.low & 1) === 1;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is even.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.isEven = function () {\r\n        return (this.low & 1) === 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value equals the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.equals = function (other) {\r\n        var theOther = Integer.fromValue(other);\r\n        return this.high === theOther.high && this.low === theOther.low;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value differs from the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.notEquals = function (other) {\r\n        return !this.equals(/* validates */ other);\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is less than the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.lessThan = function (other) {\r\n        return this.compare(/* validates */ other) < 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is less than or equal the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.lessThanOrEqual = function (other) {\r\n        return this.compare(/* validates */ other) <= 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is greater than the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.greaterThan = function (other) {\r\n        return this.compare(/* validates */ other) > 0;\r\n    };\r\n    /**\r\n     * Tests if this Integer's value is greater than or equal the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.prototype.greaterThanOrEqual = function (other) {\r\n        return this.compare(/* validates */ other) >= 0;\r\n    };\r\n    /**\r\n     * Compares this Integer's value with the specified's.\r\n     * @param {!Integer|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     * @expose\r\n     */\r\n    Integer.prototype.compare = function (other) {\r\n        var theOther = Integer.fromValue(other);\r\n        if (this.equals(theOther)) {\r\n            return 0;\r\n        }\r\n        var thisNeg = this.isNegative();\r\n        var otherNeg = theOther.isNegative();\r\n        if (thisNeg && !otherNeg) {\r\n            return -1;\r\n        }\r\n        if (!thisNeg && otherNeg) {\r\n            return 1;\r\n        }\r\n        // At this point the sign bits are the same\r\n        return this.subtract(theOther).isNegative() ? -1 : 1;\r\n    };\r\n    /**\r\n     * Negates this Integer's value.\r\n     * @returns {!Integer} Negated Integer\r\n     * @expose\r\n     */\r\n    Integer.prototype.negate = function () {\r\n        if (this.equals(Integer.MIN_VALUE)) {\r\n            return Integer.MIN_VALUE;\r\n        }\r\n        return this.not().add(Integer.ONE);\r\n    };\r\n    /**\r\n     * Returns the sum of this and the specified Integer.\r\n     * @param {!Integer|number|string} addend Addend\r\n     * @returns {!Integer} Sum\r\n     * @expose\r\n     */\r\n    Integer.prototype.add = function (addend) {\r\n        var theAddend = Integer.fromValue(addend);\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xffff;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xffff;\r\n        var b48 = theAddend.high >>> 16;\r\n        var b32 = theAddend.high & 0xffff;\r\n        var b16 = theAddend.low >>> 16;\r\n        var b00 = theAddend.low & 0xffff;\r\n        var c48 = 0;\r\n        var c32 = 0;\r\n        var c16 = 0;\r\n        var c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xffff;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xffff;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xffff;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xffff;\r\n        return Integer.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\r\n    };\r\n    /**\r\n     * Returns the difference of this and the specified Integer.\r\n     * @param {!Integer|number|string} subtrahend Subtrahend\r\n     * @returns {!Integer} Difference\r\n     * @expose\r\n     */\r\n    Integer.prototype.subtract = function (subtrahend) {\r\n        var theSubtrahend = Integer.fromValue(subtrahend);\r\n        return this.add(theSubtrahend.negate());\r\n    };\r\n    /**\r\n     * Returns the product of this and the specified Integer.\r\n     * @param {!Integer|number|string} multiplier Multiplier\r\n     * @returns {!Integer} Product\r\n     * @expose\r\n     */\r\n    Integer.prototype.multiply = function (multiplier) {\r\n        if (this.isZero()) {\r\n            return Integer.ZERO;\r\n        }\r\n        var theMultiplier = Integer.fromValue(multiplier);\r\n        if (theMultiplier.isZero()) {\r\n            return Integer.ZERO;\r\n        }\r\n        if (this.equals(Integer.MIN_VALUE)) {\r\n            return theMultiplier.isOdd() ? Integer.MIN_VALUE : Integer.ZERO;\r\n        }\r\n        if (theMultiplier.equals(Integer.MIN_VALUE)) {\r\n            return this.isOdd() ? Integer.MIN_VALUE : Integer.ZERO;\r\n        }\r\n        if (this.isNegative()) {\r\n            if (theMultiplier.isNegative()) {\r\n                return this.negate().multiply(theMultiplier.negate());\r\n            }\r\n            else {\r\n                return this.negate()\r\n                    .multiply(theMultiplier)\r\n                    .negate();\r\n            }\r\n        }\r\n        else if (theMultiplier.isNegative()) {\r\n            return this.multiply(theMultiplier.negate()).negate();\r\n        }\r\n        // If both longs are small, use float multiplication\r\n        if (this.lessThan(TWO_PWR_24) && theMultiplier.lessThan(TWO_PWR_24)) {\r\n            return Integer.fromNumber(this.toNumber() * theMultiplier.toNumber());\r\n        }\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xffff;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xffff;\r\n        var b48 = theMultiplier.high >>> 16;\r\n        var b32 = theMultiplier.high & 0xffff;\r\n        var b16 = theMultiplier.low >>> 16;\r\n        var b00 = theMultiplier.low & 0xffff;\r\n        var c48 = 0;\r\n        var c32 = 0;\r\n        var c16 = 0;\r\n        var c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xffff;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xffff;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xffff;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xffff;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xffff;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xffff;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xffff;\r\n        return Integer.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\r\n    };\r\n    /**\r\n     * Returns this Integer divided by the specified.\r\n     * @param {!Integer|number|string} divisor Divisor\r\n     * @returns {!Integer} Quotient\r\n     * @expose\r\n     */\r\n    Integer.prototype.div = function (divisor) {\r\n        var theDivisor = Integer.fromValue(divisor);\r\n        if (theDivisor.isZero()) {\r\n            throw (0, error_1.newError)('division by zero');\r\n        }\r\n        if (this.isZero()) {\r\n            return Integer.ZERO;\r\n        }\r\n        var approx, rem, res;\r\n        if (this.equals(Integer.MIN_VALUE)) {\r\n            if (theDivisor.equals(Integer.ONE) ||\r\n                theDivisor.equals(Integer.NEG_ONE)) {\r\n                return Integer.MIN_VALUE;\r\n            }\r\n            if (theDivisor.equals(Integer.MIN_VALUE)) {\r\n                return Integer.ONE;\r\n            }\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shiftRight(1);\r\n                approx = halfThis.div(theDivisor).shiftLeft(1);\r\n                if (approx.equals(Integer.ZERO)) {\r\n                    return theDivisor.isNegative() ? Integer.ONE : Integer.NEG_ONE;\r\n                }\r\n                else {\r\n                    rem = this.subtract(theDivisor.multiply(approx));\r\n                    res = approx.add(rem.div(theDivisor));\r\n                    return res;\r\n                }\r\n            }\r\n        }\r\n        else if (theDivisor.equals(Integer.MIN_VALUE)) {\r\n            return Integer.ZERO;\r\n        }\r\n        if (this.isNegative()) {\r\n            if (theDivisor.isNegative()) {\r\n                return this.negate().div(theDivisor.negate());\r\n            }\r\n            return this.negate()\r\n                .div(theDivisor)\r\n                .negate();\r\n        }\r\n        else if (theDivisor.isNegative()) {\r\n            return this.div(theDivisor.negate()).negate();\r\n        }\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        res = Integer.ZERO;\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        rem = this;\r\n        while (rem.greaterThanOrEqual(theDivisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / theDivisor.toNumber()));\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2);\r\n            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n            var approxRes = Integer.fromNumber(approx);\r\n            var approxRem = approxRes.multiply(theDivisor);\r\n            while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\r\n                approx -= delta;\r\n                approxRes = Integer.fromNumber(approx);\r\n                approxRem = approxRes.multiply(theDivisor);\r\n            }\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero()) {\r\n                approxRes = Integer.ONE;\r\n            }\r\n            res = res.add(approxRes);\r\n            rem = rem.subtract(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Returns this Integer modulo the specified.\r\n     * @param {!Integer|number|string} divisor Divisor\r\n     * @returns {!Integer} Remainder\r\n     * @expose\r\n     */\r\n    Integer.prototype.modulo = function (divisor) {\r\n        var theDivisor = Integer.fromValue(divisor);\r\n        return this.subtract(this.div(theDivisor).multiply(theDivisor));\r\n    };\r\n    /**\r\n     * Returns the bitwise NOT of this Integer.\r\n     * @returns {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.prototype.not = function () {\r\n        return Integer.fromBits(~this.low, ~this.high);\r\n    };\r\n    /**\r\n     * Returns the bitwise AND of this Integer and the specified.\r\n     * @param {!Integer|number|string} other Other Integer\r\n     * @returns {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.prototype.and = function (other) {\r\n        var theOther = Integer.fromValue(other);\r\n        return Integer.fromBits(this.low & theOther.low, this.high & theOther.high);\r\n    };\r\n    /**\r\n     * Returns the bitwise OR of this Integer and the specified.\r\n     * @param {!Integer|number|string} other Other Integer\r\n     * @returns {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.prototype.or = function (other) {\r\n        var theOther = Integer.fromValue(other);\r\n        return Integer.fromBits(this.low | theOther.low, this.high | theOther.high);\r\n    };\r\n    /**\r\n     * Returns the bitwise XOR of this Integer and the given one.\r\n     * @param {!Integer|number|string} other Other Integer\r\n     * @returns {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.prototype.xor = function (other) {\r\n        var theOther = Integer.fromValue(other);\r\n        return Integer.fromBits(this.low ^ theOther.low, this.high ^ theOther.high);\r\n    };\r\n    /**\r\n     * Returns this Integer with bits shifted to the left by the given amount.\r\n     * @param {number|!Integer} numBits Number of bits\r\n     * @returns {!Integer} Shifted Integer\r\n     * @expose\r\n     */\r\n    Integer.prototype.shiftLeft = function (numBits) {\r\n        var bitsCount = Integer.toNumber(numBits);\r\n        if ((bitsCount &= 63) === 0) {\r\n            return Integer.ZERO;\r\n        }\r\n        else if (bitsCount < 32) {\r\n            return Integer.fromBits(this.low << bitsCount, (this.high << bitsCount) | (this.low >>> (32 - bitsCount)));\r\n        }\r\n        else {\r\n            return Integer.fromBits(0, this.low << (bitsCount - 32));\r\n        }\r\n    };\r\n    /**\r\n     * Returns this Integer with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Integer} numBits Number of bits\r\n     * @returns {!Integer} Shifted Integer\r\n     * @expose\r\n     */\r\n    Integer.prototype.shiftRight = function (numBits) {\r\n        var bitsCount = Integer.toNumber(numBits);\r\n        var numBitNum = Integer.toNumber(numBits);\r\n        if ((bitsCount &= 63) === 0) {\r\n            return Integer.ZERO;\r\n        }\r\n        else if (numBitNum < 32) {\r\n            return Integer.fromBits((this.low >>> bitsCount) | (this.high << (32 - bitsCount)), this.high >> bitsCount);\r\n        }\r\n        else {\r\n            return Integer.fromBits(this.high >> (bitsCount - 32), this.high >= 0 ? 0 : -1);\r\n        }\r\n    };\r\n    /**\r\n     * Tests if the specified object is a Integer.\r\n     * @access private\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.isInteger = function (obj) {\r\n        return (obj === null || obj === void 0 ? void 0 : obj.__isInteger__) === true;\r\n    };\r\n    /**\r\n     * Returns a Integer representing the given 32 bit integer value.\r\n     * @access private\r\n     * @param {number} value The 32 bit integer in question\r\n     * @returns {!Integer} The corresponding Integer value\r\n     * @expose\r\n     */\r\n    Integer.fromInt = function (value) {\r\n        var cachedObj;\r\n        value = value | 0;\r\n        if (value >= -128 && value < 128) {\r\n            cachedObj = INT_CACHE.get(value);\r\n            if (cachedObj != null) {\r\n                return cachedObj;\r\n            }\r\n        }\r\n        var obj = new Integer(value, value < 0 ? -1 : 0);\r\n        if (value >= -128 && value < 128) {\r\n            INT_CACHE.set(value, obj);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Returns a Integer representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @access private\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @returns {!Integer} The corresponding Integer value\r\n     * @expose\r\n     */\r\n    Integer.fromBits = function (lowBits, highBits) {\r\n        return new Integer(lowBits, highBits);\r\n    };\r\n    /**\r\n     * Returns a Integer representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @access private\r\n     * @param {number} value The number in question\r\n     * @returns {!Integer} The corresponding Integer value\r\n     * @expose\r\n     */\r\n    Integer.fromNumber = function (value) {\r\n        if (isNaN(value) || !isFinite(value)) {\r\n            return Integer.ZERO;\r\n        }\r\n        if (value <= -TWO_PWR_63_DBL) {\r\n            return Integer.MIN_VALUE;\r\n        }\r\n        if (value + 1 >= TWO_PWR_63_DBL) {\r\n            return Integer.MAX_VALUE;\r\n        }\r\n        if (value < 0) {\r\n            return Integer.fromNumber(-value).negate();\r\n        }\r\n        return new Integer(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0);\r\n    };\r\n    /**\r\n     * Returns a Integer representation of the given string, written using the specified radix.\r\n     * @access private\r\n     * @param {string} str The textual representation of the Integer\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @param {Object} [opts={}] Configuration options\r\n     * @param {boolean} [opts.strictStringValidation=false] Enable strict validation generated Integer.\r\n     * @returns {!Integer} The corresponding Integer value\r\n     * @expose\r\n     */\r\n    Integer.fromString = function (str, radix, _a) {\r\n        var _b = _a === void 0 ? {} : _a, strictStringValidation = _b.strictStringValidation;\r\n        if (str.length === 0) {\r\n            throw (0, error_1.newError)('number format error: empty string');\r\n        }\r\n        if (str === 'NaN' ||\r\n            str === 'Infinity' ||\r\n            str === '+Infinity' ||\r\n            str === '-Infinity') {\r\n            return Integer.ZERO;\r\n        }\r\n        radix = radix !== null && radix !== void 0 ? radix : 10;\r\n        if (radix < 2 || radix > 36) {\r\n            throw (0, error_1.newError)('radix out of range: ' + radix.toString());\r\n        }\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0) {\r\n            throw (0, error_1.newError)('number format error: interior \"-\" character: ' + str);\r\n        }\r\n        else if (p === 0) {\r\n            return Integer.fromString(str.substring(1), radix).negate();\r\n        }\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = Integer.fromNumber(Math.pow(radix, 8));\r\n        var result = Integer.ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i);\r\n            var valueString = str.substring(i, i + size);\r\n            var value = parseInt(valueString, radix);\r\n            if (strictStringValidation === true && !_isValidNumberFromString(valueString, value, radix)) {\r\n                throw (0, error_1.newError)(\"number format error: \\\"\".concat(valueString, \"\\\" is NaN in radix \").concat(radix, \": \").concat(str));\r\n            }\r\n            if (size < 8) {\r\n                var power = Integer.fromNumber(Math.pow(radix, size));\r\n                result = result.multiply(power).add(Integer.fromNumber(value));\r\n            }\r\n            else {\r\n                result = result.multiply(radixToPower);\r\n                result = result.add(Integer.fromNumber(value));\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Converts the specified value to a Integer.\r\n     * @access private\r\n     * @param {!Integer|number|string|bigint|!{low: number, high: number}} val Value\r\n     * @param {Object} [opts={}] Configuration options\r\n     * @param {boolean} [opts.strictStringValidation=false] Enable strict validation generated Integer.\r\n     * @param {boolean} [opts.ceilFloat=false] Enable round up float to the nearest Integer.\r\n     * @returns {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.fromValue = function (val, opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        if (val /* is compatible */ instanceof Integer) {\r\n            return val;\r\n        }\r\n        if (typeof val === 'number') {\r\n            if (opts.ceilFloat === true) {\r\n                val = Math.ceil(val);\r\n            }\r\n            return Integer.fromNumber(val);\r\n        }\r\n        if (typeof val === 'string') {\r\n            return Integer.fromString(val, undefined, opts);\r\n        }\r\n        if (typeof val === 'bigint') {\r\n            return Integer.fromString(val.toString());\r\n        }\r\n        // Throws for non-objects, converts non-instanceof Integer:\r\n        return new Integer(val.low, val.high);\r\n    };\r\n    /**\r\n     * Converts the specified value to a number.\r\n     * @access private\r\n     * @param {!Integer|number|string|!{low: number, high: number}} val Value\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Integer.toNumber = function (val) {\r\n        switch (typeof val) {\r\n            case 'number':\r\n                return val;\r\n            case 'bigint':\r\n                return Number(val);\r\n            default:\r\n                return Integer.fromValue(val).toNumber();\r\n        }\r\n    };\r\n    /**\r\n     * Converts the specified value to a string.\r\n     * @access private\r\n     * @param {!Integer|number|string|!{low: number, high: number}} val Value\r\n     * @param {number} radix optional radix for string conversion, defaults to 10\r\n     * @returns {string}\r\n     * @expose\r\n     */\r\n    Integer.toString = function (val, radix) {\r\n        return Integer.fromValue(val).toString(radix);\r\n    };\r\n    /**\r\n     * Checks if the given value is in the safe range in order to be converted to a native number\r\n     * @access private\r\n     * @param {!Integer|number|string|!{low: number, high: number}} val Value\r\n     * @param {number} radix optional radix for string conversion, defaults to 10\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Integer.inSafeRange = function (val) {\r\n        return Integer.fromValue(val).inSafeRange();\r\n    };\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.ZERO = Integer.fromInt(0);\r\n    /**\r\n     * Signed one.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.ONE = Integer.fromInt(1);\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.NEG_ONE = Integer.fromInt(-1);\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.MAX_VALUE = Integer.fromBits(0xffffffff | 0, 0x7fffffff | 0);\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.MIN_VALUE = Integer.fromBits(0, 0x80000000 | 0);\r\n    /**\r\n     * Minimum safe value.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.MIN_SAFE_VALUE = Integer.fromBits(0x1 | 0, 0xffffffffffe00000 | 0);\r\n    /**\r\n     * Maximum safe value.\r\n     * @type {!Integer}\r\n     * @expose\r\n     */\r\n    Integer.MAX_SAFE_VALUE = Integer.fromBits(0xffffffff | 0, 0x1fffff | 0);\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Integer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    Integer.__isInteger__ = true;\r\n    return Integer;\r\n}());\r\n/**\r\n * @private\r\n * @param num\r\n * @param radix\r\n * @param minSize\r\n * @returns {string}\r\n */\r\nfunction _convertNumberToString(num, radix, minSize) {\r\n    var theNumberString = num.toString(radix);\r\n    var paddingLength = Math.max(minSize - theNumberString.length, 0);\r\n    var padding = '0'.repeat(paddingLength);\r\n    return \"\".concat(padding).concat(theNumberString);\r\n}\r\n/**\r\n *\r\n * @private\r\n * @param theString\r\n * @param theNumber\r\n * @param radix\r\n * @return {boolean} True if valid\r\n */\r\nfunction _isValidNumberFromString(theString, theNumber, radix) {\r\n    return !Number.isNaN(theString) &&\r\n        !Number.isNaN(theNumber) &&\r\n        _convertNumberToString(theNumber, radix, theString.length) === theString.toLowerCase();\r\n}\r\nObject.defineProperty(Integer.prototype, '__isInteger__', {\r\n    value: true,\r\n    enumerable: false,\r\n    configurable: false\r\n});\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n * @private\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n * @private\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n * @private\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n * @private\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n * @private\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n/**\r\n * @type {!Integer}\r\n * @const\r\n * @inner\r\n * @private\r\n */\r\nvar TWO_PWR_24 = Integer.fromInt(TWO_PWR_24_DBL);\r\n/**\r\n * Cast value to Integer type.\r\n * @access public\r\n * @param {Mixed} value - The value to use.\r\n * @param {Object} [opts={}] Configuration options\r\n * @param {boolean} [opts.strictStringValidation=false] Enable strict validation generated Integer.\r\n * @param {boolean} [opts.ceilFloat=false] Enable round up float to the nearest Integer.\r\n * @return {Integer} - An object of type Integer.\r\n */\r\nvar int = Integer.fromValue;\r\nexports.int = int;\r\n/**\r\n * Check if a variable is of Integer type.\r\n * @access public\r\n * @param {Mixed} value - The variable to check.\r\n * @return {Boolean} - Is it of the Integer type?\r\n */\r\nvar isInt = Integer.isInteger;\r\nexports.isInt = isInt;\r\n/**\r\n * Check if a variable can be safely converted to a number\r\n * @access public\r\n * @param {Mixed} value - The variable to check\r\n * @return {Boolean} - true if it is safe to call toNumber on variable otherwise false\r\n */\r\nvar inSafeRange = Integer.inSafeRange;\r\nexports.inSafeRange = inSafeRange;\r\n/**\r\n * Converts a variable to a number\r\n * @access public\r\n * @param {Mixed} value - The variable to convert\r\n * @return {number} - the variable as a number\r\n */\r\nvar toNumber = Integer.toNumber;\r\nexports.toNumber = toNumber;\r\n/**\r\n * Converts the integer to a string representation\r\n * @access public\r\n * @param {Mixed} value - The variable to convert\r\n * @param {number} radix - radix to use in string conversion, defaults to 10\r\n * @return {string} - returns a string representation of the integer\r\n */\r\nvar toString = Integer.toString;\r\nexports.toString = toString;\r\nexports.default = Integer;\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ENCRYPTION_OFF = exports.ENCRYPTION_ON = exports.equals = exports.validateQueryAndParameters = exports.toNumber = exports.assertValidDate = exports.assertNumberOrInteger = exports.assertNumber = exports.assertString = exports.assertObject = exports.isString = exports.isObject = exports.isEmptyObjectOrNull = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar integer_1 = __importStar(require(\"../integer\"));\r\nvar json_1 = require(\"../json\");\r\nvar ENCRYPTION_ON = 'ENCRYPTION_ON';\r\nexports.ENCRYPTION_ON = ENCRYPTION_ON;\r\nvar ENCRYPTION_OFF = 'ENCRYPTION_OFF';\r\nexports.ENCRYPTION_OFF = ENCRYPTION_OFF;\r\n/**\r\n * Verifies if the object is null or empty\r\n * @param obj The subject object\r\n * @returns {boolean} True if it's empty object or null\r\n */\r\nfunction isEmptyObjectOrNull(obj) {\r\n    if (obj === null) {\r\n        return true;\r\n    }\r\n    if (!isObject(obj)) {\r\n        return false;\r\n    }\r\n    for (var prop in obj) {\r\n        if (obj[prop] !== undefined) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.isEmptyObjectOrNull = isEmptyObjectOrNull;\r\n/**\r\n * Verify if it's an object\r\n * @param obj The subject\r\n * @returns {boolean} True if it's an object\r\n */\r\nfunction isObject(obj) {\r\n    return typeof obj === 'object' && !Array.isArray(obj) && obj !== null;\r\n}\r\nexports.isObject = isObject;\r\n/**\r\n * Check and normalize given query and parameters.\r\n * @param {string|{text: string, parameters: Object}} query the query to check.\r\n * @param {Object} parameters\r\n * @return {{validatedQuery: string|{text: string, parameters: Object}, params: Object}} the normalized query with parameters.\r\n * @throws TypeError when either given query or parameters are invalid.\r\n */\r\nfunction validateQueryAndParameters(query, parameters, opt) {\r\n    var _a, _b;\r\n    var validatedQuery = '';\r\n    var params = parameters !== null && parameters !== void 0 ? parameters : {};\r\n    var skipAsserts = (_a = opt === null || opt === void 0 ? void 0 : opt.skipAsserts) !== null && _a !== void 0 ? _a : false;\r\n    if (typeof query === 'string') {\r\n        validatedQuery = query;\r\n    }\r\n    else if (query instanceof String) {\r\n        validatedQuery = query.toString();\r\n    }\r\n    else if (typeof query === 'object' && query.text != null) {\r\n        validatedQuery = query.text;\r\n        params = (_b = query.parameters) !== null && _b !== void 0 ? _b : {};\r\n    }\r\n    if (!skipAsserts) {\r\n        assertCypherQuery(validatedQuery);\r\n        assertQueryParameters(params);\r\n    }\r\n    return { validatedQuery: validatedQuery, params: params };\r\n}\r\nexports.validateQueryAndParameters = validateQueryAndParameters;\r\n/**\r\n * Assert it's a object\r\n * @param {any} obj The subject\r\n * @param {string} objName The object name\r\n * @returns {object} The subject object\r\n * @throws {TypeError} when the supplied param is not an object\r\n */\r\nfunction assertObject(obj, objName) {\r\n    if (!isObject(obj)) {\r\n        throw new TypeError(objName + ' expected to be an object but was: ' + (0, json_1.stringify)(obj));\r\n    }\r\n    return obj;\r\n}\r\nexports.assertObject = assertObject;\r\n/**\r\n * Assert it's a string\r\n * @param {any} obj The subject\r\n * @param {string} objName The object name\r\n * @returns {string} The subject string\r\n * @throws {TypeError} when the supplied param is not a string\r\n */\r\nfunction assertString(obj, objName) {\r\n    if (!isString(obj)) {\r\n        throw new TypeError((0, json_1.stringify)(objName) + ' expected to be string but was: ' + (0, json_1.stringify)(obj));\r\n    }\r\n    return obj;\r\n}\r\nexports.assertString = assertString;\r\n/**\r\n * Assert it's a number\r\n * @param {any} obj The subject\r\n * @param {string} objName The object name\r\n * @returns {number} The number\r\n * @throws {TypeError} when the supplied param is not a number\r\n */\r\nfunction assertNumber(obj, objName) {\r\n    if (typeof obj !== 'number') {\r\n        throw new TypeError(objName + ' expected to be a number but was: ' + (0, json_1.stringify)(obj));\r\n    }\r\n    return obj;\r\n}\r\nexports.assertNumber = assertNumber;\r\n/**\r\n * Assert it's a number or integer\r\n * @param {any} obj The subject\r\n * @param {string} objName The object name\r\n * @returns {number|Integer} The subject object\r\n * @throws {TypeError} when the supplied param is not a number or integer\r\n */\r\nfunction assertNumberOrInteger(obj, objName) {\r\n    if (typeof obj !== 'number' && typeof obj !== 'bigint' && !(0, integer_1.isInt)(obj)) {\r\n        throw new TypeError(objName +\r\n            ' expected to be either a number or an Integer object but was: ' +\r\n            (0, json_1.stringify)(obj));\r\n    }\r\n    return obj;\r\n}\r\nexports.assertNumberOrInteger = assertNumberOrInteger;\r\n/**\r\n * Assert it's a valid datae\r\n * @param {any} obj The subject\r\n * @param {string} objName The object name\r\n * @returns {Date} The valida date\r\n * @throws {TypeError} when the supplied param is not a valid date\r\n */\r\nfunction assertValidDate(obj, objName) {\r\n    if (Object.prototype.toString.call(obj) !== '[object Date]') {\r\n        throw new TypeError(objName +\r\n            ' expected to be a standard JavaScript Date but was: ' +\r\n            (0, json_1.stringify)(obj));\r\n    }\r\n    if (Number.isNaN(obj.getTime())) {\r\n        throw new TypeError(objName +\r\n            ' expected to be valid JavaScript Date but its time was NaN: ' +\r\n            (0, json_1.stringify)(obj));\r\n    }\r\n    return obj;\r\n}\r\nexports.assertValidDate = assertValidDate;\r\n/**\r\n * Validates a cypher query string\r\n * @param {any} obj The query\r\n * @returns {void}\r\n * @throws {TypeError} if the query is not valid\r\n */\r\nfunction assertCypherQuery(obj) {\r\n    assertString(obj, 'Cypher query');\r\n    if (obj.trim().length === 0) {\r\n        throw new TypeError('Cypher query is expected to be a non-empty string.');\r\n    }\r\n}\r\n/**\r\n * Validates if the query parameters is an object\r\n * @param {any} obj The parameters\r\n * @returns {void}\r\n * @throws {TypeError} if the parameters is not valid\r\n */\r\nfunction assertQueryParameters(obj) {\r\n    if (!isObject(obj)) {\r\n        // objects created with `Object.create(null)` do not have a constructor property\r\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n        var constructor = obj.constructor != null ? ' ' + obj.constructor.name : '';\r\n        throw new TypeError(\"Query parameters are expected to either be undefined/null or an object, given:\".concat(constructor, \" \").concat(JSON.stringify(obj)));\r\n    }\r\n}\r\n/**\r\n * Verify if the supplied object is a string\r\n *\r\n * @param str The string\r\n * @returns {boolean} True if the supplied object is an string\r\n */\r\nfunction isString(str) {\r\n    return Object.prototype.toString.call(str) === '[object String]';\r\n}\r\nexports.isString = isString;\r\n/**\r\n * Verifies if object are the equals\r\n * @param {unknown} a\r\n * @param {unknown} b\r\n * @returns {boolean}\r\n */\r\nfunction equals(a, b) {\r\n    var e_1, _a;\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a === null || b === null) {\r\n        return false;\r\n    }\r\n    if (typeof a === 'object' && typeof b === 'object') {\r\n        var keysA = Object.keys(a);\r\n        var keysB = Object.keys(b);\r\n        if (keysA.length !== keysB.length) {\r\n            return false;\r\n        }\r\n        try {\r\n            for (var keysA_1 = __values(keysA), keysA_1_1 = keysA_1.next(); !keysA_1_1.done; keysA_1_1 = keysA_1.next()) {\r\n                var key = keysA_1_1.value;\r\n                if (!equals(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (keysA_1_1 && !keysA_1_1.done && (_a = keysA_1.return)) _a.call(keysA_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.equals = equals;\r\n/**\r\n * Converts (Integer | bigint) to number.\r\n *\r\n * @private\r\n * @param {NumberOrInteger} value The number or integer\r\n * @returns {number} The number\r\n */\r\nfunction toNumber(value) {\r\n    if (value instanceof integer_1.default) {\r\n        return value.toNumber();\r\n    }\r\n    else if (typeof value === 'bigint') {\r\n        return (0, integer_1.int)(value).toNumber();\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nexports.toNumber = toNumber;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.floorMod = exports.floorDiv = exports.assertValidZoneId = exports.assertValidNanosecond = exports.assertValidSecond = exports.assertValidMinute = exports.assertValidHour = exports.assertValidDay = exports.assertValidMonth = exports.assertValidYear = exports.timeZoneOffsetInSeconds = exports.totalNanoseconds = exports.newDate = exports.toStandardDate = exports.isoStringToStandardDate = exports.dateToIsoString = exports.timeZoneOffsetToIsoString = exports.timeToIsoString = exports.durationToIsoString = exports.dateToEpochDay = exports.localDateTimeToEpochSecond = exports.localTimeToNanoOfDay = exports.normalizeNanosecondsForDuration = exports.normalizeSecondsForDuration = exports.SECONDS_PER_DAY = exports.DAYS_PER_400_YEAR_CYCLE = exports.DAYS_0000_TO_1970 = exports.NANOS_PER_HOUR = exports.NANOS_PER_MINUTE = exports.NANOS_PER_MILLISECOND = exports.NANOS_PER_SECOND = exports.SECONDS_PER_HOUR = exports.SECONDS_PER_MINUTE = exports.MINUTES_PER_HOUR = exports.NANOSECOND_OF_SECOND_RANGE = exports.SECOND_OF_MINUTE_RANGE = exports.MINUTE_OF_HOUR_RANGE = exports.HOUR_OF_DAY_RANGE = exports.DAY_OF_MONTH_RANGE = exports.MONTH_OF_YEAR_RANGE = exports.YEAR_RANGE = void 0;\r\nvar integer_1 = __importStar(require(\"../integer\"));\r\nvar error_1 = require(\"../error\");\r\nvar util_1 = require(\"./util\");\r\n/*\r\n  Code in this util should be compatible with code in the database that uses JSR-310 java.time APIs.\r\n\r\n  It is based on a library called ThreeTen (https://github.com/ThreeTen/threetenbp) which was derived\r\n  from JSR-310 reference implementation previously hosted on GitHub. Code uses `Integer` type everywhere\r\n  to correctly handle large integer values that are greater than `Number.MAX_SAFE_INTEGER`.\r\n\r\n  Please consult either ThreeTen or js-joda (https://github.com/js-joda/js-joda) when working with the\r\n  conversion functions.\r\n */\r\nvar ValueRange = /** @class */ (function () {\r\n    function ValueRange(min, max) {\r\n        this._minNumber = min;\r\n        this._maxNumber = max;\r\n        this._minInteger = (0, integer_1.int)(min);\r\n        this._maxInteger = (0, integer_1.int)(max);\r\n    }\r\n    ValueRange.prototype.contains = function (value) {\r\n        if ((0, integer_1.isInt)(value) && value instanceof integer_1.default) {\r\n            return (value.greaterThanOrEqual(this._minInteger) &&\r\n                value.lessThanOrEqual(this._maxInteger));\r\n        }\r\n        else if (typeof value === 'bigint') {\r\n            var intValue = (0, integer_1.int)(value);\r\n            return (intValue.greaterThanOrEqual(this._minInteger) &&\r\n                intValue.lessThanOrEqual(this._maxInteger));\r\n        }\r\n        else {\r\n            return value >= this._minNumber && value <= this._maxNumber;\r\n        }\r\n    };\r\n    ValueRange.prototype.toString = function () {\r\n        return \"[\".concat(this._minNumber, \", \").concat(this._maxNumber, \"]\");\r\n    };\r\n    return ValueRange;\r\n}());\r\nexports.YEAR_RANGE = new ValueRange(-999999999, 999999999);\r\nexports.MONTH_OF_YEAR_RANGE = new ValueRange(1, 12);\r\nexports.DAY_OF_MONTH_RANGE = new ValueRange(1, 31);\r\nexports.HOUR_OF_DAY_RANGE = new ValueRange(0, 23);\r\nexports.MINUTE_OF_HOUR_RANGE = new ValueRange(0, 59);\r\nexports.SECOND_OF_MINUTE_RANGE = new ValueRange(0, 59);\r\nexports.NANOSECOND_OF_SECOND_RANGE = new ValueRange(0, 999999999);\r\nexports.MINUTES_PER_HOUR = 60;\r\nexports.SECONDS_PER_MINUTE = 60;\r\nexports.SECONDS_PER_HOUR = exports.SECONDS_PER_MINUTE * exports.MINUTES_PER_HOUR;\r\nexports.NANOS_PER_SECOND = 1000000000;\r\nexports.NANOS_PER_MILLISECOND = 1000000;\r\nexports.NANOS_PER_MINUTE = exports.NANOS_PER_SECOND * exports.SECONDS_PER_MINUTE;\r\nexports.NANOS_PER_HOUR = exports.NANOS_PER_MINUTE * exports.MINUTES_PER_HOUR;\r\nexports.DAYS_0000_TO_1970 = 719528;\r\nexports.DAYS_PER_400_YEAR_CYCLE = 146097;\r\nexports.SECONDS_PER_DAY = 86400;\r\nfunction normalizeSecondsForDuration(seconds, nanoseconds) {\r\n    return (0, integer_1.int)(seconds).add(floorDiv(nanoseconds, exports.NANOS_PER_SECOND));\r\n}\r\nexports.normalizeSecondsForDuration = normalizeSecondsForDuration;\r\nfunction normalizeNanosecondsForDuration(nanoseconds) {\r\n    return floorMod(nanoseconds, exports.NANOS_PER_SECOND);\r\n}\r\nexports.normalizeNanosecondsForDuration = normalizeNanosecondsForDuration;\r\n/**\r\n * Converts given local time into a single integer representing this same time in nanoseconds of the day.\r\n * @param {Integer|number|string} hour the hour of the local time to convert.\r\n * @param {Integer|number|string} minute the minute of the local time to convert.\r\n * @param {Integer|number|string} second the second of the local time to convert.\r\n * @param {Integer|number|string} nanosecond the nanosecond of the local time to convert.\r\n * @return {Integer} nanoseconds representing the given local time.\r\n */\r\nfunction localTimeToNanoOfDay(hour, minute, second, nanosecond) {\r\n    hour = (0, integer_1.int)(hour);\r\n    minute = (0, integer_1.int)(minute);\r\n    second = (0, integer_1.int)(second);\r\n    nanosecond = (0, integer_1.int)(nanosecond);\r\n    var totalNanos = hour.multiply(exports.NANOS_PER_HOUR);\r\n    totalNanos = totalNanos.add(minute.multiply(exports.NANOS_PER_MINUTE));\r\n    totalNanos = totalNanos.add(second.multiply(exports.NANOS_PER_SECOND));\r\n    return totalNanos.add(nanosecond);\r\n}\r\nexports.localTimeToNanoOfDay = localTimeToNanoOfDay;\r\n/**\r\n * Converts given local date time into a single integer representing this same time in epoch seconds UTC.\r\n * @param {Integer|number|string} year the year of the local date-time to convert.\r\n * @param {Integer|number|string} month the month of the local date-time to convert.\r\n * @param {Integer|number|string} day the day of the local date-time to convert.\r\n * @param {Integer|number|string} hour the hour of the local date-time to convert.\r\n * @param {Integer|number|string} minute the minute of the local date-time to convert.\r\n * @param {Integer|number|string} second the second of the local date-time to convert.\r\n * @param {Integer|number|string} nanosecond the nanosecond of the local date-time to convert.\r\n * @return {Integer} epoch second in UTC representing the given local date time.\r\n */\r\nfunction localDateTimeToEpochSecond(year, month, day, hour, minute, second, nanosecond) {\r\n    var epochDay = dateToEpochDay(year, month, day);\r\n    var localTimeSeconds = localTimeToSecondOfDay(hour, minute, second);\r\n    return epochDay.multiply(exports.SECONDS_PER_DAY).add(localTimeSeconds);\r\n}\r\nexports.localDateTimeToEpochSecond = localDateTimeToEpochSecond;\r\n/**\r\n * Converts given local date into a single integer representing it's epoch day.\r\n * @param {Integer|number|string} year the year of the local date to convert.\r\n * @param {Integer|number|string} month the month of the local date to convert.\r\n * @param {Integer|number|string} day the day of the local date to convert.\r\n * @return {Integer} epoch day representing the given date.\r\n */\r\nfunction dateToEpochDay(year, month, day) {\r\n    year = (0, integer_1.int)(year);\r\n    month = (0, integer_1.int)(month);\r\n    day = (0, integer_1.int)(day);\r\n    var epochDay = year.multiply(365);\r\n    if (year.greaterThanOrEqual(0)) {\r\n        epochDay = epochDay.add(year\r\n            .add(3)\r\n            .div(4)\r\n            .subtract(year.add(99).div(100))\r\n            .add(year.add(399).div(400)));\r\n    }\r\n    else {\r\n        epochDay = epochDay.subtract(year\r\n            .div(-4)\r\n            .subtract(year.div(-100))\r\n            .add(year.div(-400)));\r\n    }\r\n    epochDay = epochDay.add(month\r\n        .multiply(367)\r\n        .subtract(362)\r\n        .div(12));\r\n    epochDay = epochDay.add(day.subtract(1));\r\n    if (month.greaterThan(2)) {\r\n        epochDay = epochDay.subtract(1);\r\n        if (!isLeapYear(year)) {\r\n            epochDay = epochDay.subtract(1);\r\n        }\r\n    }\r\n    return epochDay.subtract(exports.DAYS_0000_TO_1970);\r\n}\r\nexports.dateToEpochDay = dateToEpochDay;\r\n/**\r\n * Format given duration to an ISO 8601 string.\r\n * @param {Integer|number|string} months the number of months.\r\n * @param {Integer|number|string} days the number of days.\r\n * @param {Integer|number|string} seconds the number of seconds.\r\n * @param {Integer|number|string} nanoseconds the number of nanoseconds.\r\n * @return {string} ISO string that represents given duration.\r\n */\r\nfunction durationToIsoString(months, days, seconds, nanoseconds) {\r\n    var monthsString = formatNumber(months);\r\n    var daysString = formatNumber(days);\r\n    var secondsAndNanosecondsString = formatSecondsAndNanosecondsForDuration(seconds, nanoseconds);\r\n    return \"P\".concat(monthsString, \"M\").concat(daysString, \"DT\").concat(secondsAndNanosecondsString, \"S\");\r\n}\r\nexports.durationToIsoString = durationToIsoString;\r\n/**\r\n * Formats given time to an ISO 8601 string.\r\n * @param {Integer|number|string} hour the hour value.\r\n * @param {Integer|number|string} minute the minute value.\r\n * @param {Integer|number|string} second the second value.\r\n * @param {Integer|number|string} nanosecond the nanosecond value.\r\n * @return {string} ISO string that represents given time.\r\n */\r\nfunction timeToIsoString(hour, minute, second, nanosecond) {\r\n    var hourString = formatNumber(hour, 2);\r\n    var minuteString = formatNumber(minute, 2);\r\n    var secondString = formatNumber(second, 2);\r\n    var nanosecondString = formatNanosecond(nanosecond);\r\n    return \"\".concat(hourString, \":\").concat(minuteString, \":\").concat(secondString).concat(nanosecondString);\r\n}\r\nexports.timeToIsoString = timeToIsoString;\r\n/**\r\n * Formats given time zone offset in seconds to string representation like '±HH:MM', '±HH:MM:SS' or 'Z' for UTC.\r\n * @param {Integer|number|string} offsetSeconds the offset in seconds.\r\n * @return {string} ISO string that represents given offset.\r\n */\r\nfunction timeZoneOffsetToIsoString(offsetSeconds) {\r\n    offsetSeconds = (0, integer_1.int)(offsetSeconds);\r\n    if (offsetSeconds.equals(0)) {\r\n        return 'Z';\r\n    }\r\n    var isNegative = offsetSeconds.isNegative();\r\n    if (isNegative) {\r\n        offsetSeconds = offsetSeconds.multiply(-1);\r\n    }\r\n    var signPrefix = isNegative ? '-' : '+';\r\n    var hours = formatNumber(offsetSeconds.div(exports.SECONDS_PER_HOUR), 2);\r\n    var minutes = formatNumber(offsetSeconds.div(exports.SECONDS_PER_MINUTE).modulo(exports.MINUTES_PER_HOUR), 2);\r\n    var secondsValue = offsetSeconds.modulo(exports.SECONDS_PER_MINUTE);\r\n    var seconds = secondsValue.equals(0) ? null : formatNumber(secondsValue, 2);\r\n    return seconds != null\r\n        ? \"\".concat(signPrefix).concat(hours, \":\").concat(minutes, \":\").concat(seconds)\r\n        : \"\".concat(signPrefix).concat(hours, \":\").concat(minutes);\r\n}\r\nexports.timeZoneOffsetToIsoString = timeZoneOffsetToIsoString;\r\n/**\r\n * Formats given date to an ISO 8601 string.\r\n * @param {Integer|number|string} year the date year.\r\n * @param {Integer|number|string} month the date month.\r\n * @param {Integer|number|string} day the date day.\r\n * @return {string} ISO string that represents given date.\r\n */\r\nfunction dateToIsoString(year, month, day) {\r\n    var yearString = formatYear(year);\r\n    var monthString = formatNumber(month, 2);\r\n    var dayString = formatNumber(day, 2);\r\n    return \"\".concat(yearString, \"-\").concat(monthString, \"-\").concat(dayString);\r\n}\r\nexports.dateToIsoString = dateToIsoString;\r\n/**\r\n * Convert the given iso date string to a JavaScript Date object\r\n *\r\n * @param {string} isoString The iso date string\r\n * @returns {Date} the date\r\n */\r\nfunction isoStringToStandardDate(isoString) {\r\n    return new Date(isoString);\r\n}\r\nexports.isoStringToStandardDate = isoStringToStandardDate;\r\n/**\r\n * Convert the given utc timestamp to a JavaScript Date object\r\n *\r\n * @param {number} utc Timestamp in UTC\r\n * @returns {Date} the date\r\n */\r\nfunction toStandardDate(utc) {\r\n    return new Date(utc);\r\n}\r\nexports.toStandardDate = toStandardDate;\r\n/**\r\n * Shortcut for creating a new StandardDate\r\n * @param date\r\n * @returns {Date} the standard date\r\n */\r\nfunction newDate(date) {\r\n    return new Date(date);\r\n}\r\nexports.newDate = newDate;\r\n/**\r\n * Get the total number of nanoseconds from the milliseconds of the given standard JavaScript date and optional nanosecond part.\r\n * @param {global.Date} standardDate the standard JavaScript date.\r\n * @param {Integer|number|bigint|undefined} nanoseconds the optional number of nanoseconds.\r\n * @return {Integer|number|bigint} the total amount of nanoseconds.\r\n */\r\nfunction totalNanoseconds(standardDate, nanoseconds) {\r\n    nanoseconds = nanoseconds !== null && nanoseconds !== void 0 ? nanoseconds : 0;\r\n    var nanosFromMillis = standardDate.getMilliseconds() * exports.NANOS_PER_MILLISECOND;\r\n    return add(nanoseconds, nanosFromMillis);\r\n}\r\nexports.totalNanoseconds = totalNanoseconds;\r\n/**\r\n * Get the time zone offset in seconds from the given standard JavaScript date.\r\n *\r\n * <b>Implementation note:</b>\r\n * Time zone offset returned by the standard JavaScript date is the difference, in minutes, from local time to UTC.\r\n * So positive value means offset is behind UTC and negative value means it is ahead.\r\n * For Neo4j temporal types, like `Time` or `DateTime` offset is in seconds and represents difference from UTC to local time.\r\n * This is different from standard JavaScript dates and that's why implementation negates the returned value.\r\n *\r\n * @param {global.Date} standardDate the standard JavaScript date.\r\n * @return {number} the time zone offset in seconds.\r\n */\r\nfunction timeZoneOffsetInSeconds(standardDate) {\r\n    var secondsPortion = standardDate.getSeconds() >= standardDate.getUTCSeconds()\r\n        ? standardDate.getSeconds() - standardDate.getUTCSeconds()\r\n        : standardDate.getSeconds() - standardDate.getUTCSeconds() + 60;\r\n    var offsetInMinutes = standardDate.getTimezoneOffset();\r\n    if (offsetInMinutes === 0) {\r\n        return 0 + secondsPortion;\r\n    }\r\n    return -1 * offsetInMinutes * exports.SECONDS_PER_MINUTE + secondsPortion;\r\n}\r\nexports.timeZoneOffsetInSeconds = timeZoneOffsetInSeconds;\r\n/**\r\n * Assert that the year value is valid.\r\n * @param {Integer|number} year the value to check.\r\n * @return {Integer|number} the value of the year if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidYear(year) {\r\n    return assertValidTemporalValue(year, exports.YEAR_RANGE, 'Year');\r\n}\r\nexports.assertValidYear = assertValidYear;\r\n/**\r\n * Assert that the month value is valid.\r\n * @param {Integer|number} month the value to check.\r\n * @return {Integer|number} the value of the month if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidMonth(month) {\r\n    return assertValidTemporalValue(month, exports.MONTH_OF_YEAR_RANGE, 'Month');\r\n}\r\nexports.assertValidMonth = assertValidMonth;\r\n/**\r\n * Assert that the day value is valid.\r\n * @param {Integer|number} day the value to check.\r\n * @return {Integer|number} the value of the day if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidDay(day) {\r\n    return assertValidTemporalValue(day, exports.DAY_OF_MONTH_RANGE, 'Day');\r\n}\r\nexports.assertValidDay = assertValidDay;\r\n/**\r\n * Assert that the hour value is valid.\r\n * @param {Integer|number} hour the value to check.\r\n * @return {Integer|number} the value of the hour if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidHour(hour) {\r\n    return assertValidTemporalValue(hour, exports.HOUR_OF_DAY_RANGE, 'Hour');\r\n}\r\nexports.assertValidHour = assertValidHour;\r\n/**\r\n * Assert that the minute value is valid.\r\n * @param {Integer|number} minute the value to check.\r\n * @return {Integer|number} the value of the minute if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidMinute(minute) {\r\n    return assertValidTemporalValue(minute, exports.MINUTE_OF_HOUR_RANGE, 'Minute');\r\n}\r\nexports.assertValidMinute = assertValidMinute;\r\n/**\r\n * Assert that the second value is valid.\r\n * @param {Integer|number} second the value to check.\r\n * @return {Integer|number} the value of the second if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidSecond(second) {\r\n    return assertValidTemporalValue(second, exports.SECOND_OF_MINUTE_RANGE, 'Second');\r\n}\r\nexports.assertValidSecond = assertValidSecond;\r\n/**\r\n * Assert that the nanosecond value is valid.\r\n * @param {Integer|number} nanosecond the value to check.\r\n * @return {Integer|number} the value of the nanosecond if it is valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidNanosecond(nanosecond) {\r\n    return assertValidTemporalValue(nanosecond, exports.NANOSECOND_OF_SECOND_RANGE, 'Nanosecond');\r\n}\r\nexports.assertValidNanosecond = assertValidNanosecond;\r\nvar timeZoneValidityCache = new Map();\r\nvar newInvalidZoneIdError = function (zoneId, fieldName) { return (0, error_1.newError)(\"\".concat(fieldName, \" is expected to be a valid ZoneId but was: \\\"\").concat(zoneId, \"\\\"\")); };\r\nfunction assertValidZoneId(fieldName, zoneId) {\r\n    var cachedResult = timeZoneValidityCache.get(zoneId);\r\n    if (cachedResult === true) {\r\n        return;\r\n    }\r\n    if (cachedResult === false) {\r\n        throw newInvalidZoneIdError(zoneId, fieldName);\r\n    }\r\n    try {\r\n        Intl.DateTimeFormat(undefined, { timeZone: zoneId });\r\n        timeZoneValidityCache.set(zoneId, true);\r\n    }\r\n    catch (e) {\r\n        timeZoneValidityCache.set(zoneId, false);\r\n        throw newInvalidZoneIdError(zoneId, fieldName);\r\n    }\r\n}\r\nexports.assertValidZoneId = assertValidZoneId;\r\n/**\r\n * Check if the given value is of expected type and is in the expected range.\r\n * @param {Integer|number} value the value to check.\r\n * @param {ValueRange} range the range.\r\n * @param {string} name the name of the value.\r\n * @return {Integer|number} the value if valid. Exception is thrown otherwise.\r\n */\r\nfunction assertValidTemporalValue(value, range, name) {\r\n    (0, util_1.assertNumberOrInteger)(value, name);\r\n    if (!range.contains(value)) {\r\n        throw (0, error_1.newError)(\"\".concat(name, \" is expected to be in range \").concat(range.toString(), \" but was: \").concat(value.toString()));\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts given local time into a single integer representing this same time in seconds of the day. Nanoseconds are skipped.\r\n * @param {Integer|number|string} hour the hour of the local time.\r\n * @param {Integer|number|string} minute the minute of the local time.\r\n * @param {Integer|number|string} second the second of the local time.\r\n * @return {Integer} seconds representing the given local time.\r\n */\r\nfunction localTimeToSecondOfDay(hour, minute, second) {\r\n    hour = (0, integer_1.int)(hour);\r\n    minute = (0, integer_1.int)(minute);\r\n    second = (0, integer_1.int)(second);\r\n    var totalSeconds = hour.multiply(exports.SECONDS_PER_HOUR);\r\n    totalSeconds = totalSeconds.add(minute.multiply(exports.SECONDS_PER_MINUTE));\r\n    return totalSeconds.add(second);\r\n}\r\n/**\r\n * Check if given year is a leap year. Uses algorithm described here {@link https://en.wikipedia.org/wiki/Leap_year#Algorithm}.\r\n * @param {Integer|number|string} year the year to check. Will be converted to {@link Integer} for all calculations.\r\n * @return {boolean} `true` if given year is a leap year, `false` otherwise.\r\n */\r\nfunction isLeapYear(year) {\r\n    year = (0, integer_1.int)(year);\r\n    if (!year.modulo(4).equals(0)) {\r\n        return false;\r\n    }\r\n    else if (!year.modulo(100).equals(0)) {\r\n        return true;\r\n    }\r\n    else if (!year.modulo(400).equals(0)) {\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * @param {Integer|number|string} x the divident.\r\n * @param {Integer|number|string} y the divisor.\r\n * @return {Integer} the result.\r\n */\r\nfunction floorDiv(x, y) {\r\n    x = (0, integer_1.int)(x);\r\n    y = (0, integer_1.int)(y);\r\n    var result = x.div(y);\r\n    if (x.isPositive() !== y.isPositive() && result.multiply(y).notEquals(x)) {\r\n        result = result.subtract(1);\r\n    }\r\n    return result;\r\n}\r\nexports.floorDiv = floorDiv;\r\n/**\r\n * @param {Integer|number|string} x the divident.\r\n * @param {Integer|number|string} y the divisor.\r\n * @return {Integer} the result.\r\n */\r\nfunction floorMod(x, y) {\r\n    x = (0, integer_1.int)(x);\r\n    y = (0, integer_1.int)(y);\r\n    return x.subtract(floorDiv(x, y).multiply(y));\r\n}\r\nexports.floorMod = floorMod;\r\n/**\r\n * @param {Integer|number|string} seconds the number of seconds to format.\r\n * @param {Integer|number|string} nanoseconds the number of nanoseconds to format.\r\n * @return {string} formatted value.\r\n */\r\nfunction formatSecondsAndNanosecondsForDuration(seconds, nanoseconds) {\r\n    seconds = (0, integer_1.int)(seconds);\r\n    nanoseconds = (0, integer_1.int)(nanoseconds);\r\n    var secondsString;\r\n    var nanosecondsString;\r\n    var secondsNegative = seconds.isNegative();\r\n    var nanosecondsGreaterThanZero = nanoseconds.greaterThan(0);\r\n    if (secondsNegative && nanosecondsGreaterThanZero) {\r\n        if (seconds.equals(-1)) {\r\n            secondsString = '-0';\r\n        }\r\n        else {\r\n            secondsString = seconds.add(1).toString();\r\n        }\r\n    }\r\n    else {\r\n        secondsString = seconds.toString();\r\n    }\r\n    if (nanosecondsGreaterThanZero) {\r\n        if (secondsNegative) {\r\n            nanosecondsString = formatNanosecond(nanoseconds\r\n                .negate()\r\n                .add(2 * exports.NANOS_PER_SECOND)\r\n                .modulo(exports.NANOS_PER_SECOND));\r\n        }\r\n        else {\r\n            nanosecondsString = formatNanosecond(nanoseconds.add(exports.NANOS_PER_SECOND).modulo(exports.NANOS_PER_SECOND));\r\n        }\r\n    }\r\n    return nanosecondsString != null ? secondsString + nanosecondsString : secondsString;\r\n}\r\n/**\r\n * @param {Integer|number|string} value the number of nanoseconds to format.\r\n * @return {string} formatted and possibly left-padded nanoseconds part as string.\r\n */\r\nfunction formatNanosecond(value) {\r\n    value = (0, integer_1.int)(value);\r\n    return value.equals(0) ? '' : '.' + formatNumber(value, 9);\r\n}\r\n/**\r\n *\r\n * @param {Integer|number|string} year The year to be formatted\r\n * @return {string} formatted year\r\n */\r\nfunction formatYear(year) {\r\n    var yearInteger = (0, integer_1.int)(year);\r\n    if (yearInteger.isNegative() || yearInteger.greaterThan(9999)) {\r\n        return formatNumber(yearInteger, 6, { usePositiveSign: true });\r\n    }\r\n    return formatNumber(yearInteger, 4);\r\n}\r\n/**\r\n * @param {Integer|number|string} num the number to format.\r\n * @param {number} [stringLength=undefined] the string length to left-pad to.\r\n * @return {string} formatted and possibly left-padded number as string.\r\n */\r\nfunction formatNumber(num, stringLength, params) {\r\n    num = (0, integer_1.int)(num);\r\n    var isNegative = num.isNegative();\r\n    if (isNegative) {\r\n        num = num.negate();\r\n    }\r\n    var numString = num.toString();\r\n    if (stringLength != null) {\r\n        // left pad the string with zeroes\r\n        while (numString.length < stringLength) {\r\n            numString = '0' + numString;\r\n        }\r\n    }\r\n    if (isNegative) {\r\n        return '-' + numString;\r\n    }\r\n    else if ((params === null || params === void 0 ? void 0 : params.usePositiveSign) === true) {\r\n        return '+' + numString;\r\n    }\r\n    return numString;\r\n}\r\nfunction add(x, y) {\r\n    if (x instanceof integer_1.default) {\r\n        return x.add(y);\r\n    }\r\n    else if (typeof x === 'bigint') {\r\n        return x + BigInt(y);\r\n    }\r\n    return x + y;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isDateTime = exports.DateTime = exports.isLocalDateTime = exports.LocalDateTime = exports.isDate = exports.Date = exports.isTime = exports.Time = exports.isLocalTime = exports.LocalTime = exports.isDuration = exports.Duration = void 0;\r\nvar util = __importStar(require(\"./internal/temporal-util\"));\r\nvar util_1 = require(\"./internal/util\");\r\nvar error_1 = require(\"./error\");\r\nvar integer_1 = __importStar(require(\"./integer\"));\r\nvar IDENTIFIER_PROPERTY_ATTRIBUTES = {\r\n    value: true,\r\n    enumerable: false,\r\n    configurable: false,\r\n    writable: false\r\n};\r\nvar DURATION_IDENTIFIER_PROPERTY = '__isDuration__';\r\nvar LOCAL_TIME_IDENTIFIER_PROPERTY = '__isLocalTime__';\r\nvar TIME_IDENTIFIER_PROPERTY = '__isTime__';\r\nvar DATE_IDENTIFIER_PROPERTY = '__isDate__';\r\nvar LOCAL_DATE_TIME_IDENTIFIER_PROPERTY = '__isLocalDateTime__';\r\nvar DATE_TIME_IDENTIFIER_PROPERTY = '__isDateTime__';\r\n/**\r\n * Represents an ISO 8601 duration. Contains both date-based values (years, months, days) and time-based values (seconds, nanoseconds).\r\n * Created `Duration` objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar Duration = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {NumberOrInteger} months - The number of months for the new duration.\r\n     * @param {NumberOrInteger} days - The number of days for the new duration.\r\n     * @param {NumberOrInteger} seconds - The number of seconds for the new duration.\r\n     * @param {NumberOrInteger} nanoseconds - The number of nanoseconds for the new duration.\r\n     */\r\n    function Duration(months, days, seconds, nanoseconds) {\r\n        /**\r\n         * The number of months.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.months = (0, util_1.assertNumberOrInteger)(months, 'Months');\r\n        /**\r\n         * The number of days.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.days = (0, util_1.assertNumberOrInteger)(days, 'Days');\r\n        (0, util_1.assertNumberOrInteger)(seconds, 'Seconds');\r\n        (0, util_1.assertNumberOrInteger)(nanoseconds, 'Nanoseconds');\r\n        /**\r\n         * The number of seconds.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.seconds = util.normalizeSecondsForDuration(seconds, nanoseconds);\r\n        /**\r\n         * The number of nanoseconds.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.nanoseconds = util.normalizeNanosecondsForDuration(nanoseconds);\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Duration.prototype.toString = function () {\r\n        return util.durationToIsoString(this.months, this.days, this.seconds, this.nanoseconds);\r\n    };\r\n    return Duration;\r\n}());\r\nexports.Duration = Duration;\r\nObject.defineProperty(Duration.prototype, DURATION_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link Duration} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link Duration}, `false` otherwise.\r\n */\r\nfunction isDuration(obj) {\r\n    return hasIdentifierProperty(obj, DURATION_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isDuration = isDuration;\r\n/**\r\n * Represents an instant capturing the time of day, but not the date, nor the timezone.\r\n * Created {@link LocalTime} objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar LocalTime = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {NumberOrInteger} hour - The hour for the new local time.\r\n     * @param {NumberOrInteger} minute - The minute for the new local time.\r\n     * @param {NumberOrInteger} second - The second for the new local time.\r\n     * @param {NumberOrInteger} nanosecond - The nanosecond for the new local time.\r\n     */\r\n    function LocalTime(hour, minute, second, nanosecond) {\r\n        /**\r\n         * The hour.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.hour = util.assertValidHour(hour);\r\n        /**\r\n         * The minute.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.minute = util.assertValidMinute(minute);\r\n        /**\r\n         * The second.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.second = util.assertValidSecond(second);\r\n        /**\r\n         * The nanosecond.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.nanosecond = util.assertValidNanosecond(nanosecond);\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Create a {@link LocalTime} object from the given standard JavaScript `Date` and optional nanoseconds.\r\n     * Year, month, day and time zone offset components of the given date are ignored.\r\n     * @param {global.Date} standardDate - The standard JavaScript date to convert.\r\n     * @param {NumberOrInteger|undefined} nanosecond - The optional amount of nanoseconds.\r\n     * @return {LocalTime<number>} New LocalTime.\r\n     */\r\n    LocalTime.fromStandardDate = function (standardDate, nanosecond) {\r\n        verifyStandardDateAndNanos(standardDate, nanosecond);\r\n        var totalNanoseconds = util.totalNanoseconds(standardDate, nanosecond);\r\n        return new LocalTime(standardDate.getHours(), standardDate.getMinutes(), standardDate.getSeconds(), totalNanoseconds instanceof integer_1.default\r\n            ? totalNanoseconds.toInt()\r\n            : typeof totalNanoseconds === 'bigint'\r\n                ? (0, integer_1.int)(totalNanoseconds).toInt()\r\n                : totalNanoseconds);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LocalTime.prototype.toString = function () {\r\n        return util.timeToIsoString(this.hour, this.minute, this.second, this.nanosecond);\r\n    };\r\n    return LocalTime;\r\n}());\r\nexports.LocalTime = LocalTime;\r\nObject.defineProperty(LocalTime.prototype, LOCAL_TIME_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link LocalTime} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link LocalTime}, `false` otherwise.\r\n */\r\nfunction isLocalTime(obj) {\r\n    return hasIdentifierProperty(obj, LOCAL_TIME_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isLocalTime = isLocalTime;\r\n/**\r\n * Represents an instant capturing the time of day, and the timezone offset in seconds, but not the date.\r\n * Created {@link Time} objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar Time = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {NumberOrInteger} hour - The hour for the new local time.\r\n     * @param {NumberOrInteger} minute - The minute for the new local time.\r\n     * @param {NumberOrInteger} second - The second for the new local time.\r\n     * @param {NumberOrInteger} nanosecond - The nanosecond for the new local time.\r\n     * @param {NumberOrInteger} timeZoneOffsetSeconds - The time zone offset in seconds. Value represents the difference, in seconds, from UTC to local time.\r\n     * This is different from standard JavaScript `Date.getTimezoneOffset()` which is the difference, in minutes, from local time to UTC.\r\n     */\r\n    function Time(hour, minute, second, nanosecond, timeZoneOffsetSeconds) {\r\n        /**\r\n         * The hour.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.hour = util.assertValidHour(hour);\r\n        /**\r\n         * The minute.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.minute = util.assertValidMinute(minute);\r\n        /**\r\n         * The second.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.second = util.assertValidSecond(second);\r\n        /**\r\n         * The nanosecond.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.nanosecond = util.assertValidNanosecond(nanosecond);\r\n        /**\r\n         * The time zone offset in seconds.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.timeZoneOffsetSeconds = (0, util_1.assertNumberOrInteger)(timeZoneOffsetSeconds, 'Time zone offset in seconds');\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Create a {@link Time} object from the given standard JavaScript `Date` and optional nanoseconds.\r\n     * Year, month and day components of the given date are ignored.\r\n     * @param {global.Date} standardDate - The standard JavaScript date to convert.\r\n     * @param {NumberOrInteger|undefined} nanosecond - The optional amount of nanoseconds.\r\n     * @return {Time<number>} New Time.\r\n     */\r\n    Time.fromStandardDate = function (standardDate, nanosecond) {\r\n        verifyStandardDateAndNanos(standardDate, nanosecond);\r\n        return new Time(standardDate.getHours(), standardDate.getMinutes(), standardDate.getSeconds(), (0, integer_1.toNumber)(util.totalNanoseconds(standardDate, nanosecond)), util.timeZoneOffsetInSeconds(standardDate));\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Time.prototype.toString = function () {\r\n        return (util.timeToIsoString(this.hour, this.minute, this.second, this.nanosecond) + util.timeZoneOffsetToIsoString(this.timeZoneOffsetSeconds));\r\n    };\r\n    return Time;\r\n}());\r\nexports.Time = Time;\r\nObject.defineProperty(Time.prototype, TIME_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link Time} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link Time}, `false` otherwise.\r\n */\r\nfunction isTime(obj) {\r\n    return hasIdentifierProperty(obj, TIME_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isTime = isTime;\r\n/**\r\n * Represents an instant capturing the date, but not the time, nor the timezone.\r\n * Created {@link Date} objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar Date = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {NumberOrInteger} year - The year for the new local date.\r\n     * @param {NumberOrInteger} month - The month for the new local date.\r\n     * @param {NumberOrInteger} day - The day for the new local date.\r\n     */\r\n    function Date(year, month, day) {\r\n        /**\r\n         * The year.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.year = util.assertValidYear(year);\r\n        /**\r\n         * The month.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.month = util.assertValidMonth(month);\r\n        /**\r\n         * The day.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.day = util.assertValidDay(day);\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Create a {@link Date} object from the given standard JavaScript `Date`.\r\n     * Hour, minute, second, millisecond and time zone offset components of the given date are ignored.\r\n     * @param {global.Date} standardDate - The standard JavaScript date to convert.\r\n     * @return {Date} New Date.\r\n     */\r\n    Date.fromStandardDate = function (standardDate) {\r\n        verifyStandardDateAndNanos(standardDate);\r\n        return new Date(standardDate.getFullYear(), standardDate.getMonth() + 1, standardDate.getDate());\r\n    };\r\n    /**\r\n     * Convert date to standard JavaScript `Date`.\r\n     *\r\n     * The time component of the returned `Date` is set to midnight\r\n     * and the time zone is set to UTC.\r\n     *\r\n     * @returns {StandardDate} Standard JavaScript `Date` at `00:00:00.000` UTC.\r\n     */\r\n    Date.prototype.toStandardDate = function () {\r\n        return util.isoStringToStandardDate(this.toString());\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Date.prototype.toString = function () {\r\n        return util.dateToIsoString(this.year, this.month, this.day);\r\n    };\r\n    return Date;\r\n}());\r\nexports.Date = Date;\r\nObject.defineProperty(Date.prototype, DATE_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link Date} class.\r\n * @param {Object} obj - The object to test.\r\n * @return {boolean} `true` if given object is a {@link Date}, `false` otherwise.\r\n */\r\nfunction isDate(obj) {\r\n    return hasIdentifierProperty(obj, DATE_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isDate = isDate;\r\n/**\r\n * Represents an instant capturing the date and the time, but not the timezone.\r\n * Created {@link LocalDateTime} objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar LocalDateTime = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {NumberOrInteger} year - The year for the new local date.\r\n     * @param {NumberOrInteger} month - The month for the new local date.\r\n     * @param {NumberOrInteger} day - The day for the new local date.\r\n     * @param {NumberOrInteger} hour - The hour for the new local time.\r\n     * @param {NumberOrInteger} minute - The minute for the new local time.\r\n     * @param {NumberOrInteger} second - The second for the new local time.\r\n     * @param {NumberOrInteger} nanosecond - The nanosecond for the new local time.\r\n     */\r\n    function LocalDateTime(year, month, day, hour, minute, second, nanosecond) {\r\n        /**\r\n         * The year.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.year = util.assertValidYear(year);\r\n        /**\r\n         * The month.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.month = util.assertValidMonth(month);\r\n        /**\r\n         * The day.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.day = util.assertValidDay(day);\r\n        /**\r\n         * The hour.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.hour = util.assertValidHour(hour);\r\n        /**\r\n         * The minute.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.minute = util.assertValidMinute(minute);\r\n        /**\r\n         * The second.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.second = util.assertValidSecond(second);\r\n        /**\r\n         * The nanosecond.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.nanosecond = util.assertValidNanosecond(nanosecond);\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Create a {@link LocalDateTime} object from the given standard JavaScript `Date` and optional nanoseconds.\r\n     * Time zone offset component of the given date is ignored.\r\n     * @param {global.Date} standardDate - The standard JavaScript date to convert.\r\n     * @param {NumberOrInteger|undefined} nanosecond - The optional amount of nanoseconds.\r\n     * @return {LocalDateTime} New LocalDateTime.\r\n     */\r\n    LocalDateTime.fromStandardDate = function (standardDate, nanosecond) {\r\n        verifyStandardDateAndNanos(standardDate, nanosecond);\r\n        return new LocalDateTime(standardDate.getFullYear(), standardDate.getMonth() + 1, standardDate.getDate(), standardDate.getHours(), standardDate.getMinutes(), standardDate.getSeconds(), (0, integer_1.toNumber)(util.totalNanoseconds(standardDate, nanosecond)));\r\n    };\r\n    /**\r\n     * Convert date to standard JavaScript `Date`.\r\n     *\r\n     * @returns {StandardDate} Standard JavaScript `Date` at the local timezone\r\n     */\r\n    LocalDateTime.prototype.toStandardDate = function () {\r\n        return util.isoStringToStandardDate(this.toString());\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    LocalDateTime.prototype.toString = function () {\r\n        return localDateTimeToString(this.year, this.month, this.day, this.hour, this.minute, this.second, this.nanosecond);\r\n    };\r\n    return LocalDateTime;\r\n}());\r\nexports.LocalDateTime = LocalDateTime;\r\nObject.defineProperty(LocalDateTime.prototype, LOCAL_DATE_TIME_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link LocalDateTime} class.\r\n * @param {Object} obj - The object to test.\r\n * @return {boolean} `true` if given object is a {@link LocalDateTime}, `false` otherwise.\r\n */\r\nfunction isLocalDateTime(obj) {\r\n    return hasIdentifierProperty(obj, LOCAL_DATE_TIME_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isLocalDateTime = isLocalDateTime;\r\n/**\r\n * Represents an instant capturing the date, the time and the timezone identifier.\r\n * Created {@ DateTime} objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar DateTime = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {NumberOrInteger} year - The year for the new date-time.\r\n     * @param {NumberOrInteger} month - The month for the new date-time.\r\n     * @param {NumberOrInteger} day - The day for the new date-time.\r\n     * @param {NumberOrInteger} hour - The hour for the new date-time.\r\n     * @param {NumberOrInteger} minute - The minute for the new date-time.\r\n     * @param {NumberOrInteger} second - The second for the new date-time.\r\n     * @param {NumberOrInteger} nanosecond - The nanosecond for the new date-time.\r\n     * @param {NumberOrInteger} timeZoneOffsetSeconds - The time zone offset in seconds. Either this argument or `timeZoneId` should be defined.\r\n     * Value represents the difference, in seconds, from UTC to local time.\r\n     * This is different from standard JavaScript `Date.getTimezoneOffset()` which is the difference, in minutes, from local time to UTC.\r\n     * @param {string|null} timeZoneId - The time zone id for the new date-time. Either this argument or `timeZoneOffsetSeconds` should be defined.\r\n     */\r\n    function DateTime(year, month, day, hour, minute, second, nanosecond, timeZoneOffsetSeconds, timeZoneId) {\r\n        /**\r\n         * The year.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.year = util.assertValidYear(year);\r\n        /**\r\n         * The month.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.month = util.assertValidMonth(month);\r\n        /**\r\n         * The day.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.day = util.assertValidDay(day);\r\n        /**\r\n         * The hour.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.hour = util.assertValidHour(hour);\r\n        /**\r\n         * The minute.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.minute = util.assertValidMinute(minute);\r\n        /**\r\n         * The second.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.second = util.assertValidSecond(second);\r\n        /**\r\n         * The nanosecond.\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.nanosecond = util.assertValidNanosecond(nanosecond);\r\n        var _a = __read(verifyTimeZoneArguments(timeZoneOffsetSeconds, timeZoneId), 2), offset = _a[0], id = _a[1];\r\n        /**\r\n         * The time zone offset in seconds.\r\n         *\r\n         * *Either this or {@link timeZoneId} is defined.*\r\n         *\r\n         * @type {NumberOrInteger}\r\n         */\r\n        this.timeZoneOffsetSeconds = offset;\r\n        /**\r\n         * The time zone id.\r\n         *\r\n         * *Either this or {@link timeZoneOffsetSeconds} is defined.*\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.timeZoneId = id !== null && id !== void 0 ? id : undefined;\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Create a {@link DateTime} object from the given standard JavaScript `Date` and optional nanoseconds.\r\n     * @param {global.Date} standardDate - The standard JavaScript date to convert.\r\n     * @param {NumberOrInteger|undefined} nanosecond - The optional amount of nanoseconds.\r\n     * @return {DateTime} New DateTime.\r\n     */\r\n    DateTime.fromStandardDate = function (standardDate, nanosecond) {\r\n        verifyStandardDateAndNanos(standardDate, nanosecond);\r\n        return new DateTime(standardDate.getFullYear(), standardDate.getMonth() + 1, standardDate.getDate(), standardDate.getHours(), standardDate.getMinutes(), standardDate.getSeconds(), (0, integer_1.toNumber)(util.totalNanoseconds(standardDate, nanosecond)), util.timeZoneOffsetInSeconds(standardDate), null /* no time zone id */);\r\n    };\r\n    /**\r\n     * Convert date to standard JavaScript `Date`.\r\n     *\r\n     * @returns {StandardDate} Standard JavaScript `Date` at the defined time zone offset\r\n     * @throws {Error} If the time zone offset is not defined in the object.\r\n     */\r\n    DateTime.prototype.toStandardDate = function () {\r\n        return util.toStandardDate(this._toUTC());\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    DateTime.prototype.toString = function () {\r\n        var _a;\r\n        var localDateTimeStr = localDateTimeToString(this.year, this.month, this.day, this.hour, this.minute, this.second, this.nanosecond);\r\n        var timeOffset = this.timeZoneOffsetSeconds != null\r\n            ? util.timeZoneOffsetToIsoString((_a = this.timeZoneOffsetSeconds) !== null && _a !== void 0 ? _a : 0)\r\n            : '';\r\n        var timeZoneStr = this.timeZoneId != null\r\n            ? \"[\".concat(this.timeZoneId, \"]\")\r\n            : '';\r\n        return localDateTimeStr + timeOffset + timeZoneStr;\r\n    };\r\n    /**\r\n     * @private\r\n     * @returns {number}\r\n     */\r\n    DateTime.prototype._toUTC = function () {\r\n        var _a;\r\n        if (this.timeZoneOffsetSeconds === undefined) {\r\n            throw new Error('Requires DateTime created with time zone offset');\r\n        }\r\n        var epochSecond = util.localDateTimeToEpochSecond(this.year, this.month, this.day, this.hour, this.minute, this.second, this.nanosecond);\r\n        var utcSecond = epochSecond.subtract((_a = this.timeZoneOffsetSeconds) !== null && _a !== void 0 ? _a : 0);\r\n        return (0, integer_1.int)(utcSecond)\r\n            .multiply(1000)\r\n            .add((0, integer_1.int)(this.nanosecond).div(1000000))\r\n            .toNumber();\r\n    };\r\n    return DateTime;\r\n}());\r\nexports.DateTime = DateTime;\r\nObject.defineProperty(DateTime.prototype, DATE_TIME_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link DateTime} class.\r\n * @param {Object} obj - The object to test.\r\n * @return {boolean} `true` if given object is a {@link DateTime}, `false` otherwise.\r\n */\r\nfunction isDateTime(obj) {\r\n    return hasIdentifierProperty(obj, DATE_TIME_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isDateTime = isDateTime;\r\nfunction hasIdentifierProperty(obj, property) {\r\n    return obj != null && obj[property] === true;\r\n}\r\nfunction localDateTimeToString(year, month, day, hour, minute, second, nanosecond) {\r\n    return (util.dateToIsoString(year, month, day) +\r\n        'T' +\r\n        util.timeToIsoString(hour, minute, second, nanosecond));\r\n}\r\n/**\r\n * @private\r\n * @param {NumberOrInteger} timeZoneOffsetSeconds\r\n * @param {string | null } timeZoneId\r\n * @returns {Array<NumberOrInteger | undefined | null, string | undefined | null>}\r\n */\r\nfunction verifyTimeZoneArguments(timeZoneOffsetSeconds, timeZoneId) {\r\n    var offsetDefined = timeZoneOffsetSeconds !== null && timeZoneOffsetSeconds !== undefined;\r\n    var idDefined = timeZoneId !== null && timeZoneId !== undefined && timeZoneId !== '';\r\n    if (!offsetDefined && !idDefined) {\r\n        throw (0, error_1.newError)(\r\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n        \"Unable to create DateTime without either time zone offset or id. Please specify either of them. Given offset: \".concat(timeZoneOffsetSeconds, \" and id: \").concat(timeZoneId));\r\n    }\r\n    var result = [undefined, undefined];\r\n    if (offsetDefined) {\r\n        (0, util_1.assertNumberOrInteger)(timeZoneOffsetSeconds, 'Time zone offset in seconds');\r\n        result[0] = timeZoneOffsetSeconds;\r\n    }\r\n    if (idDefined) {\r\n        (0, util_1.assertString)(timeZoneId, 'Time zone ID');\r\n        util.assertValidZoneId('Time zone ID', timeZoneId);\r\n        result[1] = timeZoneId;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @private\r\n * @param {StandardDate} standardDate\r\n * @param {NumberOrInteger} nanosecond\r\n * @returns {void}\r\n */\r\nfunction verifyStandardDateAndNanos(standardDate, nanosecond) {\r\n    (0, util_1.assertValidDate)(standardDate, 'Standard date');\r\n    if (nanosecond !== null && nanosecond !== undefined) {\r\n        (0, util_1.assertNumberOrInteger)(nanosecond, 'Nanosecond');\r\n    }\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isPathSegment = exports.PathSegment = exports.isPath = exports.Path = exports.isUnboundRelationship = exports.UnboundRelationship = exports.isRelationship = exports.Relationship = exports.isNode = exports.Node = void 0;\r\nvar json_1 = require(\"./json\");\r\nvar IDENTIFIER_PROPERTY_ATTRIBUTES = {\r\n    value: true,\r\n    enumerable: false,\r\n    configurable: false,\r\n    writable: false\r\n};\r\nvar NODE_IDENTIFIER_PROPERTY = '__isNode__';\r\nvar RELATIONSHIP_IDENTIFIER_PROPERTY = '__isRelationship__';\r\nvar UNBOUND_RELATIONSHIP_IDENTIFIER_PROPERTY = '__isUnboundRelationship__';\r\nvar PATH_IDENTIFIER_PROPERTY = '__isPath__';\r\nvar PATH_SEGMENT_IDENTIFIER_PROPERTY = '__isPathSegment__';\r\nfunction hasIdentifierProperty(obj, property) {\r\n    return obj != null && obj[property] === true;\r\n}\r\n/**\r\n * Class for Node Type.\r\n */\r\nvar Node = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {NumberOrInteger} identity - Unique identity\r\n     * @param {Array<string>} labels - Array for all labels\r\n     * @param {Properties} properties - Map with node properties\r\n     * @param {string} elementId - Node element identifier\r\n     */\r\n    function Node(identity, labels, properties, elementId) {\r\n        /**\r\n         * Identity of the node.\r\n         * @type {NumberOrInteger}\r\n         * @deprecated use {@link Node#elementId} instead\r\n         */\r\n        this.identity = identity;\r\n        /**\r\n         * Labels of the node.\r\n         * @type {string[]}\r\n         */\r\n        this.labels = labels;\r\n        /**\r\n         * Properties of the node.\r\n         * @type {Properties}\r\n         */\r\n        this.properties = properties;\r\n        /**\r\n         * The Node element identifier.\r\n         * @type {string}\r\n         */\r\n        this.elementId = _valueOrGetDefault(elementId, function () { return identity.toString(); });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Node.prototype.toString = function () {\r\n        var s = '(' + this.elementId;\r\n        for (var i = 0; i < this.labels.length; i++) {\r\n            s += ':' + this.labels[i];\r\n        }\r\n        var keys = Object.keys(this.properties);\r\n        if (keys.length > 0) {\r\n            s += ' {';\r\n            for (var i = 0; i < keys.length; i++) {\r\n                if (i > 0)\r\n                    s += ',';\r\n                s += keys[i] + ':' + (0, json_1.stringify)(this.properties[keys[i]]);\r\n            }\r\n            s += '}';\r\n        }\r\n        s += ')';\r\n        return s;\r\n    };\r\n    return Node;\r\n}());\r\nexports.Node = Node;\r\nObject.defineProperty(Node.prototype, NODE_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link Node} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link Node}, `false` otherwise.\r\n */\r\nfunction isNode(obj) {\r\n    return hasIdentifierProperty(obj, NODE_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isNode = isNode;\r\n/**\r\n * Class for Relationship Type.\r\n */\r\nvar Relationship = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {NumberOrInteger} identity - Unique identity\r\n     * @param {NumberOrInteger} start - Identity of start Node\r\n     * @param {NumberOrInteger} end - Identity of end Node\r\n     * @param {string} type - Relationship type\r\n     * @param {Properties} properties - Map with relationship properties\r\n     * @param {string} elementId - Relationship element identifier\r\n     * @param {string} startNodeElementId - Start Node element identifier\r\n     * @param {string} endNodeElementId - End Node element identifier\r\n     */\r\n    function Relationship(identity, start, end, type, properties, elementId, startNodeElementId, endNodeElementId) {\r\n        /**\r\n         * Identity of the relationship.\r\n         * @type {NumberOrInteger}\r\n         * @deprecated use {@link Relationship#elementId} instead\r\n         */\r\n        this.identity = identity;\r\n        /**\r\n         * Identity of the start node.\r\n         * @type {NumberOrInteger}\r\n         * @deprecated use {@link Relationship#startNodeElementId} instead\r\n         */\r\n        this.start = start;\r\n        /**\r\n         * Identity of the end node.\r\n         * @type {NumberOrInteger}\r\n         * @deprecated use {@link Relationship#endNodeElementId} instead\r\n         */\r\n        this.end = end;\r\n        /**\r\n         * Type of the relationship.\r\n         * @type {string}\r\n         */\r\n        this.type = type;\r\n        /**\r\n         * Properties of the relationship.\r\n         * @type {Properties}\r\n         */\r\n        this.properties = properties;\r\n        /**\r\n         * The Relationship element identifier.\r\n         * @type {string}\r\n         */\r\n        this.elementId = _valueOrGetDefault(elementId, function () { return identity.toString(); });\r\n        /**\r\n         * The Start Node element identifier.\r\n         * @type {string}\r\n         */\r\n        this.startNodeElementId = _valueOrGetDefault(startNodeElementId, function () { return start.toString(); });\r\n        /**\r\n         * The End Node element identifier.\r\n         * @type {string}\r\n         */\r\n        this.endNodeElementId = _valueOrGetDefault(endNodeElementId, function () { return end.toString(); });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Relationship.prototype.toString = function () {\r\n        var s = '(' + this.startNodeElementId + ')-[:' + this.type;\r\n        var keys = Object.keys(this.properties);\r\n        if (keys.length > 0) {\r\n            s += ' {';\r\n            for (var i = 0; i < keys.length; i++) {\r\n                if (i > 0)\r\n                    s += ',';\r\n                s += keys[i] + ':' + (0, json_1.stringify)(this.properties[keys[i]]);\r\n            }\r\n            s += '}';\r\n        }\r\n        s += ']->(' + this.endNodeElementId + ')';\r\n        return s;\r\n    };\r\n    return Relationship;\r\n}());\r\nexports.Relationship = Relationship;\r\nObject.defineProperty(Relationship.prototype, RELATIONSHIP_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link Relationship} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link Relationship}, `false` otherwise.\r\n */\r\nfunction isRelationship(obj) {\r\n    return hasIdentifierProperty(obj, RELATIONSHIP_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isRelationship = isRelationship;\r\n/**\r\n * Class for UnboundRelationship Type.\r\n * @access private\r\n */\r\nvar UnboundRelationship = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {NumberOrInteger} identity - Unique identity\r\n     * @param {string} type - Relationship type\r\n     * @param {Properties} properties - Map with relationship properties\r\n     * @param {string} elementId - Relationship element identifier\r\n     */\r\n    function UnboundRelationship(identity, type, properties, elementId) {\r\n        /**\r\n         * Identity of the relationship.\r\n         * @type {NumberOrInteger}\r\n         * @deprecated use {@link UnboundRelationship#elementId} instead\r\n         */\r\n        this.identity = identity;\r\n        /**\r\n         * Type of the relationship.\r\n         * @type {string}\r\n         */\r\n        this.type = type;\r\n        /**\r\n         * Properties of the relationship.\r\n         * @type {Properties}\r\n         */\r\n        this.properties = properties;\r\n        /**\r\n         * The Relationship element identifier.\r\n         * @type {string}\r\n         */\r\n        this.elementId = _valueOrGetDefault(elementId, function () { return identity.toString(); });\r\n    }\r\n    /**\r\n     * Bind relationship\r\n     *\r\n     * @protected\r\n     * @deprecated use {@link UnboundRelationship#bindTo} instead\r\n     * @param {Integer} start - Identity of start node\r\n     * @param {Integer} end - Identity of end node\r\n     * @return {Relationship} - Created relationship\r\n     */\r\n    UnboundRelationship.prototype.bind = function (start, end) {\r\n        return new Relationship(this.identity, start, end, this.type, this.properties, this.elementId);\r\n    };\r\n    /**\r\n     * Bind relationship\r\n     *\r\n     * @protected\r\n     * @param {Node} start - Start Node\r\n     * @param {Node} end - End Node\r\n     * @return {Relationship} - Created relationship\r\n     */\r\n    UnboundRelationship.prototype.bindTo = function (start, end) {\r\n        return new Relationship(this.identity, start.identity, end.identity, this.type, this.properties, this.elementId, start.elementId, end.elementId);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    UnboundRelationship.prototype.toString = function () {\r\n        var s = '-[:' + this.type;\r\n        var keys = Object.keys(this.properties);\r\n        if (keys.length > 0) {\r\n            s += ' {';\r\n            for (var i = 0; i < keys.length; i++) {\r\n                if (i > 0)\r\n                    s += ',';\r\n                s += keys[i] + ':' + (0, json_1.stringify)(this.properties[keys[i]]);\r\n            }\r\n            s += '}';\r\n        }\r\n        s += ']->';\r\n        return s;\r\n    };\r\n    return UnboundRelationship;\r\n}());\r\nexports.UnboundRelationship = UnboundRelationship;\r\nObject.defineProperty(UnboundRelationship.prototype, UNBOUND_RELATIONSHIP_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link UnboundRelationship} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link UnboundRelationship}, `false` otherwise.\r\n * @access private\r\n */\r\nfunction isUnboundRelationship(obj) {\r\n    return hasIdentifierProperty(obj, UNBOUND_RELATIONSHIP_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isUnboundRelationship = isUnboundRelationship;\r\n/**\r\n * Class for PathSegment Type.\r\n */\r\nvar PathSegment = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {Node} start - start node\r\n     * @param {Relationship} rel - relationship that connects start and end node\r\n     * @param {Node} end - end node\r\n     */\r\n    function PathSegment(start, rel, end) {\r\n        /**\r\n         * Start node.\r\n         * @type {Node}\r\n         */\r\n        this.start = start;\r\n        /**\r\n         * Relationship.\r\n         * @type {Relationship}\r\n         */\r\n        this.relationship = rel;\r\n        /**\r\n         * End node.\r\n         * @type {Node}\r\n         */\r\n        this.end = end;\r\n    }\r\n    return PathSegment;\r\n}());\r\nexports.PathSegment = PathSegment;\r\nObject.defineProperty(PathSegment.prototype, PATH_SEGMENT_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link PathSegment} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link PathSegment}, `false` otherwise.\r\n */\r\nfunction isPathSegment(obj) {\r\n    return hasIdentifierProperty(obj, PATH_SEGMENT_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isPathSegment = isPathSegment;\r\n/**\r\n * Class for Path Type.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {Node} start  - start node\r\n     * @param {Node} end - end node\r\n     * @param {Array<PathSegment>} segments - Array of Segments\r\n     */\r\n    function Path(start, end, segments) {\r\n        /**\r\n         * Start node.\r\n         * @type {Node}\r\n         */\r\n        this.start = start;\r\n        /**\r\n         * End node.\r\n         * @type {Node}\r\n         */\r\n        this.end = end;\r\n        /**\r\n         * Segments.\r\n         * @type {Array<PathSegment>}\r\n         */\r\n        this.segments = segments;\r\n        /**\r\n         * Length of the segments.\r\n         * @type {Number}\r\n         */\r\n        this.length = segments.length;\r\n    }\r\n    return Path;\r\n}());\r\nexports.Path = Path;\r\nObject.defineProperty(Path.prototype, PATH_IDENTIFIER_PROPERTY, IDENTIFIER_PROPERTY_ATTRIBUTES);\r\n/**\r\n * Test if given object is an instance of {@link Path} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link Path}, `false` otherwise.\r\n */\r\nfunction isPath(obj) {\r\n    return hasIdentifierProperty(obj, PATH_IDENTIFIER_PROPERTY);\r\n}\r\nexports.isPath = isPath;\r\nfunction _valueOrGetDefault(value, getDefault) {\r\n    return value === undefined || value === null ? getDefault() : value;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar error_1 = require(\"./error\");\r\nfunction generateFieldLookup(keys) {\r\n    var lookup = {};\r\n    keys.forEach(function (name, idx) {\r\n        lookup[name] = idx;\r\n    });\r\n    return lookup;\r\n}\r\n/**\r\n * Records make up the contents of the {@link Result}, and is how you access\r\n * the output of a query. A simple query might yield a result stream\r\n * with a single record, for instance:\r\n *\r\n *     MATCH (u:User) RETURN u.name, u.age\r\n *\r\n * This returns a stream of records with two fields, named `u.name` and `u.age`,\r\n * each record represents one user found by the query above. You can access\r\n * the values of each field either by name:\r\n *\r\n *     record.get(\"u.name\")\r\n *\r\n * Or by it's position:\r\n *\r\n *     record.get(0)\r\n *\r\n * @access public\r\n */\r\nvar Record = /** @class */ (function () {\r\n    /**\r\n     * Create a new record object.\r\n     * @constructor\r\n     * @protected\r\n     * @param {string[]} keys An array of field keys, in the order the fields appear in the record\r\n     * @param {Array} fields An array of field values\r\n     * @param {Object} fieldLookup An object of fieldName -> value index, used to map\r\n     *                            field names to values. If this is null, one will be\r\n     *                            generated.\r\n     */\r\n    function Record(keys, fields, fieldLookup) {\r\n        /**\r\n         * Field keys, in the order the fields appear in the record.\r\n         * @type {string[]}\r\n         */\r\n        this.keys = keys;\r\n        /**\r\n         * Number of fields\r\n         * @type {Number}\r\n         */\r\n        this.length = keys.length;\r\n        this._fields = fields;\r\n        this._fieldLookup = fieldLookup !== null && fieldLookup !== void 0 ? fieldLookup : generateFieldLookup(keys);\r\n    }\r\n    /**\r\n     * Run the given function for each field in this record. The function\r\n     * will get three arguments - the value, the key and this record, in that\r\n     * order.\r\n     *\r\n     * @param {function(value: Object, key: string, record: Record)} visitor the function to apply to each field.\r\n     * @returns {void} Nothing\r\n     */\r\n    Record.prototype.forEach = function (visitor) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var _b = __values(this.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\r\n                visitor(value, key, this);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    /**\r\n     * Run the given function for each field in this record. The function\r\n     * will get three arguments - the value, the key and this record, in that\r\n     * order.\r\n     *\r\n     * @param {function(value: Object, key: string, record: Record)} visitor the function to apply on each field\r\n     * and return a value that is saved to the returned Array.\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    Record.prototype.map = function (visitor) {\r\n        var e_2, _a;\r\n        var resultArray = [];\r\n        try {\r\n            for (var _b = __values(this.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\r\n                resultArray.push(visitor(value, key, this));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return resultArray;\r\n    };\r\n    /**\r\n     * Iterate over results. Each iteration will yield an array\r\n     * of exactly two items - the key, and the value (in order).\r\n     *\r\n     * @generator\r\n     * @returns {IterableIterator<Array>}\r\n     */\r\n    Record.prototype.entries = function () {\r\n        var i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < this.keys.length)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, [this.keys[i], this._fields[i]]];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Iterate over values.\r\n     *\r\n     * @generator\r\n     * @returns {IterableIterator<Object>}\r\n     */\r\n    Record.prototype.values = function () {\r\n        var i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < this.keys.length)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, this._fields[i]];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Iterate over values. Delegates to {@link Record#values}\r\n     *\r\n     * @generator\r\n     * @returns {IterableIterator<Object>}\r\n     */\r\n    Record.prototype[Symbol.iterator] = function () {\r\n        var i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < this.keys.length)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, this._fields[i]];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Generates an object out of the current Record\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    Record.prototype.toObject = function () {\r\n        var e_3, _a;\r\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\r\n        var obj = {};\r\n        try {\r\n            for (var _b = __values(this.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\r\n                obj[key] = value;\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Get a value from this record, either by index or by field key.\r\n     *\r\n     * @param {string|Number} key Field key, or the index of the field.\r\n     * @returns {*}\r\n     */\r\n    Record.prototype.get = function (key) {\r\n        var index;\r\n        if (!(typeof key === 'number')) {\r\n            index = this._fieldLookup[key];\r\n            if (index === undefined) {\r\n                throw (0, error_1.newError)(\"This record has no field with key '\".concat(key.toString(), \"', available keys are: [\") +\r\n                    this.keys.toString() +\r\n                    '].');\r\n            }\r\n        }\r\n        else {\r\n            index = key;\r\n        }\r\n        if (index > this._fields.length - 1 || index < 0) {\r\n            throw (0, error_1.newError)(\"This record has no field with index '\" +\r\n                index.toString() +\r\n                \"'. Remember that indexes start at `0`, \" +\r\n                'and make sure your query returns records in the shape you meant it to.');\r\n        }\r\n        return this._fields[index];\r\n    };\r\n    /**\r\n     * Check if a value from this record, either by index or by field key, exists.\r\n     *\r\n     * @param {string|Number} key Field key, or the index of the field.\r\n     * @returns {boolean}\r\n     */\r\n    Record.prototype.has = function (key) {\r\n        // if key is a number, we check if it is in the _fields array\r\n        if (typeof key === 'number') {\r\n            return key >= 0 && key < this._fields.length;\r\n        }\r\n        // if it's not a number, we check _fieldLookup dictionary directly\r\n        return this._fieldLookup[key] !== undefined;\r\n    };\r\n    return Record;\r\n}());\r\nexports.default = Record;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isPoint = exports.Point = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar util_1 = require(\"./internal/util\");\r\nvar POINT_IDENTIFIER_PROPERTY = '__isPoint__';\r\n/**\r\n * Represents a single two or three-dimensional point in a particular coordinate reference system.\r\n * Created `Point` objects are frozen with `Object.freeze()` in constructor and thus immutable.\r\n */\r\nvar Point = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {T} srid - The coordinate reference system identifier.\r\n     * @param {number} x - The `x` coordinate of the point.\r\n     * @param {number} y - The `y` coordinate of the point.\r\n     * @param {number} [z=undefined] - The `z` coordinate of the point or `undefined` if point has 2 dimensions.\r\n     */\r\n    function Point(srid, x, y, z) {\r\n        /**\r\n         * The coordinate reference system identifier.\r\n         * @type {T}\r\n         */\r\n        this.srid = (0, util_1.assertNumberOrInteger)(srid, 'SRID');\r\n        /**\r\n         * The `x` coordinate of the point.\r\n         * @type {number}\r\n         */\r\n        this.x = (0, util_1.assertNumber)(x, 'X coordinate');\r\n        /**\r\n         * The `y` coordinate of the point.\r\n         * @type {number}\r\n         */\r\n        this.y = (0, util_1.assertNumber)(y, 'Y coordinate');\r\n        /**\r\n         * The `z` coordinate of the point or `undefined` if point is 2-dimensional.\r\n         * @type {number}\r\n         */\r\n        this.z = z === null || z === undefined ? z : (0, util_1.assertNumber)(z, 'Z coordinate');\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Point.prototype.toString = function () {\r\n        return this.z != null && !isNaN(this.z)\r\n            ? \"Point{srid=\".concat(formatAsFloat(this.srid), \", x=\").concat(formatAsFloat(this.x), \", y=\").concat(formatAsFloat(this.y), \", z=\").concat(formatAsFloat(this.z), \"}\")\r\n            : \"Point{srid=\".concat(formatAsFloat(this.srid), \", x=\").concat(formatAsFloat(this.x), \", y=\").concat(formatAsFloat(this.y), \"}\");\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\nfunction formatAsFloat(number) {\r\n    return Number.isInteger(number) ? number.toString() + '.0' : number.toString();\r\n}\r\nObject.defineProperty(Point.prototype, POINT_IDENTIFIER_PROPERTY, {\r\n    value: true,\r\n    enumerable: false,\r\n    configurable: false,\r\n    writable: false\r\n});\r\n/**\r\n * Test if given object is an instance of {@link Point} class.\r\n * @param {Object} obj the object to test.\r\n * @return {boolean} `true` if given object is a {@link Point}, `false` otherwise.\r\n */\r\nfunction isPoint(obj) {\r\n    var anyObj = obj;\r\n    return obj != null && anyObj[POINT_IDENTIFIER_PROPERTY] === true;\r\n}\r\nexports.isPoint = isPoint;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FailedObserver = exports.CompletedObserver = void 0;\r\nvar CompletedObserver = /** @class */ (function () {\r\n    function CompletedObserver() {\r\n    }\r\n    CompletedObserver.prototype.subscribe = function (observer) {\r\n        apply(observer, observer.onKeys, []);\r\n        apply(observer, observer.onCompleted, {});\r\n    };\r\n    CompletedObserver.prototype.cancel = function () {\r\n        // do nothing\r\n    };\r\n    CompletedObserver.prototype.pause = function () {\r\n        // do nothing\r\n    };\r\n    CompletedObserver.prototype.resume = function () {\r\n        // do nothing\r\n    };\r\n    CompletedObserver.prototype.prepareToHandleSingleResponse = function () {\r\n        // do nothing\r\n    };\r\n    CompletedObserver.prototype.markCompleted = function () {\r\n        // do nothing\r\n    };\r\n    CompletedObserver.prototype.onError = function (error) {\r\n        // nothing to do, already finished\r\n        // eslint-disable-next-line\r\n        // @ts-ignore: not available in ES oldest supported version\r\n        throw new Error('CompletedObserver not supposed to call onError', { cause: error });\r\n    };\r\n    return CompletedObserver;\r\n}());\r\nexports.CompletedObserver = CompletedObserver;\r\nvar FailedObserver = /** @class */ (function () {\r\n    function FailedObserver(_a) {\r\n        var error = _a.error, onError = _a.onError;\r\n        this._error = error;\r\n        this._beforeError = onError;\r\n        this._observers = [];\r\n        this.onError(error);\r\n    }\r\n    FailedObserver.prototype.subscribe = function (observer) {\r\n        apply(observer, observer.onError, this._error);\r\n        this._observers.push(observer);\r\n    };\r\n    FailedObserver.prototype.onError = function (error) {\r\n        apply(this, this._beforeError, error);\r\n        this._observers.forEach(function (o) { return apply(o, o.onError, error); });\r\n    };\r\n    FailedObserver.prototype.cancel = function () {\r\n        // do nothing\r\n    };\r\n    FailedObserver.prototype.pause = function () {\r\n        // do nothing\r\n    };\r\n    FailedObserver.prototype.resume = function () {\r\n        // do nothing\r\n    };\r\n    FailedObserver.prototype.markCompleted = function () {\r\n        // do nothing\r\n    };\r\n    FailedObserver.prototype.prepareToHandleSingleResponse = function () {\r\n        // do nothing\r\n    };\r\n    return FailedObserver;\r\n}());\r\nexports.FailedObserver = FailedObserver;\r\nfunction apply(thisArg, func, param) {\r\n    if (func != null) {\r\n        func.bind(thisArg)(param);\r\n    }\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Bookmarks = void 0;\r\nvar util = __importStar(require(\"./util\"));\r\nvar BOOKMARKS_KEY = 'bookmarks';\r\nvar Bookmarks = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {string|string[]} values single bookmark as string or multiple bookmarks as a string array.\r\n     */\r\n    function Bookmarks(values) {\r\n        this._values = asStringArray(values);\r\n    }\r\n    Bookmarks.empty = function () {\r\n        return EMPTY_BOOKMARK;\r\n    };\r\n    /**\r\n     * Check if the given Bookmarks holder is meaningful and can be send to the database.\r\n     * @return {boolean} returns `true` bookmarks has a value, `false` otherwise.\r\n     */\r\n    Bookmarks.prototype.isEmpty = function () {\r\n        return this._values.length === 0;\r\n    };\r\n    /**\r\n     * Get all bookmarks values as an array.\r\n     * @return {string[]} all values.\r\n     */\r\n    Bookmarks.prototype.values = function () {\r\n        return this._values;\r\n    };\r\n    Bookmarks.prototype[Symbol.iterator] = function () {\r\n        return this._values[Symbol.iterator]();\r\n    };\r\n    /**\r\n     * Get these bookmarks as an object for begin transaction call.\r\n     * @return {Object} the value of this bookmarks holder as object.\r\n     */\r\n    Bookmarks.prototype.asBeginTransactionParameters = function () {\r\n        var _a;\r\n        if (this.isEmpty()) {\r\n            return {};\r\n        }\r\n        // Driver sends {bookmarks: \"max\", bookmarks: [\"one\", \"two\", \"max\"]} instead of simple\r\n        // {bookmarks: [\"one\", \"two\", \"max\"]} for backwards compatibility reasons. Old servers can only accept single\r\n        // bookmarks that is why driver has to parse and compare given list of bookmarks. This functionality will\r\n        // eventually be removed.\r\n        return _a = {},\r\n            _a[BOOKMARKS_KEY] = this._values,\r\n            _a;\r\n    };\r\n    return Bookmarks;\r\n}());\r\nexports.Bookmarks = Bookmarks;\r\nvar EMPTY_BOOKMARK = new Bookmarks(null);\r\n/**\r\n * Converts given value to an array.\r\n * @param {string|string[]|Array} [value=undefined] argument to convert.\r\n * @return {string[]} value converted to an array.\r\n */\r\nfunction asStringArray(value) {\r\n    if (value == null || value === '') {\r\n        return [];\r\n    }\r\n    if (util.isString(value)) {\r\n        return [value];\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new Set();\r\n        var flattenedValue = flattenArray(value);\r\n        for (var i = 0; i < flattenedValue.length; i++) {\r\n            var element = flattenedValue[i];\r\n            // if it is undefined or null, ignore it\r\n            if (element !== undefined && element !== null) {\r\n                if (!util.isString(element)) {\r\n                    throw new TypeError(\r\n                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                    \"Bookmark value should be a string, given: '\".concat(element, \"'\"));\r\n                }\r\n                result.add(element);\r\n            }\r\n        }\r\n        return __spreadArray([], __read(result), false);\r\n    }\r\n    throw new TypeError(\r\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n    \"Bookmarks should either be a string or a string array, given: '\".concat(value, \"'\"));\r\n}\r\n/**\r\n * Recursively flattens an array so that the result becomes a single array\r\n * of values, which does not include any sub-arrays\r\n *\r\n * @param {Array} value\r\n */\r\nfunction flattenArray(values) {\r\n    return values.reduce(function (dest, value) {\r\n        return Array.isArray(value)\r\n            ? dest.concat(flattenArray(value))\r\n            : dest.concat(value);\r\n    }, []);\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TELEMETRY_APIS = exports.BOLT_PROTOCOL_V5_7 = exports.BOLT_PROTOCOL_V5_6 = exports.BOLT_PROTOCOL_V5_5 = exports.BOLT_PROTOCOL_V5_4 = exports.BOLT_PROTOCOL_V5_3 = exports.BOLT_PROTOCOL_V5_2 = exports.BOLT_PROTOCOL_V5_1 = exports.BOLT_PROTOCOL_V5_0 = exports.BOLT_PROTOCOL_V4_4 = exports.BOLT_PROTOCOL_V4_3 = exports.BOLT_PROTOCOL_V4_2 = exports.BOLT_PROTOCOL_V4_1 = exports.BOLT_PROTOCOL_V4_0 = exports.BOLT_PROTOCOL_V3 = exports.BOLT_PROTOCOL_V2 = exports.BOLT_PROTOCOL_V1 = exports.DEFAULT_POOL_MAX_SIZE = exports.DEFAULT_POOL_ACQUISITION_TIMEOUT = exports.DEFAULT_CONNECTION_TIMEOUT_MILLIS = exports.ACCESS_MODE_WRITE = exports.ACCESS_MODE_READ = exports.FETCH_ALL = void 0;\r\nvar FETCH_ALL = -1;\r\nexports.FETCH_ALL = FETCH_ALL;\r\nvar DEFAULT_POOL_ACQUISITION_TIMEOUT = 60 * 1000; // 60 seconds\r\nexports.DEFAULT_POOL_ACQUISITION_TIMEOUT = DEFAULT_POOL_ACQUISITION_TIMEOUT;\r\nvar DEFAULT_POOL_MAX_SIZE = 100;\r\nexports.DEFAULT_POOL_MAX_SIZE = DEFAULT_POOL_MAX_SIZE;\r\nvar DEFAULT_CONNECTION_TIMEOUT_MILLIS = 30000; // 30 seconds by default\r\nexports.DEFAULT_CONNECTION_TIMEOUT_MILLIS = DEFAULT_CONNECTION_TIMEOUT_MILLIS;\r\nvar ACCESS_MODE_READ = 'READ';\r\nexports.ACCESS_MODE_READ = ACCESS_MODE_READ;\r\nvar ACCESS_MODE_WRITE = 'WRITE';\r\nexports.ACCESS_MODE_WRITE = ACCESS_MODE_WRITE;\r\nvar BOLT_PROTOCOL_V1 = 1;\r\nexports.BOLT_PROTOCOL_V1 = BOLT_PROTOCOL_V1;\r\nvar BOLT_PROTOCOL_V2 = 2;\r\nexports.BOLT_PROTOCOL_V2 = BOLT_PROTOCOL_V2;\r\nvar BOLT_PROTOCOL_V3 = 3;\r\nexports.BOLT_PROTOCOL_V3 = BOLT_PROTOCOL_V3;\r\nvar BOLT_PROTOCOL_V4_0 = 4.0;\r\nexports.BOLT_PROTOCOL_V4_0 = BOLT_PROTOCOL_V4_0;\r\nvar BOLT_PROTOCOL_V4_1 = 4.1;\r\nexports.BOLT_PROTOCOL_V4_1 = BOLT_PROTOCOL_V4_1;\r\nvar BOLT_PROTOCOL_V4_2 = 4.2;\r\nexports.BOLT_PROTOCOL_V4_2 = BOLT_PROTOCOL_V4_2;\r\nvar BOLT_PROTOCOL_V4_3 = 4.3;\r\nexports.BOLT_PROTOCOL_V4_3 = BOLT_PROTOCOL_V4_3;\r\nvar BOLT_PROTOCOL_V4_4 = 4.4;\r\nexports.BOLT_PROTOCOL_V4_4 = BOLT_PROTOCOL_V4_4;\r\nvar BOLT_PROTOCOL_V5_0 = 5.0;\r\nexports.BOLT_PROTOCOL_V5_0 = BOLT_PROTOCOL_V5_0;\r\nvar BOLT_PROTOCOL_V5_1 = 5.1;\r\nexports.BOLT_PROTOCOL_V5_1 = BOLT_PROTOCOL_V5_1;\r\nvar BOLT_PROTOCOL_V5_2 = 5.2;\r\nexports.BOLT_PROTOCOL_V5_2 = BOLT_PROTOCOL_V5_2;\r\nvar BOLT_PROTOCOL_V5_3 = 5.3;\r\nexports.BOLT_PROTOCOL_V5_3 = BOLT_PROTOCOL_V5_3;\r\nvar BOLT_PROTOCOL_V5_4 = 5.4;\r\nexports.BOLT_PROTOCOL_V5_4 = BOLT_PROTOCOL_V5_4;\r\nvar BOLT_PROTOCOL_V5_5 = 5.5;\r\nexports.BOLT_PROTOCOL_V5_5 = BOLT_PROTOCOL_V5_5;\r\nvar BOLT_PROTOCOL_V5_6 = 5.6;\r\nexports.BOLT_PROTOCOL_V5_6 = BOLT_PROTOCOL_V5_6;\r\nvar BOLT_PROTOCOL_V5_7 = 5.7;\r\nexports.BOLT_PROTOCOL_V5_7 = BOLT_PROTOCOL_V5_7;\r\nvar TELEMETRY_APIS = {\r\n    MANAGED_TRANSACTION: 0,\r\n    UNMANAGED_TRANSACTION: 1,\r\n    AUTO_COMMIT_TRANSACTION: 2,\r\n    EXECUTE_QUERY: 3\r\n};\r\nexports.TELEMETRY_APIS = TELEMETRY_APIS;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Logger = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar error_1 = require(\"../error\");\r\nvar ERROR = 'error';\r\nvar WARN = 'warn';\r\nvar INFO = 'info';\r\nvar DEBUG = 'debug';\r\nvar DEFAULT_LEVEL = INFO;\r\nvar levels = (_a = {},\r\n    _a[ERROR] = 0,\r\n    _a[WARN] = 1,\r\n    _a[INFO] = 2,\r\n    _a[DEBUG] = 3,\r\n    _a);\r\n/**\r\n * Logger used by the driver to notify about various internal events. Single logger should be used per driver.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {string} level the enabled logging level.\r\n     * @param {function(level: string, message: string)} loggerFunction the function to write the log level and message.\r\n     */\r\n    function Logger(level, loggerFunction) {\r\n        this._level = level;\r\n        this._loggerFunction = loggerFunction;\r\n    }\r\n    /**\r\n     * Create a new logger based on the given driver configuration.\r\n     * @param {Object} driverConfig the driver configuration as supplied by the user.\r\n     * @return {Logger} a new logger instance or a no-op logger when not configured.\r\n     */\r\n    Logger.create = function (driverConfig) {\r\n        if ((driverConfig === null || driverConfig === void 0 ? void 0 : driverConfig.logging) != null) {\r\n            var loggingConfig = driverConfig.logging;\r\n            var level = extractConfiguredLevel(loggingConfig);\r\n            var loggerFunction = extractConfiguredLogger(loggingConfig);\r\n            return new Logger(level, loggerFunction);\r\n        }\r\n        return this.noOp();\r\n    };\r\n    /**\r\n     * Create a no-op logger implementation.\r\n     * @return {Logger} the no-op logger implementation.\r\n     */\r\n    Logger.noOp = function () {\r\n        return noOpLogger;\r\n    };\r\n    /**\r\n     * Check if error logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isErrorEnabled = function () {\r\n        return isLevelEnabled(this._level, ERROR);\r\n    };\r\n    /**\r\n     * Log an error message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.error = function (message) {\r\n        if (this.isErrorEnabled()) {\r\n            this._loggerFunction(ERROR, message);\r\n        }\r\n    };\r\n    /**\r\n     * Check if warn logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isWarnEnabled = function () {\r\n        return isLevelEnabled(this._level, WARN);\r\n    };\r\n    /**\r\n     * Log an warning message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.warn = function (message) {\r\n        if (this.isWarnEnabled()) {\r\n            this._loggerFunction(WARN, message);\r\n        }\r\n    };\r\n    /**\r\n     * Check if info logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isInfoEnabled = function () {\r\n        return isLevelEnabled(this._level, INFO);\r\n    };\r\n    /**\r\n     * Log an info message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.info = function (message) {\r\n        if (this.isInfoEnabled()) {\r\n            this._loggerFunction(INFO, message);\r\n        }\r\n    };\r\n    /**\r\n     * Check if debug logging is enabled, i.e. it is not a no-op implementation.\r\n     * @return {boolean} `true` when enabled, `false` otherwise.\r\n     */\r\n    Logger.prototype.isDebugEnabled = function () {\r\n        return isLevelEnabled(this._level, DEBUG);\r\n    };\r\n    /**\r\n     * Log a debug message.\r\n     * @param {string} message the message to log.\r\n     */\r\n    Logger.prototype.debug = function (message) {\r\n        if (this.isDebugEnabled()) {\r\n            this._loggerFunction(DEBUG, message);\r\n        }\r\n    };\r\n    return Logger;\r\n}());\r\nexports.Logger = Logger;\r\nvar NoOpLogger = /** @class */ (function (_super) {\r\n    __extends(NoOpLogger, _super);\r\n    function NoOpLogger() {\r\n        return _super.call(this, INFO, function (level, message) { }) || this;\r\n    }\r\n    NoOpLogger.prototype.isErrorEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.error = function (message) { };\r\n    NoOpLogger.prototype.isWarnEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.warn = function (message) { };\r\n    NoOpLogger.prototype.isInfoEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.info = function (message) { };\r\n    NoOpLogger.prototype.isDebugEnabled = function () {\r\n        return false;\r\n    };\r\n    NoOpLogger.prototype.debug = function (message) { };\r\n    return NoOpLogger;\r\n}(Logger));\r\nvar noOpLogger = new NoOpLogger();\r\n/**\r\n * Check if the given logging level is enabled.\r\n * @param {string} configuredLevel the configured level.\r\n * @param {string} targetLevel the level to check.\r\n * @return {boolean} value of `true` when enabled, `false` otherwise.\r\n */\r\nfunction isLevelEnabled(configuredLevel, targetLevel) {\r\n    return levels[configuredLevel] >= levels[targetLevel];\r\n}\r\n/**\r\n * Extract the configured logging level from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {string} the configured log level or default when none configured.\r\n */\r\nfunction extractConfiguredLevel(loggingConfig) {\r\n    if ((loggingConfig === null || loggingConfig === void 0 ? void 0 : loggingConfig.level) != null) {\r\n        var configuredLevel = loggingConfig.level;\r\n        var value = levels[configuredLevel];\r\n        if (value == null && value !== 0) {\r\n            throw (0, error_1.newError)(\"Illegal logging level: \".concat(configuredLevel, \". Supported levels are: \").concat(Object.keys(levels).toString()));\r\n        }\r\n        return configuredLevel;\r\n    }\r\n    return DEFAULT_LEVEL;\r\n}\r\n/**\r\n * Extract the configured logger function from the driver's logging configuration.\r\n * @param {Object} loggingConfig the logging configuration.\r\n * @return {function(level: string, message: string)} the configured logging function.\r\n */\r\nfunction extractConfiguredLogger(loggingConfig) {\r\n    var _a, _b;\r\n    if ((loggingConfig === null || loggingConfig === void 0 ? void 0 : loggingConfig.logger) != null) {\r\n        var configuredLogger = loggingConfig.logger;\r\n        if (configuredLogger != null && typeof configuredLogger === 'function') {\r\n            return configuredLogger;\r\n        }\r\n    }\r\n    throw (0, error_1.newError)(\"Illegal logger function: \".concat((_b = (_a = loggingConfig === null || loggingConfig === void 0 ? void 0 : loggingConfig.logger) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : 'undefined'));\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EMPTY_CONNECTION_HOLDER = exports.ReadOnlyConnectionHolder = exports.ConnectionHolder = void 0;\r\nvar error_1 = require(\"../error\");\r\nvar util_1 = require(\"./util\");\r\nvar constants_1 = require(\"./constants\");\r\nvar bookmarks_1 = require(\"./bookmarks\");\r\nvar logger_1 = require(\"./logger\");\r\n/**\r\n * Utility to lazily initialize connections and return them back to the pool when unused.\r\n * @private\r\n */\r\nvar ConnectionHolder = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {object} params\r\n     * @property {string} params.mode - the access mode for new connection holder.\r\n     * @property {string} params.database - the target database name.\r\n     * @property {Bookmarks} params.bookmarks - initial bookmarks\r\n     * @property {ConnectionProvider} params.connectionProvider - the connection provider to acquire connections from.\r\n     * @property {string?} params.impersonatedUser - the user which will be impersonated\r\n     * @property {function(databaseName:string)} params.onDatabaseNameResolved - callback called when the database name is resolved\r\n     * @property {function():Promise<Bookmarks>} params.getConnectionAcquistionBookmarks - called for getting Bookmarks for acquiring connections\r\n     * @property {AuthToken} params.auth - the target auth for the to-be-acquired connection\r\n     */\r\n    function ConnectionHolder(_a) {\r\n        var mode = _a.mode, _b = _a.database, database = _b === void 0 ? '' : _b, bookmarks = _a.bookmarks, connectionProvider = _a.connectionProvider, impersonatedUser = _a.impersonatedUser, onDatabaseNameResolved = _a.onDatabaseNameResolved, getConnectionAcquistionBookmarks = _a.getConnectionAcquistionBookmarks, auth = _a.auth, log = _a.log;\r\n        this._mode = mode !== null && mode !== void 0 ? mode : constants_1.ACCESS_MODE_WRITE;\r\n        this._closed = false;\r\n        this._database = database != null ? (0, util_1.assertString)(database, 'database') : '';\r\n        this._bookmarks = bookmarks !== null && bookmarks !== void 0 ? bookmarks : bookmarks_1.Bookmarks.empty();\r\n        this._connectionProvider = connectionProvider;\r\n        this._impersonatedUser = impersonatedUser;\r\n        this._referenceCount = 0;\r\n        this._connectionPromise = Promise.resolve(null);\r\n        this._onDatabaseNameResolved = onDatabaseNameResolved;\r\n        this._auth = auth;\r\n        this._log = log;\r\n        this._logError = this._logError.bind(this);\r\n        this._getConnectionAcquistionBookmarks = getConnectionAcquistionBookmarks !== null && getConnectionAcquistionBookmarks !== void 0 ? getConnectionAcquistionBookmarks : (function () { return Promise.resolve(bookmarks_1.Bookmarks.empty()); });\r\n    }\r\n    ConnectionHolder.prototype.mode = function () {\r\n        return this._mode;\r\n    };\r\n    ConnectionHolder.prototype.database = function () {\r\n        return this._database;\r\n    };\r\n    ConnectionHolder.prototype.setDatabase = function (database) {\r\n        this._database = database;\r\n    };\r\n    ConnectionHolder.prototype.bookmarks = function () {\r\n        return this._bookmarks;\r\n    };\r\n    ConnectionHolder.prototype.connectionProvider = function () {\r\n        return this._connectionProvider;\r\n    };\r\n    ConnectionHolder.prototype.referenceCount = function () {\r\n        return this._referenceCount;\r\n    };\r\n    ConnectionHolder.prototype.initializeConnection = function () {\r\n        if (this._referenceCount === 0 && (this._connectionProvider != null)) {\r\n            this._connectionPromise = this._createConnectionPromise(this._connectionProvider);\r\n        }\r\n        else {\r\n            this._referenceCount++;\r\n            return false;\r\n        }\r\n        this._referenceCount++;\r\n        return true;\r\n    };\r\n    ConnectionHolder.prototype._createConnectionPromise = function (connectionProvider) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            var _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _b = (_a = connectionProvider).acquireConnection;\r\n                        _c = {\r\n                            accessMode: this._mode,\r\n                            database: this._database\r\n                        };\r\n                        return [4 /*yield*/, this._getBookmarks()];\r\n                    case 1: return [4 /*yield*/, _b.apply(_a, [(_c.bookmarks = _d.sent(),\r\n                                _c.impersonatedUser = this._impersonatedUser,\r\n                                _c.onDatabaseNameResolved = this._onDatabaseNameResolved,\r\n                                _c.auth = this._auth,\r\n                                _c)])];\r\n                    case 2: return [2 /*return*/, _d.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConnectionHolder.prototype._getBookmarks = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._getConnectionAcquistionBookmarks()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ConnectionHolder.prototype.getConnection = function () {\r\n        return this._connectionPromise;\r\n    };\r\n    ConnectionHolder.prototype.releaseConnection = function () {\r\n        if (this._referenceCount === 0) {\r\n            return this._connectionPromise;\r\n        }\r\n        this._referenceCount--;\r\n        if (this._referenceCount === 0) {\r\n            return this._releaseConnection();\r\n        }\r\n        return this._connectionPromise;\r\n    };\r\n    ConnectionHolder.prototype.close = function (hasTx) {\r\n        this._closed = true;\r\n        if (this._referenceCount === 0) {\r\n            return this._connectionPromise;\r\n        }\r\n        this._referenceCount = 0;\r\n        return this._releaseConnection(hasTx);\r\n    };\r\n    ConnectionHolder.prototype.log = function () {\r\n        return this._log;\r\n    };\r\n    /**\r\n     * Return the current pooled connection instance to the connection pool.\r\n     * We don't pool Session instances, to avoid users using the Session after they've called close.\r\n     * The `Session` object is just a thin wrapper around Connection anyway, so it makes little difference.\r\n     * @return {Promise} - promise resolved then connection is returned to the pool.\r\n     * @private\r\n     */\r\n    ConnectionHolder.prototype._releaseConnection = function (hasTx) {\r\n        this._connectionPromise = this._connectionPromise\r\n            .then(function (connection) {\r\n            if (connection != null) {\r\n                if (connection.isOpen() && (connection.hasOngoingObservableRequests() || hasTx === true)) {\r\n                    return connection\r\n                        .resetAndFlush()\r\n                        .catch(ignoreError)\r\n                        .then(function () { return connection.release().then(function () { return null; }); });\r\n                }\r\n                return connection.release().then(function () { return null; });\r\n            }\r\n            else {\r\n                return Promise.resolve(null);\r\n            }\r\n        })\r\n            .catch(this._logError);\r\n        return this._connectionPromise;\r\n    };\r\n    ConnectionHolder.prototype._logError = function (error) {\r\n        if (this._log.isWarnEnabled()) {\r\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n            this._log.warn(\"ConnectionHolder got an error while releasing the connection. Error \".concat(error, \". Stacktrace: \").concat(error.stack));\r\n        }\r\n        return null;\r\n    };\r\n    return ConnectionHolder;\r\n}());\r\nexports.ConnectionHolder = ConnectionHolder;\r\n/**\r\n * Provides a interaction with a ConnectionHolder without change it state by\r\n * releasing or initilizing\r\n */\r\nvar ReadOnlyConnectionHolder = /** @class */ (function (_super) {\r\n    __extends(ReadOnlyConnectionHolder, _super);\r\n    /**\r\n     * Constructor\r\n     * @param {ConnectionHolder} connectionHolder the connection holder which will treat the requests\r\n     */\r\n    function ReadOnlyConnectionHolder(connectionHolder) {\r\n        var _this = _super.call(this, {\r\n            mode: connectionHolder.mode(),\r\n            database: connectionHolder.database(),\r\n            bookmarks: connectionHolder.bookmarks(),\r\n            // @ts-expect-error\r\n            getConnectionAcquistionBookmarks: connectionHolder._getConnectionAcquistionBookmarks,\r\n            connectionProvider: connectionHolder.connectionProvider(),\r\n            log: connectionHolder.log()\r\n        }) || this;\r\n        _this._connectionHolder = connectionHolder;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return the true if the connection is suppose to be initilized with the command.\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    ReadOnlyConnectionHolder.prototype.initializeConnection = function () {\r\n        if (this._connectionHolder.referenceCount() === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Get the current connection promise.\r\n     * @return {Promise<Connection>} promise resolved with the current connection.\r\n     */\r\n    ReadOnlyConnectionHolder.prototype.getConnection = function () {\r\n        return this._connectionHolder.getConnection();\r\n    };\r\n    /**\r\n     * Get the current connection promise, doesn't performs the release\r\n     * @return {Promise<Connection>} promise with the resolved current connection\r\n     */\r\n    ReadOnlyConnectionHolder.prototype.releaseConnection = function () {\r\n        return this._connectionHolder.getConnection().catch(function () { return Promise.resolve(null); });\r\n    };\r\n    /**\r\n     * Get the current connection promise, doesn't performs the connection close\r\n     * @return {Promise<Connection>} promise with the resolved current connection\r\n     */\r\n    ReadOnlyConnectionHolder.prototype.close = function () {\r\n        return this._connectionHolder.getConnection().catch(function () { return Promise.resolve(null); });\r\n    };\r\n    return ReadOnlyConnectionHolder;\r\n}(ConnectionHolder));\r\nexports.ReadOnlyConnectionHolder = ReadOnlyConnectionHolder;\r\nexports.default = ReadOnlyConnectionHolder;\r\nvar EmptyConnectionHolder = /** @class */ (function (_super) {\r\n    __extends(EmptyConnectionHolder, _super);\r\n    function EmptyConnectionHolder() {\r\n        return _super.call(this, {\r\n            // Empty logger\r\n            log: logger_1.Logger.create({})\r\n        }) || this;\r\n    }\r\n    EmptyConnectionHolder.prototype.mode = function () {\r\n        return undefined;\r\n    };\r\n    EmptyConnectionHolder.prototype.database = function () {\r\n        return undefined;\r\n    };\r\n    EmptyConnectionHolder.prototype.initializeConnection = function () {\r\n        // nothing to initialize\r\n        return true;\r\n    };\r\n    EmptyConnectionHolder.prototype.getConnection = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.reject((0, error_1.newError)('This connection holder does not serve connections'))];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    EmptyConnectionHolder.prototype.releaseConnection = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.resolve(null)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    EmptyConnectionHolder.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.resolve(null)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return EmptyConnectionHolder;\r\n}(ConnectionHolder));\r\n/**\r\n * Connection holder that does not manage any connections.\r\n * @type {ConnectionHolder}\r\n * @private\r\n */\r\nvar EMPTY_CONNECTION_HOLDER = new EmptyConnectionHolder();\r\nexports.EMPTY_CONNECTION_HOLDER = EMPTY_CONNECTION_HOLDER;\r\n// eslint-disable-next-line n/handle-callback-err\r\nfunction ignoreError(error) {\r\n    return null;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TxConfig = void 0;\r\nvar util = __importStar(require(\"./util\"));\r\nvar error_1 = require(\"../error\");\r\nvar integer_1 = require(\"../integer\");\r\n/**\r\n * Internal holder of the transaction configuration.\r\n * It performs input validation and value conversion for further serialization by the Bolt protocol layer.\r\n * Users of the driver provide transaction configuration as regular objects `{timeout: 10, metadata: {key: 'value'}}`.\r\n * Driver converts such objects to {@link TxConfig} immediately and uses converted values everywhere.\r\n */\r\nvar TxConfig = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {Object} config the raw configuration object.\r\n     */\r\n    function TxConfig(config, log) {\r\n        assertValidConfig(config);\r\n        this.timeout = extractTimeout(config, log);\r\n        this.metadata = extractMetadata(config);\r\n    }\r\n    /**\r\n     * Get an empty config object.\r\n     * @return {TxConfig} an empty config.\r\n     */\r\n    TxConfig.empty = function () {\r\n        return EMPTY_CONFIG;\r\n    };\r\n    /**\r\n     * Check if this config object is empty. I.e. has no configuration values specified.\r\n     * @return {boolean} `true` if this object is empty, `false` otherwise.\r\n     */\r\n    TxConfig.prototype.isEmpty = function () {\r\n        return Object.values(this).every(function (value) { return value == null; });\r\n    };\r\n    return TxConfig;\r\n}());\r\nexports.TxConfig = TxConfig;\r\nvar EMPTY_CONFIG = new TxConfig({});\r\n/**\r\n * @return {Integer|null}\r\n */\r\nfunction extractTimeout(config, log) {\r\n    if (util.isObject(config) && config.timeout != null) {\r\n        util.assertNumberOrInteger(config.timeout, 'Transaction timeout');\r\n        if (isTimeoutFloat(config) && (log === null || log === void 0 ? void 0 : log.isInfoEnabled()) === true) {\r\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n            log === null || log === void 0 ? void 0 : log.info(\"Transaction timeout expected to be an integer, got: \".concat(config.timeout, \". The value will be rounded up.\"));\r\n        }\r\n        var timeout = (0, integer_1.int)(config.timeout, { ceilFloat: true });\r\n        if (timeout.isNegative()) {\r\n            throw (0, error_1.newError)('Transaction timeout should not be negative');\r\n        }\r\n        return timeout;\r\n    }\r\n    return null;\r\n}\r\nfunction isTimeoutFloat(config) {\r\n    return typeof config.timeout === 'number' && !Number.isInteger(config.timeout);\r\n}\r\n/**\r\n * @return {object|null}\r\n */\r\nfunction extractMetadata(config) {\r\n    if (util.isObject(config) && config.metadata != null) {\r\n        var metadata = config.metadata;\r\n        util.assertObject(metadata, 'config.metadata');\r\n        if (Object.keys(metadata).length !== 0) {\r\n            // not an empty object\r\n            return metadata;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction assertValidConfig(config) {\r\n    if (config != null) {\r\n        util.assertObject(config, 'Transaction config');\r\n    }\r\n}\r\n", "\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TransactionExecutor = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar error_1 = require(\"../error\");\r\nvar constants_1 = require(\"./constants\");\r\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\r\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\r\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\r\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\r\nfunction setTimeoutWrapper(callback, ms) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return setTimeout.apply(void 0, __spreadArray([callback, ms], __read(args), false));\r\n}\r\nfunction clearTimeoutWrapper(timeoutId) {\r\n    return clearTimeout(timeoutId);\r\n}\r\nvar TransactionExecutor = /** @class */ (function () {\r\n    function TransactionExecutor(maxRetryTimeMs, initialRetryDelayMs, multiplier, jitterFactor, dependencies) {\r\n        if (dependencies === void 0) { dependencies = {\r\n            setTimeout: setTimeoutWrapper,\r\n            clearTimeout: clearTimeoutWrapper\r\n        }; }\r\n        this._maxRetryTimeMs = _valueOrDefault(maxRetryTimeMs, DEFAULT_MAX_RETRY_TIME_MS);\r\n        this._initialRetryDelayMs = _valueOrDefault(initialRetryDelayMs, DEFAULT_INITIAL_RETRY_DELAY_MS);\r\n        this._multiplier = _valueOrDefault(multiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\r\n        this._jitterFactor = _valueOrDefault(jitterFactor, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\r\n        this._setTimeout = dependencies.setTimeout;\r\n        this._clearTimeout = dependencies.clearTimeout;\r\n        this._inFlightTimeoutIds = [];\r\n        this.pipelineBegin = false;\r\n        this.telemetryApi = constants_1.TELEMETRY_APIS.MANAGED_TRANSACTION;\r\n        this._verifyAfterConstruction();\r\n    }\r\n    TransactionExecutor.prototype.execute = function (transactionCreator, transactionWork, transactionWrapper) {\r\n        var _this = this;\r\n        var context = {\r\n            apiTransactionConfig: {\r\n                api: this.telemetryApi,\r\n                onTelemetrySuccess: function () {\r\n                    context.apiTransactionConfig = undefined;\r\n                }\r\n            }\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            _this._executeTransactionInsidePromise(transactionCreator, transactionWork, resolve, reject, transactionWrapper, context).catch(reject);\r\n        }).catch(function (error) {\r\n            var retryStartTimeMs = Date.now();\r\n            var retryDelayMs = _this._initialRetryDelayMs;\r\n            return _this._retryTransactionPromise(transactionCreator, transactionWork, error, retryStartTimeMs, retryDelayMs, transactionWrapper, context);\r\n        });\r\n    };\r\n    TransactionExecutor.prototype.close = function () {\r\n        var _this = this;\r\n        // cancel all existing timeouts to prevent further retries\r\n        this._inFlightTimeoutIds.forEach(function (timeoutId) { return _this._clearTimeout(timeoutId); });\r\n        this._inFlightTimeoutIds = [];\r\n    };\r\n    TransactionExecutor.prototype._retryTransactionPromise = function (transactionCreator, transactionWork, error, retryStartTime, retryDelayMs, transactionWrapper, executionContext) {\r\n        var _this = this;\r\n        var elapsedTimeMs = Date.now() - retryStartTime;\r\n        if (elapsedTimeMs > this._maxRetryTimeMs || !(0, error_1.isRetriableError)(error)) {\r\n            return Promise.reject(error);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var nextRetryTime = _this._computeDelayWithJitter(retryDelayMs);\r\n            var timeoutId = _this._setTimeout(function () {\r\n                // filter out this timeoutId when time has come and function is being executed\r\n                _this._inFlightTimeoutIds = _this._inFlightTimeoutIds.filter(function (id) { return id !== timeoutId; });\r\n                _this._executeTransactionInsidePromise(transactionCreator, transactionWork, resolve, reject, transactionWrapper, executionContext).catch(reject);\r\n            }, nextRetryTime);\r\n            // add newly created timeoutId to the list of all in-flight timeouts\r\n            _this._inFlightTimeoutIds.push(timeoutId);\r\n        }).catch(function (error) {\r\n            var nextRetryDelayMs = retryDelayMs * _this._multiplier;\r\n            return _this._retryTransactionPromise(transactionCreator, transactionWork, error, retryStartTime, nextRetryDelayMs, transactionWrapper, executionContext);\r\n        });\r\n    };\r\n    TransactionExecutor.prototype._executeTransactionInsidePromise = function (transactionCreator, transactionWork, resolve, reject, transactionWrapper, executionContext) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tx, txPromise, _a, error_2, wrap, wrappedTx, resultPromise;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _b.trys.push([0, 4, , 5]);\r\n                        txPromise = transactionCreator((executionContext === null || executionContext === void 0 ? void 0 : executionContext.apiTransactionConfig) != null\r\n                            ? __assign({}, executionContext === null || executionContext === void 0 ? void 0 : executionContext.apiTransactionConfig) : undefined);\r\n                        if (!this.pipelineBegin) return [3 /*break*/, 1];\r\n                        _a = txPromise;\r\n                        return [3 /*break*/, 3];\r\n                    case 1: return [4 /*yield*/, txPromise];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        tx = _a;\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        error_2 = _b.sent();\r\n                        // failed to create a transaction\r\n                        reject(error_2);\r\n                        return [2 /*return*/];\r\n                    case 5:\r\n                        wrap = transactionWrapper !== null && transactionWrapper !== void 0 ? transactionWrapper : (function (tx) { return tx; });\r\n                        wrappedTx = wrap(tx);\r\n                        resultPromise = this._safeExecuteTransactionWork(wrappedTx, transactionWork);\r\n                        resultPromise\r\n                            .then(function (result) {\r\n                            return _this._handleTransactionWorkSuccess(result, tx, resolve, reject);\r\n                        })\r\n                            .catch(function (error) { return _this._handleTransactionWorkFailure(error, tx, reject); });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TransactionExecutor.prototype._safeExecuteTransactionWork = function (tx, transactionWork) {\r\n        try {\r\n            var result = transactionWork(tx);\r\n            // user defined callback is supposed to return a promise, but it might not; so to protect against an\r\n            // incorrect API usage we wrap the returned value with a resolved promise; this is effectively a\r\n            // validation step without type checks\r\n            return Promise.resolve(result);\r\n        }\r\n        catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n    };\r\n    TransactionExecutor.prototype._handleTransactionWorkSuccess = function (result, tx, resolve, reject) {\r\n        if (tx.isOpen()) {\r\n            // transaction work returned resolved promise and transaction has not been committed/rolled back\r\n            // try to commit the transaction\r\n            tx.commit()\r\n                .then(function () {\r\n                // transaction was committed, return result to the user\r\n                resolve(result);\r\n            })\r\n                .catch(function (error) {\r\n                // transaction failed to commit, propagate the failure\r\n                reject(error);\r\n            });\r\n        }\r\n        else {\r\n            // transaction work returned resolved promise and transaction is already committed/rolled back\r\n            // return the result returned by given transaction work\r\n            resolve(result);\r\n        }\r\n    };\r\n    TransactionExecutor.prototype._handleTransactionWorkFailure = function (error, tx, reject) {\r\n        if (tx.isOpen()) {\r\n            // transaction work failed and the transaction is still open, roll it back and propagate the failure\r\n            tx.rollback()\r\n                .catch(function (ignore) {\r\n                // ignore the rollback error\r\n            })\r\n                .then(function () { return reject(error); }) // propagate the original error we got from the transaction work\r\n                .catch(reject);\r\n        }\r\n        else {\r\n            // transaction is already rolled back, propagate the error\r\n            reject(error);\r\n        }\r\n    };\r\n    TransactionExecutor.prototype._computeDelayWithJitter = function (delayMs) {\r\n        var jitter = delayMs * this._jitterFactor;\r\n        var min = delayMs - jitter;\r\n        var max = delayMs + jitter;\r\n        return Math.random() * (max - min) + min;\r\n    };\r\n    TransactionExecutor.prototype._verifyAfterConstruction = function () {\r\n        if (this._maxRetryTimeMs < 0) {\r\n            throw (0, error_1.newError)('Max retry time should be >= 0: ' + this._maxRetryTimeMs.toString());\r\n        }\r\n        if (this._initialRetryDelayMs < 0) {\r\n            throw (0, error_1.newError)('Initial retry delay should >= 0: ' + this._initialRetryDelayMs.toString());\r\n        }\r\n        if (this._multiplier < 1.0) {\r\n            throw (0, error_1.newError)('Multiplier should be >= 1.0: ' + this._multiplier.toString());\r\n        }\r\n        if (this._jitterFactor < 0 || this._jitterFactor > 1) {\r\n            throw (0, error_1.newError)('Jitter factor should be in [0.0, 1.0]: ' + this._jitterFactor.toFixed());\r\n        }\r\n    };\r\n    return TransactionExecutor;\r\n}());\r\nexports.TransactionExecutor = TransactionExecutor;\r\nfunction _valueOrDefault(value, defaultValue) {\r\n    if (value != null) {\r\n        return value;\r\n    }\r\n    return defaultValue;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Url = exports.formatIPv6Address = exports.formatIPv4Address = exports.defaultPortForScheme = exports.parseDatabaseUrl = void 0;\r\nvar util_1 = require(\"./util\");\r\nvar DEFAULT_BOLT_PORT = 7687;\r\nvar DEFAULT_HTTP_PORT = 7474;\r\nvar DEFAULT_HTTPS_PORT = 7473;\r\nvar Url = /** @class */ (function () {\r\n    function Url(scheme, host, port, hostAndPort, query) {\r\n        /**\r\n         * Nullable scheme (protocol) of the URL.\r\n         * Example: 'bolt', 'neo4j', 'http', 'https', etc.\r\n         * @type {string}\r\n         */\r\n        this.scheme = scheme;\r\n        /**\r\n         * Nonnull host name or IP address. IPv6 not wrapped in square brackets.\r\n         * Example: 'neo4j.com', 'localhost', '127.0.0.1', '192.168.10.15', '::1', '2001:4860:4860::8844', etc.\r\n         * @type {string}\r\n         */\r\n        this.host = host;\r\n        /**\r\n         * Nonnull number representing port. Default port for the given scheme is used if given URL string\r\n         * does not contain port. Example: 7687 for bolt, 7474 for HTTP and 7473 for HTTPS.\r\n         * @type {number}\r\n         */\r\n        this.port = port;\r\n        /**\r\n         * Nonnull host name or IP address plus port, separated by ':'. IPv6 wrapped in square brackets.\r\n         * Example: 'neo4j.com', 'neo4j.com:7687', '127.0.0.1', '127.0.0.1:8080', '[2001:4860:4860::8844]',\r\n         * '[2001:4860:4860::8844]:9090', etc.\r\n         * @type {string}\r\n         */\r\n        this.hostAndPort = hostAndPort;\r\n        /**\r\n         * Nonnull object representing parsed query string key-value pairs. Duplicated keys not supported.\r\n         * Example: '{}', '{'key1': 'value1', 'key2': 'value2'}', etc.\r\n         * @type {Object}\r\n         */\r\n        this.query = query;\r\n    }\r\n    return Url;\r\n}());\r\nexports.Url = Url;\r\nfunction parseDatabaseUrl(url) {\r\n    var _a;\r\n    (0, util_1.assertString)(url, 'URL');\r\n    var sanitized = sanitizeUrl(url);\r\n    var parsedUrl = uriJsParse(sanitized.url);\r\n    var scheme = sanitized.schemeMissing\r\n        ? null\r\n        : extractScheme(parsedUrl.scheme);\r\n    var host = extractHost(parsedUrl.host); // no square brackets for IPv6\r\n    var formattedHost = formatHost(host); // has square brackets for IPv6\r\n    var port = extractPort(parsedUrl.port, scheme);\r\n    var hostAndPort = \"\".concat(formattedHost, \":\").concat(port);\r\n    var query = extractQuery(\r\n    // @ts-expect-error\r\n    (_a = parsedUrl.query) !== null && _a !== void 0 ? _a : extractResourceQueryString(parsedUrl.resourceName), url);\r\n    return new Url(scheme, host, port, hostAndPort, query);\r\n}\r\nexports.parseDatabaseUrl = parseDatabaseUrl;\r\nfunction extractResourceQueryString(resource) {\r\n    if (typeof resource !== 'string') {\r\n        return null;\r\n    }\r\n    var _a = __read(resource.split('?'), 2), query = _a[1];\r\n    return query;\r\n}\r\nfunction sanitizeUrl(url) {\r\n    url = url.trim();\r\n    if (!url.includes('://')) {\r\n        // url does not contain scheme, add dummy 'none://' to make parser work correctly\r\n        return { schemeMissing: true, url: \"none://\".concat(url) };\r\n    }\r\n    return { schemeMissing: false, url: url };\r\n}\r\nfunction extractScheme(scheme) {\r\n    if (scheme != null) {\r\n        scheme = scheme.trim();\r\n        if (scheme.charAt(scheme.length - 1) === ':') {\r\n            scheme = scheme.substring(0, scheme.length - 1);\r\n        }\r\n        return scheme;\r\n    }\r\n    return null;\r\n}\r\nfunction extractHost(host, url) {\r\n    if (host == null) {\r\n        throw new Error('Unable to extract host from null or undefined URL');\r\n    }\r\n    return host.trim();\r\n}\r\nfunction extractPort(portString, scheme) {\r\n    var port = typeof portString === 'string' ? parseInt(portString, 10) : portString;\r\n    return port != null && !isNaN(port) ? port : defaultPortForScheme(scheme);\r\n}\r\nfunction extractQuery(queryString, url) {\r\n    var query = queryString != null ? trimAndSanitizeQuery(queryString) : null;\r\n    var context = {};\r\n    if (query != null) {\r\n        query.split('&').forEach(function (pair) {\r\n            var keyValue = pair.split('=');\r\n            if (keyValue.length !== 2) {\r\n                throw new Error(\"Invalid parameters: '\".concat(keyValue.toString(), \"' in URL '\").concat(url, \"'.\"));\r\n            }\r\n            var key = trimAndVerifyQueryElement(keyValue[0], 'key', url);\r\n            var value = trimAndVerifyQueryElement(keyValue[1], 'value', url);\r\n            if (context[key] !== undefined) {\r\n                throw new Error(\"Duplicated query parameters with key '\".concat(key, \"' in URL '\").concat(url, \"'\"));\r\n            }\r\n            context[key] = value;\r\n        });\r\n    }\r\n    return context;\r\n}\r\nfunction trimAndSanitizeQuery(query) {\r\n    query = (query !== null && query !== void 0 ? query : '').trim();\r\n    if ((query === null || query === void 0 ? void 0 : query.charAt(0)) === '?') {\r\n        query = query.substring(1, query.length);\r\n    }\r\n    return query;\r\n}\r\nfunction trimAndVerifyQueryElement(element, name, url) {\r\n    element = (element !== null && element !== void 0 ? element : '').trim();\r\n    if (element === '') {\r\n        throw new Error(\"Illegal empty \".concat(name, \" in URL query '\").concat(url, \"'\"));\r\n    }\r\n    return element;\r\n}\r\nfunction escapeIPv6Address(address) {\r\n    var startsWithSquareBracket = address.charAt(0) === '[';\r\n    var endsWithSquareBracket = address.charAt(address.length - 1) === ']';\r\n    if (!startsWithSquareBracket && !endsWithSquareBracket) {\r\n        return \"[\".concat(address, \"]\");\r\n    }\r\n    else if (startsWithSquareBracket && endsWithSquareBracket) {\r\n        return address;\r\n    }\r\n    else {\r\n        throw new Error(\"Illegal IPv6 address \".concat(address));\r\n    }\r\n}\r\nfunction formatHost(host) {\r\n    if (host === '' || host == null) {\r\n        throw new Error(\"Illegal host \".concat(host));\r\n    }\r\n    var isIPv6Address = host.includes(':');\r\n    return isIPv6Address ? escapeIPv6Address(host) : host;\r\n}\r\nfunction formatIPv4Address(address, port) {\r\n    return \"\".concat(address, \":\").concat(port);\r\n}\r\nexports.formatIPv4Address = formatIPv4Address;\r\nfunction formatIPv6Address(address, port) {\r\n    var escapedAddress = escapeIPv6Address(address);\r\n    return \"\".concat(escapedAddress, \":\").concat(port);\r\n}\r\nexports.formatIPv6Address = formatIPv6Address;\r\nfunction defaultPortForScheme(scheme) {\r\n    if (scheme === 'http') {\r\n        return DEFAULT_HTTP_PORT;\r\n    }\r\n    else if (scheme === 'https') {\r\n        return DEFAULT_HTTPS_PORT;\r\n    }\r\n    else {\r\n        return DEFAULT_BOLT_PORT;\r\n    }\r\n}\r\nexports.defaultPortForScheme = defaultPortForScheme;\r\nfunction uriJsParse(value) {\r\n    // JS version of Python partition function\r\n    function partition(s, delimiter) {\r\n        var i = s.indexOf(delimiter);\r\n        if (i >= 0)\r\n            return [s.substring(0, i), s[i], s.substring(i + 1)];\r\n        else\r\n            return [s, '', ''];\r\n    }\r\n    // JS version of Python rpartition function\r\n    function rpartition(s, delimiter) {\r\n        var i = s.lastIndexOf(delimiter);\r\n        if (i >= 0)\r\n            return [s.substring(0, i), s[i], s.substring(i + 1)];\r\n        else\r\n            return ['', '', s];\r\n    }\r\n    function between(s, ldelimiter, rdelimiter) {\r\n        var lpartition = partition(s, ldelimiter);\r\n        var rpartition = partition(lpartition[2], rdelimiter);\r\n        return [rpartition[0], rpartition[2]];\r\n    }\r\n    // Parse an authority string into an object\r\n    // with the following keys:\r\n    // - userInfo (optional, might contain both user name and password)\r\n    // - host\r\n    // - port (optional, included only as a string)\r\n    function parseAuthority(value) {\r\n        var parsed = {};\r\n        var parts;\r\n        // Parse user info\r\n        parts = rpartition(value, '@');\r\n        if (parts[1] === '@') {\r\n            parsed.userInfo = decodeURIComponent(parts[0]);\r\n            value = parts[2];\r\n        }\r\n        // Parse host and port\r\n        var _a = __read(between(value, '[', ']'), 2), ipv6Host = _a[0], rest = _a[1];\r\n        if (ipv6Host !== '') {\r\n            parsed.host = ipv6Host;\r\n            parts = partition(rest, ':');\r\n        }\r\n        else {\r\n            parts = partition(value, ':');\r\n            parsed.host = parts[0];\r\n        }\r\n        if (parts[1] === ':') {\r\n            parsed.port = parts[2];\r\n        }\r\n        return parsed;\r\n    }\r\n    var parsed = {};\r\n    var parts;\r\n    // Parse scheme\r\n    parts = partition(value, ':');\r\n    if (parts[1] === ':') {\r\n        parsed.scheme = decodeURIComponent(parts[0]);\r\n        value = parts[2];\r\n    }\r\n    // Parse fragment\r\n    parts = partition(value, '#');\r\n    if (parts[1] === '#') {\r\n        parsed.fragment = decodeURIComponent(parts[2]);\r\n        value = parts[0];\r\n    }\r\n    // Parse query\r\n    parts = partition(value, '?');\r\n    if (parts[1] === '?') {\r\n        parsed.query = parts[2];\r\n        value = parts[0];\r\n    }\r\n    // Parse authority and path\r\n    if (value.startsWith('//')) {\r\n        parts = partition(value.substr(2), '/');\r\n        parsed = __assign(__assign({}, parsed), parseAuthority(parts[0]));\r\n        parsed.path = parts[1] + parts[2];\r\n    }\r\n    else {\r\n        parsed.path = value;\r\n    }\r\n    return parsed;\r\n}\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ServerAddress = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar util_1 = require(\"./util\");\r\nvar urlUtil = __importStar(require(\"./url-util\"));\r\nvar ServerAddress = /** @class */ (function () {\r\n    function ServerAddress(host, resolved, port, hostPort) {\r\n        this._host = (0, util_1.assertString)(host, 'host');\r\n        this._resolved = resolved != null ? (0, util_1.assertString)(resolved, 'resolved') : null;\r\n        this._port = (0, util_1.assertNumber)(port, 'port');\r\n        this._hostPort = hostPort;\r\n        this._stringValue = resolved != null ? \"\".concat(hostPort, \"(\").concat(resolved, \")\") : \"\".concat(hostPort);\r\n    }\r\n    ServerAddress.prototype.host = function () {\r\n        return this._host;\r\n    };\r\n    ServerAddress.prototype.resolvedHost = function () {\r\n        return this._resolved != null ? this._resolved : this._host;\r\n    };\r\n    ServerAddress.prototype.port = function () {\r\n        return this._port;\r\n    };\r\n    ServerAddress.prototype.resolveWith = function (resolved) {\r\n        return new ServerAddress(this._host, resolved, this._port, this._hostPort);\r\n    };\r\n    ServerAddress.prototype.asHostPort = function () {\r\n        return this._hostPort;\r\n    };\r\n    ServerAddress.prototype.asKey = function () {\r\n        return this._hostPort;\r\n    };\r\n    ServerAddress.prototype.toString = function () {\r\n        return this._stringValue;\r\n    };\r\n    ServerAddress.fromUrl = function (url) {\r\n        var urlParsed = urlUtil.parseDatabaseUrl(url);\r\n        return new ServerAddress(urlParsed.host, null, urlParsed.port, urlParsed.hostAndPort);\r\n    };\r\n    return ServerAddress;\r\n}());\r\nexports.ServerAddress = ServerAddress;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseHostNameResolver = /** @class */ (function () {\r\n    function BaseHostNameResolver() {\r\n    }\r\n    BaseHostNameResolver.prototype.resolve = function () {\r\n        throw new Error('Abstract function');\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    BaseHostNameResolver.prototype._resolveToItself = function (address) {\r\n        return Promise.resolve([address]);\r\n    };\r\n    return BaseHostNameResolver;\r\n}());\r\nexports.default = BaseHostNameResolver;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar server_address_1 = require(\"../server-address\");\r\nfunction resolveToSelf(address) {\r\n    return Promise.resolve([address]);\r\n}\r\nvar ConfiguredCustomResolver = /** @class */ (function () {\r\n    function ConfiguredCustomResolver(resolverFunction) {\r\n        this._resolverFunction = resolverFunction !== null && resolverFunction !== void 0 ? resolverFunction : resolveToSelf;\r\n    }\r\n    ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            return resolve(_this._resolverFunction(seedRouter.asHostPort()));\r\n        }).then(function (resolved) {\r\n            if (!Array.isArray(resolved)) {\r\n                throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' +\r\n                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                    \"Each address is '<host>:<port>'. Got: \".concat(resolved));\r\n            }\r\n            return resolved.map(function (r) { return server_address_1.ServerAddress.fromUrl(r); });\r\n        });\r\n    };\r\n    return ConfiguredCustomResolver;\r\n}());\r\nexports.default = ConfiguredCustomResolver;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ConfiguredCustomResolver = exports.BaseHostNameResolver = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar base_host_name_resolver_1 = __importDefault(require(\"./base-host-name-resolver\"));\r\nexports.BaseHostNameResolver = base_host_name_resolver_1.default;\r\nvar configured_custom_resolver_1 = __importDefault(require(\"./configured-custom-resolver\"));\r\nexports.ConfiguredCustomResolver = configured_custom_resolver_1.default;\r\n", "\"use strict\";\r\n/**\r\n* Copyright (c) \"Neo4j\"\r\n* Neo4j Sweden AB [https://neo4j.com]\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*     http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n/* eslint-disable */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fromVersion = void 0;\r\n/**\r\n * Constructs a BoltAgent structure from a given product version.\r\n *\r\n * @param {string} version The product version\r\n * @param {function():SystemInfo} getSystemInfo Parameter used of inject system information and mock calls to the APIs.\r\n * @returns {BoltAgent} The bolt agent\r\n */\r\nfunction fromVersion(version, getSystemInfo) {\r\n    if (getSystemInfo === void 0) { getSystemInfo = function () { return ({\r\n        get userAgent() {\r\n            // this should be defined as an `var` since we need to get information\r\n            // came from the global scope which not always will be defined\r\n            // and we don't want to override the information\r\n            var navigator;\r\n            // @ts-ignore: browser code so must be skipped by ts\r\n            return navigator === null || navigator === void 0 ? void 0 : navigator.userAgent;\r\n        }\r\n    }); }; }\r\n    var systemInfo = getSystemInfo();\r\n    //USER_AGENT looks like 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36'\r\n    var platform = systemInfo.userAgent != null ? systemInfo.userAgent.split(\"(\")[1].split(\")\")[0] : undefined;\r\n    var languageDetails = systemInfo.userAgent || undefined;\r\n    return {\r\n        product: \"neo4j-javascript/\".concat(version),\r\n        platform: platform,\r\n        languageDetails: languageDetails\r\n    };\r\n}\r\nexports.fromVersion = fromVersion;\r\n/* eslint-enable */\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./bolt-agent\"), exports);\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_ACQUISITION_TIMEOUT = exports.DEFAULT_MAX_SIZE = void 0;\r\nvar DEFAULT_MAX_SIZE = 100;\r\nexports.DEFAULT_MAX_SIZE = DEFAULT_MAX_SIZE;\r\nvar DEFAULT_ACQUISITION_TIMEOUT = 60 * 1000; // 60 seconds\r\nexports.DEFAULT_ACQUISITION_TIMEOUT = DEFAULT_ACQUISITION_TIMEOUT;\r\nvar PoolConfig = /** @class */ (function () {\r\n    function PoolConfig(maxSize, acquisitionTimeout) {\r\n        this.maxSize = valueOrDefault(maxSize, DEFAULT_MAX_SIZE);\r\n        this.acquisitionTimeout = valueOrDefault(acquisitionTimeout, DEFAULT_ACQUISITION_TIMEOUT);\r\n    }\r\n    PoolConfig.defaultConfig = function () {\r\n        return new PoolConfig(DEFAULT_MAX_SIZE, DEFAULT_ACQUISITION_TIMEOUT);\r\n    };\r\n    PoolConfig.fromDriverConfig = function (config) {\r\n        var maxSize = isConfigured(config.maxConnectionPoolSize)\r\n            ? config.maxConnectionPoolSize\r\n            : DEFAULT_MAX_SIZE;\r\n        var acquisitionTimeout = isConfigured(config.connectionAcquisitionTimeout)\r\n            ? config.connectionAcquisitionTimeout\r\n            : DEFAULT_ACQUISITION_TIMEOUT;\r\n        return new PoolConfig(maxSize, acquisitionTimeout);\r\n    };\r\n    return PoolConfig;\r\n}());\r\nexports.default = PoolConfig;\r\nfunction valueOrDefault(value, defaultValue) {\r\n    return isConfigured(value) ? value : defaultValue;\r\n}\r\nfunction isConfigured(value) {\r\n    return value === 0 || value != null;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar pool_config_1 = __importDefault(require(\"./pool-config\"));\r\nvar error_1 = require(\"../../error\");\r\nvar logger_1 = require(\"../logger\");\r\nvar Pool = /** @class */ (function () {\r\n    /**\r\n     * @param {function(acquisitionContext: object, address: ServerAddress, function(address: ServerAddress, resource: object): Promise<object>): Promise<object>} create\r\n     *                an allocation function that creates a promise with a new resource. It's given an address for which to\r\n     *                allocate the connection and a function that will return the resource to the pool if invoked, which is\r\n     *                meant to be called on .dispose or .close or whatever mechanism the resource uses to finalize.\r\n     * @param {function(acquisitionContext: object, resource: object): boolean} validateOnAcquire\r\n     *                called at various times when an instance is acquired\r\n     *                If this returns false, the resource will be evicted\r\n     * @param {function(resource: object): boolean} validateOnRelease\r\n     *                called at various times when an instance is released\r\n     *                If this returns false, the resource will be evicted\r\n     * @param {function(resource: object): Promise<void>} destroy\r\n     *                called with the resource when it is evicted from this pool\r\n     * @param {function(resource: object, observer: { onError }): void} installIdleObserver\r\n     *                called when the resource is released back to pool\r\n     * @param {function(resource: object): void} removeIdleObserver\r\n     *                called when the resource is acquired from the pool\r\n     * @param {PoolConfig} config configuration for the new driver.\r\n     * @param {Logger} log the driver logger.\r\n     */\r\n    function Pool(_a) {\r\n        var _b = _a.create, create = _b === void 0 ? function (acquisitionContext, address, release) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Promise.reject(new Error('Not implemented'))];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        }); }); } : _b, _c = _a.destroy, destroy = _c === void 0 ? function (conn) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Promise.resolve()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        }); }); } : _c, _d = _a.validateOnAcquire, validateOnAcquire = _d === void 0 ? function (acquisitionContext, conn) { return true; } : _d, _e = _a.validateOnRelease, validateOnRelease = _e === void 0 ? function (conn) { return true; } : _e, _f = _a.installIdleObserver, installIdleObserver = _f === void 0 ? function (conn, observer) { } : _f, _g = _a.removeIdleObserver, removeIdleObserver = _g === void 0 ? function (conn) { } : _g, _h = _a.config, config = _h === void 0 ? pool_config_1.default.defaultConfig() : _h, _j = _a.log, log = _j === void 0 ? logger_1.Logger.noOp() : _j;\r\n        var _this = this;\r\n        this._create = create;\r\n        this._destroy = destroy;\r\n        this._validateOnAcquire = validateOnAcquire;\r\n        this._validateOnRelease = validateOnRelease;\r\n        this._installIdleObserver = installIdleObserver;\r\n        this._removeIdleObserver = removeIdleObserver;\r\n        this._maxSize = config.maxSize;\r\n        this._acquisitionTimeout = config.acquisitionTimeout;\r\n        this._pools = {};\r\n        this._pendingCreates = {};\r\n        this._acquireRequests = {};\r\n        this._activeResourceCounts = {};\r\n        this._release = this._release.bind(this);\r\n        this._log = log;\r\n        this._closed = false;\r\n    }\r\n    /**\r\n     * Acquire and idle resource fom the pool or create a new one.\r\n     * @param {object} acquisitionContext the acquisition context used for create and validateOnAcquire connection\r\n     * @param {ServerAddress} address the address for which we're acquiring.\r\n     * @param {object} config the config\r\n     * @param {boolean} config.requireNew Indicate it requires a new resource\r\n     * @return {Promise<Object>} resource that is ready to use.\r\n     */\r\n    Pool.prototype.acquire = function (acquisitionContext, address, config) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var key, allRequests, requests;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        key = address.asKey();\r\n                        allRequests = this._acquireRequests;\r\n                        requests = allRequests[key];\r\n                        if (requests == null) {\r\n                            allRequests[key] = [];\r\n                        }\r\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                                var timeoutId = setTimeout(function () {\r\n                                    // acquisition timeout fired\r\n                                    // remove request from the queue of pending requests, if it's still there\r\n                                    // request might've been taken out by the release operation\r\n                                    var pendingRequests = allRequests[key];\r\n                                    if (pendingRequests != null) {\r\n                                        allRequests[key] = pendingRequests.filter(function (item) { return item !== request; });\r\n                                    }\r\n                                    if (request.isCompleted()) {\r\n                                        // request already resolved/rejected by the release operation; nothing to do\r\n                                    }\r\n                                    else {\r\n                                        // request is still pending and needs to be failed\r\n                                        var activeCount = _this.activeResourceCount(address);\r\n                                        var idleCount = _this.has(address) ? _this._pools[key].length : 0;\r\n                                        request.reject((0, error_1.newError)(\"Connection acquisition timed out in \".concat(_this._acquisitionTimeout, \" ms. Pool status: Active conn count = \").concat(activeCount, \", Idle conn count = \").concat(idleCount, \".\")));\r\n                                    }\r\n                                }, _this._acquisitionTimeout);\r\n                                if (typeof timeoutId === 'object') {\r\n                                    // eslint-disable-next-line\r\n                                    // @ts-ignore\r\n                                    timeoutId.unref();\r\n                                }\r\n                                var request = new PendingRequest(key, acquisitionContext, config, resolve, reject, timeoutId, _this._log);\r\n                                allRequests[key].push(request);\r\n                                _this._processPendingAcquireRequests(address);\r\n                            })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Destroy all idle resources for the given address.\r\n     * @param {ServerAddress} address the address of the server to purge its pool.\r\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\r\n     */\r\n    Pool.prototype.purge = function (address) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._purgeKey(address.asKey())];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Pool.prototype.apply = function (address, resourceConsumer) {\r\n        var key = address.asKey();\r\n        if (key in this._pools) {\r\n            this._pools[key].apply(resourceConsumer);\r\n        }\r\n    };\r\n    /**\r\n     * Destroy all idle resources in this pool.\r\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\r\n     */\r\n    Pool.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._closed = true;\r\n                        return [4 /*yield*/, Promise.all(Object.keys(this._pools).map(function (key) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this._purgeKey(key)];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            }); }); })).then()];\r\n                    case 1: \r\n                    /**\r\n                     * The lack of Promise consuming was making the driver do not close properly in the scenario\r\n                     * captured at result.test.js:it('should handle missing onCompleted'). The test was timing out\r\n                     * because while waiting for the driver close.\r\n                     *\r\n                     * Consuming the Promise.all or by calling then or by awaiting in the result inside this method solved\r\n                     * the issue somehow.\r\n                     *\r\n                     * PS: the return of this method was already awaited at PooledConnectionProvider.close, but the await bellow\r\n                     * seems to be need also.\r\n                     */\r\n                    return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Keep the idle resources for the provided addresses and purge the rest.\r\n     * @returns {Promise<void>} A promise that is resolved when the other resources are purged\r\n     */\r\n    Pool.prototype.keepAll = function (addresses) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var keysToKeep, keysPresent, keysToPurge;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        keysToKeep = addresses.map(function (a) { return a.asKey(); });\r\n                        keysPresent = Object.keys(this._pools);\r\n                        keysToPurge = keysPresent.filter(function (k) { return !keysToKeep.includes(k); });\r\n                        return [4 /*yield*/, Promise.all(keysToPurge.map(function (key) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, this._purgeKey(key)];\r\n                                    case 1: return [2 /*return*/, _a.sent()];\r\n                                }\r\n                            }); }); })).then()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Check if this pool contains resources for the given address.\r\n     * @param {ServerAddress} address the address of the server to check.\r\n     * @return {boolean} `true` when pool contains entries for the given key, <code>false</code> otherwise.\r\n     */\r\n    Pool.prototype.has = function (address) {\r\n        return address.asKey() in this._pools;\r\n    };\r\n    /**\r\n     * Get count of active (checked out of the pool) resources for the given key.\r\n     * @param {ServerAddress} address the address of the server to check.\r\n     * @return {number} count of resources acquired by clients.\r\n     */\r\n    Pool.prototype.activeResourceCount = function (address) {\r\n        var _a;\r\n        return (_a = this._activeResourceCounts[address.asKey()]) !== null && _a !== void 0 ? _a : 0;\r\n    };\r\n    Pool.prototype._getOrInitializePoolFor = function (key) {\r\n        var pool = this._pools[key];\r\n        if (pool == null) {\r\n            pool = new SingleAddressPool();\r\n            this._pools[key] = pool;\r\n            this._pendingCreates[key] = 0;\r\n        }\r\n        return pool;\r\n    };\r\n    Pool.prototype._acquire = function (acquisitionContext, address, requireNew) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var key, pool, resource_1, valid, e_1, numConnections, resource, numConnections, resource_2;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._closed) {\r\n                            throw (0, error_1.newError)('Pool is closed, it is no more able to serve requests.');\r\n                        }\r\n                        key = address.asKey();\r\n                        pool = this._getOrInitializePoolFor(key);\r\n                        if (!!requireNew) return [3 /*break*/, 10];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(pool.length > 0)) return [3 /*break*/, 10];\r\n                        resource_1 = pool.pop();\r\n                        if (resource_1 == null) {\r\n                            return [3 /*break*/, 1];\r\n                        }\r\n                        resourceAcquired(key, this._activeResourceCounts);\r\n                        if (this._removeIdleObserver != null) {\r\n                            this._removeIdleObserver(resource_1);\r\n                        }\r\n                        valid = false;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 6]);\r\n                        return [4 /*yield*/, this._validateOnAcquire(acquisitionContext, resource_1)];\r\n                    case 3:\r\n                        valid = _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        resourceReleased(key, this._activeResourceCounts);\r\n                        pool.removeInUse(resource_1);\r\n                        return [4 /*yield*/, this._destroy(resource_1)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6:\r\n                        if (!valid) return [3 /*break*/, 7];\r\n                        // idle resource is valid and can be acquired\r\n                        if (this._log.isDebugEnabled()) {\r\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                            this._log.debug(\"\".concat(resource_1, \" acquired from the pool \").concat(key));\r\n                        }\r\n                        return [2 /*return*/, { resource: resource_1, pool: pool }];\r\n                    case 7:\r\n                        resourceReleased(key, this._activeResourceCounts);\r\n                        pool.removeInUse(resource_1);\r\n                        return [4 /*yield*/, this._destroy(resource_1)];\r\n                    case 8:\r\n                        _a.sent();\r\n                        _a.label = 9;\r\n                    case 9: return [3 /*break*/, 1];\r\n                    case 10:\r\n                        // Ensure requested max pool size\r\n                        if (this._maxSize > 0) {\r\n                            numConnections = this.activeResourceCount(address) + this._pendingCreates[key];\r\n                            if (numConnections >= this._maxSize) {\r\n                                // Will put this request in queue instead since the pool is full\r\n                                return [2 /*return*/, { resource: null, pool: pool }];\r\n                            }\r\n                        }\r\n                        // there exist no idle valid resources, create a new one for acquisition\r\n                        // Keep track of how many pending creates there are to avoid making too many connections.\r\n                        this._pendingCreates[key] = this._pendingCreates[key] + 1;\r\n                        _a.label = 11;\r\n                    case 11:\r\n                        _a.trys.push([11, , 15, 16]);\r\n                        numConnections = this.activeResourceCount(address) + pool.length;\r\n                        if (!(numConnections >= this._maxSize && requireNew)) return [3 /*break*/, 13];\r\n                        resource_2 = pool.pop();\r\n                        if (!(resource_2 != null)) return [3 /*break*/, 13];\r\n                        if (this._removeIdleObserver != null) {\r\n                            this._removeIdleObserver(resource_2);\r\n                        }\r\n                        pool.removeInUse(resource_2);\r\n                        return [4 /*yield*/, this._destroy(resource_2)];\r\n                    case 12:\r\n                        _a.sent();\r\n                        _a.label = 13;\r\n                    case 13: return [4 /*yield*/, this._create(acquisitionContext, address, function (address, resource) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0: return [4 /*yield*/, this._release(address, resource, pool)];\r\n                                case 1: return [2 /*return*/, _a.sent()];\r\n                            }\r\n                        }); }); })];\r\n                    case 14:\r\n                        // Invoke callback that creates actual connection\r\n                        resource = _a.sent();\r\n                        pool.pushInUse(resource);\r\n                        resourceAcquired(key, this._activeResourceCounts);\r\n                        if (this._log.isDebugEnabled()) {\r\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                            this._log.debug(\"\".concat(resource, \" created for the pool \").concat(key));\r\n                        }\r\n                        return [3 /*break*/, 16];\r\n                    case 15:\r\n                        this._pendingCreates[key] = this._pendingCreates[key] - 1;\r\n                        return [7 /*endfinally*/];\r\n                    case 16: return [2 /*return*/, { resource: resource, pool: pool }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Pool.prototype._release = function (address, resource, pool) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var key;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        key = address.asKey();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 9, 10]);\r\n                        if (!pool.isActive()) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this._validateOnRelease(resource)];\r\n                    case 2:\r\n                        if (!!(_a.sent())) return [3 /*break*/, 4];\r\n                        if (this._log.isDebugEnabled()) {\r\n                            this._log.debug(\r\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                            \"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because it is not functional\"));\r\n                        }\r\n                        pool.removeInUse(resource);\r\n                        return [4 /*yield*/, this._destroy(resource)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        if (this._installIdleObserver != null) {\r\n                            this._installIdleObserver(resource, {\r\n                                onError: function (error) {\r\n                                    _this._log.debug(\r\n                                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                                    \"Idle connection \".concat(resource, \" destroyed because of error: \").concat(error));\r\n                                    var pool = _this._pools[key];\r\n                                    if (pool != null) {\r\n                                        _this._pools[key] = pool.filter(function (r) { return r !== resource; });\r\n                                        pool.removeInUse(resource);\r\n                                    }\r\n                                    // let's not care about background clean-ups due to errors but just trigger the destroy\r\n                                    // process for the resource, we especially catch any errors and ignore them to avoid\r\n                                    // unhandled promise rejection warnings\r\n                                    _this._destroy(resource).catch(function () { });\r\n                                }\r\n                            });\r\n                        }\r\n                        pool.push(resource);\r\n                        if (this._log.isDebugEnabled()) {\r\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                            this._log.debug(\"\".concat(resource, \" released to the pool \").concat(key));\r\n                        }\r\n                        _a.label = 5;\r\n                    case 5: return [3 /*break*/, 8];\r\n                    case 6:\r\n                        // key has been purged, don't put it back, just destroy the resource\r\n                        if (this._log.isDebugEnabled()) {\r\n                            this._log.debug(\r\n                            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                            \"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because pool has been purged\"));\r\n                        }\r\n                        pool.removeInUse(resource);\r\n                        return [4 /*yield*/, this._destroy(resource)];\r\n                    case 7:\r\n                        _a.sent();\r\n                        _a.label = 8;\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        resourceReleased(key, this._activeResourceCounts);\r\n                        this._processPendingAcquireRequests(address);\r\n                        return [7 /*endfinally*/];\r\n                    case 10: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Pool.prototype._purgeKey = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pool, destructionList, resource;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        pool = this._pools[key];\r\n                        destructionList = [];\r\n                        if (!(pool != null)) return [3 /*break*/, 2];\r\n                        while (pool.length > 0) {\r\n                            resource = pool.pop();\r\n                            if (resource == null) {\r\n                                continue;\r\n                            }\r\n                            if (this._removeIdleObserver != null) {\r\n                                this._removeIdleObserver(resource);\r\n                            }\r\n                            destructionList.push(this._destroy(resource));\r\n                        }\r\n                        pool.close();\r\n                        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\r\n                        delete this._pools[key];\r\n                        return [4 /*yield*/, Promise.all(destructionList)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Pool.prototype._processPendingAcquireRequests = function (address) {\r\n        var _this = this;\r\n        var key = address.asKey();\r\n        var requests = this._acquireRequests[key];\r\n        if (requests != null) {\r\n            var pendingRequest_1 = requests.shift(); // pop a pending acquire request\r\n            if (pendingRequest_1 != null) {\r\n                this._acquire(pendingRequest_1.context, address, pendingRequest_1.requireNew)\r\n                    .catch(function (error) {\r\n                    // failed to acquire/create a new connection to resolve the pending acquire request\r\n                    // propagate the error by failing the pending request\r\n                    pendingRequest_1.reject(error);\r\n                    return { resource: null, pool: null };\r\n                })\r\n                    .then(function (_a) {\r\n                    var resource = _a.resource, pool = _a.pool;\r\n                    // there is not situation where the pool resource is not null and the\r\n                    // pool is null.\r\n                    if (resource != null && pool != null) {\r\n                        // managed to acquire a valid resource from the pool\r\n                        if (pendingRequest_1.isCompleted()) {\r\n                            // request has been completed, most likely failed by a timeout\r\n                            // return the acquired resource back to the pool\r\n                            _this._release(address, resource, pool)\r\n                                .catch(function (error) {\r\n                                if (_this._log.isDebugEnabled()) {\r\n                                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n                                    _this._log.debug(\"\".concat(resource, \" could not be release back to the pool. Cause: \").concat(error));\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            // request is still pending and can be resolved with the newly acquired resource\r\n                            pendingRequest_1.resolve(resource); // resolve the pending request with the acquired resource\r\n                        }\r\n                    }\r\n                    else {\r\n                        // failed to acquire a valid resource from the pool\r\n                        // return the pending request back to the pool\r\n                        if (!pendingRequest_1.isCompleted()) {\r\n                            if (_this._acquireRequests[key] == null) {\r\n                                _this._acquireRequests[key] = [];\r\n                            }\r\n                            _this._acquireRequests[key].unshift(pendingRequest_1);\r\n                        }\r\n                    }\r\n                }).catch(function (error) { return pendingRequest_1.reject(error); });\r\n            }\r\n            else {\r\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\r\n                delete this._acquireRequests[key];\r\n            }\r\n        }\r\n    };\r\n    return Pool;\r\n}());\r\n/**\r\n * Increment active (checked out of the pool) resource counter.\r\n * @param {string} key the resource group identifier (server address for connections).\r\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\r\n */\r\nfunction resourceAcquired(key, activeResourceCounts) {\r\n    var _a;\r\n    var currentCount = (_a = activeResourceCounts[key]) !== null && _a !== void 0 ? _a : 0;\r\n    activeResourceCounts[key] = currentCount + 1;\r\n}\r\n/**\r\n * Decrement active (checked out of the pool) resource counter.\r\n * @param {string} key the resource group identifier (server address for connections).\r\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\r\n */\r\nfunction resourceReleased(key, activeResourceCounts) {\r\n    var _a;\r\n    var currentCount = (_a = activeResourceCounts[key]) !== null && _a !== void 0 ? _a : 0;\r\n    var nextCount = currentCount - 1;\r\n    if (nextCount > 0) {\r\n        activeResourceCounts[key] = nextCount;\r\n    }\r\n    else {\r\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\r\n        delete activeResourceCounts[key];\r\n    }\r\n}\r\nvar PendingRequest = /** @class */ (function () {\r\n    function PendingRequest(key, context, config, resolve, reject, timeoutId, log) {\r\n        this._key = key;\r\n        this._context = context;\r\n        this._resolve = resolve;\r\n        this._reject = reject;\r\n        this._timeoutId = timeoutId;\r\n        this._log = log;\r\n        this._completed = false;\r\n        this._config = config !== null && config !== void 0 ? config : {};\r\n    }\r\n    Object.defineProperty(PendingRequest.prototype, \"context\", {\r\n        get: function () {\r\n            return this._context;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PendingRequest.prototype, \"requireNew\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this._config.requireNew) !== null && _a !== void 0 ? _a : false;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PendingRequest.prototype.isCompleted = function () {\r\n        return this._completed;\r\n    };\r\n    PendingRequest.prototype.resolve = function (resource) {\r\n        if (this._completed) {\r\n            return;\r\n        }\r\n        this._completed = true;\r\n        clearTimeout(this._timeoutId);\r\n        if (this._log.isDebugEnabled()) {\r\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\r\n            this._log.debug(\"\".concat(resource, \" acquired from the pool \").concat(this._key));\r\n        }\r\n        this._resolve(resource);\r\n    };\r\n    PendingRequest.prototype.reject = function (error) {\r\n        if (this._completed) {\r\n            return;\r\n        }\r\n        this._completed = true;\r\n        clearTimeout(this._timeoutId);\r\n        this._reject(error);\r\n    };\r\n    return PendingRequest;\r\n}());\r\nvar SingleAddressPool = /** @class */ (function () {\r\n    function SingleAddressPool() {\r\n        this._active = true;\r\n        this._elements = [];\r\n        this._elementsInUse = new Set();\r\n    }\r\n    SingleAddressPool.prototype.isActive = function () {\r\n        return this._active;\r\n    };\r\n    SingleAddressPool.prototype.close = function () {\r\n        this._active = false;\r\n        this._elements = [];\r\n        this._elementsInUse = new Set();\r\n    };\r\n    SingleAddressPool.prototype.filter = function (predicate) {\r\n        this._elements = this._elements.filter(predicate);\r\n        return this;\r\n    };\r\n    SingleAddressPool.prototype.apply = function (resourceConsumer) {\r\n        this._elements.forEach(resourceConsumer);\r\n        this._elementsInUse.forEach(resourceConsumer);\r\n    };\r\n    Object.defineProperty(SingleAddressPool.prototype, \"length\", {\r\n        get: function () {\r\n            return this._elements.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SingleAddressPool.prototype.pop = function () {\r\n        var element = this._elements.pop();\r\n        if (element != null) {\r\n            this._elementsInUse.add(element);\r\n        }\r\n        return element;\r\n    };\r\n    SingleAddressPool.prototype.push = function (element) {\r\n        this._elementsInUse.delete(element);\r\n        return this._elements.push(element);\r\n    };\r\n    SingleAddressPool.prototype.pushInUse = function (element) {\r\n        this._elementsInUse.add(element);\r\n    };\r\n    SingleAddressPool.prototype.removeInUse = function (element) {\r\n        this._elementsInUse.delete(element);\r\n    };\r\n    return SingleAddressPool;\r\n}());\r\nexports.default = Pool;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEFAULT_MAX_SIZE = exports.DEFAULT_ACQUISITION_TIMEOUT = exports.PoolConfig = exports.Pool = void 0;\r\nvar pool_config_1 = __importStar(require(\"./pool-config\"));\r\nexports.PoolConfig = pool_config_1.default;\r\nObject.defineProperty(exports, \"DEFAULT_ACQUISITION_TIMEOUT\", { enumerable: true, get: function () { return pool_config_1.DEFAULT_ACQUISITION_TIMEOUT; } });\r\nObject.defineProperty(exports, \"DEFAULT_MAX_SIZE\", { enumerable: true, get: function () { return pool_config_1.DEFAULT_MAX_SIZE; } });\r\nvar pool_1 = __importDefault(require(\"./pool\"));\r\nexports.Pool = pool_1.default;\r\nexports.default = pool_1.default;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.pool = exports.boltAgent = exports.objectUtil = exports.resolver = exports.serverAddress = exports.urlUtil = exports.logger = exports.transactionExecutor = exports.txConfig = exports.connectionHolder = exports.constants = exports.bookmarks = exports.observer = exports.temporalUtil = exports.util = void 0;\r\nvar util = __importStar(require(\"./util\"));\r\nexports.util = util;\r\nvar temporalUtil = __importStar(require(\"./temporal-util\"));\r\nexports.temporalUtil = temporalUtil;\r\nvar observer = __importStar(require(\"./observers\"));\r\nexports.observer = observer;\r\nvar bookmarks = __importStar(require(\"./bookmarks\"));\r\nexports.bookmarks = bookmarks;\r\nvar constants = __importStar(require(\"./constants\"));\r\nexports.constants = constants;\r\nvar connectionHolder = __importStar(require(\"./connection-holder\"));\r\nexports.connectionHolder = connectionHolder;\r\nvar txConfig = __importStar(require(\"./tx-config\"));\r\nexports.txConfig = txConfig;\r\nvar transactionExecutor = __importStar(require(\"./transaction-executor\"));\r\nexports.transactionExecutor = transactionExecutor;\r\nvar logger = __importStar(require(\"./logger\"));\r\nexports.logger = logger;\r\nvar urlUtil = __importStar(require(\"./url-util\"));\r\nexports.urlUtil = urlUtil;\r\nvar serverAddress = __importStar(require(\"./server-address\"));\r\nexports.serverAddress = serverAddress;\r\nvar resolver = __importStar(require(\"./resolver\"));\r\nexports.resolver = resolver;\r\nvar objectUtil = __importStar(require(\"./object-util\"));\r\nexports.objectUtil = objectUtil;\r\nvar boltAgent = __importStar(require(\"./bolt-agent/index\"));\r\nexports.boltAgent = boltAgent;\r\nvar pool = __importStar(require(\"./pool\"));\r\nexports.pool = pool;\r\n", "\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.buildNotificationsFromMetadata = exports.buildGqlStatusObjectFromMetadata = exports.polyfillNotification = exports.polyfillGqlStatusObject = exports.GqlStatusObject = exports.Notification = exports.notificationClassification = exports.notificationCategory = exports.notificationSeverityLevel = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar json = __importStar(require(\"./json\"));\r\nvar internal_1 = require(\"./internal\");\r\nvar gql_constants_1 = require(\"./gql-constants\");\r\nvar unknownGqlStatus = {\r\n    WARNING: {\r\n        gql_status: '01N42',\r\n        status_description: 'warn: unknown warning'\r\n    },\r\n    NO_DATA: {\r\n        gql_status: '02N42',\r\n        status_description: 'note: no data - unknown subcondition'\r\n    },\r\n    INFORMATION: {\r\n        gql_status: '03N42',\r\n        status_description: 'info: unknown notification'\r\n    },\r\n    ERROR: {\r\n        gql_status: '50N42',\r\n        status_description: 'error: general processing exception - unexpected error'\r\n    }\r\n};\r\n/**\r\n * @typedef {'WARNING' | 'INFORMATION' | 'UNKNOWN'} NotificationSeverityLevel\r\n */\r\n/**\r\n * Constants that represents the Severity level in the {@link Notification}\r\n */\r\nvar notificationSeverityLevel = {\r\n    WARNING: 'WARNING',\r\n    INFORMATION: 'INFORMATION',\r\n    UNKNOWN: 'UNKNOWN'\r\n};\r\nexports.notificationSeverityLevel = notificationSeverityLevel;\r\nObject.freeze(notificationSeverityLevel);\r\nvar severityLevels = Object.values(notificationSeverityLevel);\r\n/**\r\n * @typedef {'HINT' | 'UNRECOGNIZED' | 'UNSUPPORTED' |'PERFORMANCE' | 'TOPOLOGY' | 'SECURITY' | 'DEPRECATION' | 'GENERIC' | 'SCHEMA' | 'UNKNOWN' } NotificationCategory\r\n */\r\n/**\r\n * Constants that represents the Category in the {@link Notification}\r\n */\r\nvar notificationCategory = {\r\n    HINT: 'HINT',\r\n    UNRECOGNIZED: 'UNRECOGNIZED',\r\n    UNSUPPORTED: 'UNSUPPORTED',\r\n    PERFORMANCE: 'PERFORMANCE',\r\n    DEPRECATION: 'DEPRECATION',\r\n    TOPOLOGY: 'TOPOLOGY',\r\n    SECURITY: 'SECURITY',\r\n    GENERIC: 'GENERIC',\r\n    SCHEMA: 'SCHEMA',\r\n    UNKNOWN: 'UNKNOWN'\r\n};\r\nexports.notificationCategory = notificationCategory;\r\nObject.freeze(notificationCategory);\r\nvar categories = Object.values(notificationCategory);\r\n/**\r\n * @typedef {NotificationCategory} NotificationClassification\r\n * @experimental\r\n */\r\n/**\r\n * Constants that represents the Classification in the {@link GqlStatusObject}\r\n * @type {notificationCategory}\r\n * @experimental\r\n */\r\nvar notificationClassification = notificationCategory;\r\nexports.notificationClassification = notificationClassification;\r\n/**\r\n * Class for Cypher notifications\r\n * @access public\r\n */\r\nvar Notification = /** @class */ (function () {\r\n    /**\r\n     * Create a Notification instance\r\n     * @constructor\r\n     * @param {Object} notification - Object with notification data\r\n     */\r\n    function Notification(notification) {\r\n        /**\r\n         * The code\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.code = notification.code;\r\n        /**\r\n         * The title\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.title = notification.title;\r\n        /**\r\n         * The description\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.description = notification.description;\r\n        /**\r\n         * The raw severity\r\n         *\r\n         * Use {@link Notification#rawSeverityLevel} for the raw value or {@link Notification#severityLevel} for an enumerated value.\r\n         *\r\n         * @type {string}\r\n         * @public\r\n         * @deprecated This property will be removed in 6.0.\r\n         */\r\n        this.severity = notification.severity;\r\n        /**\r\n         * The position which the notification had occur.\r\n         *\r\n         * @type {NotificationPosition}\r\n         * @public\r\n         */\r\n        this.position = _constructPosition(notification.position);\r\n        /**\r\n         * The severity level\r\n         *\r\n         * @type {NotificationSeverityLevel}\r\n         * @public\r\n         * @example\r\n         * const { summary } = await session.run(\"RETURN 1\")\r\n         *\r\n         * for (const notification of summary.notifications) {\r\n         *     switch(notification.severityLevel) {\r\n         *         case neo4j.notificationSeverityLevel.INFORMATION: // or simply 'INFORMATION'\r\n         *             console.info(`${notification.title} - ${notification.description}`)\r\n         *             break\r\n         *         case neo4j.notificationSeverityLevel.WARNING: // or simply 'WARNING'\r\n         *             console.warn(`${notification.title} - ${notification.description}`)\r\n         *             break\r\n         *         case neo4j.notificationSeverityLevel.UNKNOWN: // or simply 'UNKNOWN'\r\n         *         default:\r\n         *             // the raw info came from the server could be found at notification.rawSeverityLevel\r\n         *             console.log(`${notification.title} - ${notification.description}`)\r\n         *             break\r\n         *     }\r\n         * }\r\n         */\r\n        this.severityLevel = _asEnumerableSeverity(notification.severity);\r\n        /**\r\n         * The severity level returned by the server without any validation.\r\n         *\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.rawSeverityLevel = notification.severity;\r\n        /**\r\n         * The category\r\n         *\r\n         * @type {NotificationCategory}\r\n         * @public\r\n         * @example\r\n         * const { summary } = await session.run(\"RETURN 1\")\r\n         *\r\n         * for (const notification of summary.notifications) {\r\n         *     switch(notification.category) {\r\n         *         case neo4j.notificationCategory.QUERY: // or simply 'QUERY'\r\n         *             console.info(`${notification.title} - ${notification.description}`)\r\n         *             break\r\n         *         case neo4j.notificationCategory.PERFORMANCE: // or simply 'PERFORMANCE'\r\n         *             console.warn(`${notification.title} - ${notification.description}`)\r\n         *             break\r\n         *         case neo4j.notificationCategory.UNKNOWN: // or simply 'UNKNOWN'\r\n         *         default:\r\n         *             // the raw info came from the server could be found at notification.rawCategory\r\n         *             console.log(`${notification.title} - ${notification.description}`)\r\n         *             break\r\n         *     }\r\n         * }\r\n         */\r\n        this.category = _asEnumerableClassification(notification.category);\r\n        /**\r\n         * The category returned by the server without any validation.\r\n         *\r\n         * @type {string|undefined}\r\n         * @public\r\n         */\r\n        this.rawCategory = notification.category;\r\n    }\r\n    return Notification;\r\n}());\r\nexports.Notification = Notification;\r\n/**\r\n * Representation for GqlStatusObject found when executing a query.\r\n * <p>\r\n * This object represents a status of query execution.\r\n * This status is a superset of {@link Notification}.\r\n *\r\n * @experimental\r\n * @public\r\n */\r\nvar GqlStatusObject = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param rawGqlStatusObject\r\n     * @private\r\n     */\r\n    function GqlStatusObject(rawGqlStatusObject) {\r\n        var _a;\r\n        /**\r\n         * The GQLSTATUS\r\n         *\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.gqlStatus = rawGqlStatusObject.gql_status;\r\n        /**\r\n         * The GQLSTATUS description\r\n         *\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.statusDescription = rawGqlStatusObject.status_description;\r\n        /**\r\n         * The diagnostic record as it is.\r\n         *\r\n         * @type {object}\r\n         * @public\r\n         */\r\n        this.diagnosticRecord = (_a = rawGqlStatusObject.diagnostic_record) !== null && _a !== void 0 ? _a : {};\r\n        /**\r\n         * The position at which the notification had occurred.\r\n         *\r\n         * @type {NotificationPosition | undefined}\r\n         * @public\r\n         */\r\n        this.position = this.diagnosticRecord._position != null ? _constructPosition(this.diagnosticRecord._position) : undefined;\r\n        /**\r\n         * The severity\r\n         *\r\n         * @type {NotificationSeverityLevel}\r\n         * @public\r\n         * @example\r\n         * const { summary } = await session.run(\"RETURN 1\")\r\n         *\r\n         * for (const gqlStatusObject of summary.gqlStatusObjects) {\r\n         *     switch(gqlStatusObject.severity) {\r\n         *         case neo4j.notificationSeverityLevel.INFORMATION: // or simply 'INFORMATION'\r\n         *             console.info(gqlStatusObject.statusDescription)\r\n         *             break\r\n         *         case neo4j.notificationSeverityLevel.WARNING: // or simply 'WARNING'\r\n         *             console.warn(gqlStatusObject.statusDescription)\r\n         *             break\r\n         *         case neo4j.notificationSeverityLevel.UNKNOWN: // or simply 'UNKNOWN'\r\n         *         default:\r\n         *             // the raw info came from the server could be found at gqlStatusObject.rawSeverity\r\n         *             console.log(gqlStatusObject.statusDescription)\r\n         *             break\r\n         *     }\r\n         * }\r\n         */\r\n        this.severity = _asEnumerableSeverity(this.diagnosticRecord._severity);\r\n        /**\r\n         * The severity returned in the diagnostic record from the server without any validation.\r\n         *\r\n         * @type {string | undefined}\r\n         * @public\r\n         */\r\n        this.rawSeverity = this.diagnosticRecord._severity;\r\n        /**\r\n         * The classification\r\n         *\r\n         * @type {NotificationClassification}\r\n         * @public\r\n         * @example\r\n         * const { summary } = await session.run(\"RETURN 1\")\r\n         *\r\n         * for (const gqlStatusObject of summary.gqlStatusObjects) {\r\n         *     switch(gqlStatusObject.classification) {\r\n         *         case neo4j.notificationClassification.QUERY: // or simply 'QUERY'\r\n         *             console.info(gqlStatusObject.statusDescription)\r\n         *             break\r\n         *         case neo4j.notificationClassification.PERFORMANCE: // or simply 'PERFORMANCE'\r\n         *             console.warn(gqlStatusObject.statusDescription)\r\n         *             break\r\n         *         case neo4j.notificationClassification.UNKNOWN: // or simply 'UNKNOWN'\r\n         *         default:\r\n         *             // the raw info came from the server can be found at notification.rawCategory\r\n         *             console.log(gqlStatusObject.statusDescription)\r\n         *             break\r\n         *     }\r\n         * }\r\n         */\r\n        this.classification = _asEnumerableClassification(this.diagnosticRecord._classification);\r\n        /**\r\n         * The category returned by the server without any validation.\r\n         *\r\n         * @type {string|undefined}\r\n         * @public\r\n         */\r\n        this.rawClassification = this.diagnosticRecord._classification;\r\n        /**\r\n         * Indicates if this object represents a notification and it can be filtered using\r\n         * NotificationFilter.\r\n         *\r\n         * Only GqlStatusObject which is Notification has meaningful position, severity and\r\n         * classification.\r\n         *\r\n         * @type {boolean}\r\n         * @public\r\n         */\r\n        this.isNotification = rawGqlStatusObject.neo4j_code != null;\r\n        Object.freeze(this);\r\n    }\r\n    Object.defineProperty(GqlStatusObject.prototype, \"diagnosticRecordAsJsonString\", {\r\n        /**\r\n         * The json string representation of the diagnostic record.\r\n         * The goal of this method is provide a serialized object for human inspection.\r\n         *\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return json.stringify(this.diagnosticRecord, { useCustomToString: true });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return GqlStatusObject;\r\n}());\r\nexports.GqlStatusObject = GqlStatusObject;\r\n/**\r\n *\r\n * @private\r\n * @param status\r\n * @returns {Notification|undefined}\r\n */\r\nfunction polyfillNotification(status) {\r\n    var _a, _b, _c;\r\n    // Non notification status should have neo4j_code\r\n    if (status.neo4j_code == null) {\r\n        return undefined;\r\n    }\r\n    return new Notification({\r\n        code: status.neo4j_code,\r\n        title: status.title,\r\n        description: status.description,\r\n        severity: (_a = status.diagnostic_record) === null || _a === void 0 ? void 0 : _a._severity,\r\n        category: (_b = status.diagnostic_record) === null || _b === void 0 ? void 0 : _b._classification,\r\n        position: (_c = status.diagnostic_record) === null || _c === void 0 ? void 0 : _c._position\r\n    });\r\n}\r\nexports.polyfillNotification = polyfillNotification;\r\n/**\r\n * @private\r\n * @param notification\r\n * @returns {GqlStatusObject}\r\n */\r\nfunction polyfillGqlStatusObject(notification) {\r\n    var _a;\r\n    var defaultStatus = notification.severity === notificationSeverityLevel.WARNING ? unknownGqlStatus.WARNING : unknownGqlStatus.INFORMATION;\r\n    var polyfilledRawObj = {\r\n        gql_status: defaultStatus.gql_status,\r\n        status_description: (_a = notification.description) !== null && _a !== void 0 ? _a : defaultStatus.status_description,\r\n        neo4j_code: notification.code,\r\n        title: notification.title,\r\n        diagnostic_record: __assign({}, gql_constants_1.rawPolyfilledDiagnosticRecord)\r\n    };\r\n    if (notification.severity != null) {\r\n        polyfilledRawObj.diagnostic_record._severity = notification.severity;\r\n    }\r\n    if (notification.category != null) {\r\n        polyfilledRawObj.diagnostic_record._classification = notification.category;\r\n    }\r\n    if (notification.position != null) {\r\n        polyfilledRawObj.diagnostic_record._position = notification.position;\r\n    }\r\n    return new GqlStatusObject(polyfilledRawObj);\r\n}\r\nexports.polyfillGqlStatusObject = polyfillGqlStatusObject;\r\n/**\r\n * This objects are used for polyfilling the first status on the status list\r\n *\r\n * @private\r\n */\r\nvar staticGqlStatusObjects = {\r\n    SUCCESS: new GqlStatusObject({\r\n        gql_status: '00000',\r\n        status_description: 'note: successful completion',\r\n        diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\r\n    }),\r\n    NO_DATA: new GqlStatusObject({\r\n        gql_status: '02000',\r\n        status_description: 'note: no data',\r\n        diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\r\n    }),\r\n    NO_DATA_UNKNOWN_SUBCONDITION: new GqlStatusObject(__assign(__assign({}, unknownGqlStatus.NO_DATA), { diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord })),\r\n    OMITTED_RESULT: new GqlStatusObject({\r\n        gql_status: '00001',\r\n        status_description: 'note: successful completion - omitted result',\r\n        diagnostic_record: gql_constants_1.rawPolyfilledDiagnosticRecord\r\n    })\r\n};\r\nObject.freeze(staticGqlStatusObjects);\r\n/**\r\n *\r\n * @private\r\n * @param metadata\r\n * @returns\r\n */\r\nfunction buildGqlStatusObjectFromMetadata(metadata) {\r\n    var _a, _b;\r\n    function getGqlStatusObjectFromStreamSummary(summary) {\r\n        if ((summary === null || summary === void 0 ? void 0 : summary.have_records_streamed) === true) {\r\n            return staticGqlStatusObjects.SUCCESS;\r\n        }\r\n        if ((summary === null || summary === void 0 ? void 0 : summary.has_keys) === false) {\r\n            return staticGqlStatusObjects.OMITTED_RESULT;\r\n        }\r\n        if ((summary === null || summary === void 0 ? void 0 : summary.pulled) === true) {\r\n            return staticGqlStatusObjects.NO_DATA;\r\n        }\r\n        return staticGqlStatusObjects.NO_DATA_UNKNOWN_SUBCONDITION;\r\n    }\r\n    if (metadata.statuses != null) {\r\n        return metadata.statuses.map(function (status) { return new GqlStatusObject(status); });\r\n    }\r\n    var clientGenerated = getGqlStatusObjectFromStreamSummary(metadata.stream_summary);\r\n    var polyfilledObjects = __spreadArray([clientGenerated], __read(((_b = (_a = metadata.notifications) === null || _a === void 0 ? void 0 : _a.map(polyfillGqlStatusObject)) !== null && _b !== void 0 ? _b : [])), false);\r\n    return polyfilledObjects.sort(function (a, b) { return calculateWeight(a) - calculateWeight(b); });\r\n}\r\nexports.buildGqlStatusObjectFromMetadata = buildGqlStatusObjectFromMetadata;\r\nvar gqlStatusWeightByClass = Object.freeze({\r\n    '02': 0,\r\n    '01': 1,\r\n    '00': 2\r\n});\r\n/**\r\n * GqlStatus weight\r\n *\r\n * @private\r\n */\r\nfunction calculateWeight(gqlStatusObject) {\r\n    var _a, _b;\r\n    var gqlClass = (_a = gqlStatusObject.gqlStatus) === null || _a === void 0 ? void 0 : _a.slice(0, 2);\r\n    // @ts-expect-error\r\n    return (_b = gqlStatusWeightByClass[gqlClass]) !== null && _b !== void 0 ? _b : 9999;\r\n}\r\n/**\r\n *\r\n * @private\r\n * @param metadata\r\n * @returns\r\n */\r\nfunction buildNotificationsFromMetadata(metadata) {\r\n    if (metadata.notifications != null) {\r\n        return metadata.notifications.map(function (n) { return new Notification(n); });\r\n    }\r\n    if (metadata.statuses != null) {\r\n        return metadata.statuses.map(polyfillNotification).filter(function (n) { return n != null; });\r\n    }\r\n    return [];\r\n}\r\nexports.buildNotificationsFromMetadata = buildNotificationsFromMetadata;\r\n/**\r\n *\r\n * @private\r\n * @param pos\r\n * @returns {NotificationPosition}\r\n */\r\nfunction _constructPosition(pos) {\r\n    if (pos == null) {\r\n        return {};\r\n    }\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n    return {\r\n        offset: internal_1.util.toNumber(pos.offset),\r\n        line: internal_1.util.toNumber(pos.line),\r\n        column: internal_1.util.toNumber(pos.column)\r\n    };\r\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\r\n}\r\nfunction _asEnumerableSeverity(severity) {\r\n    return severityLevels.includes(severity)\r\n        ? severity\r\n        : notificationSeverityLevel.UNKNOWN;\r\n}\r\nfunction _asEnumerableClassification(classification) {\r\n    return categories.includes(classification)\r\n        ? classification\r\n        : notificationClassification.UNKNOWN;\r\n}\r\nexports.default = Notification;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Stats = exports.QueryStatistics = exports.ProfiledPlan = exports.Plan = exports.ServerInfo = exports.queryType = void 0;\r\nvar internal_1 = require(\"./internal\");\r\nvar notification_1 = require(\"./notification\");\r\n/**\r\n * A ResultSummary instance contains structured metadata for a {@link Result}.\r\n * @access public\r\n */\r\nvar ResultSummary = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {string} query - The query this summary is for\r\n     * @param {Object} parameters - Parameters for the query\r\n     * @param {Object} metadata - Query metadata\r\n     * @param {number|undefined} protocolVersion - Bolt Protocol Version\r\n     */\r\n    function ResultSummary(query, parameters, metadata, protocolVersion) {\r\n        var _a, _b, _c;\r\n        /**\r\n         * The query and parameters this summary is for.\r\n         * @type {{text: string, parameters: Object}}\r\n         * @public\r\n         */\r\n        this.query = { text: query, parameters: parameters };\r\n        /**\r\n         * The type of query executed. Can be \"r\" for read-only query, \"rw\" for read-write query,\r\n         * \"w\" for write-only query and \"s\" for schema-write query.\r\n         * String constants are available in {@link queryType} object.\r\n         * @type {string}\r\n         * @public\r\n         */\r\n        this.queryType = metadata.type;\r\n        /**\r\n         * Counters for operations the query triggered.\r\n         * @type {QueryStatistics}\r\n         * @public\r\n         */\r\n        this.counters = new QueryStatistics((_a = metadata.stats) !== null && _a !== void 0 ? _a : {});\r\n        // for backwards compatibility, remove in future version\r\n        /**\r\n         * Use {@link ResultSummary.counters} instead.\r\n         * @type {QueryStatistics}\r\n         * @deprecated\r\n         */\r\n        this.updateStatistics = this.counters;\r\n        /**\r\n         * This describes how the database will execute the query.\r\n         * Query plan for the executed query if available, otherwise undefined.\r\n         * Will only be populated for queries that start with \"EXPLAIN\".\r\n         * @type {Plan|false}\r\n         * @public\r\n         */\r\n        this.plan =\r\n            metadata.plan != null || metadata.profile != null\r\n                ? new Plan((_b = metadata.plan) !== null && _b !== void 0 ? _b : metadata.profile)\r\n                : false;\r\n        /**\r\n         * This describes how the database did execute your query. This will contain detailed information about what\r\n         * each step of the plan did. Profiled query plan for the executed query if available, otherwise undefined.\r\n         * Will only be populated for queries that start with \"PROFILE\".\r\n         * @type {ProfiledPlan}\r\n         * @public\r\n         */\r\n        this.profile = metadata.profile != null ? new ProfiledPlan(metadata.profile) : false;\r\n        /**\r\n         * An array of notifications that might arise when executing the query. Notifications can be warnings about\r\n         * problematic queries or other valuable information that can be presented in a client. Unlike failures\r\n         * or errors, notifications do not affect the execution of a query.\r\n         * @type {Array<Notification>}\r\n         * @public\r\n         */\r\n        this.notifications = (0, notification_1.buildNotificationsFromMetadata)(metadata);\r\n        /**\r\n         * A list of GqlStatusObjects that arise when executing the query.\r\n         *\r\n         * The list always contains at least 1 status representing the Success, No Data or Omitted Result.\r\n         *\r\n         * When discarding records while connected to a non-gql aware server and using a RxSession,\r\n         * the driver might not be able to tell apart Success and No Data.\r\n         *\r\n         * All other status are notifications like warnings about problematic queries or other valuable\r\n         * information that can be presented in a client.\r\n         *\r\n         * The GqlStatusObjects will be presented in the following order:\r\n         *\r\n         * - A “no data” (02xxx) has precedence over a warning;\r\n         * - A warning (01xxx) has precedence over a success.\r\n         * - A success (00xxx) has precedence over anything informational (03xxx)\r\n         *\r\n         * @type {Array<GqlStatusObject>}\r\n         * @public\r\n         * @experimental\r\n         */\r\n        this.gqlStatusObjects = (0, notification_1.buildGqlStatusObjectFromMetadata)(metadata);\r\n        /**\r\n         * The basic information of the server where the result is obtained from.\r\n         * @type {ServerInfo}\r\n         * @public\r\n         */\r\n        this.server = new ServerInfo(metadata.server, protocolVersion);\r\n        /**\r\n         * The time it took the server to consume the result.\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.resultConsumedAfter = metadata.result_consumed_after;\r\n        /**\r\n         * The time it took the server to make the result available for consumption in milliseconds.\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.resultAvailableAfter = metadata.result_available_after;\r\n        /**\r\n         * The database name where this summary is obtained from.\r\n         * @type {{name: string}}\r\n         * @public\r\n         */\r\n        this.database = { name: (_c = metadata.db) !== null && _c !== void 0 ? _c : null };\r\n    }\r\n    /**\r\n     * Check if the result summary has a plan\r\n     * @return {boolean}\r\n     */\r\n    ResultSummary.prototype.hasPlan = function () {\r\n        return this.plan instanceof Plan;\r\n    };\r\n    /**\r\n     * Check if the result summary has a profile\r\n     * @return {boolean}\r\n     */\r\n    ResultSummary.prototype.hasProfile = function () {\r\n        return this.profile instanceof ProfiledPlan;\r\n    };\r\n    return ResultSummary;\r\n}());\r\n/**\r\n * Class for execution plan received by prepending Cypher with EXPLAIN.\r\n * @access public\r\n */\r\nvar Plan = /** @class */ (function () {\r\n    /**\r\n     * Create a Plan instance\r\n     * @constructor\r\n     * @param {Object} plan - Object with plan data\r\n     */\r\n    function Plan(plan) {\r\n        this.operatorType = plan.operatorType;\r\n        this.identifiers = plan.identifiers;\r\n        this.arguments = plan.args;\r\n        this.children = plan.children != null\r\n            ? plan.children.map(function (child) { return new Plan(child); })\r\n            : [];\r\n    }\r\n    return Plan;\r\n}());\r\nexports.Plan = Plan;\r\n/**\r\n * Class for execution plan received by prepending Cypher with PROFILE.\r\n * @access public\r\n */\r\nvar ProfiledPlan = /** @class */ (function () {\r\n    /**\r\n     * Create a ProfiledPlan instance\r\n     * @constructor\r\n     * @param {Object} profile - Object with profile data\r\n     */\r\n    function ProfiledPlan(profile) {\r\n        this.operatorType = profile.operatorType;\r\n        this.identifiers = profile.identifiers;\r\n        this.arguments = profile.args;\r\n        this.dbHits = valueOrDefault('dbHits', profile);\r\n        this.rows = valueOrDefault('rows', profile);\r\n        this.pageCacheMisses = valueOrDefault('pageCacheMisses', profile);\r\n        this.pageCacheHits = valueOrDefault('pageCacheHits', profile);\r\n        this.pageCacheHitRatio = valueOrDefault('pageCacheHitRatio', profile);\r\n        this.time = valueOrDefault('time', profile);\r\n        this.children = profile.children != null\r\n            ? profile.children.map(function (child) { return new ProfiledPlan(child); })\r\n            : [];\r\n    }\r\n    ProfiledPlan.prototype.hasPageCacheStats = function () {\r\n        return (this.pageCacheMisses > 0 ||\r\n            this.pageCacheHits > 0 ||\r\n            this.pageCacheHitRatio > 0);\r\n    };\r\n    return ProfiledPlan;\r\n}());\r\nexports.ProfiledPlan = ProfiledPlan;\r\n/**\r\n * Stats Query statistics dictionary for a {@link QueryStatistics}\r\n * @public\r\n */\r\nvar Stats = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     */\r\n    function Stats() {\r\n        /**\r\n         * nodes created\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.nodesCreated = 0;\r\n        /**\r\n         * nodes deleted\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.nodesDeleted = 0;\r\n        /**\r\n         * relationships created\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.relationshipsCreated = 0;\r\n        /**\r\n         * relationships deleted\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.relationshipsDeleted = 0;\r\n        /**\r\n         * properties set\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.propertiesSet = 0;\r\n        /**\r\n         * labels added\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.labelsAdded = 0;\r\n        /**\r\n         * labels removed\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.labelsRemoved = 0;\r\n        /**\r\n         * indexes added\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.indexesAdded = 0;\r\n        /**\r\n         * indexes removed\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.indexesRemoved = 0;\r\n        /**\r\n         * constraints added\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.constraintsAdded = 0;\r\n        /**\r\n         * constraints removed\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.constraintsRemoved = 0;\r\n    }\r\n    return Stats;\r\n}());\r\nexports.Stats = Stats;\r\n/**\r\n * Get statistical information for a {@link Result}.\r\n * @access public\r\n */\r\nvar QueryStatistics = /** @class */ (function () {\r\n    /**\r\n     * Structurize the statistics\r\n     * @constructor\r\n     * @param {Object} statistics - Result statistics\r\n     */\r\n    function QueryStatistics(statistics) {\r\n        var _this = this;\r\n        this._stats = {\r\n            nodesCreated: 0,\r\n            nodesDeleted: 0,\r\n            relationshipsCreated: 0,\r\n            relationshipsDeleted: 0,\r\n            propertiesSet: 0,\r\n            labelsAdded: 0,\r\n            labelsRemoved: 0,\r\n            indexesAdded: 0,\r\n            indexesRemoved: 0,\r\n            constraintsAdded: 0,\r\n            constraintsRemoved: 0\r\n        };\r\n        this._systemUpdates = 0;\r\n        Object.keys(statistics).forEach(function (index) {\r\n            // To camelCase\r\n            var camelCaseIndex = index.replace(/(-\\w)/g, function (m) { return m[1].toUpperCase(); });\r\n            if (camelCaseIndex in _this._stats) {\r\n                _this._stats[camelCaseIndex] = internal_1.util.toNumber(statistics[index]);\r\n            }\r\n            else if (camelCaseIndex === 'systemUpdates') {\r\n                _this._systemUpdates = internal_1.util.toNumber(statistics[index]);\r\n            }\r\n            else if (camelCaseIndex === 'containsSystemUpdates') {\r\n                _this._containsSystemUpdates = statistics[index];\r\n            }\r\n            else if (camelCaseIndex === 'containsUpdates') {\r\n                _this._containsUpdates = statistics[index];\r\n            }\r\n        });\r\n        this._stats = Object.freeze(this._stats);\r\n    }\r\n    /**\r\n     * Did the database get updated?\r\n     * @return {boolean}\r\n     */\r\n    QueryStatistics.prototype.containsUpdates = function () {\r\n        var _this = this;\r\n        return this._containsUpdates !== undefined\r\n            ? this._containsUpdates\r\n            : (Object.keys(this._stats).reduce(function (last, current) {\r\n                return last + _this._stats[current];\r\n            }, 0) > 0);\r\n    };\r\n    /**\r\n     * Returns the query statistics updates in a dictionary.\r\n     * @returns {Stats}\r\n     */\r\n    QueryStatistics.prototype.updates = function () {\r\n        return this._stats;\r\n    };\r\n    /**\r\n     * Return true if the system database get updated, otherwise false\r\n     * @returns {boolean} - If the system database get updated or not.\r\n     */\r\n    QueryStatistics.prototype.containsSystemUpdates = function () {\r\n        return this._containsSystemUpdates !== undefined\r\n            ? this._containsSystemUpdates\r\n            : this._systemUpdates > 0;\r\n    };\r\n    /**\r\n     * @returns {number} - Number of system updates\r\n     */\r\n    QueryStatistics.prototype.systemUpdates = function () {\r\n        return this._systemUpdates;\r\n    };\r\n    return QueryStatistics;\r\n}());\r\nexports.QueryStatistics = QueryStatistics;\r\n/**\r\n * Class for exposing server info from a result.\r\n * @access public\r\n */\r\nvar ServerInfo = /** @class */ (function () {\r\n    /**\r\n     * Create a ServerInfo instance\r\n     * @constructor\r\n     * @param {Object} serverMeta - Object with serverMeta data\r\n     * @param {Object} connectionInfo - Bolt connection info\r\n     * @param {number} protocolVersion - Bolt Protocol Version\r\n     */\r\n    function ServerInfo(serverMeta, protocolVersion) {\r\n        if (serverMeta != null) {\r\n            /**\r\n             * The server adress\r\n             * @type {string}\r\n             * @public\r\n             */\r\n            this.address = serverMeta.address;\r\n            /**\r\n             * The server user agent string\r\n             * @type {string}\r\n             * @public\r\n             */\r\n            this.agent = serverMeta.version;\r\n        }\r\n        /**\r\n         * The protocol version used by the connection\r\n         * @type {number}\r\n         * @public\r\n         */\r\n        this.protocolVersion = protocolVersion;\r\n    }\r\n    return ServerInfo;\r\n}());\r\nexports.ServerInfo = ServerInfo;\r\nfunction valueOrDefault(key, values, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = 0; }\r\n    if (values !== false && key in values) {\r\n        var value = values[key];\r\n        return internal_1.util.toNumber(value);\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\n/**\r\n * The constants for query types\r\n * @type {{SCHEMA_WRITE: string, WRITE_ONLY: string, READ_ONLY: string, READ_WRITE: string}}\r\n */\r\nvar queryType = {\r\n    READ_ONLY: 'r',\r\n    READ_WRITE: 'rw',\r\n    WRITE_ONLY: 'w',\r\n    SCHEMA_WRITE: 's'\r\n};\r\nexports.queryType = queryType;\r\nexports.default = ResultSummary;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.notificationFilterDisabledClassification = exports.notificationFilterDisabledCategory = exports.notificationFilterMinimumSeverityLevel = void 0;\r\n/**\r\n * @typedef {'WARNING' | 'INFORMATION' | 'OFF'} NotificationFilterMinimumSeverityLevel\r\n */\r\n/**\r\n * Constants that represents the minimum Severity level in the {@link NotificationFilter}\r\n */\r\nvar notificationFilterMinimumSeverityLevel = {\r\n    OFF: 'OFF',\r\n    WARNING: 'WARNING',\r\n    INFORMATION: 'INFORMATION'\r\n};\r\nexports.notificationFilterMinimumSeverityLevel = notificationFilterMinimumSeverityLevel;\r\nObject.freeze(notificationFilterMinimumSeverityLevel);\r\n/**\r\n * @typedef {'HINT' | 'UNRECOGNIZED' | 'UNSUPPORTED' |'PERFORMANCE' | 'TOPOLOGY' | 'SECURITY' | 'DEPRECATION' | 'GENERIC' | 'SCHEMA'} NotificationFilterDisabledCategory\r\n */\r\n/**\r\n * Constants that represents the disabled categories in the {@link NotificationFilter}\r\n */\r\nvar notificationFilterDisabledCategory = {\r\n    HINT: 'HINT',\r\n    UNRECOGNIZED: 'UNRECOGNIZED',\r\n    UNSUPPORTED: 'UNSUPPORTED',\r\n    PERFORMANCE: 'PERFORMANCE',\r\n    TOPOLOGY: 'TOPOLOGY',\r\n    SECURITY: 'SECURITY',\r\n    DEPRECATION: 'DEPRECATION',\r\n    GENERIC: 'GENERIC',\r\n    SCHEMA: 'SCHEMA'\r\n};\r\nexports.notificationFilterDisabledCategory = notificationFilterDisabledCategory;\r\nObject.freeze(notificationFilterDisabledCategory);\r\n/**\r\n * @typedef {NotificationFilterDisabledCategory} NotificationFilterDisabledClassification\r\n * @experimental\r\n */\r\n/**\r\n * Constants that represents the disabled classifications in the {@link NotificationFilter}\r\n *\r\n * @type {notificationFilterDisabledCategory}\r\n * @experimental\r\n */\r\nvar notificationFilterDisabledClassification = notificationFilterDisabledCategory;\r\nexports.notificationFilterDisabledClassification = notificationFilterDisabledClassification;\r\n/**\r\n * The notification filter object which can be configured in\r\n * the session and driver creation.\r\n *\r\n * Values not defined are interpreted as default.\r\n *\r\n * @interface\r\n */\r\nvar NotificationFilter = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     */\r\n    function NotificationFilter() {\r\n        /**\r\n         * The minimum level of all notifications to receive.\r\n         *\r\n         * @public\r\n         * @type {?NotificationFilterMinimumSeverityLevel}\r\n         */\r\n        this.minimumSeverityLevel = undefined;\r\n        /**\r\n         * Categories the user would like to opt-out of receiving.\r\n         *\r\n         *\r\n         * This property is equivalent to {@link NotificationFilter#disabledClassifications}\r\n         * and it must not be enabled at same time.\r\n         *\r\n         * @type {?NotificationFilterDisabledCategory[]}\r\n         */\r\n        this.disabledCategories = undefined;\r\n        /**\r\n         * Classifications the user would like to opt-out of receiving.\r\n         *\r\n         * This property is equivalent to {@link NotificationFilter#disabledCategories}\r\n         * and it must not be enabled at same time.\r\n         *\r\n         * @type {?NotificationFilterDisabledClassification[]}\r\n         * @experimental\r\n         */\r\n        this.disabledClassifications = undefined;\r\n        throw new Error('Not implemented');\r\n    }\r\n    return NotificationFilter;\r\n}());\r\nexports.default = NotificationFilter;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar result_summary_1 = __importDefault(require(\"./result-summary\"));\r\nvar internal_1 = require(\"./internal\");\r\nvar error_1 = require(\"./error\");\r\nvar EMPTY_CONNECTION_HOLDER = internal_1.connectionHolder.EMPTY_CONNECTION_HOLDER;\r\n/**\r\n * @private\r\n * @param {Error} error The error\r\n * @returns {void}\r\n */\r\nvar DEFAULT_ON_ERROR = function (error) {\r\n    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands, @typescript-eslint/no-base-to-string\r\n    console.log('Uncaught error when processing result: ' + error);\r\n};\r\n/**\r\n * @private\r\n * @param {ResultSummary} summary\r\n * @returns {void}\r\n */\r\nvar DEFAULT_ON_COMPLETED = function (summary) { };\r\n/**\r\n * @private\r\n * @param {string[]} keys List of keys of the record in the result\r\n * @return {void}\r\n */\r\nvar DEFAULT_ON_KEYS = function (keys) { };\r\n/**\r\n * A stream of {@link Record} representing the result of a query.\r\n * Can be consumed eagerly as {@link Promise} resolved with array of records and {@link ResultSummary}\r\n * summary, or rejected with error that contains {@link string} code and {@link string} message.\r\n * Alternatively can be consumed lazily using {@link Result#subscribe} function.\r\n * @access public\r\n */\r\nvar Result = /** @class */ (function () {\r\n    /**\r\n     * Inject the observer to be used.\r\n     * @constructor\r\n     * @access private\r\n     * @param {Promise<observer.ResultStreamObserver>} streamObserverPromise\r\n     * @param {mixed} query - Cypher query to execute\r\n     * @param {Object} parameters - Map with parameters to use in query\r\n     * @param {ConnectionHolder} connectionHolder - to be notified when result is either fully consumed or error happened.\r\n     */\r\n    function Result(streamObserverPromise, query, parameters, connectionHolder, watermarks) {\r\n        if (watermarks === void 0) { watermarks = { high: Number.MAX_VALUE, low: Number.MAX_VALUE }; }\r\n        /**\r\n         * Called when finally the result is done\r\n         *\r\n         * *Should not be combined with {@link Result#subscribe} function.*\r\n         * @param {function()|null} onfinally - function when the promise finished\r\n         * @return {Promise} promise.\r\n         */\r\n        this[_a] = 'Result';\r\n        this._stack = captureStacktrace();\r\n        this._streamObserverPromise = streamObserverPromise;\r\n        this._p = null;\r\n        this._query = query;\r\n        this._parameters = parameters !== null && parameters !== void 0 ? parameters : {};\r\n        this._connectionHolder = connectionHolder !== null && connectionHolder !== void 0 ? connectionHolder : EMPTY_CONNECTION_HOLDER;\r\n        this._keys = null;\r\n        this._summary = null;\r\n        this._error = null;\r\n        this._watermarks = watermarks;\r\n    }\r\n    /**\r\n     * Returns a promise for the field keys.\r\n     *\r\n     * *Should not be combined with {@link Result#subscribe} function.*\r\n     *\r\n     * @public\r\n     * @returns {Promise<string[]>} - Field keys, in the order they will appear in records.\r\n     }\r\n     */\r\n    Result.prototype.keys = function () {\r\n        var _this = this;\r\n        if (this._keys !== null) {\r\n            return Promise.resolve(this._keys);\r\n        }\r\n        else if (this._error !== null) {\r\n            return Promise.reject(this._error);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            _this._streamObserverPromise\r\n                .then(function (observer) {\r\n                return observer.subscribe(_this._decorateObserver({\r\n                    onKeys: function (keys) { return resolve(keys); },\r\n                    onError: function (err) { return reject(err); }\r\n                }));\r\n            })\r\n                .catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Returns a promise for the result summary.\r\n     *\r\n     * *Should not be combined with {@link Result#subscribe} function.*\r\n     *\r\n     * @public\r\n     * @returns {Promise<ResultSummary<T>>} - Result summary.\r\n     *\r\n     */\r\n    Result.prototype.summary = function () {\r\n        var _this = this;\r\n        if (this._summary !== null) {\r\n            // This type casting is needed since we are defining the number type of\r\n            // summary in Result template\r\n            return Promise.resolve(this._summary);\r\n        }\r\n        else if (this._error !== null) {\r\n            return Promise.reject(this._error);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            _this._streamObserverPromise\r\n                .then(function (o) {\r\n                o.cancel();\r\n                o.subscribe(_this._decorateObserver({\r\n                    // This type casting is needed since we are defining the number type of\r\n                    // summary in Result template\r\n                    onCompleted: function (summary) { return resolve(summary); },\r\n                    onError: function (err) { return reject(err); }\r\n                }));\r\n            })\r\n                .catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Create and return new Promise\r\n     *\r\n     * @private\r\n     * @return {Promise} new Promise.\r\n     */\r\n    Result.prototype._getOrCreatePromise = function () {\r\n        var _this = this;\r\n        if (this._p == null) {\r\n            this._p = new Promise(function (resolve, reject) {\r\n                var records = [];\r\n                var observer = {\r\n                    onNext: function (record) {\r\n                        records.push(record);\r\n                    },\r\n                    onCompleted: function (summary) {\r\n                        resolve({ records: records, summary: summary });\r\n                    },\r\n                    onError: function (error) {\r\n                        reject(error);\r\n                    }\r\n                };\r\n                _this.subscribe(observer);\r\n            });\r\n        }\r\n        return this._p;\r\n    };\r\n    /**\r\n     * Provides a async iterator over the records in the result.\r\n     *\r\n     * *Should not be combined with {@link Result#subscribe} or ${@link Result#then} functions.*\r\n     *\r\n     * @public\r\n     * @returns {PeekableAsyncIterator<Record<R>, ResultSummary>} The async iterator for the Results\r\n     */\r\n    Result.prototype[Symbol.asyncIterator] = function () {\r\n        var _this = this;\r\n        if (!this.isOpen()) {\r\n            var error_2 = (0, error_1.newError)('Result is already consumed');\r\n            return {\r\n                next: function () { return Promise.reject(error_2); },\r\n                peek: function () { return Promise.reject(error_2); }\r\n            };\r\n        }\r\n        var state = { paused: true, firstRun: true, finished: false };\r\n        var controlFlow = function () {\r\n            var _b, _c;\r\n            if (state.streaming == null) {\r\n                return;\r\n            }\r\n            var size = (_c = (_b = state.queuedObserver) === null || _b === void 0 ? void 0 : _b.size) !== null && _c !== void 0 ? _c : 0;\r\n            var queueSizeIsOverHighOrEqualWatermark = size >= _this._watermarks.high;\r\n            var queueSizeIsBellowOrEqualLowWatermark = size <= _this._watermarks.low;\r\n            if (queueSizeIsOverHighOrEqualWatermark && !state.paused) {\r\n                state.paused = true;\r\n                state.streaming.pause();\r\n            }\r\n            else if ((queueSizeIsBellowOrEqualLowWatermark && state.paused) || (state.firstRun && !queueSizeIsOverHighOrEqualWatermark)) {\r\n                state.firstRun = false;\r\n                state.paused = false;\r\n                state.streaming.resume();\r\n            }\r\n        };\r\n        var initializeObserver = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (!(state.queuedObserver === undefined)) return [3 /*break*/, 2];\r\n                        state.queuedObserver = this._createQueuedResultObserver(controlFlow);\r\n                        _b = state;\r\n                        return [4 /*yield*/, this._subscribe(state.queuedObserver, true).catch(function () { return undefined; })];\r\n                    case 1:\r\n                        _b.streaming = _c.sent();\r\n                        controlFlow();\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/, state.queuedObserver];\r\n                }\r\n            });\r\n        }); };\r\n        var assertSummary = function (summary) {\r\n            if (summary === undefined) {\r\n                throw (0, error_1.newError)('InvalidState: Result stream finished without Summary', error_1.PROTOCOL_ERROR);\r\n            }\r\n            return true;\r\n        };\r\n        return {\r\n            next: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var queuedObserver, next;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            if (state.finished) {\r\n                                if (assertSummary(state.summary)) {\r\n                                    return [2 /*return*/, { done: true, value: state.summary }];\r\n                                }\r\n                            }\r\n                            return [4 /*yield*/, initializeObserver()];\r\n                        case 1:\r\n                            queuedObserver = _b.sent();\r\n                            return [4 /*yield*/, queuedObserver.dequeue()];\r\n                        case 2:\r\n                            next = _b.sent();\r\n                            if (next.done === true) {\r\n                                state.finished = next.done;\r\n                                state.summary = next.value;\r\n                            }\r\n                            return [2 /*return*/, next];\r\n                    }\r\n                });\r\n            }); },\r\n            return: function (value) { return __awaiter(_this, void 0, void 0, function () {\r\n                var queuedObserver, last;\r\n                var _b;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            if (state.finished) {\r\n                                if (assertSummary(state.summary)) {\r\n                                    return [2 /*return*/, { done: true, value: value !== null && value !== void 0 ? value : state.summary }];\r\n                                }\r\n                            }\r\n                            (_b = state.streaming) === null || _b === void 0 ? void 0 : _b.cancel();\r\n                            return [4 /*yield*/, initializeObserver()];\r\n                        case 1:\r\n                            queuedObserver = _c.sent();\r\n                            return [4 /*yield*/, queuedObserver.dequeueUntilDone()];\r\n                        case 2:\r\n                            last = _c.sent();\r\n                            state.finished = true;\r\n                            last.value = value !== null && value !== void 0 ? value : last.value;\r\n                            state.summary = last.value;\r\n                            return [2 /*return*/, last];\r\n                    }\r\n                });\r\n            }); },\r\n            peek: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var queuedObserver;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            if (state.finished) {\r\n                                if (assertSummary(state.summary)) {\r\n                                    return [2 /*return*/, { done: true, value: state.summary }];\r\n                                }\r\n                            }\r\n                            return [4 /*yield*/, initializeObserver()];\r\n                        case 1:\r\n                            queuedObserver = _b.sent();\r\n                            return [4 /*yield*/, queuedObserver.head()];\r\n                        case 2: return [2 /*return*/, _b.sent()];\r\n                    }\r\n                });\r\n            }); }\r\n        };\r\n    };\r\n    /**\r\n     * Waits for all results and calls the passed in function with the results.\r\n     *\r\n     * *Should not be combined with {@link Result#subscribe} function.*\r\n     *\r\n     * @param {function(result: {records:Array<Record>, summary: ResultSummary})} onFulfilled - function to be called\r\n     * when finished.\r\n     * @param {function(error: {message:string, code:string})} onRejected - function to be called upon errors.\r\n     * @return {Promise} promise.\r\n     */\r\n    Result.prototype.then = function (onFulfilled, onRejected) {\r\n        return this._getOrCreatePromise().then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Catch errors when using promises.\r\n     *\r\n     * *Should not be combined with {@link Result#subscribe} function.*\r\n     *\r\n     * @param {function(error: Neo4jError)} onRejected - Function to be called upon errors.\r\n     * @return {Promise} promise.\r\n     */\r\n    Result.prototype.catch = function (onRejected) {\r\n        return this._getOrCreatePromise().catch(onRejected);\r\n    };\r\n    Result.prototype.finally = function (onfinally) {\r\n        return this._getOrCreatePromise().finally(onfinally);\r\n    };\r\n    /**\r\n     * Stream records to observer as they come in, this is a more efficient method\r\n     * of handling the results, and allows you to handle arbitrarily large results.\r\n     *\r\n     * @param {Object} observer - Observer object\r\n     * @param {function(keys: string[])} observer.onKeys - handle stream head, the field keys.\r\n     * @param {function(record: Record)} observer.onNext - handle records, one by one.\r\n     * @param {function(summary: ResultSummary)} observer.onCompleted - handle stream tail, the result summary.\r\n     * @param {function(error: {message:string, code:string})} observer.onError - handle errors.\r\n     * @return {void}\r\n     */\r\n    Result.prototype.subscribe = function (observer) {\r\n        this._subscribe(observer)\r\n            .catch(function () { });\r\n    };\r\n    /**\r\n     * Check if this result is active, i.e., neither a summary nor an error has been received by the result.\r\n     * @return {boolean} `true` when neither a summary or nor an error has been received by the result.\r\n     */\r\n    Result.prototype.isOpen = function () {\r\n        return this._summary === null && this._error === null;\r\n    };\r\n    /**\r\n     * Stream records to observer as they come in, this is a more efficient method\r\n     * of handling the results, and allows you to handle arbitrarily large results.\r\n     *\r\n     * @access private\r\n     * @param {ResultObserver} observer The observer to send records to.\r\n     * @param {boolean} paused The flag to indicate if the stream should be started paused\r\n     * @returns {Promise<observer.ResultStreamObserver>} The result stream observer.\r\n     */\r\n    Result.prototype._subscribe = function (observer, paused) {\r\n        if (paused === void 0) { paused = false; }\r\n        var _observer = this._decorateObserver(observer);\r\n        return this._streamObserverPromise\r\n            .then(function (o) {\r\n            if (paused) {\r\n                o.pause();\r\n            }\r\n            o.subscribe(_observer);\r\n            return o;\r\n        })\r\n            .catch(function (error) {\r\n            if (_observer.onError != null) {\r\n                _observer.onError(error);\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n    };\r\n    /**\r\n     * Decorates the ResultObserver with the necessary methods.\r\n     *\r\n     * @access private\r\n     * @param {ResultObserver} observer The ResultObserver to decorate.\r\n     * @returns The decorated result observer\r\n     */\r\n    Result.prototype._decorateObserver = function (observer) {\r\n        var _this = this;\r\n        var _b, _c, _d;\r\n        var onCompletedOriginal = (_b = observer.onCompleted) !== null && _b !== void 0 ? _b : DEFAULT_ON_COMPLETED;\r\n        var onErrorOriginal = (_c = observer.onError) !== null && _c !== void 0 ? _c : DEFAULT_ON_ERROR;\r\n        var onKeysOriginal = (_d = observer.onKeys) !== null && _d !== void 0 ? _d : DEFAULT_ON_KEYS;\r\n        var onCompletedWrapper = function (metadata) {\r\n            _this._releaseConnectionAndGetSummary(metadata).then(function (summary) {\r\n                if (_this._summary !== null) {\r\n                    return onCompletedOriginal.call(observer, _this._summary);\r\n                }\r\n                _this._summary = summary;\r\n                return onCompletedOriginal.call(observer, summary);\r\n            }).catch(onErrorOriginal);\r\n        };\r\n        var onErrorWrapper = function (error) {\r\n            // notify connection holder that the used connection is not needed any more because error happened\r\n            // and result can't bee consumed any further; call the original onError callback after that\r\n            _this._connectionHolder.releaseConnection().then(function () {\r\n                replaceStacktrace(error, _this._stack);\r\n                _this._error = error;\r\n                onErrorOriginal.call(observer, error);\r\n            }).catch(onErrorOriginal);\r\n        };\r\n        var onKeysWrapper = function (keys) {\r\n            _this._keys = keys;\r\n            return onKeysOriginal.call(observer, keys);\r\n        };\r\n        return {\r\n            onNext: (observer.onNext != null) ? observer.onNext.bind(observer) : undefined,\r\n            onKeys: onKeysWrapper,\r\n            onCompleted: onCompletedWrapper,\r\n            onError: onErrorWrapper\r\n        };\r\n    };\r\n    /**\r\n     * Signals the stream observer that the future records should be discarded on the server.\r\n     *\r\n     * @protected\r\n     * @since 4.0.0\r\n     * @returns {void}\r\n     */\r\n    Result.prototype._cancel = function () {\r\n        if (this._summary === null && this._error === null) {\r\n            this._streamObserverPromise.then(function (o) { return o.cancel(); })\r\n                .catch(function () { });\r\n        }\r\n    };\r\n    /**\r\n     * @access private\r\n     * @param metadata\r\n     * @returns\r\n     */\r\n    Result.prototype._releaseConnectionAndGetSummary = function (metadata) {\r\n        var _b = internal_1.util.validateQueryAndParameters(this._query, this._parameters, {\r\n            skipAsserts: true\r\n        }), query = _b.validatedQuery, parameters = _b.params;\r\n        var connectionHolder = this._connectionHolder;\r\n        return connectionHolder\r\n            .getConnection()\r\n            .then(\r\n        // onFulfilled:\r\n        function (connection) {\r\n            return connectionHolder\r\n                .releaseConnection()\r\n                .then(function () {\r\n                return connection === null || connection === void 0 ? void 0 : connection.getProtocolVersion();\r\n            });\r\n        }, \r\n        // onRejected:\r\n        function (_) { return undefined; })\r\n            .then(function (protocolVersion) {\r\n            return new result_summary_1.default(query, parameters, metadata, protocolVersion);\r\n        });\r\n    };\r\n    /**\r\n     * @access private\r\n     */\r\n    Result.prototype._createQueuedResultObserver = function (onQueueSizeChanged) {\r\n        var _this = this;\r\n        function createResolvablePromise() {\r\n            var resolvablePromise = {};\r\n            resolvablePromise.promise = new Promise(function (resolve, reject) {\r\n                resolvablePromise.resolve = resolve;\r\n                resolvablePromise.reject = reject;\r\n            });\r\n            return resolvablePromise;\r\n        }\r\n        function isError(elementOrError) {\r\n            return elementOrError instanceof Error;\r\n        }\r\n        function dequeue() {\r\n            var _b;\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var element;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            if (buffer.length > 0) {\r\n                                element = (_b = buffer.shift()) !== null && _b !== void 0 ? _b : (0, error_1.newError)('Unexpected empty buffer', error_1.PROTOCOL_ERROR);\r\n                                onQueueSizeChanged();\r\n                                if (isError(element)) {\r\n                                    throw element;\r\n                                }\r\n                                return [2 /*return*/, element];\r\n                            }\r\n                            promiseHolder.resolvable = createResolvablePromise();\r\n                            return [4 /*yield*/, promiseHolder.resolvable.promise];\r\n                        case 1: return [2 /*return*/, _c.sent()];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        var buffer = [];\r\n        var promiseHolder = { resolvable: null };\r\n        var observer = {\r\n            onNext: function (record) {\r\n                observer._push({ done: false, value: record });\r\n            },\r\n            onCompleted: function (summary) {\r\n                observer._push({ done: true, value: summary });\r\n            },\r\n            onError: function (error) {\r\n                observer._push(error);\r\n            },\r\n            _push: function (element) {\r\n                if (promiseHolder.resolvable !== null) {\r\n                    var resolvable = promiseHolder.resolvable;\r\n                    promiseHolder.resolvable = null;\r\n                    if (isError(element)) {\r\n                        resolvable.reject(element);\r\n                    }\r\n                    else {\r\n                        resolvable.resolve(element);\r\n                    }\r\n                }\r\n                else {\r\n                    buffer.push(element);\r\n                    onQueueSizeChanged();\r\n                }\r\n            },\r\n            dequeue: dequeue,\r\n            dequeueUntilDone: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var element;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            if (!true) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, dequeue()];\r\n                        case 1:\r\n                            element = _b.sent();\r\n                            if (element.done === true) {\r\n                                return [2 /*return*/, element];\r\n                            }\r\n                            return [3 /*break*/, 0];\r\n                        case 2: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            head: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var element, element, error_3;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            if (buffer.length > 0) {\r\n                                element = buffer[0];\r\n                                if (isError(element)) {\r\n                                    throw element;\r\n                                }\r\n                                return [2 /*return*/, element];\r\n                            }\r\n                            promiseHolder.resolvable = createResolvablePromise();\r\n                            _b.label = 1;\r\n                        case 1:\r\n                            _b.trys.push([1, 3, 4, 5]);\r\n                            return [4 /*yield*/, promiseHolder.resolvable.promise];\r\n                        case 2:\r\n                            element = _b.sent();\r\n                            buffer.unshift(element);\r\n                            return [2 /*return*/, element];\r\n                        case 3:\r\n                            error_3 = _b.sent();\r\n                            buffer.unshift(error_3);\r\n                            throw error_3;\r\n                        case 4:\r\n                            onQueueSizeChanged();\r\n                            return [7 /*endfinally*/];\r\n                        case 5: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            get size() {\r\n                return buffer.length;\r\n            }\r\n        };\r\n        return observer;\r\n    };\r\n    return Result;\r\n}());\r\n_a = Symbol.toStringTag;\r\nfunction captureStacktrace() {\r\n    var error = new Error('');\r\n    if (error.stack != null) {\r\n        return error.stack.replace(/^Error(\\n\\r)*/, ''); // we don't need the 'Error\\n' part, if only it exists\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @private\r\n * @param {Error} error The error\r\n * @param {string| null} newStack The newStack\r\n * @returns {void}\r\n */\r\nfunction replaceStacktrace(error, newStack) {\r\n    if (newStack != null) {\r\n        // Error.prototype.toString() concatenates error.name and error.message nicely\r\n        // then we add the rest of the stack trace\r\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\r\n        error.stack = error.toString() + '\\n' + newStack;\r\n    }\r\n}\r\nexports.default = Result;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Represents the fully streamed result\r\n */\r\nvar EagerResult = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     * @param {string[]} keys The records keys\r\n     * @param {Record[]} records The resulted records\r\n     * @param {ResultSummary[]} summary The result Summary\r\n     */\r\n    function EagerResult(keys, records, summary) {\r\n        /**\r\n         * Field keys, in the order the fields appear in the records.\r\n         * @type {string[]}\r\n         */\r\n        this.keys = keys;\r\n        /**\r\n         * Field records, in the order the records arrived from the server.\r\n         * @type {Record[]}\r\n         */\r\n        this.records = records;\r\n        /**\r\n         * Field summary\r\n         * @type {ResultSummary}\r\n         */\r\n        this.summary = summary;\r\n    }\r\n    return EagerResult;\r\n}());\r\nexports.default = EagerResult;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Releasable = void 0;\r\n/**\r\n * Interface define a releasable resource shape\r\n *\r\n * @private\r\n * @interface\r\n */\r\nvar Releasable = /** @class */ (function () {\r\n    function Releasable() {\r\n    }\r\n    /**\r\n     * @returns {Promise<void>}\r\n     */\r\n    Releasable.prototype.release = function () {\r\n        throw new Error('Not implemented');\r\n    };\r\n    return Releasable;\r\n}());\r\nexports.Releasable = Releasable;\r\n/**\r\n * Interface define a common way to acquire a connection\r\n *\r\n * @private\r\n */\r\nvar ConnectionProvider = /** @class */ (function () {\r\n    function ConnectionProvider() {\r\n    }\r\n    /**\r\n     * This method acquires a connection against the specified database.\r\n     *\r\n     * Access mode and Bookmarks only applies to routing driver. Access mode only\r\n     * differentiates the target server for the connection, where WRITE selects a\r\n     * WRITER server, whereas READ selects a READ server. Bookmarks, when specified,\r\n     * is only passed to the routing discovery procedure, for the system database to\r\n     * synchronize on creation of databases and is never used in direct drivers.\r\n     *\r\n     * @param {object} param - object parameter\r\n     * @property {string} param.accessMode - the access mode for the to-be-acquired connection\r\n     * @property {string} param.database - the target database for the to-be-acquired connection\r\n     * @property {Bookmarks} param.bookmarks - the bookmarks to send to routing discovery\r\n     * @property {string} param.impersonatedUser - the impersonated user\r\n     * @property {function (databaseName:string?)} param.onDatabaseNameResolved - Callback called when the database name get resolved\r\n     * @returns {Promise<Connection>}\r\n     */\r\n    ConnectionProvider.prototype.acquireConnection = function (param) {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * This method checks whether the backend database supports multi database functionality\r\n     * by checking protocol handshake result.\r\n     *\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    ConnectionProvider.prototype.supportsMultiDb = function () {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * This method checks whether the backend database supports transaction config functionality\r\n     * by checking protocol handshake result.\r\n     *\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    ConnectionProvider.prototype.supportsTransactionConfig = function () {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * This method checks whether the backend database supports transaction config functionality\r\n     * by checking protocol handshake result.\r\n     *\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    ConnectionProvider.prototype.supportsUserImpersonation = function () {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * This method checks whether the driver session re-auth functionality\r\n     * by checking protocol handshake result\r\n     *\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    ConnectionProvider.prototype.supportsSessionAuth = function () {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * This method verifies the connectivity of the database by trying to acquire a connection\r\n     * for each server available in the cluster.\r\n     *\r\n     * @param {object} param - object parameter\r\n     * @property {string} param.database - the target database for the to-be-acquired connection\r\n     * @property {string} param.accessMode - the access mode for the to-be-acquired connection\r\n     *\r\n     * @returns {Promise<ServerInfo>} promise resolved with server info or rejected with error.\r\n     */\r\n    ConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (param) {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * This method verifies the authorization credentials work by trying to acquire a connection\r\n     * to one of the servers with the given credentials.\r\n     *\r\n     * @param {object} param - object parameter\r\n     * @property {AuthToken} param.auth - the target auth for the to-be-acquired connection\r\n     * @property {string} param.database - the target database for the to-be-acquired connection\r\n     * @property {string} param.accessMode - the access mode for the to-be-acquired connection\r\n     *\r\n     * @returns {Promise<boolean>} promise resolved with true if succeed, false if failed with\r\n     *  authentication issue and rejected with error if non-authentication error happens.\r\n     */\r\n    ConnectionProvider.prototype.verifyAuthentication = function (param) {\r\n        throw Error('Not implemented');\r\n    };\r\n    /**\r\n     * Returns the protocol version negotiated via handshake.\r\n     *\r\n     * Note that this function call _always_ causes a round-trip to the server.\r\n     *\r\n     * @returns {Promise<number>} the protocol version negotiated via handshake.\r\n     * @throws {Error} When protocol negotiation fails\r\n     */\r\n    ConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\r\n        throw Error('Not Implemented');\r\n    };\r\n    /**\r\n     * Closes this connection provider along with its internals (connections, pools, etc.)\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    ConnectionProvider.prototype.close = function () {\r\n        throw Error('Not implemented');\r\n    };\r\n    return ConnectionProvider;\r\n}());\r\nexports.default = ConnectionProvider;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n*/\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Interface which defines a connection for the core driver object.\r\n *\r\n *\r\n * This connection exposes only methods used by the code module.\r\n * Methods with connection implementation details can be defined and used\r\n * by the implementation layer.\r\n *\r\n * @private\r\n * @interface\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    function Connection() {\r\n    }\r\n    /**\r\n     *\r\n     * @param config\r\n     * @returns {ResultStreamObserver}\r\n     */\r\n    Connection.prototype.beginTransaction = function (config) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @param query\r\n     * @param parameters\r\n     * @param config\r\n     * @returns {ResultStreamObserver}\r\n     */\r\n    Connection.prototype.run = function (query, parameters, config) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @param config\r\n     * @returns {ResultStreamObserver}\r\n     */\r\n    Connection.prototype.commitTransaction = function (config) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @param config\r\n     * @returns {ResultStreamObserver}\r\n     */\r\n    Connection.prototype.rollbackTransaction = function (config) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @returns {Promise<void>}\r\n     */\r\n    Connection.prototype.resetAndFlush = function () {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    Connection.prototype.isOpen = function () {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @returns {number}\r\n     */\r\n    Connection.prototype.getProtocolVersion = function () {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    Connection.prototype.hasOngoingObservableRequests = function () {\r\n        throw new Error('Not implemented');\r\n    };\r\n    return Connection;\r\n}());\r\nexports.default = Connection;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar util_1 = require(\"./internal/util\");\r\nvar connection_holder_1 = require(\"./internal/connection-holder\");\r\nvar bookmarks_1 = require(\"./internal/bookmarks\");\r\nvar tx_config_1 = require(\"./internal/tx-config\");\r\nvar observers_1 = require(\"./internal/observers\");\r\nvar error_1 = require(\"./error\");\r\nvar result_1 = __importDefault(require(\"./result\"));\r\n/**\r\n * Represents a transaction in the Neo4j database.\r\n *\r\n * @access public\r\n */\r\nvar Transaction = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {object} args\r\n     * @param {ConnectionHolder} args.connectionHolder - the connection holder to get connection from.\r\n     * @param {function()} args.onClose - Function to be called when transaction is committed or rolled back.\r\n     * @param {function(bookmarks: Bookmarks)} args.onBookmarks callback invoked when new bookmark is produced.\r\n     * @param {function()} args.onConnection - Function to be called when a connection is obtained to ensure the conneciton\r\n     * is not yet released.\r\n     * @param {boolean} args.reactive whether this transaction generates reactive streams\r\n     * @param {number} args.fetchSize - the record fetch size in each pulling batch.\r\n     * @param {string} args.impersonatedUser - The name of the user which should be impersonated for the duration of the session.\r\n     * @param {number} args.highRecordWatermark - The high watermark for the record buffer.\r\n     * @param {number} args.lowRecordWatermark - The low watermark for the record buffer.\r\n     * @param {NotificationFilter} args.notificationFilter - The notification filter used for this transaction.\r\n     * @param {NonAutoCommitApiTelemetryConfig} args.apiTelemetryConfig - The api telemetry configuration. Empty/Null for disabling telemetry\r\n     */\r\n    function Transaction(_a) {\r\n        var connectionHolder = _a.connectionHolder, onClose = _a.onClose, onBookmarks = _a.onBookmarks, onConnection = _a.onConnection, reactive = _a.reactive, fetchSize = _a.fetchSize, impersonatedUser = _a.impersonatedUser, highRecordWatermark = _a.highRecordWatermark, lowRecordWatermark = _a.lowRecordWatermark, notificationFilter = _a.notificationFilter, apiTelemetryConfig = _a.apiTelemetryConfig;\r\n        var _this = this;\r\n        this._connectionHolder = connectionHolder;\r\n        this._reactive = reactive;\r\n        this._state = _states.ACTIVE;\r\n        this._onClose = onClose;\r\n        this._onBookmarks = onBookmarks;\r\n        this._onConnection = onConnection;\r\n        this._onError = this._onErrorCallback.bind(this);\r\n        this._fetchSize = fetchSize;\r\n        this._onComplete = this._onCompleteCallback.bind(this);\r\n        this._results = [];\r\n        this._impersonatedUser = impersonatedUser;\r\n        this._lowRecordWatermak = lowRecordWatermark;\r\n        this._highRecordWatermark = highRecordWatermark;\r\n        this._bookmarks = bookmarks_1.Bookmarks.empty();\r\n        this._notificationFilter = notificationFilter;\r\n        this._apiTelemetryConfig = apiTelemetryConfig;\r\n        this._acceptActive = function () { }; // satisfy DenoJS\r\n        this._activePromise = new Promise(function (resolve, reject) {\r\n            _this._acceptActive = resolve;\r\n        });\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Bookmarks | string |  string []} bookmarks\r\n     * @param {TxConfig} txConfig\r\n     * @param {Object} events List of observers to events\r\n     * @returns {void}\r\n     */\r\n    Transaction.prototype._begin = function (getBookmarks, txConfig, events) {\r\n        var _this = this;\r\n        this._connectionHolder\r\n            .getConnection()\r\n            .then(function (connection) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        this._onConnection();\r\n                        if (!(connection != null)) return [3 /*break*/, 2];\r\n                        _a = this;\r\n                        return [4 /*yield*/, getBookmarks()];\r\n                    case 1:\r\n                        _a._bookmarks = _b.sent();\r\n                        return [2 /*return*/, connection.beginTransaction({\r\n                                bookmarks: this._bookmarks,\r\n                                txConfig: txConfig,\r\n                                mode: this._connectionHolder.mode(),\r\n                                database: this._connectionHolder.database(),\r\n                                impersonatedUser: this._impersonatedUser,\r\n                                notificationFilter: this._notificationFilter,\r\n                                apiTelemetryConfig: this._apiTelemetryConfig,\r\n                                beforeError: function (error) {\r\n                                    if (events != null) {\r\n                                        events.onError(error);\r\n                                    }\r\n                                    _this._onError(error).catch(function () { });\r\n                                },\r\n                                afterComplete: function (metadata) {\r\n                                    if (events != null) {\r\n                                        events.onComplete(metadata);\r\n                                    }\r\n                                    _this._onComplete(metadata);\r\n                                }\r\n                            })];\r\n                    case 2: throw (0, error_1.newError)('No connection available');\r\n                }\r\n            });\r\n        }); })\r\n            .catch(function (error) {\r\n            if (events != null) {\r\n                events.onError(error);\r\n            }\r\n            _this._onError(error).catch(function () { });\r\n        })\r\n            // It should make the transaction active anyway\r\n            // further errors will be treated by the existing\r\n            // observers\r\n            .finally(function () { return _this._acceptActive(); });\r\n    };\r\n    /**\r\n     * Run Cypher query\r\n     * Could be called with a query object i.e.: `{text: \"MATCH ...\", parameters: {param: 1}}`\r\n     * or with the query and parameters as separate arguments.\r\n     * @param {mixed} query - Cypher query to execute\r\n     * @param {Object} parameters - Map with parameters to use in query\r\n     * @return {Result} New Result\r\n     */\r\n    Transaction.prototype.run = function (query, parameters) {\r\n        var _a = (0, util_1.validateQueryAndParameters)(query, parameters), validatedQuery = _a.validatedQuery, params = _a.params;\r\n        var result = this._state.run(validatedQuery, params, {\r\n            connectionHolder: this._connectionHolder,\r\n            onError: this._onError,\r\n            onComplete: this._onComplete,\r\n            onConnection: this._onConnection,\r\n            reactive: this._reactive,\r\n            fetchSize: this._fetchSize,\r\n            highRecordWatermark: this._highRecordWatermark,\r\n            lowRecordWatermark: this._lowRecordWatermak,\r\n            preparationJob: this._activePromise\r\n        });\r\n        this._results.push(result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Commits the transaction and returns the result.\r\n     *\r\n     * After committing the transaction can no longer be used.\r\n     *\r\n     * @returns {Promise<void>} An empty promise if committed successfully or error if any error happened during commit.\r\n     */\r\n    Transaction.prototype.commit = function () {\r\n        var _this = this;\r\n        var committed = this._state.commit({\r\n            connectionHolder: this._connectionHolder,\r\n            onError: this._onError,\r\n            onComplete: function (meta) { return _this._onCompleteCallback(meta, _this._bookmarks); },\r\n            onConnection: this._onConnection,\r\n            pendingResults: this._results,\r\n            preparationJob: this._activePromise\r\n        });\r\n        this._state = committed.state;\r\n        // clean up\r\n        this._onClose();\r\n        return new Promise(function (resolve, reject) {\r\n            committed.result.subscribe({\r\n                onCompleted: function () { return resolve(); },\r\n                onError: function (error) { return reject(error); }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Rollbacks the transaction.\r\n     *\r\n     * After rolling back, the transaction can no longer be used.\r\n     *\r\n     * @returns {Promise<void>} An empty promise if rolled back successfully or error if any error happened during\r\n     * rollback.\r\n     */\r\n    Transaction.prototype.rollback = function () {\r\n        var rolledback = this._state.rollback({\r\n            connectionHolder: this._connectionHolder,\r\n            onError: this._onError,\r\n            onComplete: this._onComplete,\r\n            onConnection: this._onConnection,\r\n            pendingResults: this._results,\r\n            preparationJob: this._activePromise\r\n        });\r\n        this._state = rolledback.state;\r\n        // clean up\r\n        this._onClose();\r\n        return new Promise(function (resolve, reject) {\r\n            rolledback.result.subscribe({\r\n                onCompleted: function () { return resolve(); },\r\n                onError: function (error) { return reject(error); }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Check if this transaction is active, which means commit and rollback did not happen.\r\n     * @return {boolean} `true` when not committed and not rolled back, `false` otherwise.\r\n     */\r\n    Transaction.prototype.isOpen = function () {\r\n        return this._state === _states.ACTIVE;\r\n    };\r\n    /**\r\n     * Closes the transaction\r\n     *\r\n     * This method will roll back the transaction if it is not already committed or rolled back.\r\n     *\r\n     * @returns {Promise<void>} An empty promise if closed successfully or error if any error happened during\r\n     */\r\n    Transaction.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.isOpen()) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.rollback()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    Transaction.prototype[Symbol.asyncDispose] = function () {\r\n        return this.close();\r\n    };\r\n    Transaction.prototype._onErrorCallback = function (error) {\r\n        // error will be \"acknowledged\" by sending a RESET message\r\n        // database will then forget about this transaction and cleanup all corresponding resources\r\n        // it is thus safe to move this transaction to a FAILED state and disallow any further interactions with it\r\n        if (this._state === _states.FAILED) {\r\n            // already failed, nothing to do\r\n            // if we call onError for each result again, we might run into an infinite loop, that causes an OOM eventually\r\n            return Promise.resolve(null);\r\n        }\r\n        this._state = _states.FAILED;\r\n        this._onClose();\r\n        this._results.forEach(function (result) {\r\n            if (result.isOpen()) {\r\n                // @ts-expect-error\r\n                result._streamObserverPromise\r\n                    .then(function (resultStreamObserver) { return resultStreamObserver.onError(error); })\r\n                    // Nothing to do since we don't have a observer to notify the error\r\n                    // the result will be already broke in other ways.\r\n                    .catch(function (_) { });\r\n            }\r\n        });\r\n        // release connection back to the pool\r\n        return this._connectionHolder.releaseConnection();\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {object} meta The meta with bookmarks\r\n     * @returns {void}\r\n     */\r\n    Transaction.prototype._onCompleteCallback = function (meta, previousBookmarks) {\r\n        this._onBookmarks(new bookmarks_1.Bookmarks(meta === null || meta === void 0 ? void 0 : meta.bookmark), previousBookmarks !== null && previousBookmarks !== void 0 ? previousBookmarks : bookmarks_1.Bookmarks.empty(), meta === null || meta === void 0 ? void 0 : meta.db);\r\n    };\r\n    return Transaction;\r\n}());\r\nvar _states = {\r\n    // The transaction is running with no explicit success or failure marked\r\n    ACTIVE: {\r\n        commit: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete, onConnection = _a.onConnection, pendingResults = _a.pendingResults, preparationJob = _a.preparationJob;\r\n            return {\r\n                result: finishTransaction(true, connectionHolder, onError, onComplete, onConnection, pendingResults, preparationJob),\r\n                state: _states.SUCCEEDED\r\n            };\r\n        },\r\n        rollback: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete, onConnection = _a.onConnection, pendingResults = _a.pendingResults, preparationJob = _a.preparationJob;\r\n            return {\r\n                result: finishTransaction(false, connectionHolder, onError, onComplete, onConnection, pendingResults, preparationJob),\r\n                state: _states.ROLLED_BACK\r\n            };\r\n        },\r\n        run: function (query, parameters, _a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete, onConnection = _a.onConnection, reactive = _a.reactive, fetchSize = _a.fetchSize, highRecordWatermark = _a.highRecordWatermark, lowRecordWatermark = _a.lowRecordWatermark, preparationJob = _a.preparationJob;\r\n            // RUN in explicit transaction can't contain bookmarks and transaction configuration\r\n            // No need to include mode and database name as it shall be included in begin\r\n            var requirements = preparationJob !== null && preparationJob !== void 0 ? preparationJob : Promise.resolve();\r\n            var observerPromise = connectionHolder.getConnection()\r\n                .then(function (conn) { return requirements.then(function () { return conn; }); })\r\n                .then(function (conn) {\r\n                onConnection();\r\n                if (conn != null) {\r\n                    return conn.run(query, parameters, {\r\n                        bookmarks: bookmarks_1.Bookmarks.empty(),\r\n                        txConfig: tx_config_1.TxConfig.empty(),\r\n                        beforeError: onError,\r\n                        afterComplete: onComplete,\r\n                        reactive: reactive,\r\n                        fetchSize: fetchSize,\r\n                        highRecordWatermark: highRecordWatermark,\r\n                        lowRecordWatermark: lowRecordWatermark\r\n                    });\r\n                }\r\n                else {\r\n                    throw (0, error_1.newError)('No connection available');\r\n                }\r\n            })\r\n                .catch(function (error) { return new observers_1.FailedObserver({ error: error, onError: onError }); });\r\n            return newCompletedResult(observerPromise, query, parameters, connectionHolder, highRecordWatermark, lowRecordWatermark);\r\n        }\r\n    },\r\n    // An error has occurred, transaction can no longer be used and no more messages will\r\n    // be sent for this transaction.\r\n    FAILED: {\r\n        commit: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return {\r\n                result: newCompletedResult(new observers_1.FailedObserver({\r\n                    error: (0, error_1.newError)('Cannot commit this transaction, because it has been rolled back either because of an error or explicit termination.'),\r\n                    onError: onError\r\n                }), 'COMMIT', {}, connectionHolder, 0, // high watermark\r\n                0 // low watermark\r\n                ),\r\n                state: _states.FAILED\r\n            };\r\n        },\r\n        rollback: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return {\r\n                result: newCompletedResult(new observers_1.CompletedObserver(), 'ROLLBACK', {}, connectionHolder, 0, // high watermark\r\n                0 // low watermark\r\n                ),\r\n                state: _states.FAILED\r\n            };\r\n        },\r\n        run: function (query, parameters, _a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return newCompletedResult(new observers_1.FailedObserver({\r\n                error: (0, error_1.newError)('Cannot run query in this transaction, because it has been rolled back either because of an error or explicit termination.'),\r\n                onError: onError\r\n            }), query, parameters, connectionHolder, 0, // high watermark\r\n            0 // low watermark\r\n            );\r\n        }\r\n    },\r\n    // This transaction has successfully committed\r\n    SUCCEEDED: {\r\n        commit: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return {\r\n                result: newCompletedResult(new observers_1.FailedObserver({\r\n                    error: (0, error_1.newError)('Cannot commit this transaction, because it has already been committed.'),\r\n                    onError: onError\r\n                }), 'COMMIT', {}, connection_holder_1.EMPTY_CONNECTION_HOLDER, 0, // high watermark\r\n                0 // low watermark\r\n                ),\r\n                state: _states.SUCCEEDED,\r\n                connectionHolder: connectionHolder\r\n            };\r\n        },\r\n        rollback: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return {\r\n                result: newCompletedResult(new observers_1.FailedObserver({\r\n                    error: (0, error_1.newError)('Cannot rollback this transaction, because it has already been committed.'),\r\n                    onError: onError\r\n                }), 'ROLLBACK', {}, connection_holder_1.EMPTY_CONNECTION_HOLDER, 0, // high watermark\r\n                0 // low watermark\r\n                ),\r\n                state: _states.SUCCEEDED,\r\n                connectionHolder: connectionHolder\r\n            };\r\n        },\r\n        run: function (query, parameters, _a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return newCompletedResult(new observers_1.FailedObserver({\r\n                error: (0, error_1.newError)('Cannot run query in this transaction, because it has already been committed.'),\r\n                onError: onError\r\n            }), query, parameters, connectionHolder, 0, // high watermark\r\n            0 // low watermark\r\n            );\r\n        }\r\n    },\r\n    // This transaction has been rolled back\r\n    ROLLED_BACK: {\r\n        commit: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return {\r\n                result: newCompletedResult(new observers_1.FailedObserver({\r\n                    error: (0, error_1.newError)('Cannot commit this transaction, because it has already been rolled back.'),\r\n                    onError: onError\r\n                }), 'COMMIT', {}, connectionHolder, 0, // high watermark\r\n                0 // low watermark\r\n                ),\r\n                state: _states.ROLLED_BACK\r\n            };\r\n        },\r\n        rollback: function (_a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return {\r\n                result: newCompletedResult(new observers_1.FailedObserver({\r\n                    error: (0, error_1.newError)('Cannot rollback this transaction, because it has already been rolled back.')\r\n                }), 'ROLLBACK', {}, connectionHolder, 0, // high watermark\r\n                0 // low watermark\r\n                ),\r\n                state: _states.ROLLED_BACK\r\n            };\r\n        },\r\n        run: function (query, parameters, _a) {\r\n            var connectionHolder = _a.connectionHolder, onError = _a.onError, onComplete = _a.onComplete;\r\n            return newCompletedResult(new observers_1.FailedObserver({\r\n                error: (0, error_1.newError)('Cannot run query in this transaction, because it has already been rolled back.'),\r\n                onError: onError\r\n            }), query, parameters, connectionHolder, 0, // high watermark\r\n            0 // low watermark\r\n            );\r\n        }\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {boolean} commit\r\n * @param {ConnectionHolder} connectionHolder\r\n * @param {function(err:Error): any} onError\r\n * @param {function(metadata:object): any} onComplete\r\n * @param {function() : any} onConnection\r\n * @param {list<Result>>}pendingResults all run results in this transaction\r\n */\r\nfunction finishTransaction(commit, connectionHolder, onError, onComplete, onConnection, pendingResults, preparationJob) {\r\n    var requirements = preparationJob !== null && preparationJob !== void 0 ? preparationJob : Promise.resolve();\r\n    var observerPromise = connectionHolder.getConnection()\r\n        .then(function (conn) { return requirements.then(function () { return conn; }); })\r\n        .then(function (connection) {\r\n        onConnection();\r\n        pendingResults.forEach(function (r) { return r._cancel(); });\r\n        return Promise.all(pendingResults.map(function (result) { return result.summary(); })).then(function (results) {\r\n            if (connection != null) {\r\n                if (commit) {\r\n                    return connection.commitTransaction({\r\n                        beforeError: onError,\r\n                        afterComplete: onComplete\r\n                    });\r\n                }\r\n                else {\r\n                    return connection.rollbackTransaction({\r\n                        beforeError: onError,\r\n                        afterComplete: onComplete\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                throw (0, error_1.newError)('No connection available');\r\n            }\r\n        });\r\n    })\r\n        .catch(function (error) { return new observers_1.FailedObserver({ error: error, onError: onError }); });\r\n    // for commit & rollback we need result that uses real connection holder and notifies it when\r\n    // connection is not needed and can be safely released to the pool\r\n    return new result_1.default(observerPromise, commit ? 'COMMIT' : 'ROLLBACK', {}, connectionHolder, {\r\n        high: Number.MAX_VALUE,\r\n        low: Number.MAX_VALUE\r\n    });\r\n}\r\n/**\r\n * Creates a {@link Result} with empty connection holder.\r\n * For cases when result represents an intermediate or failed action, does not require any metadata and does not\r\n * need to influence real connection holder to release connections.\r\n * @param {ResultStreamObserver} observer - an observer for the created result.\r\n * @param {string} query - the cypher query that produced the result.\r\n * @param {Object} parameters - the parameters for cypher query that produced the result.\r\n * @param {ConnectionHolder} connectionHolder - the connection holder used to get the result\r\n * @return {Result} new result.\r\n * @private\r\n */\r\nfunction newCompletedResult(observerPromise, query, parameters, connectionHolder, highRecordWatermark, lowRecordWatermark) {\r\n    if (connectionHolder === void 0) { connectionHolder = connection_holder_1.EMPTY_CONNECTION_HOLDER; }\r\n    return new result_1.default(Promise.resolve(observerPromise), query, parameters, new connection_holder_1.ReadOnlyConnectionHolder(connectionHolder !== null && connectionHolder !== void 0 ? connectionHolder : connection_holder_1.EMPTY_CONNECTION_HOLDER), {\r\n        low: lowRecordWatermark,\r\n        high: highRecordWatermark\r\n    });\r\n}\r\nexports.default = Transaction;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Represents a transaction that is managed by the transaction executor.\r\n *\r\n * @public\r\n */\r\nvar ManagedTransaction = /** @class */ (function () {\r\n    /**\r\n     * @private\r\n     */\r\n    function ManagedTransaction(_a) {\r\n        var run = _a.run;\r\n        /**\r\n         * @private\r\n         */\r\n        this._run = run;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {Transaction} tx - Transaction to wrap\r\n     * @returns {ManagedTransaction} the ManagedTransaction\r\n     */\r\n    ManagedTransaction.fromTransaction = function (tx) {\r\n        return new ManagedTransaction({\r\n            run: tx.run.bind(tx)\r\n        });\r\n    };\r\n    /**\r\n     * Run Cypher query\r\n     * Could be called with a query object i.e.: `{text: \"MATCH ...\", parameters: {param: 1}}`\r\n     * or with the query and parameters as separate arguments.\r\n     * @param {mixed} query - Cypher query to execute\r\n     * @param {Object} parameters - Map with parameters to use in query\r\n     * @return {Result} New Result\r\n     */\r\n    ManagedTransaction.prototype.run = function (query, parameters) {\r\n        return this._run(query, parameters);\r\n    };\r\n    return ManagedTransaction;\r\n}());\r\nexports.default = ManagedTransaction;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar transaction_1 = __importDefault(require(\"./transaction\"));\r\n/**\r\n * Represents a Promise<{@link Transaction}> object and a {@link Transaction} object.\r\n *\r\n * Resolving this object promise verifies the result of the transaction begin and returns the {@link Transaction} object in case of success.\r\n *\r\n * The object can still also used as {@link Transaction} for convenience. The result of begin will be checked\r\n * during the next API calls in the object as it is in the transaction.\r\n *\r\n * @access public\r\n */\r\nvar TransactionPromise = /** @class */ (function (_super) {\r\n    __extends(TransactionPromise, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {object} args\r\n     * @param {ConnectionHolder} args.connectionHolder - the connection holder to get connection from.\r\n     * @param {function()} args.onClose - Function to be called when transaction is committed or rolled back.\r\n     * @param {function(bookmarks: Bookmarks)} args.onBookmarks callback invoked when new bookmark is produced.\r\n     * @param {function()} args.onConnection - Function to be called when a connection is obtained to ensure the connection\r\n     * is not yet released.\r\n     * @param {boolean} args.reactive whether this transaction generates reactive streams\r\n     * @param {number} args.fetchSize - the record fetch size in each pulling batch.\r\n     * @param {string} args.impersonatedUser - The name of the user which should be impersonated for the duration of the session.\r\n     * @param {NotificationFilter} args.notificationFilter - The notification filter used for this transaction.\r\n     * @param {NonAutoCommitApiTelemetryConfig} args.apiTelemetryConfig - The api telemetry configuration. Empty/Null for disabling telemetry\r\n     */\r\n    function TransactionPromise(_b) {\r\n        var connectionHolder = _b.connectionHolder, onClose = _b.onClose, onBookmarks = _b.onBookmarks, onConnection = _b.onConnection, reactive = _b.reactive, fetchSize = _b.fetchSize, impersonatedUser = _b.impersonatedUser, highRecordWatermark = _b.highRecordWatermark, lowRecordWatermark = _b.lowRecordWatermark, notificationFilter = _b.notificationFilter, apiTelemetryConfig = _b.apiTelemetryConfig;\r\n        var _this = _super.call(this, {\r\n            connectionHolder: connectionHolder,\r\n            onClose: onClose,\r\n            onBookmarks: onBookmarks,\r\n            onConnection: onConnection,\r\n            reactive: reactive,\r\n            fetchSize: fetchSize,\r\n            impersonatedUser: impersonatedUser,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark,\r\n            notificationFilter: notificationFilter,\r\n            apiTelemetryConfig: apiTelemetryConfig\r\n        }) || this;\r\n        _this[_a] = 'TransactionPromise';\r\n        return _this;\r\n    }\r\n    /**\r\n     * Waits for the begin to complete.\r\n     *\r\n     * @param {function(transaction: Transaction)} onFulfilled - function to be called when finished.\r\n     * @param {function(error: {message:string, code:string})} onRejected - function to be called upon errors.\r\n     * @return {Promise} promise.\r\n     */\r\n    TransactionPromise.prototype.then = function (onfulfilled, onrejected) {\r\n        return this._getOrCreateBeginPromise().then(onfulfilled, onrejected);\r\n    };\r\n    /**\r\n     * Catch errors when using promises.\r\n     *\r\n     * @param {function(error: Neo4jError)} onRejected - Function to be called upon errors.\r\n     * @return {Promise} promise.\r\n     */\r\n    TransactionPromise.prototype.catch = function (onrejected) {\r\n        return this._getOrCreateBeginPromise().catch(onrejected);\r\n    };\r\n    /**\r\n     * Called when finally the begin is done\r\n     *\r\n     * @param {function()|null} onfinally - function when the promise finished\r\n     * @return {Promise} promise.\r\n     */\r\n    TransactionPromise.prototype.finally = function (onfinally) {\r\n        return this._getOrCreateBeginPromise().finally(onfinally);\r\n    };\r\n    TransactionPromise.prototype._getOrCreateBeginPromise = function () {\r\n        var _this = this;\r\n        if (this._beginPromise == null) {\r\n            this._beginPromise = new Promise(function (resolve, reject) {\r\n                _this._resolve = resolve;\r\n                _this._reject = reject;\r\n                if (_this._beginError != null) {\r\n                    reject(_this._beginError);\r\n                }\r\n                if (_this._beginMetadata != null) {\r\n                    resolve(_this._toTransaction());\r\n                }\r\n            });\r\n        }\r\n        return this._beginPromise;\r\n    };\r\n    /**\r\n     * @access private\r\n     */\r\n    TransactionPromise.prototype._toTransaction = function () {\r\n        return __assign(__assign({}, this), { run: _super.prototype.run.bind(this), commit: _super.prototype.commit.bind(this), rollback: _super.prototype.rollback.bind(this), close: _super.prototype.close.bind(this), isOpen: _super.prototype.isOpen.bind(this), _begin: this._begin.bind(this) });\r\n    };\r\n    /**\r\n     * @access private\r\n     */\r\n    TransactionPromise.prototype._begin = function (bookmarks, txConfig) {\r\n        return _super.prototype._begin.call(this, bookmarks, txConfig, {\r\n            onError: this._onBeginError.bind(this),\r\n            onComplete: this._onBeginMetadata.bind(this)\r\n        });\r\n    };\r\n    /**\r\n     * @access private\r\n     * @returns {void}\r\n     */\r\n    TransactionPromise.prototype._onBeginError = function (error) {\r\n        this._beginError = error;\r\n        if (this._reject != null) {\r\n            this._reject(error);\r\n        }\r\n    };\r\n    /**\r\n     * @access private\r\n     * @returns {void}\r\n     */\r\n    TransactionPromise.prototype._onBeginMetadata = function (metadata) {\r\n        this._beginMetadata = metadata !== null && metadata !== void 0 ? metadata : {};\r\n        if (this._resolve != null) {\r\n            this._resolve(this._toTransaction());\r\n        }\r\n    };\r\n    return TransactionPromise;\r\n}(transaction_1.default));\r\n_a = Symbol.toStringTag;\r\nexports.default = TransactionPromise;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* eslint-disable @typescript-eslint/promise-function-async */\r\nvar observers_1 = require(\"./internal/observers\");\r\nvar util_1 = require(\"./internal/util\");\r\nvar constants_1 = require(\"./internal/constants\");\r\nvar error_1 = require(\"./error\");\r\nvar result_1 = __importDefault(require(\"./result\"));\r\nvar connection_holder_1 = require(\"./internal/connection-holder\");\r\nvar transaction_executor_1 = require(\"./internal/transaction-executor\");\r\nvar bookmarks_1 = require(\"./internal/bookmarks\");\r\nvar tx_config_1 = require(\"./internal/tx-config\");\r\nvar transaction_promise_1 = __importDefault(require(\"./transaction-promise\"));\r\nvar transaction_managed_1 = __importDefault(require(\"./transaction-managed\"));\r\n/**\r\n * A Session instance is used for handling the connection and\r\n * sending queries through the connection.\r\n * In a single session, multiple queries will be executed serially.\r\n * In order to execute parallel queries, multiple sessions are required.\r\n * @access public\r\n */\r\nvar Session = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {Object} args\r\n     * @param {string} args.mode the default access mode for this session.\r\n     * @param {ConnectionProvider} args.connectionProvider - The connection provider to acquire connections from.\r\n     * @param {Bookmarks} args.bookmarks - The initial bookmarks for this session.\r\n     * @param {string} args.database the database name\r\n     * @param {Object} args.config={} - This driver configuration.\r\n     * @param {boolean} args.reactive - Whether this session should create reactive streams\r\n     * @param {number} args.fetchSize - Defines how many records is pulled in each pulling batch\r\n     * @param {string} args.impersonatedUser - The username which the user wants to impersonate for the duration of the session.\r\n     * @param {AuthToken} args.auth - the target auth for the to-be-acquired connection\r\n     * @param {NotificationFilter} args.notificationFilter - The notification filter used for this session.\r\n     */\r\n    function Session(_a) {\r\n        var mode = _a.mode, connectionProvider = _a.connectionProvider, bookmarks = _a.bookmarks, database = _a.database, config = _a.config, reactive = _a.reactive, fetchSize = _a.fetchSize, impersonatedUser = _a.impersonatedUser, bookmarkManager = _a.bookmarkManager, notificationFilter = _a.notificationFilter, auth = _a.auth, log = _a.log;\r\n        this._mode = mode;\r\n        this._database = database;\r\n        this._reactive = reactive;\r\n        this._fetchSize = fetchSize;\r\n        this._onDatabaseNameResolved = this._onDatabaseNameResolved.bind(this);\r\n        this._getConnectionAcquistionBookmarks = this._getConnectionAcquistionBookmarks.bind(this);\r\n        this._readConnectionHolder = new connection_holder_1.ConnectionHolder({\r\n            mode: constants_1.ACCESS_MODE_READ,\r\n            auth: auth,\r\n            database: database,\r\n            bookmarks: bookmarks,\r\n            connectionProvider: connectionProvider,\r\n            impersonatedUser: impersonatedUser,\r\n            onDatabaseNameResolved: this._onDatabaseNameResolved,\r\n            getConnectionAcquistionBookmarks: this._getConnectionAcquistionBookmarks,\r\n            log: log\r\n        });\r\n        this._writeConnectionHolder = new connection_holder_1.ConnectionHolder({\r\n            mode: constants_1.ACCESS_MODE_WRITE,\r\n            auth: auth,\r\n            database: database,\r\n            bookmarks: bookmarks,\r\n            connectionProvider: connectionProvider,\r\n            impersonatedUser: impersonatedUser,\r\n            onDatabaseNameResolved: this._onDatabaseNameResolved,\r\n            getConnectionAcquistionBookmarks: this._getConnectionAcquistionBookmarks,\r\n            log: log\r\n        });\r\n        this._open = true;\r\n        this._hasTx = false;\r\n        this._impersonatedUser = impersonatedUser;\r\n        this._lastBookmarks = bookmarks !== null && bookmarks !== void 0 ? bookmarks : bookmarks_1.Bookmarks.empty();\r\n        this._configuredBookmarks = this._lastBookmarks;\r\n        this._transactionExecutor = _createTransactionExecutor(config);\r\n        this._databaseNameResolved = this._database !== '';\r\n        var calculatedWatermaks = this._calculateWatermaks();\r\n        this._lowRecordWatermark = calculatedWatermaks.low;\r\n        this._highRecordWatermark = calculatedWatermaks.high;\r\n        this._results = [];\r\n        this._bookmarkManager = bookmarkManager;\r\n        this._notificationFilter = notificationFilter;\r\n        this._log = log;\r\n    }\r\n    /**\r\n     * Run Cypher query\r\n     * Could be called with a query object i.e.: `{text: \"MATCH ...\", parameters: {param: 1}}`\r\n     * or with the query and parameters as separate arguments.\r\n     *\r\n     * @public\r\n     * @param {mixed} query - Cypher query to execute\r\n     * @param {Object} parameters - Map with parameters to use in query\r\n     * @param {TransactionConfig} [transactionConfig] - Configuration for the new auto-commit transaction.\r\n     * @return {Result} New Result.\r\n     */\r\n    Session.prototype.run = function (query, parameters, transactionConfig) {\r\n        var _this = this;\r\n        var _a = (0, util_1.validateQueryAndParameters)(query, parameters), validatedQuery = _a.validatedQuery, params = _a.params;\r\n        var autoCommitTxConfig = (transactionConfig != null)\r\n            ? new tx_config_1.TxConfig(transactionConfig, this._log)\r\n            : tx_config_1.TxConfig.empty();\r\n        var result = this._run(validatedQuery, params, function (connection) { return __awaiter(_this, void 0, void 0, function () {\r\n            var bookmarks;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._bookmarks()];\r\n                    case 1:\r\n                        bookmarks = _a.sent();\r\n                        this._assertSessionIsOpen();\r\n                        return [2 /*return*/, connection.run(validatedQuery, params, {\r\n                                bookmarks: bookmarks,\r\n                                txConfig: autoCommitTxConfig,\r\n                                mode: this._mode,\r\n                                database: this._database,\r\n                                apiTelemetryConfig: {\r\n                                    api: constants_1.TELEMETRY_APIS.AUTO_COMMIT_TRANSACTION\r\n                                },\r\n                                impersonatedUser: this._impersonatedUser,\r\n                                afterComplete: function (meta) { return _this._onCompleteCallback(meta, bookmarks); },\r\n                                reactive: this._reactive,\r\n                                fetchSize: this._fetchSize,\r\n                                lowRecordWatermark: this._lowRecordWatermark,\r\n                                highRecordWatermark: this._highRecordWatermark,\r\n                                notificationFilter: this._notificationFilter\r\n                            })];\r\n                }\r\n            });\r\n        }); });\r\n        this._results.push(result);\r\n        return result;\r\n    };\r\n    Session.prototype._run = function (query, parameters, customRunner) {\r\n        var _a = this._acquireAndConsumeConnection(customRunner), connectionHolder = _a.connectionHolder, resultPromise = _a.resultPromise;\r\n        var observerPromise = resultPromise.catch(function (error) { return Promise.resolve(new observers_1.FailedObserver({ error: error })); });\r\n        var watermarks = { high: this._highRecordWatermark, low: this._lowRecordWatermark };\r\n        return new result_1.default(observerPromise, query, parameters, connectionHolder, watermarks);\r\n    };\r\n    /**\r\n     * This method is used by Rediscovery on the neo4j-driver-bolt-protocol package.\r\n     *\r\n     * @private\r\n     * @param {function()} connectionConsumer The method which will use the connection\r\n     * @returns {Promise<T>} A connection promise\r\n     */\r\n    Session.prototype._acquireConnection = function (connectionConsumer) {\r\n        var _this = this;\r\n        var _a = this._acquireAndConsumeConnection(connectionConsumer), connectionHolder = _a.connectionHolder, resultPromise = _a.resultPromise;\r\n        return resultPromise.then(function (result) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, connectionHolder.releaseConnection()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Acquires a {@link Connection}, consume it and return a promise of the result along with\r\n     * the {@link ConnectionHolder} used in the process.\r\n     *\r\n     * @private\r\n     * @param connectionConsumer\r\n     * @returns {object} The connection holder and connection promise.\r\n     */\r\n    Session.prototype._acquireAndConsumeConnection = function (connectionConsumer) {\r\n        var resultPromise;\r\n        var connectionHolder = this._connectionHolderWithMode(this._mode);\r\n        if (!this._open) {\r\n            resultPromise = Promise.reject((0, error_1.newError)('Cannot run query in a closed session.'));\r\n        }\r\n        else if (!this._hasTx && connectionHolder.initializeConnection()) {\r\n            resultPromise = connectionHolder\r\n                .getConnection()\r\n                // Connection won't be null at this point since the initialize method\r\n                // return\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                .then(function (connection) { return connectionConsumer(connection); });\r\n        }\r\n        else {\r\n            resultPromise = Promise.reject((0, error_1.newError)('Queries cannot be run directly on a ' +\r\n                'session with an open transaction; either run from within the ' +\r\n                'transaction or use a different session.'));\r\n        }\r\n        return { connectionHolder: connectionHolder, resultPromise: resultPromise };\r\n    };\r\n    /**\r\n     * Begin a new transaction in this session. A session can have at most one transaction running at a time, if you\r\n     * want to run multiple concurrent transactions, you should use multiple concurrent sessions.\r\n     *\r\n     * While a transaction is open the session cannot be used to run queries outside the transaction.\r\n     *\r\n     * @param {TransactionConfig} [transactionConfig] - Configuration for the new auto-commit transaction.\r\n     * @returns {TransactionPromise} New Transaction.\r\n     */\r\n    Session.prototype.beginTransaction = function (transactionConfig) {\r\n        // this function needs to support bookmarks parameter for backwards compatibility\r\n        // parameter was of type {string|string[]} and represented either a single or multiple bookmarks\r\n        // that's why we need to check parameter type and decide how to interpret the value\r\n        var arg = transactionConfig;\r\n        var txConfig = tx_config_1.TxConfig.empty();\r\n        if (arg != null) {\r\n            txConfig = new tx_config_1.TxConfig(arg, this._log);\r\n        }\r\n        return this._beginTransaction(this._mode, txConfig, { api: constants_1.TELEMETRY_APIS.UNMANAGED_TRANSACTION });\r\n    };\r\n    Session.prototype._beginTransaction = function (accessMode, txConfig, apiTelemetryConfig) {\r\n        var _this = this;\r\n        if (!this._open) {\r\n            throw (0, error_1.newError)('Cannot begin a transaction on a closed session.');\r\n        }\r\n        if (this._hasTx) {\r\n            throw (0, error_1.newError)('You cannot begin a transaction on a session with an open transaction; ' +\r\n                'either run from within the transaction or use a different session.');\r\n        }\r\n        var mode = Session._validateSessionMode(accessMode);\r\n        var connectionHolder = this._connectionHolderWithMode(mode);\r\n        connectionHolder.initializeConnection();\r\n        this._hasTx = true;\r\n        var tx = new transaction_promise_1.default({\r\n            connectionHolder: connectionHolder,\r\n            impersonatedUser: this._impersonatedUser,\r\n            onClose: this._transactionClosed.bind(this),\r\n            onBookmarks: function (newBm, oldBm, db) { return _this._updateBookmarks(newBm, oldBm, db); },\r\n            onConnection: this._assertSessionIsOpen.bind(this),\r\n            reactive: this._reactive,\r\n            fetchSize: this._fetchSize,\r\n            lowRecordWatermark: this._lowRecordWatermark,\r\n            highRecordWatermark: this._highRecordWatermark,\r\n            notificationFilter: this._notificationFilter,\r\n            apiTelemetryConfig: apiTelemetryConfig\r\n        });\r\n        tx._begin(function () { return _this._bookmarks(); }, txConfig);\r\n        return tx;\r\n    };\r\n    /**\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._assertSessionIsOpen = function () {\r\n        if (!this._open) {\r\n            throw (0, error_1.newError)('You cannot run more transactions on a closed session.');\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._transactionClosed = function () {\r\n        this._hasTx = false;\r\n    };\r\n    /**\r\n     * Return the bookmarks received following the last completed {@link Transaction}.\r\n     *\r\n     * @deprecated This method will be removed in version 6.0. Please, use {@link Session#lastBookmarks} instead.\r\n     *\r\n     * @return {string[]} A reference to a previous transaction.\r\n     * @see {@link Session#lastBookmarks}\r\n     */\r\n    Session.prototype.lastBookmark = function () {\r\n        return this.lastBookmarks();\r\n    };\r\n    /**\r\n     * Return the bookmarks received following the last completed {@link Transaction}.\r\n     *\r\n     * @return {string[]} A reference to a previous transaction.\r\n     */\r\n    Session.prototype.lastBookmarks = function () {\r\n        return this._lastBookmarks.values();\r\n    };\r\n    Session.prototype._bookmarks = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bookmarks;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, ((_a = this._bookmarkManager) === null || _a === void 0 ? void 0 : _a.getBookmarks())];\r\n                    case 1:\r\n                        bookmarks = _b.sent();\r\n                        if (bookmarks === undefined) {\r\n                            return [2 /*return*/, this._lastBookmarks];\r\n                        }\r\n                        return [2 /*return*/, new bookmarks_1.Bookmarks(__spreadArray(__spreadArray([], __read(bookmarks), false), __read(this._configuredBookmarks), false))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Execute given unit of work in a {@link READ} transaction.\r\n     *\r\n     * Transaction will automatically be committed unless the given function throws or returns a rejected promise.\r\n     * Some failures of the given function or the commit itself will be retried with exponential backoff with initial\r\n     * delay of 1 second and maximum retry time of 30 seconds. Maximum retry time is configurable via driver config's\r\n     * `maxTransactionRetryTime` property in milliseconds.\r\n     *\r\n     * @deprecated This method will be removed in version 6.0. Please, use {@link Session#executeRead} instead.\r\n     *\r\n     * @param {function(tx: Transaction): Promise} transactionWork - Callback that executes operations against\r\n     * a given {@link Transaction}.\r\n     * @param {TransactionConfig} [transactionConfig] - Configuration for all transactions started to execute the unit of work.\r\n     * @return {Promise} Resolved promise as returned by the given function or rejected promise when given\r\n     * function or commit fails.\r\n     * @see {@link Session#executeRead}\r\n     */\r\n    Session.prototype.readTransaction = function (transactionWork, transactionConfig) {\r\n        var config = new tx_config_1.TxConfig(transactionConfig, this._log);\r\n        return this._runTransaction(constants_1.ACCESS_MODE_READ, config, transactionWork);\r\n    };\r\n    /**\r\n     * Execute given unit of work in a {@link WRITE} transaction.\r\n     *\r\n     * Transaction will automatically be committed unless the given function throws or returns a rejected promise.\r\n     * Some failures of the given function or the commit itself will be retried with exponential backoff with initial\r\n     * delay of 1 second and maximum retry time of 30 seconds. Maximum retry time is configurable via driver config's\r\n     * `maxTransactionRetryTime` property in milliseconds.\r\n     *\r\n     * @deprecated This method will be removed in version 6.0. Please, use {@link Session#executeWrite} instead.\r\n     *\r\n     * @param {function(tx: Transaction): Promise} transactionWork - Callback that executes operations against\r\n     * a given {@link Transaction}.\r\n     * @param {TransactionConfig} [transactionConfig] - Configuration for all transactions started to execute the unit of work.\r\n     * @return {Promise} Resolved promise as returned by the given function or rejected promise when given\r\n     * function or commit fails.\r\n     * @see {@link Session#executeWrite}\r\n     */\r\n    Session.prototype.writeTransaction = function (transactionWork, transactionConfig) {\r\n        var config = new tx_config_1.TxConfig(transactionConfig, this._log);\r\n        return this._runTransaction(constants_1.ACCESS_MODE_WRITE, config, transactionWork);\r\n    };\r\n    Session.prototype._runTransaction = function (accessMode, transactionConfig, transactionWork) {\r\n        var _this = this;\r\n        return this._transactionExecutor.execute(function (apiTelemetryConfig) { return _this._beginTransaction(accessMode, transactionConfig, apiTelemetryConfig); }, transactionWork);\r\n    };\r\n    /**\r\n     * Execute given unit of work in a {@link READ} transaction.\r\n     *\r\n     * Transaction will automatically be committed unless the given function throws or returns a rejected promise.\r\n     * Some failures of the given function or the commit itself will be retried with exponential backoff with initial\r\n     * delay of 1 second and maximum retry time of 30 seconds. Maximum retry time is configurable via driver config's\r\n     * `maxTransactionRetryTime` property in milliseconds.\r\n     *\r\n     * NOTE: Because it is an explicit transaction from the server point of view, Cypher queries using\r\n     * \"CALL {} IN TRANSACTIONS\" or the older \"USING PERIODIC COMMIT\" construct will not work (call\r\n     * {@link Session#run} for these).\r\n     *\r\n     * @param {function(tx: ManagedTransaction): Promise} transactionWork - Callback that executes operations against\r\n     * a given {@link Transaction}.\r\n     * @param {TransactionConfig} [transactionConfig] - Configuration for all transactions started to execute the unit of work.\r\n     * @return {Promise} Resolved promise as returned by the given function or rejected promise when given\r\n     * function or commit fails.\r\n     */\r\n    Session.prototype.executeRead = function (transactionWork, transactionConfig) {\r\n        var config = new tx_config_1.TxConfig(transactionConfig, this._log);\r\n        return this._executeInTransaction(constants_1.ACCESS_MODE_READ, config, transactionWork);\r\n    };\r\n    /**\r\n     * Execute given unit of work in a {@link WRITE} transaction.\r\n     *\r\n     * Transaction will automatically be committed unless the given function throws or returns a rejected promise.\r\n     * Some failures of the given function or the commit itself will be retried with exponential backoff with initial\r\n     * delay of 1 second and maximum retry time of 30 seconds. Maximum retry time is configurable via driver config's\r\n     * `maxTransactionRetryTime` property in milliseconds.\r\n     *\r\n     * NOTE: Because it is an explicit transaction from the server point of view, Cypher queries using\r\n     * \"CALL {} IN TRANSACTIONS\" or the older \"USING PERIODIC COMMIT\" construct will not work (call\r\n     * {@link Session#run} for these).\r\n     *\r\n     * @param {function(tx: ManagedTransaction): Promise} transactionWork - Callback that executes operations against\r\n     * a given {@link Transaction}.\r\n     * @param {TransactionConfig} [transactionConfig] - Configuration for all transactions started to execute the unit of work.\r\n     * @return {Promise} Resolved promise as returned by the given function or rejected promise when given\r\n     * function or commit fails.\r\n     */\r\n    Session.prototype.executeWrite = function (transactionWork, transactionConfig) {\r\n        var config = new tx_config_1.TxConfig(transactionConfig, this._log);\r\n        return this._executeInTransaction(constants_1.ACCESS_MODE_WRITE, config, transactionWork);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {SessionMode} accessMode\r\n     * @param {TxConfig} transactionConfig\r\n     * @param {ManagedTransactionWork} transactionWork\r\n     * @returns {Promise}\r\n     */\r\n    Session.prototype._executeInTransaction = function (accessMode, transactionConfig, transactionWork) {\r\n        var _this = this;\r\n        return this._transactionExecutor.execute(function (apiTelemetryConfig) { return _this._beginTransaction(accessMode, transactionConfig, apiTelemetryConfig); }, transactionWork, transaction_managed_1.default.fromTransaction);\r\n    };\r\n    /**\r\n     * Sets the resolved database name in the session context.\r\n     * @private\r\n     * @param {string|undefined} database The resolved database name\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._onDatabaseNameResolved = function (database) {\r\n        if (!this._databaseNameResolved) {\r\n            var normalizedDatabase = database !== null && database !== void 0 ? database : '';\r\n            this._database = normalizedDatabase;\r\n            this._readConnectionHolder.setDatabase(normalizedDatabase);\r\n            this._writeConnectionHolder.setDatabase(normalizedDatabase);\r\n            this._databaseNameResolved = true;\r\n        }\r\n    };\r\n    Session.prototype._getConnectionAcquistionBookmarks = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bookmarks;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, ((_a = this._bookmarkManager) === null || _a === void 0 ? void 0 : _a.getBookmarks())];\r\n                    case 1:\r\n                        bookmarks = _b.sent();\r\n                        if (bookmarks === undefined) {\r\n                            return [2 /*return*/, this._lastBookmarks];\r\n                        }\r\n                        return [2 /*return*/, new bookmarks_1.Bookmarks(__spreadArray(__spreadArray([], __read(this._configuredBookmarks), false), __read(bookmarks), false))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update value of the last bookmarks.\r\n     * @private\r\n     * @param {Bookmarks} newBookmarks - The new bookmarks.\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._updateBookmarks = function (newBookmarks, previousBookmarks, database) {\r\n        var _a, _b, _c;\r\n        if ((newBookmarks != null) && !newBookmarks.isEmpty()) {\r\n            (_a = this._bookmarkManager) === null || _a === void 0 ? void 0 : _a.updateBookmarks((_b = previousBookmarks === null || previousBookmarks === void 0 ? void 0 : previousBookmarks.values()) !== null && _b !== void 0 ? _b : [], (_c = newBookmarks === null || newBookmarks === void 0 ? void 0 : newBookmarks.values()) !== null && _c !== void 0 ? _c : []).catch(function () { });\r\n            this._lastBookmarks = newBookmarks;\r\n            this._configuredBookmarks = bookmarks_1.Bookmarks.empty();\r\n        }\r\n    };\r\n    /**\r\n     * Close this session.\r\n     * @return {Promise}\r\n     */\r\n    Session.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._open) return [3 /*break*/, 3];\r\n                        this._open = false;\r\n                        this._results.forEach(function (result) { return result._cancel(); });\r\n                        this._transactionExecutor.close();\r\n                        return [4 /*yield*/, this._readConnectionHolder.close(this._hasTx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._writeConnectionHolder.close(this._hasTx)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    Session.prototype[Symbol.asyncDispose] = function () {\r\n        return this.close();\r\n    };\r\n    Session.prototype._connectionHolderWithMode = function (mode) {\r\n        if (mode === constants_1.ACCESS_MODE_READ) {\r\n            return this._readConnectionHolder;\r\n        }\r\n        else if (mode === constants_1.ACCESS_MODE_WRITE) {\r\n            return this._writeConnectionHolder;\r\n        }\r\n        else {\r\n            throw (0, error_1.newError)('Unknown access mode: ' + mode);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {Object} meta Connection metadatada\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._onCompleteCallback = function (meta, previousBookmarks) {\r\n        this._updateBookmarks(new bookmarks_1.Bookmarks(meta.bookmark), previousBookmarks, meta.db);\r\n    };\r\n    /**\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._calculateWatermaks = function () {\r\n        if (this._fetchSize === constants_1.FETCH_ALL) {\r\n            return {\r\n                low: Number.MAX_VALUE,\r\n                high: Number.MAX_VALUE // we shall never reach this number to disable auto pull\r\n            };\r\n        }\r\n        return {\r\n            low: 0.3 * this._fetchSize,\r\n            high: 0.7 * this._fetchSize\r\n        };\r\n    };\r\n    /**\r\n     * Configure the transaction executor\r\n     *\r\n     * This used by {@link Driver#executeQuery}\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    Session.prototype._configureTransactionExecutor = function (pipelined, telemetryApi) {\r\n        this._transactionExecutor.pipelineBegin = pipelined;\r\n        this._transactionExecutor.telemetryApi = telemetryApi;\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Session._validateSessionMode = function (rawMode) {\r\n        var mode = rawMode !== null && rawMode !== void 0 ? rawMode : constants_1.ACCESS_MODE_WRITE;\r\n        if (mode !== constants_1.ACCESS_MODE_READ && mode !== constants_1.ACCESS_MODE_WRITE) {\r\n            throw (0, error_1.newError)('Illegal session mode ' + mode);\r\n        }\r\n        return mode;\r\n    };\r\n    return Session;\r\n}());\r\n/**\r\n * @private\r\n * @param {object} config\r\n * @returns {TransactionExecutor} The transaction executor\r\n */\r\nfunction _createTransactionExecutor(config) {\r\n    var _a;\r\n    var maxRetryTimeMs = (_a = config === null || config === void 0 ? void 0 : config.maxTransactionRetryTime) !== null && _a !== void 0 ? _a : null;\r\n    return new transaction_executor_1.TransactionExecutor(maxRetryTimeMs);\r\n}\r\nexports.default = Session;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.bookmarkManager = void 0;\r\n/**\r\n * Interface for the piece of software responsible for keeping track of current active bookmarks accross the driver.\r\n * @interface\r\n * @since 5.0\r\n */\r\nvar BookmarkManager = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     */\r\n    function BookmarkManager() {\r\n        throw new Error('Not implemented');\r\n    }\r\n    /**\r\n     * Method called when the bookmarks get updated when a transaction finished.\r\n     *\r\n     * This method will be called when auto-commit queries finish and when explicit transactions\r\n     * get committed.\r\n     *\r\n     * @param {Iterable<string>} previousBookmarks The bookmarks used when starting the transaction\r\n     * @param {Iterable<string>} newBookmarks The new bookmarks received at the end of the transaction.\r\n     * @returns {void}\r\n    */\r\n    BookmarkManager.prototype.updateBookmarks = function (previousBookmarks, newBookmarks) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new Error('Not implemented');\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Method called by the driver to get the bookmarks.\r\n     *\r\n     * @returns {Iterable<string>} The set of bookmarks\r\n     */\r\n    BookmarkManager.prototype.getBookmarks = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new Error('Not implemented');\r\n            });\r\n        });\r\n    };\r\n    return BookmarkManager;\r\n}());\r\nexports.default = BookmarkManager;\r\n/**\r\n * @typedef {Object} BookmarkManagerConfig\r\n *\r\n * @since 5.0\r\n * @property {Iterable<string>} [initialBookmarks] Defines the initial set of bookmarks. The key is the database name and the values are the bookmarks.\r\n * @property {function():Promise<Iterable<string>>} [bookmarksSupplier] Called for supplying extra bookmarks to the BookmarkManager\r\n * @property {function(bookmarks: Iterable<string>): Promise<void>} [bookmarksConsumer] Called when the set of bookmarks  get updated\r\n */\r\n/**\r\n * Provides an configured {@link BookmarkManager} instance.\r\n *\r\n * @since 5.0\r\n * @param {BookmarkManagerConfig} [config={}]\r\n * @returns {BookmarkManager}\r\n */\r\nfunction bookmarkManager(config) {\r\n    if (config === void 0) { config = {}; }\r\n    var initialBookmarks = new Set(config.initialBookmarks);\r\n    return new Neo4jBookmarkManager(initialBookmarks, config.bookmarksSupplier, config.bookmarksConsumer);\r\n}\r\nexports.bookmarkManager = bookmarkManager;\r\nvar Neo4jBookmarkManager = /** @class */ (function () {\r\n    function Neo4jBookmarkManager(_bookmarks, _bookmarksSupplier, _bookmarksConsumer) {\r\n        this._bookmarks = _bookmarks;\r\n        this._bookmarksSupplier = _bookmarksSupplier;\r\n        this._bookmarksConsumer = _bookmarksConsumer;\r\n    }\r\n    Neo4jBookmarkManager.prototype.updateBookmarks = function (previousBookmarks, newBookmarks) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bookmarks, previousBookmarks_1, previousBookmarks_1_1, bm, newBookmarks_1, newBookmarks_1_1, bm;\r\n            var e_1, _a, e_2, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        bookmarks = this._bookmarks;\r\n                        try {\r\n                            for (previousBookmarks_1 = __values(previousBookmarks), previousBookmarks_1_1 = previousBookmarks_1.next(); !previousBookmarks_1_1.done; previousBookmarks_1_1 = previousBookmarks_1.next()) {\r\n                                bm = previousBookmarks_1_1.value;\r\n                                bookmarks.delete(bm);\r\n                            }\r\n                        }\r\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                        finally {\r\n                            try {\r\n                                if (previousBookmarks_1_1 && !previousBookmarks_1_1.done && (_a = previousBookmarks_1.return)) _a.call(previousBookmarks_1);\r\n                            }\r\n                            finally { if (e_1) throw e_1.error; }\r\n                        }\r\n                        try {\r\n                            for (newBookmarks_1 = __values(newBookmarks), newBookmarks_1_1 = newBookmarks_1.next(); !newBookmarks_1_1.done; newBookmarks_1_1 = newBookmarks_1.next()) {\r\n                                bm = newBookmarks_1_1.value;\r\n                                bookmarks.add(bm);\r\n                            }\r\n                        }\r\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                        finally {\r\n                            try {\r\n                                if (newBookmarks_1_1 && !newBookmarks_1_1.done && (_b = newBookmarks_1.return)) _b.call(newBookmarks_1);\r\n                            }\r\n                            finally { if (e_2) throw e_2.error; }\r\n                        }\r\n                        if (!(typeof this._bookmarksConsumer === 'function')) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._bookmarksConsumer(__spreadArray([], __read(bookmarks), false))];\r\n                    case 1:\r\n                        _c.sent();\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Neo4jBookmarkManager.prototype.getBookmarks = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bookmarks, suppliedBookmarks, suppliedBookmarks_1, suppliedBookmarks_1_1, bm;\r\n            var e_3, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        bookmarks = new Set(this._bookmarks);\r\n                        if (!(typeof this._bookmarksSupplier === 'function')) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._bookmarksSupplier()];\r\n                    case 1:\r\n                        suppliedBookmarks = (_a = _c.sent()) !== null && _a !== void 0 ? _a : [];\r\n                        try {\r\n                            for (suppliedBookmarks_1 = __values(suppliedBookmarks), suppliedBookmarks_1_1 = suppliedBookmarks_1.next(); !suppliedBookmarks_1_1.done; suppliedBookmarks_1_1 = suppliedBookmarks_1.next()) {\r\n                                bm = suppliedBookmarks_1_1.value;\r\n                                bookmarks.add(bm);\r\n                            }\r\n                        }\r\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                        finally {\r\n                            try {\r\n                                if (suppliedBookmarks_1_1 && !suppliedBookmarks_1_1.done && (_b = suppliedBookmarks_1.return)) _b.call(suppliedBookmarks_1);\r\n                            }\r\n                            finally { if (e_3) throw e_3.error; }\r\n                        }\r\n                        _c.label = 2;\r\n                    case 2: return [2 /*return*/, __spreadArray([], __read(bookmarks), false)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Neo4jBookmarkManager;\r\n}());\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar result_eager_1 = __importDefault(require(\"./result-eager\"));\r\nvar error_1 = require(\"./error\");\r\n/**\r\n * Protocol for transforming {@link Result}.\r\n *\r\n * @typedef {function<T>(result:Result):Promise<T>} ResultTransformer\r\n * @interface\r\n *\r\n * @see {@link resultTransformers} for provided implementations.\r\n * @see {@link Driver#executeQuery} for usage.\r\n */\r\n/**\r\n * Defines the object which holds the common {@link ResultTransformer} used with {@link Driver#executeQuery}.\r\n */\r\nvar ResultTransformers = /** @class */ (function () {\r\n    function ResultTransformers() {\r\n    }\r\n    /**\r\n     * Creates a {@link ResultTransformer} which transforms {@link Result} to {@link EagerResult}\r\n     * by consuming the whole stream.\r\n     *\r\n     * This is the default implementation used in {@link Driver#executeQuery}\r\n     *\r\n     * @example\r\n     * // This:\r\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\r\n     *   resultTransformer: neo4j.resultTransformers.eagerResultTransformer()\r\n     * })\r\n     * // is equivalent to:\r\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\r\n     *\r\n     * @returns {ResultTransformer<EagerResult<Entries>>} The result transformer\r\n     * @alias {@link ResultTransformers#eager}\r\n     */\r\n    ResultTransformers.prototype.eagerResultTransformer = function () {\r\n        return createEagerResultFromResult;\r\n    };\r\n    /**\r\n     * Creates a {@link ResultTransformer} which transforms {@link Result} to {@link EagerResult}\r\n     * by consuming the whole stream.\r\n     *\r\n     * This is the default implementation used in {@link Driver#executeQuery} and a alias to\r\n     * {@link resultTransformers.eagerResultTransformer}\r\n     *\r\n     * @example\r\n     * // This:\r\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\r\n     *   resultTransformer: neo4j.resultTransformers.eager()\r\n     * })\r\n     * // is equivalent to:\r\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\r\n     *\r\n     * @returns {ResultTransformer<EagerResult<Entries>>} The result transformer\r\n     * @experimental this is a preview\r\n     * @since 5.22.0\r\n     * @alias {@link ResultTransformers#eagerResultTransformer}\r\n     */\r\n    ResultTransformers.prototype.eager = function () {\r\n        return createEagerResultFromResult;\r\n    };\r\n    /**\r\n     * Creates a {@link ResultTransformer} which maps the {@link Record} in the result and collects it\r\n     * along with the {@link ResultSummary} and {@link Result#keys}.\r\n     *\r\n     * NOTE: The config object requires map or/and collect to be valid.\r\n     *\r\n     * @example\r\n     * // Mapping the records\r\n     * const { keys, records, summary } = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\r\n     *     map(record) {\r\n     *        return record.get('name')\r\n     *     }\r\n     *   })\r\n     * })\r\n     *\r\n     * records.forEach(name => console.log(`${name} has 25`))\r\n     *\r\n     * @example\r\n     * // Mapping records and collect result\r\n     * const names = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\r\n     *     map(record) {\r\n     *        return record.get('name')\r\n     *     },\r\n     *     collect(records, summary, keys) {\r\n     *        return records\r\n     *     }\r\n     *   })\r\n     * })\r\n     *\r\n     * names.forEach(name => console.log(`${name} has 25`))\r\n     *\r\n     * @example\r\n     * // The transformer can be defined one and used everywhere\r\n     * const getRecordsAsObjects = neo4j.resultTransformers.mappedResultTransformer({\r\n     *   map(record) {\r\n     *      return record.toObject()\r\n     *   },\r\n     *   collect(objects) {\r\n     *      return objects\r\n     *   }\r\n     * })\r\n     *\r\n     * // The usage in a driver.executeQuery\r\n     * const objects = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: getRecordsAsObjects\r\n     * })\r\n     * objects.forEach(object => console.log(`${object.name} has 25`))\r\n     *\r\n     *\r\n     * // The usage in session.executeRead\r\n     * const objects = await session.executeRead(tx => getRecordsAsObjects(tx.run('MATCH (p:Person{ age: $age }) RETURN p.name as name')))\r\n     * objects.forEach(object => console.log(`${object.name} has 25`))\r\n     *\r\n     * @param {object} config The result transformer configuration\r\n     * @param {function(record:Record):R} [config.map=function(record) {  return record }] Method called for mapping each record\r\n     * @param {function(records:R[], summary:ResultSummary, keys:string[]):T} [config.collect=function(records, summary, keys) { return { records, summary, keys }}] Method called for mapping\r\n     * the result data to the transformer output.\r\n     * @returns {ResultTransformer<T>} The result transformer\r\n     * @see {@link Driver#executeQuery}\r\n     */\r\n    ResultTransformers.prototype.mappedResultTransformer = function (config) {\r\n        return createMappedResultTransformer(config);\r\n    };\r\n    /**\r\n     * Creates a {@link ResultTransformer} which maps the {@link Record} in the result and collects it\r\n     * along with the {@link ResultSummary} and {@link Result#keys}.\r\n     *\r\n     * NOTE: The config object requires map or/and collect to be valid.\r\n     *\r\n     * This method is a alias to {@link ResultTransformers#mappedResultTransformer}\r\n     *\r\n     *\r\n     * @example\r\n     * // Mapping the records\r\n     * const { keys, records, summary } = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: neo4j.resultTransformers.mapped({\r\n     *     map(record) {\r\n     *        return record.get('name')\r\n     *     }\r\n     *   })\r\n     * })\r\n     *\r\n     * records.forEach(name => console.log(`${name} has 25`))\r\n     *\r\n     * @example\r\n     * // Mapping records and collect result\r\n     * const names = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: neo4j.resultTransformers.mapped({\r\n     *     map(record) {\r\n     *        return record.get('name')\r\n     *     },\r\n     *     collect(records, summary, keys) {\r\n     *        return records\r\n     *     }\r\n     *   })\r\n     * })\r\n     *\r\n     * names.forEach(name => console.log(`${name} has 25`))\r\n     *\r\n     * @example\r\n     * // The transformer can be defined one and used everywhere\r\n     * const getRecordsAsObjects = neo4j.resultTransformers.mapped({\r\n     *   map(record) {\r\n     *      return record.toObject()\r\n     *   },\r\n     *   collect(objects) {\r\n     *      return objects\r\n     *   }\r\n     * })\r\n     *\r\n     * // The usage in a driver.executeQuery\r\n     * const objects = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: getRecordsAsObjects\r\n     * })\r\n     * objects.forEach(object => console.log(`${object.name} has 25`))\r\n     *\r\n     *\r\n     * // The usage in session.executeRead\r\n     * const objects = await session.executeRead(tx => getRecordsAsObjects(tx.run('MATCH (p:Person{ age: $age }) RETURN p.name as name')))\r\n     * objects.forEach(object => console.log(`${object.name} has 25`))\r\n     *\r\n     * @param {object} config The result transformer configuration\r\n     * @param {function(record:Record):R} [config.map=function(record) {  return record }] Method called for mapping each record\r\n     * @param {function(records:R[], summary:ResultSummary, keys:string[]):T} [config.collect=function(records, summary, keys) { return { records, summary, keys }}] Method called for mapping\r\n     * the result data to the transformer output.\r\n     * @returns {ResultTransformer<T>} The result transformer\r\n     * @experimental This is a preview feature\r\n     * @alias {@link ResultTransformers#mappedResultTransformer}\r\n     * @since 5.22.0\r\n     * @see {@link Driver#executeQuery}\r\n     */\r\n    ResultTransformers.prototype.mapped = function (config) {\r\n        return createMappedResultTransformer(config);\r\n    };\r\n    /**\r\n     * Creates a {@link ResultTransformer} which collects the first record {@link Record} of {@link Result}\r\n     * and discard the rest of the records, if existent.\r\n     *\r\n     * @example\r\n     * // Using in executeQuery\r\n     * const maybeFirstRecord = await driver.executeQuery('MATCH (p:Person{ age: $age }) RETURN p.name as name', { age: 25 }, {\r\n     *   resultTransformer: neo4j.resultTransformers.first()\r\n     * })\r\n     *\r\n     * @example\r\n     * // Using in other results\r\n     * const record = await neo4j.resultTransformers.first()(result)\r\n     *\r\n     *\r\n     * @template Entries The shape of the record.\r\n     * @returns {ResultTransformer<Record<Entries>|undefined>} The result transformer\r\n     * @see {@link Driver#executeQuery}\r\n     * @experimental This is a preview feature.\r\n     * @since 5.22.0\r\n     */\r\n    ResultTransformers.prototype.first = function () {\r\n        return first;\r\n    };\r\n    /**\r\n     * Creates a {@link ResultTransformer} which consumes the result and returns the {@link ResultSummary}.\r\n     *\r\n     * This result transformer is a shortcut to `(result) => result.summary()`.\r\n     *\r\n     * @example\r\n     * const summary = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'}, {\r\n     *   resultTransformer: neo4j.resultTransformers.summary()\r\n     * })\r\n     *\r\n     * @returns {ResultTransformer<ResultSummary<T>>} The result transformer\r\n     * @see {@link Driver#executeQuery}\r\n     * @experimental This is a preview feature\r\n     */\r\n    ResultTransformers.prototype.summary = function () {\r\n        return summary;\r\n    };\r\n    return ResultTransformers;\r\n}());\r\n/**\r\n * Holds the common {@link ResultTransformer} used with {@link Driver#executeQuery}.\r\n */\r\nvar resultTransformers = new ResultTransformers();\r\nObject.freeze(resultTransformers);\r\nexports.default = resultTransformers;\r\nfunction createEagerResultFromResult(result) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, summary, records, keys;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, result];\r\n                case 1:\r\n                    _a = _b.sent(), summary = _a.summary, records = _a.records;\r\n                    return [4 /*yield*/, result.keys()];\r\n                case 2:\r\n                    keys = _b.sent();\r\n                    return [2 /*return*/, new result_eager_1.default(keys, records, summary)];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction createMappedResultTransformer(config) {\r\n    var _this = this;\r\n    if (config == null || (config.collect == null && config.map == null)) {\r\n        throw (0, error_1.newError)('Requires a map or/and a collect functions.');\r\n    }\r\n    return function (result) { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                        var state = { records: [], keys: [] };\r\n                        result.subscribe({\r\n                            onKeys: function (keys) {\r\n                                state.keys = keys;\r\n                            },\r\n                            onNext: function (record) {\r\n                                if (config.map != null) {\r\n                                    var mappedRecord = config.map(record);\r\n                                    if (mappedRecord !== undefined) {\r\n                                        state.records.push(mappedRecord);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    state.records.push(record);\r\n                                }\r\n                            },\r\n                            onCompleted: function (summary) {\r\n                                if (config.collect != null) {\r\n                                    resolve(config.collect(state.records, summary, state.keys));\r\n                                }\r\n                                else {\r\n                                    var obj = { records: state.records, summary: summary, keys: state.keys };\r\n                                    resolve(obj);\r\n                                }\r\n                            },\r\n                            onError: function (error) {\r\n                                reject(error);\r\n                            }\r\n                        });\r\n                    })];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    }); };\r\n}\r\nfunction first(result) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var it, _a, value, done;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    it = result[Symbol.asyncIterator]();\r\n                    return [4 /*yield*/, it.next()];\r\n                case 1:\r\n                    _a = _b.sent(), value = _a.value, done = _a.done;\r\n                    _b.label = 2;\r\n                case 2:\r\n                    _b.trys.push([2, , 3, 6]);\r\n                    if (done === true) {\r\n                        return [2 /*return*/, undefined];\r\n                    }\r\n                    return [2 /*return*/, value];\r\n                case 3:\r\n                    if (!(it.return != null)) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, it.return()];\r\n                case 4:\r\n                    _b.sent();\r\n                    _b.label = 5;\r\n                case 5: return [7 /*endfinally*/];\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction summary(result) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, result.summary()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar constants_1 = require(\"./constants\");\r\nvar QueryExecutor = /** @class */ (function () {\r\n    function QueryExecutor(_createSession) {\r\n        this._createSession = _createSession;\r\n    }\r\n    QueryExecutor.prototype.execute = function (config, query, parameters) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var session, listenerHandle, executeInTransaction;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        session = this._createSession({\r\n                            database: config.database,\r\n                            bookmarkManager: config.bookmarkManager,\r\n                            impersonatedUser: config.impersonatedUser,\r\n                            auth: config.auth\r\n                        });\r\n                        listenerHandle = installEventListenerWhenPossible(\r\n                        // Solving linter and types definitions issue\r\n                        config.signal, 'abort', function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0: return [4 /*yield*/, session.close()];\r\n                                case 1: return [2 /*return*/, _a.sent()];\r\n                            }\r\n                        }); }); });\r\n                        // @ts-expect-error The method is private for external users\r\n                        session._configureTransactionExecutor(true, constants_1.TELEMETRY_APIS.EXECUTE_QUERY);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 3, 5]);\r\n                        executeInTransaction = config.routing === 'READ'\r\n                            ? session.executeRead.bind(session)\r\n                            : session.executeWrite.bind(session);\r\n                        return [4 /*yield*/, executeInTransaction(function (tx) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var result;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            result = tx.run(query, parameters);\r\n                                            return [4 /*yield*/, config.resultTransformer(result)];\r\n                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                    }\r\n                                });\r\n                            }); }, config.transactionConfig)];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        listenerHandle.uninstall();\r\n                        return [4 /*yield*/, session.close()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return QueryExecutor;\r\n}());\r\nexports.default = QueryExecutor;\r\nfunction installEventListenerWhenPossible(target, event, listener) {\r\n    if (typeof (target === null || target === void 0 ? void 0 : target.addEventListener) === 'function') {\r\n        target.addEventListener(event, listener);\r\n    }\r\n    return {\r\n        uninstall: function () {\r\n            if (typeof (target === null || target === void 0 ? void 0 : target.removeEventListener) === 'function') {\r\n                target.removeEventListener(event, listener);\r\n            }\r\n        }\r\n    };\r\n}\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QueryConfig = exports.SessionConfig = exports.routing = exports.WRITE = exports.READ = exports.Driver = void 0;\r\nvar bookmarks_1 = require(\"./internal/bookmarks\");\r\nvar configured_custom_resolver_1 = __importDefault(require(\"./internal/resolver/configured-custom-resolver\"));\r\nvar constants_1 = require(\"./internal/constants\");\r\nvar logger_1 = require(\"./internal/logger\");\r\nvar session_1 = __importDefault(require(\"./session\"));\r\nvar util_1 = require(\"./internal/util\");\r\nvar bookmark_manager_1 = require(\"./bookmark-manager\");\r\nvar result_transformers_1 = __importDefault(require(\"./result-transformers\"));\r\nvar query_executor_1 = __importDefault(require(\"./internal/query-executor\"));\r\nvar error_1 = require(\"./error\");\r\nvar DEFAULT_MAX_CONNECTION_LIFETIME = 60 * 60 * 1000; // 1 hour\r\n/**\r\n * The default record fetch size. This is used in Bolt V4 protocol to pull query execution result in batches.\r\n * @type {number}\r\n */\r\nvar DEFAULT_FETCH_SIZE = 1000;\r\n/**\r\n * Constant that represents read session access mode.\r\n * Should be used like this: `driver.session({ defaultAccessMode: neo4j.session.READ })`.\r\n * @type {string}\r\n */\r\nvar READ = constants_1.ACCESS_MODE_READ;\r\nexports.READ = READ;\r\n/**\r\n * Constant that represents write session access mode.\r\n * Should be used like this: `driver.session({ defaultAccessMode: neo4j.session.WRITE })`.\r\n * @type {string}\r\n */\r\nvar WRITE = constants_1.ACCESS_MODE_WRITE;\r\nexports.WRITE = WRITE;\r\nvar idGenerator = 0;\r\n/**\r\n * The session configuration\r\n *\r\n * @interface\r\n */\r\nvar SessionConfig = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     */\r\n    function SessionConfig() {\r\n        /**\r\n         * The access mode of this session, allowed values are {@link READ} and {@link WRITE}.\r\n         * **Default**: {@link WRITE}\r\n         * @type {string}\r\n         */\r\n        this.defaultAccessMode = WRITE;\r\n        /**\r\n         * The initial reference or references to some previous\r\n         * transactions. Value is optional and absence indicates that that the bookmarks do not exist or are unknown.\r\n         * @type {string|string[]|undefined}\r\n         */\r\n        this.bookmarks = [];\r\n        /**\r\n         * The database this session will operate on.\r\n         *\r\n         * This option has no explicit value by default, but it is recommended to set\r\n         * one if the target database is known in advance. This has the benefit of\r\n         * ensuring a consistent target database name throughout the session in a\r\n         * straightforward way and potentially simplifies driver logic as well as\r\n         * reduces network communication resulting in better performance.\r\n         *\r\n         * Usage of Cypher clauses like USE is not a replacement for this option.\r\n         * The driver does not parse any Cypher.\r\n         *\r\n         * When no explicit name is set, the driver behavior depends on the connection\r\n         * URI scheme supplied to the driver on instantiation and Bolt protocol\r\n         * version.\r\n         *\r\n         * Specifically, the following applies:\r\n         *\r\n         * - **bolt schemes** - queries are dispatched to the server for execution\r\n         *   without explicit database name supplied, meaning that the target database\r\n         *   name for query execution is determined by the server. It is important to\r\n         *   note that the target database may change (even within the same session),\r\n         *   for instance if the user's home database is changed on the server.\r\n         *\r\n         * - **neo4j schemes** - providing that Bolt protocol version 4.4, which was\r\n         *   introduced with Neo4j server 4.4, or above is available, the driver\r\n         *   fetches the user's home database name from the server on first query\r\n         *   execution within the session and uses the fetched database name\r\n         *   explicitly for all queries executed within the session. This ensures that\r\n         *   the database name remains consistent within the given session. For\r\n         *   instance, if the user's home database name is 'movies' and the server\r\n         *   supplies it to the driver upon database name fetching for the session,\r\n         *   all queries within that session are executed with the explicit database\r\n         *   name 'movies' supplied. Any change to the user’s home database is\r\n         *   reflected only in sessions created after such change takes effect. This\r\n         *   behavior requires additional network communication. In clustered\r\n         *   environments, it is strongly recommended to avoid a single point of\r\n         *   failure. For instance, by ensuring that the connection URI resolves to\r\n         *   multiple endpoints. For older Bolt protocol versions the behavior is the\r\n         *   same as described for the **bolt schemes** above.\r\n         *\r\n         * @type {string|undefined}\r\n         */\r\n        this.database = '';\r\n        /**\r\n         * The username which the user wants to impersonate for the duration of the session.\r\n         *\r\n         * @type {string|undefined}\r\n         */\r\n        this.impersonatedUser = undefined;\r\n        /**\r\n         * The {@link AuthToken} which will be used for the duration of the session.\r\n         *\r\n         * By default, the session will use connections authenticated with the {@link AuthToken} configured on\r\n         * driver creation. This configuration allows switching user and/or authorization information for the\r\n         * session lifetime.\r\n         *\r\n         * **Warning**: This option is only available when the driver is connected to Neo4j Database servers\r\n         * which supports Bolt 5.1 or newer.\r\n         *\r\n         * @type {AuthToken|undefined}\r\n         * @see {@link driver}\r\n         */\r\n        this.auth = undefined;\r\n        /**\r\n         * The record fetch size of each batch of this session.\r\n         *\r\n         * Use {@link FETCH_ALL} to always pull all records in one batch. This will override the config value set on driver config.\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.fetchSize = undefined;\r\n        /**\r\n         * Configure a BookmarkManager for the session to use\r\n         *\r\n         * A BookmarkManager is a piece of software responsible for keeping casual consistency between different sessions by sharing bookmarks\r\n         * between the them.\r\n         * Enabling it is done by supplying an BookmarkManager implementation instance to this param.\r\n         * A default implementation could be acquired by calling the factory function {@link bookmarkManager}.\r\n         *\r\n         * **Warning**: Sharing the same BookmarkManager instance across multiple sessions can have a negative impact\r\n         * on performance since all the queries will wait for the latest changes being propagated across the cluster.\r\n         * For keeping consistency between a group of queries, use {@link Session} for grouping them.\r\n         * For keeping consistency between a group of sessions, use {@link BookmarkManager} instance for grouping them.\r\n         *\r\n         * @example\r\n         * const bookmarkManager = neo4j.bookmarkManager()\r\n         * const linkedSession1 = driver.session({ database:'neo4j', bookmarkManager })\r\n         * const linkedSession2 = driver.session({ database:'neo4j', bookmarkManager })\r\n         * const unlinkedSession = driver.session({ database:'neo4j' })\r\n         *\r\n         * // Creating Driver User\r\n         * const createUserQueryResult = await linkedSession1.run('CREATE (p:Person {name: $name})', { name: 'Driver User'})\r\n         *\r\n         * // Reading Driver User will *NOT* wait of the changes being propagated to the server before RUN the query\r\n         * // So the 'Driver User' person might not exist in the Result\r\n         * const unlinkedReadResult = await unlinkedSession.run('CREATE (p:Person {name: $name}) RETURN p', { name: 'Driver User'})\r\n         *\r\n         * // Reading Driver User will wait of the changes being propagated to the server before RUN the query\r\n         * // So the 'Driver User' person should exist in the Result, unless deleted.\r\n         * const linkedResult = await linkedSession2.run('CREATE (p:Person {name: $name}) RETURN p', { name: 'Driver User'})\r\n         *\r\n         * await linkedSession1.close()\r\n         * await linkedSession2.close()\r\n         * await unlinkedSession.close()\r\n         *\r\n         * @type {BookmarkManager|undefined}\r\n         * @since 5.0\r\n         */\r\n        this.bookmarkManager = undefined;\r\n        /**\r\n         * Configure filter for {@link Notification} objects returned in {@link ResultSummary#notifications}.\r\n         *\r\n         * This configuration enables filter notifications by:\r\n         *\r\n         * * the minimum severity level ({@link NotificationFilterMinimumSeverityLevel})\r\n         * * disabling notification categories ({@link NotificationFilterDisabledCategory})\r\n         *\r\n         *\r\n         * Disabling notifications can be done by defining the minimum severity level to 'OFF'.\r\n         * At driver level, when omitted, uses the server's default.\r\n         * At session level, when omitted, defaults to what filters have been configured at driver level.\r\n         *\r\n         * Disabling categories or severities allows the server to skip analysis for those, which can speed up query\r\n         * execution.\r\n         *\r\n         * @example\r\n         * // enabling warning notification, but disabling `HINT` and `DEPRECATION` notifications.\r\n         * const session = driver.session({\r\n         *     database: 'neo4j',\r\n         *     notificationFilter: {\r\n         *         minimumSeverityLevel: neo4j.notificationFilterMinimumSeverityLevel.WARNING, // or 'WARNING\r\n         *         disabledCategories: [\r\n         *             neo4j.notificationFilterDisabledCategory.HINT, // or 'HINT'\r\n         *             neo4j.notificationFilterDisabledCategory.DEPRECATION // or 'DEPRECATION'\r\n         *        ]\r\n         *     }\r\n         * })\r\n         *\r\n         * @example\r\n         * // disabling notifications for a session\r\n         * const session = driver.session({\r\n         *     database: 'neo4j',\r\n         *     notificationFilter: {\r\n         *         minimumSeverityLevel: neo4j.notificationFilterMinimumSeverityLevel.OFF // or 'OFF'\r\n         *     }\r\n         * })\r\n         *\r\n         * @example\r\n         * // using default values configured in the driver\r\n         * const sessionWithDefaultValues = driver.session({ database: 'neo4j' })\r\n         * // or driver.session({ database: 'neo4j', notificationFilter: undefined })\r\n         *\r\n         * // using default minimum severity level, but disabling 'HINT' and 'UNRECOGNIZED'\r\n         * // notification categories\r\n         * const sessionWithDefaultSeverityLevel = driver.session({\r\n         *     database: 'neo4j',\r\n         *     notificationFilter: {\r\n         *         disabledCategories: [\r\n         *             neo4j.notificationFilterDisabledCategory.HINT, // or 'HINT'\r\n         *             neo4j.notificationFilterDisabledCategory.UNRECOGNIZED // or 'UNRECOGNIZED'\r\n         *        ]\r\n         *     }\r\n         * })\r\n         *\r\n         * // using default disabled categories, but configuring minimum severity level to 'WARNING'\r\n         * const sessionWithDefaultSeverityLevel = driver.session({\r\n         *     database: 'neo4j',\r\n         *     notificationFilter: {\r\n         *         minimumSeverityLevel: neo4j.notificationFilterMinimumSeverityLevel.WARNING // or 'WARNING'\r\n         *     }\r\n         * })\r\n         *\r\n         * @type {NotificationFilter|undefined}\r\n         * @since 5.7\r\n         */\r\n        this.notificationFilter = undefined;\r\n    }\r\n    return SessionConfig;\r\n}());\r\nexports.SessionConfig = SessionConfig;\r\nvar ROUTING_WRITE = 'WRITE';\r\nvar ROUTING_READ = 'READ';\r\n/**\r\n * @typedef {'WRITE'|'READ'} RoutingControl\r\n */\r\n/**\r\n * Constants that represents routing modes.\r\n *\r\n * @example\r\n * driver.executeQuery(\"<QUERY>\", <PARAMETERS>, { routing: neo4j.routing.WRITE })\r\n */\r\nvar routing = {\r\n    WRITE: ROUTING_WRITE,\r\n    READ: ROUTING_READ\r\n};\r\nexports.routing = routing;\r\nObject.freeze(routing);\r\n/**\r\n * The query configuration\r\n * @interface\r\n */\r\nvar QueryConfig = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     */\r\n    function QueryConfig() {\r\n        /**\r\n         * Define the type of cluster member the query will be routed to.\r\n         *\r\n         * @type {RoutingControl}\r\n         */\r\n        this.routing = routing.WRITE;\r\n        /**\r\n         * Define the transformation will be applied to the Result before return from the\r\n         * query method.\r\n         *\r\n         * @type {ResultTransformer}\r\n         * @see {@link resultTransformers} for provided implementations.\r\n         */\r\n        this.resultTransformer = undefined;\r\n        /**\r\n         * The database this session will operate on.\r\n         *\r\n         * @type {string|undefined}\r\n         */\r\n        this.database = '';\r\n        /**\r\n         * The username which the user wants to impersonate for the duration of the query.\r\n         *\r\n         * @type {string|undefined}\r\n         */\r\n        this.impersonatedUser = undefined;\r\n        /**\r\n         * Configure a BookmarkManager for the session to use\r\n         *\r\n         * A BookmarkManager is a piece of software responsible for keeping casual consistency between different pieces of work by sharing bookmarks\r\n         * between the them.\r\n         *\r\n         * By default, it uses the driver's non mutable driver level bookmark manager. See, {@link Driver.executeQueryBookmarkManager}\r\n         *\r\n         * Can be set to null to disable causal chaining.\r\n         * @type {BookmarkManager|undefined|null}\r\n         */\r\n        this.bookmarkManager = undefined;\r\n        /**\r\n         * Configuration for all transactions started to execute the query.\r\n         *\r\n         * @type {TransactionConfig|undefined}\r\n         *\r\n         */\r\n        this.transactionConfig = undefined;\r\n        /**\r\n         * The {@link AuthToken} which will be used for executing the query.\r\n         *\r\n         * By default, the query executor will use connections authenticated with the {@link AuthToken} configured on\r\n         * driver creation. This configuration allows switching user and/or authorization information for the\r\n         * underlying transaction's lifetime.\r\n         *\r\n         * **Warning**: This option is only available when the driver is connected to Neo4j Database servers\r\n         * which support Bolt 5.1 or newer.\r\n         *\r\n         * @type {AuthToken|undefined}\r\n         * @see {@link driver}\r\n         */\r\n        this.auth = undefined;\r\n        /**\r\n         * The {@link AbortSignal} for aborting query execution.\r\n         *\r\n         * When aborted, the signal triggers the result consumption cancelation and\r\n         * transactions are reset. However, due to race conditions,\r\n         * there is no guarantee the transaction will be rolled back.\r\n         * Equivalent to {@link Session.close}\r\n         *\r\n         * **Warning**: This option is only available in runtime which supports AbortSignal.addEventListener.\r\n         *\r\n         * @since 5.22.0\r\n         * @type {AbortSignal|undefined}\r\n         * @experimental\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\r\n         */\r\n        this.signal = undefined;\r\n    }\r\n    return QueryConfig;\r\n}());\r\nexports.QueryConfig = QueryConfig;\r\n/**\r\n * A driver maintains one or more {@link Session}s with a remote\r\n * Neo4j instance. Through the {@link Session}s you can send queries\r\n * and retrieve results from the database.\r\n *\r\n * Drivers are reasonably expensive to create - you should strive to keep one\r\n * driver instance around per Neo4j Instance you connect to.\r\n *\r\n * @access public\r\n */\r\nvar Driver = /** @class */ (function () {\r\n    /**\r\n     * You should not be calling this directly, instead use {@link driver}.\r\n     * @constructor\r\n     * @protected\r\n     * @param {Object} meta Metainformation about the driver\r\n     * @param {Object} config\r\n     * @param {function(id: number, config:Object, log:Logger, hostNameResolver: ConfiguredCustomResolver): ConnectionProvider } createConnectionProvider Creates the connection provider\r\n     * @param {function(args): Session } createSession Creates the a session\r\n    */\r\n    function Driver(meta, config, createConnectionProvider, createSession, createQueryExecutor) {\r\n        if (config === void 0) { config = {}; }\r\n        if (createSession === void 0) { createSession = function (args) { return new session_1.default(args); }; }\r\n        if (createQueryExecutor === void 0) { createQueryExecutor = function (createSession) { return new query_executor_1.default(createSession); }; }\r\n        sanitizeConfig(config);\r\n        var log = logger_1.Logger.create(config);\r\n        validateConfig(config, log);\r\n        this._id = idGenerator++;\r\n        this._meta = meta;\r\n        this._config = config;\r\n        this._log = log;\r\n        this._createConnectionProvider = createConnectionProvider;\r\n        this._createSession = createSession;\r\n        this._defaultExecuteQueryBookmarkManager = (0, bookmark_manager_1.bookmarkManager)();\r\n        this._queryExecutor = createQueryExecutor(this.session.bind(this));\r\n        /**\r\n         * Reference to the connection provider. Initialized lazily by {@link _getOrCreateConnectionProvider}.\r\n         * @type {ConnectionProvider}\r\n         * @protected\r\n         */\r\n        this._connectionProvider = null;\r\n        this._afterConstruction();\r\n    }\r\n    Object.defineProperty(Driver.prototype, \"executeQueryBookmarkManager\", {\r\n        /**\r\n         * The bookmark managed used by {@link Driver.executeQuery}\r\n         *\r\n         * @type {BookmarkManager}\r\n         */\r\n        get: function () {\r\n            return this._defaultExecuteQueryBookmarkManager;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes a query in a retriable context and returns a {@link EagerResult}.\r\n     *\r\n     * This method is a shortcut for a {@link Session#executeRead} and {@link Session#executeWrite}.\r\n     *\r\n     * NOTE: Because it is an explicit transaction from the server point of view, Cypher queries using\r\n     * \"CALL {} IN TRANSACTIONS\" or the older \"USING PERIODIC COMMIT\" construct will not work (call\r\n     * {@link Session#run} for these).\r\n     *\r\n     * @example\r\n     * // Run a simple write query\r\n     * const { keys, records, summary } = await driver.executeQuery('CREATE (p:Person{ name: $name }) RETURN p', { name: 'Person1'})\r\n     *\r\n     * @example\r\n     * // Run a read query\r\n     * const { keys, records, summary } = await driver.executeQuery(\r\n     *    'MATCH (p:Person{ name: $name }) RETURN p',\r\n     *    { name: 'Person1'},\r\n     *    { routing: neo4j.routing.READ})\r\n     *\r\n     * @example\r\n     * // Run a read query returning a Person Nodes per elementId\r\n     * const peopleMappedById = await driver.executeQuery(\r\n     *    'MATCH (p:Person{ name: $name }) RETURN p',\r\n     *    { name: 'Person1'},\r\n     *    {\r\n     *      resultTransformer: neo4j.resultTransformers.mappedResultTransformer({\r\n     *        map(record) {\r\n     *          const p = record.get('p')\r\n     *          return [p.elementId, p]\r\n     *        },\r\n     *        collect(elementIdPersonPairArray) {\r\n     *          return new Map(elementIdPersonPairArray)\r\n     *        }\r\n     *      })\r\n     *    }\r\n     * )\r\n     *\r\n     * const person = peopleMappedById.get(\"<ELEMENT_ID>\")\r\n     *\r\n     * @example\r\n     * // these lines\r\n     * const transformedResult = await driver.executeQuery(\r\n     *    \"<QUERY>\",\r\n     *    <PARAMETERS>,\r\n     *    {\r\n     *       routing: neo4j.routing.WRITE,\r\n     *       resultTransformer: transformer,\r\n     *       database: \"<DATABASE>\",\r\n     *       impersonatedUser: \"<USER>\",\r\n     *       bookmarkManager: bookmarkManager\r\n     *    })\r\n     * // are equivalent to those\r\n     * const session = driver.session({\r\n     *    database: \"<DATABASE>\",\r\n     *    impersonatedUser: \"<USER>\",\r\n     *    bookmarkManager: bookmarkManager\r\n     * })\r\n     *\r\n     * try {\r\n     *    const transformedResult = await session.executeWrite(tx => {\r\n     *        const result = tx.run(\"<QUERY>\", <PARAMETERS>)\r\n     *        return transformer(result)\r\n     *    })\r\n     * } finally {\r\n     *    await session.close()\r\n     * }\r\n     *\r\n     * @public\r\n     * @param {string | {text: string, parameters?: object}} query - Cypher query to execute\r\n     * @param {Object} parameters - Map with parameters to use in the query\r\n     * @param {QueryConfig<T>} config - The query configuration\r\n     * @returns {Promise<T>}\r\n     *\r\n     * @see {@link resultTransformers} for provided result transformers.\r\n     */\r\n    Driver.prototype.executeQuery = function (query, parameters, config) {\r\n        var _a, _b, _c;\r\n        if (config === void 0) { config = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bookmarkManager, resultTransformer, routingConfig;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        bookmarkManager = config.bookmarkManager === null ? undefined : ((_a = config.bookmarkManager) !== null && _a !== void 0 ? _a : this.executeQueryBookmarkManager);\r\n                        resultTransformer = ((_b = config.resultTransformer) !== null && _b !== void 0 ? _b : result_transformers_1.default.eagerResultTransformer());\r\n                        routingConfig = (_c = config.routing) !== null && _c !== void 0 ? _c : routing.WRITE;\r\n                        if (routingConfig !== routing.READ && routingConfig !== routing.WRITE) {\r\n                            throw (0, error_1.newError)(\"Illegal query routing config: \\\"\".concat(routingConfig, \"\\\"\"));\r\n                        }\r\n                        return [4 /*yield*/, this._queryExecutor.execute({\r\n                                resultTransformer: resultTransformer,\r\n                                bookmarkManager: bookmarkManager,\r\n                                routing: routingConfig,\r\n                                database: config.database,\r\n                                impersonatedUser: config.impersonatedUser,\r\n                                transactionConfig: config.transactionConfig,\r\n                                auth: config.auth,\r\n                                signal: config.signal\r\n                            }, query, parameters)];\r\n                    case 1: return [2 /*return*/, _d.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Verifies connectivity of this driver by trying to open a connection with the provided driver options.\r\n     *\r\n     * @deprecated This return of this method will change in 6.0.0 to not async return the {@link ServerInfo} and\r\n     * async return {@link void} instead. If you need to use the server info, use {@link getServerInfo} instead.\r\n     *\r\n     * @public\r\n     * @param {Object} param - The object parameter\r\n     * @param {string} param.database - The target database to verify connectivity for.\r\n     * @returns {Promise<ServerInfo>} promise resolved with server info or rejected with error.\r\n     */\r\n    Driver.prototype.verifyConnectivity = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.database, database = _c === void 0 ? '' : _c;\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.verifyConnectivityAndGetServerInfo({ database: database, accessMode: READ });\r\n    };\r\n    /**\r\n     * This method verifies the authorization credentials work by trying to acquire a connection\r\n     * to one of the servers with the given credentials.\r\n     *\r\n     * @param {object} param - object parameter\r\n     * @property {AuthToken} param.auth - the target auth for the to-be-acquired connection\r\n     * @property {string} param.database - the target database for the to-be-acquired connection\r\n     *\r\n     * @returns {Promise<boolean>} promise resolved with true if succeed, false if failed with\r\n     *  authentication issue and rejected with error if non-authentication error happens.\r\n     */\r\n    Driver.prototype.verifyAuthentication = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, database = _b.database, auth = _b.auth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectionProvider;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        connectionProvider = this._getOrCreateConnectionProvider();\r\n                        return [4 /*yield*/, connectionProvider.verifyAuthentication({\r\n                                database: database !== null && database !== void 0 ? database : 'system',\r\n                                auth: auth,\r\n                                accessMode: READ\r\n                            })];\r\n                    case 1: return [2 /*return*/, _c.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get ServerInfo for the giver database.\r\n     *\r\n     * @param {Object} param - The object parameter\r\n     * @param {string} param.database - The target database to verify connectivity for.\r\n     * @returns {Promise<ServerInfo>} promise resolved with the ServerInfo or rejected with error.\r\n     */\r\n    Driver.prototype.getServerInfo = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.database, database = _c === void 0 ? '' : _c;\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.verifyConnectivityAndGetServerInfo({ database: database, accessMode: READ });\r\n    };\r\n    /**\r\n     * Returns whether the server supports multi database capabilities based on the protocol\r\n     * version negotiated via handshake.\r\n     *\r\n     * Note that this function call _always_ causes a round-trip to the server.\r\n     *\r\n     * @returns {Promise<boolean>} promise resolved with a boolean or rejected with error.\r\n     */\r\n    Driver.prototype.supportsMultiDb = function () {\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.supportsMultiDb();\r\n    };\r\n    /**\r\n     * Returns whether the server supports transaction config capabilities based on the protocol\r\n     * version negotiated via handshake.\r\n     *\r\n     * Note that this function call _always_ causes a round-trip to the server.\r\n     *\r\n     * @returns {Promise<boolean>} promise resolved with a boolean or rejected with error.\r\n     */\r\n    Driver.prototype.supportsTransactionConfig = function () {\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.supportsTransactionConfig();\r\n    };\r\n    /**\r\n     * Returns whether the server supports user impersonation capabilities based on the protocol\r\n     * version negotiated via handshake.\r\n     *\r\n     * Note that this function call _always_ causes a round-trip to the server.\r\n     *\r\n     * @returns {Promise<boolean>} promise resolved with a boolean or rejected with error.\r\n     */\r\n    Driver.prototype.supportsUserImpersonation = function () {\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.supportsUserImpersonation();\r\n    };\r\n    /**\r\n     * Returns whether the driver session re-auth functionality capabilities based on the protocol\r\n     * version negotiated via handshake.\r\n     *\r\n     * Note that this function call _always_ causes a round-trip to the server.\r\n     *\r\n     * @returns {Promise<boolean>} promise resolved with a boolean or rejected with error.\r\n     */\r\n    Driver.prototype.supportsSessionAuth = function () {\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.supportsSessionAuth();\r\n    };\r\n    /**\r\n     * Returns the protocol version negotiated via handshake.\r\n     *\r\n     * Note that this function call _always_ causes a round-trip to the server.\r\n     *\r\n     * @returns {Promise<number>} the protocol version negotiated via handshake.\r\n     * @throws {Error} When protocol negotiation fails\r\n     */\r\n    Driver.prototype.getNegotiatedProtocolVersion = function () {\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        return connectionProvider.getNegotiatedProtocolVersion();\r\n    };\r\n    /**\r\n     * Returns boolean to indicate if driver has been configured with encryption enabled.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    Driver.prototype.isEncrypted = function () {\r\n        return this._isEncrypted();\r\n    };\r\n    /**\r\n     * @protected\r\n     * @returns {boolean}\r\n     */\r\n    Driver.prototype._supportsRouting = function () {\r\n        return this._meta.routing;\r\n    };\r\n    /**\r\n     * Returns boolean to indicate if driver has been configured with encryption enabled.\r\n     *\r\n     * @protected\r\n     * @returns {boolean}\r\n     */\r\n    Driver.prototype._isEncrypted = function () {\r\n        return this._config.encrypted === util_1.ENCRYPTION_ON || this._config.encrypted === true;\r\n    };\r\n    /**\r\n     * Returns the configured trust strategy that the driver has been configured with.\r\n     *\r\n     * @protected\r\n     * @returns {TrustStrategy}\r\n     */\r\n    Driver.prototype._getTrust = function () {\r\n        return this._config.trust;\r\n    };\r\n    /**\r\n     * Acquire a session to communicate with the database. The session will\r\n     * borrow connections from the underlying connection pool as required and\r\n     * should be considered lightweight and disposable.\r\n     *\r\n     * This comes with some responsibility - make sure you always call\r\n     * {@link close} when you are done using a session, and likewise,\r\n     * make sure you don't close your session before you are done using it. Once\r\n     * it is closed, the underlying connection will be released to the connection\r\n     * pool and made available for others to use.\r\n     *\r\n     * @public\r\n     * @param {SessionConfig} param - The session configuration\r\n     * @return {Session} new session.\r\n     */\r\n    Driver.prototype.session = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultAccessMode, defaultAccessMode = _c === void 0 ? WRITE : _c, bookmarkOrBookmarks = _b.bookmarks, _d = _b.database, database = _d === void 0 ? '' : _d, impersonatedUser = _b.impersonatedUser, fetchSize = _b.fetchSize, bookmarkManager = _b.bookmarkManager, notificationFilter = _b.notificationFilter, auth = _b.auth;\r\n        return this._newSession({\r\n            defaultAccessMode: defaultAccessMode,\r\n            bookmarkOrBookmarks: bookmarkOrBookmarks,\r\n            database: database,\r\n            reactive: false,\r\n            impersonatedUser: impersonatedUser,\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\r\n            bookmarkManager: bookmarkManager,\r\n            notificationFilter: notificationFilter,\r\n            auth: auth\r\n        });\r\n    };\r\n    /**\r\n     * Close all open sessions and other associated resources. You should\r\n     * make sure to use this when you are done with this driver instance.\r\n     * @public\r\n     * @return {Promise<void>} promise resolved when the driver is closed.\r\n     */\r\n    Driver.prototype.close = function () {\r\n        this._log.info(\"Driver \".concat(this._id, \" closing\"));\r\n        if (this._connectionProvider != null) {\r\n            return this._connectionProvider.close();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    Driver.prototype[Symbol.asyncDispose] = function () {\r\n        return this.close();\r\n    };\r\n    /**\r\n     * @protected\r\n     * @returns {void}\r\n     */\r\n    Driver.prototype._afterConstruction = function () {\r\n        this._log.info(\"\".concat(this._meta.typename, \" driver \").concat(this._id, \" created for server address \").concat(this._meta.address.toString()));\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Driver.prototype._newSession = function (_a) {\r\n        var defaultAccessMode = _a.defaultAccessMode, bookmarkOrBookmarks = _a.bookmarkOrBookmarks, database = _a.database, reactive = _a.reactive, impersonatedUser = _a.impersonatedUser, fetchSize = _a.fetchSize, bookmarkManager = _a.bookmarkManager, notificationFilter = _a.notificationFilter, auth = _a.auth;\r\n        var sessionMode = session_1.default._validateSessionMode(defaultAccessMode);\r\n        var connectionProvider = this._getOrCreateConnectionProvider();\r\n        var bookmarks = bookmarkOrBookmarks != null\r\n            ? new bookmarks_1.Bookmarks(bookmarkOrBookmarks)\r\n            : bookmarks_1.Bookmarks.empty();\r\n        return this._createSession({\r\n            mode: sessionMode,\r\n            database: database !== null && database !== void 0 ? database : '',\r\n            connectionProvider: connectionProvider,\r\n            bookmarks: bookmarks,\r\n            config: this._config,\r\n            reactive: reactive,\r\n            impersonatedUser: impersonatedUser,\r\n            fetchSize: fetchSize,\r\n            bookmarkManager: bookmarkManager,\r\n            notificationFilter: notificationFilter,\r\n            auth: auth,\r\n            log: this._log\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Driver.prototype._getOrCreateConnectionProvider = function () {\r\n        if (this._connectionProvider == null) {\r\n            this._connectionProvider = this._createConnectionProvider(this._id, this._config, this._log, createHostNameResolver(this._config));\r\n        }\r\n        return this._connectionProvider;\r\n    };\r\n    return Driver;\r\n}());\r\nexports.Driver = Driver;\r\n/**\r\n * @private\r\n * @returns {Object} the given config.\r\n */\r\nfunction validateConfig(config, log) {\r\n    var _a, _b;\r\n    var resolver = config.resolver;\r\n    if (resolver !== null && resolver !== undefined && typeof resolver !== 'function') {\r\n        throw new TypeError(\"Configured resolver should be a function. Got: \".concat(typeof resolver));\r\n    }\r\n    if (config.connectionAcquisitionTimeout < config.connectionTimeout) {\r\n        log.warn('Configuration for \"connectionAcquisitionTimeout\" should be greater than ' +\r\n            'or equal to \"connectionTimeout\". Otherwise, the connection acquisition ' +\r\n            'timeout will take precedence for over the connection timeout in scenarios ' +\r\n            'where a new connection is created while it is acquired');\r\n    }\r\n    if (((_a = config.notificationFilter) === null || _a === void 0 ? void 0 : _a.disabledCategories) != null && ((_b = config.notificationFilter) === null || _b === void 0 ? void 0 : _b.disabledClassifications) != null) {\r\n        throw new Error('The notificationFilter can\\'t have both \"disabledCategories\" and  \"disabledClassifications\" configured at the same time.');\r\n    }\r\n    return config;\r\n}\r\n/**\r\n * @private\r\n * @returns {void}\r\n */\r\nfunction sanitizeConfig(config) {\r\n    config.maxConnectionLifetime = sanitizeIntValue(config.maxConnectionLifetime, DEFAULT_MAX_CONNECTION_LIFETIME);\r\n    config.maxConnectionPoolSize = sanitizeIntValue(config.maxConnectionPoolSize, constants_1.DEFAULT_POOL_MAX_SIZE);\r\n    config.connectionAcquisitionTimeout = sanitizeIntValue(config.connectionAcquisitionTimeout, constants_1.DEFAULT_POOL_ACQUISITION_TIMEOUT);\r\n    config.fetchSize = validateFetchSizeValue(config.fetchSize, DEFAULT_FETCH_SIZE);\r\n    config.connectionTimeout = extractConnectionTimeout(config);\r\n    config.connectionLivenessCheckTimeout =\r\n        validateConnectionLivenessCheckTimeoutSizeValue(config.connectionLivenessCheckTimeout);\r\n}\r\n/**\r\n * @private\r\n * @returns {number}\r\n */\r\nfunction sanitizeIntValue(rawValue, defaultWhenAbsent) {\r\n    var sanitizedValue = parseInt(rawValue, 10);\r\n    if (sanitizedValue > 0 || sanitizedValue === 0) {\r\n        return sanitizedValue;\r\n    }\r\n    else if (sanitizedValue < 0) {\r\n        return Number.MAX_SAFE_INTEGER;\r\n    }\r\n    else {\r\n        return defaultWhenAbsent;\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\r\n    var fetchSize = parseInt(rawValue, 10);\r\n    if (fetchSize > 0 || fetchSize === constants_1.FETCH_ALL) {\r\n        return fetchSize;\r\n    }\r\n    else if (fetchSize === 0 || fetchSize < 0) {\r\n        throw new Error(\"The fetch size can only be a positive value or \".concat(constants_1.FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\r\n    }\r\n    else {\r\n        return defaultWhenAbsent;\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction extractConnectionTimeout(config) {\r\n    var configuredTimeout = parseInt(config.connectionTimeout, 10);\r\n    if (configuredTimeout === 0) {\r\n        // timeout explicitly configured to 0\r\n        return null;\r\n    }\r\n    else if (!isNaN(configuredTimeout) && configuredTimeout < 0) {\r\n        // timeout explicitly configured to a negative value\r\n        return null;\r\n    }\r\n    else if (isNaN(configuredTimeout)) {\r\n        // timeout not configured, use default value\r\n        return constants_1.DEFAULT_CONNECTION_TIMEOUT_MILLIS;\r\n    }\r\n    else {\r\n        // timeout configured, use the provided value\r\n        return configuredTimeout;\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction validateConnectionLivenessCheckTimeoutSizeValue(rawValue) {\r\n    if (rawValue == null) {\r\n        return undefined;\r\n    }\r\n    var connectionLivenessCheckTimeout = parseInt(rawValue, 10);\r\n    if (connectionLivenessCheckTimeout < 0 || Number.isNaN(connectionLivenessCheckTimeout)) {\r\n        throw new Error(\"The connectionLivenessCheckTimeout can only be a positive value or 0 for always. However connectionLivenessCheckTimeout = \".concat(connectionLivenessCheckTimeout));\r\n    }\r\n    return connectionLivenessCheckTimeout;\r\n}\r\n/**\r\n * @private\r\n * @returns {ConfiguredCustomResolver} new custom resolver that wraps the passed-in resolver function.\r\n *              If resolved function is not specified, it defaults to an identity resolver.\r\n */\r\nfunction createHostNameResolver(config) {\r\n    return new configured_custom_resolver_1.default(config.resolver);\r\n}\r\nexports.default = Driver;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @property {function(username: string, password: string, realm: ?string)} basic the function to create a\r\n * basic authentication token.\r\n * @property {function(base64EncodedTicket: string)} kerberos the function to create a Kerberos authentication token.\r\n * Accepts a single string argument - base64 encoded Kerberos ticket.\r\n * @property {function(base64EncodedTicket: string)} bearer the function to create a Bearer authentication token.\r\n * Accepts a single string argument - base64 encoded Bearer ticket.\r\n * @property {function(principal: string, credentials: string, realm: string, scheme: string, parameters: ?object)} custom\r\n * the function to create a custom authentication token.\r\n */\r\nvar auth = {\r\n    basic: function (username, password, realm) {\r\n        if (realm != null) {\r\n            return {\r\n                scheme: 'basic',\r\n                principal: username,\r\n                credentials: password,\r\n                realm: realm\r\n            };\r\n        }\r\n        else {\r\n            return { scheme: 'basic', principal: username, credentials: password };\r\n        }\r\n    },\r\n    kerberos: function (base64EncodedTicket) {\r\n        return {\r\n            scheme: 'kerberos',\r\n            principal: '',\r\n            credentials: base64EncodedTicket\r\n        };\r\n    },\r\n    bearer: function (base64EncodedToken) {\r\n        return {\r\n            scheme: 'bearer',\r\n            credentials: base64EncodedToken\r\n        };\r\n    },\r\n    none: function () {\r\n        return {\r\n            scheme: 'none'\r\n        };\r\n    },\r\n    custom: function (principal, credentials, realm, scheme, parameters) {\r\n        var output = {\r\n            scheme: scheme,\r\n            principal: principal\r\n        };\r\n        if (isNotEmpty(credentials)) {\r\n            output.credentials = credentials;\r\n        }\r\n        if (isNotEmpty(realm)) {\r\n            output.realm = realm;\r\n        }\r\n        if (isNotEmpty(parameters)) {\r\n            output.parameters = parameters;\r\n        }\r\n        return output;\r\n    }\r\n};\r\nfunction isNotEmpty(value) {\r\n    return !(value === null ||\r\n        value === undefined ||\r\n        value === '' ||\r\n        (Object.getPrototypeOf(value) === Object.prototype && Object.keys(value).length === 0));\r\n}\r\nexports.default = auth;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.staticAuthTokenManager = exports.authTokenManagers = exports.AuthTokenAndExpiration = void 0;\r\nvar auth_1 = __importDefault(require(\"./auth\"));\r\nvar internal_1 = require(\"./internal\");\r\n/**\r\n * Interface for the piece of software responsible for keeping track of current active {@link AuthToken} across the driver.\r\n * @interface\r\n * @since 5.14\r\n */\r\nvar AuthTokenManager = /** @class */ (function () {\r\n    function AuthTokenManager() {\r\n    }\r\n    /**\r\n     * Returns a valid token.\r\n     *\r\n     * **Warning**: This method must only ever return auth information belonging to the same identity.\r\n     * Switching identities using the `AuthTokenManager` is undefined behavior.\r\n     *\r\n     * @returns {Promise<AuthToken>|AuthToken} The valid auth token or a promise for a valid auth token\r\n     */\r\n    AuthTokenManager.prototype.getToken = function () {\r\n        throw new Error('Not Implemented');\r\n    };\r\n    /**\r\n     * Handles an error notification emitted by the server if a security error happened.\r\n     *\r\n     * @param {AuthToken} token The expired token.\r\n     * @param {`Neo.ClientError.Security.${string}`} securityErrorCode the security error code returned by the server\r\n     * @return {boolean} whether the exception was handled by the manager, so the driver knows if it can be retried..\r\n     */\r\n    AuthTokenManager.prototype.handleSecurityException = function (token, securityErrorCode) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    return AuthTokenManager;\r\n}());\r\nexports.default = AuthTokenManager;\r\n/**\r\n * Interface which defines an {@link AuthToken} with an expiration data time associated\r\n * @interface\r\n * @since 5.14\r\n */\r\nvar AuthTokenAndExpiration = /** @class */ (function () {\r\n    function AuthTokenAndExpiration() {\r\n        /**\r\n         * The {@link AuthToken} used for authenticate connections.\r\n         *\r\n         * @type {AuthToken}\r\n         * @see {auth}\r\n         */\r\n        this.token = auth_1.default.none();\r\n        /**\r\n         * The expected expiration date of the auth token.\r\n         *\r\n         * This information will be used for triggering the auth token refresh\r\n         * in managers created with {@link authTokenManagers#bearer}.\r\n         *\r\n         * If this value is not defined, the {@link AuthToken} will be considered valid\r\n         * until a `Neo.ClientError.Security.TokenExpired` error happens.\r\n         *\r\n         * @type {Date|undefined}\r\n         */\r\n        this.expiration = undefined;\r\n    }\r\n    return AuthTokenAndExpiration;\r\n}());\r\nexports.AuthTokenAndExpiration = AuthTokenAndExpiration;\r\n/**\r\n * Defines the object which holds the common {@link AuthTokenManager} used in the Driver\r\n */\r\nvar AuthTokenManagers = /** @class */ (function () {\r\n    function AuthTokenManagers() {\r\n    }\r\n    /**\r\n     * Creates a {@link AuthTokenManager} for handle {@link AuthToken} which is expires.\r\n     *\r\n     * **Warning**: `tokenProvider` must only ever return auth information belonging to the same identity.\r\n     * Switching identities using the `AuthTokenManager` is undefined behavior.\r\n     *\r\n     * @param {object} param0 - The params\r\n     * @param {function(): Promise<AuthTokenAndExpiration>} param0.tokenProvider - Retrieves a new valid auth token.\r\n     * Must only ever return auth information belonging to the same identity.\r\n     * @returns {AuthTokenManager} The temporal auth data manager.\r\n     */\r\n    AuthTokenManagers.prototype.bearer = function (_a) {\r\n        var tokenProvider = _a.tokenProvider;\r\n        if (typeof tokenProvider !== 'function') {\r\n            throw new TypeError(\"tokenProvider should be function, but got: \".concat(typeof tokenProvider));\r\n        }\r\n        return new ExpirationBasedAuthTokenManager(tokenProvider, [\r\n            'Neo.ClientError.Security.Unauthorized',\r\n            'Neo.ClientError.Security.TokenExpired'\r\n        ]);\r\n    };\r\n    /**\r\n     * Creates a {@link AuthTokenManager} for handle {@link AuthToken} and password rotation.\r\n     *\r\n     * **Warning**: `tokenProvider` must only ever return auth information belonging to the same identity.\r\n     * Switching identities using the `AuthTokenManager` is undefined behavior.\r\n     *\r\n     * @param {object} param0 - The params\r\n     * @param {function(): Promise<AuthToken>} param0.tokenProvider - Retrieves a new valid auth token.\r\n     * Must only ever return auth information belonging to the same identity.\r\n     * @returns {AuthTokenManager} The basic auth data manager.\r\n     */\r\n    AuthTokenManagers.prototype.basic = function (_a) {\r\n        var _this = this;\r\n        var tokenProvider = _a.tokenProvider;\r\n        if (typeof tokenProvider !== 'function') {\r\n            throw new TypeError(\"tokenProvider should be function, but got: \".concat(typeof tokenProvider));\r\n        }\r\n        return new ExpirationBasedAuthTokenManager(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = {};\r\n                        return [4 /*yield*/, tokenProvider()];\r\n                    case 1: return [2 /*return*/, (_a.token = _b.sent(), _a)];\r\n                }\r\n            });\r\n        }); }, ['Neo.ClientError.Security.Unauthorized']);\r\n    };\r\n    return AuthTokenManagers;\r\n}());\r\n/**\r\n * Holds the common {@link AuthTokenManagers} used in the Driver.\r\n */\r\nvar authTokenManagers = new AuthTokenManagers();\r\nexports.authTokenManagers = authTokenManagers;\r\nObject.freeze(authTokenManagers);\r\n/**\r\n * Create a {@link AuthTokenManager} for handle static {@link AuthToken}\r\n *\r\n * @private\r\n * @param {param} args - The args\r\n * @param {AuthToken} args.authToken - The static auth token which will always used in the driver.\r\n * @returns {AuthTokenManager} The temporal auth data manager.\r\n */\r\nfunction staticAuthTokenManager(_a) {\r\n    var authToken = _a.authToken;\r\n    return new StaticAuthTokenManager(authToken);\r\n}\r\nexports.staticAuthTokenManager = staticAuthTokenManager;\r\nvar TokenRefreshObservable = /** @class */ (function () {\r\n    function TokenRefreshObservable(_subscribers) {\r\n        if (_subscribers === void 0) { _subscribers = []; }\r\n        this._subscribers = _subscribers;\r\n    }\r\n    TokenRefreshObservable.prototype.subscribe = function (sub) {\r\n        this._subscribers.push(sub);\r\n    };\r\n    TokenRefreshObservable.prototype.onCompleted = function (data) {\r\n        this._subscribers.forEach(function (sub) { return sub.onCompleted(data); });\r\n    };\r\n    TokenRefreshObservable.prototype.onError = function (error) {\r\n        this._subscribers.forEach(function (sub) { return sub.onError(error); });\r\n    };\r\n    return TokenRefreshObservable;\r\n}());\r\nvar ExpirationBasedAuthTokenManager = /** @class */ (function () {\r\n    function ExpirationBasedAuthTokenManager(_tokenProvider, _handledSecurityCodes, _currentAuthData, _refreshObservable) {\r\n        this._tokenProvider = _tokenProvider;\r\n        this._handledSecurityCodes = _handledSecurityCodes;\r\n        this._currentAuthData = _currentAuthData;\r\n        this._refreshObservable = _refreshObservable;\r\n    }\r\n    ExpirationBasedAuthTokenManager.prototype.getToken = function () {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(this._currentAuthData === undefined ||\r\n                            (this._currentAuthData.expiration !== undefined &&\r\n                                this._currentAuthData.expiration < new Date()))) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._refreshAuthToken()];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, (_a = this._currentAuthData) === null || _a === void 0 ? void 0 : _a.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ExpirationBasedAuthTokenManager.prototype.handleSecurityException = function (token, securityErrorCode) {\r\n        var _a;\r\n        if (this._handledSecurityCodes.includes(securityErrorCode)) {\r\n            if (internal_1.util.equals(token, (_a = this._currentAuthData) === null || _a === void 0 ? void 0 : _a.token)) {\r\n                this._scheduleRefreshAuthToken();\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ExpirationBasedAuthTokenManager.prototype._scheduleRefreshAuthToken = function (observer) {\r\n        var _this = this;\r\n        if (this._refreshObservable === undefined) {\r\n            this._currentAuthData = undefined;\r\n            this._refreshObservable = new TokenRefreshObservable();\r\n            Promise.resolve(this._tokenProvider())\r\n                .then(function (data) {\r\n                var _a;\r\n                _this._currentAuthData = data;\r\n                (_a = _this._refreshObservable) === null || _a === void 0 ? void 0 : _a.onCompleted(data);\r\n            })\r\n                .catch(function (error) {\r\n                var _a;\r\n                (_a = _this._refreshObservable) === null || _a === void 0 ? void 0 : _a.onError(error);\r\n            })\r\n                .finally(function () {\r\n                _this._refreshObservable = undefined;\r\n            });\r\n        }\r\n        if (observer !== undefined) {\r\n            this._refreshObservable.subscribe(observer);\r\n        }\r\n    };\r\n    ExpirationBasedAuthTokenManager.prototype._refreshAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                            _this._scheduleRefreshAuthToken({\r\n                                onCompleted: resolve,\r\n                                onError: reject\r\n                            });\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ExpirationBasedAuthTokenManager;\r\n}());\r\nvar StaticAuthTokenManager = /** @class */ (function () {\r\n    function StaticAuthTokenManager(_authToken) {\r\n        this._authToken = _authToken;\r\n    }\r\n    StaticAuthTokenManager.prototype.getToken = function () {\r\n        return this._authToken;\r\n    };\r\n    StaticAuthTokenManager.prototype.handleSecurityException = function (_, __) {\r\n        return false;\r\n    };\r\n    return StaticAuthTokenManager;\r\n}());\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.InternalConfig = exports.Config = void 0;\r\n/**\r\n * The Neo4j Driver configuration.\r\n *\r\n * @interface\r\n */\r\nvar Config = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @private\r\n     */\r\n    function Config() {\r\n        /**\r\n         * Encryption level\r\n         *\r\n         * @type {'ENCRYPTION_ON'|'ENCRYPTION_OFF'|undefined}\r\n         */\r\n        this.encrypted = undefined;\r\n        /**\r\n         * Trust strategy to use if encryption is enabled.\r\n         *\r\n         * There is no mode to disable trust other than disabling encryption altogether. The reason for\r\n         * this is that if you don't know who you are talking to, it is easy for an\r\n         * attacker to hijack your encrypted connection, rendering encryption pointless.\r\n         *\r\n         * TRUST_SYSTEM_CA_SIGNED_CERTIFICATES is the default choice. For NodeJS environments, this\r\n         * means that you trust whatever certificates are in the default trusted certificate\r\n         * store of the underlying system. For Browser environments, the trusted certificate\r\n         * store is usually managed by the browser. Refer to your system or browser documentation\r\n         * if you want to explicitly add a certificate as trusted.\r\n         *\r\n         * TRUST_CUSTOM_CA_SIGNED_CERTIFICATES is another option for trust verification -\r\n         * whenever we establish an encrypted connection, we ensure the host is using\r\n         * an encryption certificate that is in, or is signed by, a certificate given\r\n         * as trusted through configuration. This option is only available for NodeJS environments.\r\n         *\r\n         * TRUST_ALL_CERTIFICATES means that you trust everything without any verifications\r\n         * steps carried out.  This option is only available for NodeJS environments and should not\r\n         * be used on production systems.\r\n         *\r\n         * @type {'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'|'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES'|'TRUST_ALL_CERTIFICATES'|undefined}\r\n         */\r\n        this.trust = undefined;\r\n        /**\r\n         * List of one or more paths to trusted encryption certificates.\r\n         *\r\n         * This only works in the NodeJS bundle,\r\n         * and only matters if you use \"TRUST_CUSTOM_CA_SIGNED_CERTIFICATES\".\r\n         *\r\n         * The certificate files should be in regular X.509 PEM format.\r\n         *\r\n         * For instance, ['./trusted.pem']\r\n         *\r\n         * @type {?string[]}\r\n         * @see {@link Config#trust}\r\n         */\r\n        this.trustedCertificates = [];\r\n        /**\r\n         * The maximum total number of connections allowed to be managed by the connection pool, per host.\r\n         *\r\n         * This includes both in-use and idle connections.\r\n         *\r\n         * **Default**: ```100```\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.maxConnectionPoolSize = 100;\r\n        /**\r\n         * The maximum allowed lifetime for a pooled connection in milliseconds.\r\n         *\r\n         * Pooled connections older than this\r\n         * threshold will be closed and removed from the pool. Such discarding happens during connection acquisition\r\n         * so that new session is never backed by an old connection. Setting this option to a low value will cause\r\n         * a high connection churn and might result in a performance hit. It is recommended to set maximum lifetime\r\n         * to a slightly smaller value than the one configured in network equipment (load balancer, proxy, firewall,\r\n         * etc. can also limit maximum connection lifetime). No maximum lifetime limit is imposed by default. Zero\r\n         * and negative values result in lifetime not being checked.\r\n         *\r\n         * **Default**: ```60 * 60 * 1000``` (1 hour)\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.maxConnectionLifetime = 60 * 60 * 1000; // 1 hour\r\n        /**\r\n         * The maximum amount of time to wait to acquire a connection from the pool (to either create a new\r\n         * connection or borrow an existing one).\r\n         *\r\n         * **Default**: ```60000``` (1 minute)\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.connectionAcquisitionTimeout = 60000; // 1 minute\r\n        /**\r\n         * Specify the maximum time in milliseconds transactions are allowed to retry via\r\n         * {@link Session#executeRead} and {@link Session#executeWrite} functions.\r\n         *\r\n         * These functions will retry the given unit of work on `ServiceUnavailable`, `SessionExpired` and transient\r\n         * errors with exponential backoff using an initial delay of 1 second.\r\n         *\r\n         * **Default**: ```30000``` (30 seconds)\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.maxTransactionRetryTime = 30000; // 30 seconds\r\n        /**\r\n         * Specify the maximum time in milliseconds the connection can be idle without needing\r\n         * to perform a liveness check on acquire from the pool.\r\n         *\r\n         * Pooled connections that have been idle in the pool for longer than this\r\n         * timeout will be tested before they are used again, to ensure they are still live.\r\n         * If this option is set too low, an additional network call will be incurred\r\n         * when acquiring a connection, which causes a performance hit.\r\n         *\r\n         * If this is set high, you may receive sessions that are backed by no longer\r\n         * live connections, which will lead to exceptions in your application.\r\n         * Assuming the database is running, these exceptions will go away if you retry\r\n         * acquiring sessions.\r\n         *\r\n         * Hence, this parameter tunes a balance between the likelihood of your application\r\n         * seeing connection problems, and performance.\r\n         *\r\n         * You normally should not need to tune this parameter. No connection liveliness\r\n         * check is done by default. Value 0 means connections will always be tested for\r\n         * validity and negative values mean connections will never be tested.\r\n         *\r\n         * **Default**: ```undefined``` (Disabled)\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.connectionLivenessCheckTimeout = undefined; // Disabled\r\n        /**\r\n         * Specify socket connection timeout in milliseconds.\r\n         *\r\n         * Negative and zero values result in no timeout being applied.\r\n         * Connection establishment will be then bound by the timeout configured\r\n         * on the operating system level.\r\n         *\r\n         * **Default**: ```30000``` (30 seconds)\r\n         *\r\n         * @type {number|undefined}\r\n         */\r\n        this.connectionTimeout = 30000; // 30 seconds\r\n        /**\r\n         * Make this driver always return native JavaScript numbers for integer values, instead of the\r\n         * dedicated {@link Integer} class.\r\n         *\r\n         * Values that do not fit in native number bit range will be represented as `Number.NEGATIVE_INFINITY` or `Number.POSITIVE_INFINITY`.\r\n         *\r\n         * **Warning:** {@link ResultSummary} It is not always safe to enable this setting when JavaScript applications are not the only ones\r\n         * interacting with the database. Stored numbers might in such case be not representable by native\r\n         * `Number` type and thus the driver will return lossy values. This might also happen when data was\r\n         * initially imported using neo4j import tool and contained numbers larger than\r\n         * `Number.MAX_SAFE_INTEGER`. Driver will then return positive infinity, which is lossy.\r\n         *\r\n         * **Default**: ```false```\r\n         *\r\n         * Default value for this option is `false` because native JavaScript numbers might result\r\n         * in loss of precision in the general case.\r\n         *\r\n         * @type {boolean|undefined}\r\n         */\r\n        this.disableLosslessIntegers = false;\r\n        /**\r\n         * Make this driver always return native Javascript `BigInt` for integer values,\r\n         * instead of the dedicated {@link Integer} class or `Number`.\r\n         *\r\n         * **Warning:** `BigInt` doesn't implement the method `toJSON`. To serialize it as `json`,\r\n         * it's needed to add a custom implementation of the `toJSON` on the\r\n         * `BigInt.prototype`. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt#use_within_json.\r\n         *\r\n         * **Default**: ```false``` (for backwards compatibility)\r\n         *\r\n         * @type {boolean|undefined}\r\n         */\r\n        this.useBigInt = false;\r\n        /**\r\n         * Specify the logging configuration for the driver. Object should have two properties `level` and `logger`.\r\n         *\r\n         * Property `level` represents the logging level which should be one of: 'error', 'warn', 'info' or 'debug'. This property is optional and\r\n         * its default value is 'info'. Levels have priorities: 'error': 0, 'warn': 1, 'info': 2, 'debug': 3. Enabling a certain level also enables all\r\n         * levels with lower priority. For example: 'error', 'warn' and 'info' will be logged when 'info' level is configured.\r\n         *\r\n         * Property `logger` represents the logging function which will be invoked for every log call with an acceptable level. The function should\r\n         * take two string arguments `level` and `message`. The function should not execute any blocking or long-running operations\r\n         * because it is often executed on a hot path.\r\n         *\r\n         * No logging is done by default. See `neo4j.logging` object that contains predefined logging implementations.\r\n         *\r\n         * @type {LoggingConfig|undefined}\r\n         * @see {@link logging}\r\n         */\r\n        this.logging = undefined;\r\n        /**\r\n         * Specify a custom server address resolver function used by the routing driver to resolve the initial address used to create the driver.\r\n         *\r\n         * Such resolution happens:\r\n         *   * during the very first rediscovery when driver is created\r\n         *   * when all the known routers from the current routing table have failed and driver needs to fallback to the initial address\r\n         *\r\n         *  In NodeJS environment driver defaults to performing a DNS resolution of the initial address using 'dns' module.\r\n         *  In browser environment driver uses the initial address as-is.\r\n         *  Value should be a function that takes a single string argument - the initial address. It should return an array of new addresses.\r\n         *  Address is a string of shape '<host>:<port>'. Provided function can return either a Promise resolved with an array of addresses\r\n         *  or array of addresses directly.\r\n         *\r\n         * @type {function(address: string) {} |undefined}\r\n         */\r\n        this.resolver = undefined;\r\n        /**\r\n         * Configure filter for Notification objects returned in {@link ResultSummary#notifications}.\r\n         *\r\n         * See {@link SessionConfig#notificationFilter} for usage instructions.\r\n         *\r\n         * @type {NotificationFilter|undefined}\r\n         */\r\n        this.notificationFilter = undefined;\r\n        /**\r\n         * Optionally override the default user agent name.\r\n         *\r\n         * **Default**: ```'neo4j-javascript/<version>'```\r\n         *\r\n         * @type {string|undefined}\r\n         */\r\n        this.userAgent = undefined;\r\n        /**\r\n         * Specify if telemetry collection is disabled.\r\n         *\r\n         * By default, the driver will send anonymous usage statistics to the server it connects to if the server requests those.\r\n         * By setting ``telemetryDisabled=true``, the driver will not send any telemetry data.\r\n         *\r\n         * The driver transmits the following information:\r\n         *\r\n         * Every time one of the following APIs is used to execute a query (for the first time), the server is informed of this\r\n         * (without any further information like arguments, client identifiers, etc.):\r\n         *\r\n         * * {@link Driver#executeQuery}\r\n         * * {@link Session#run}\r\n         * * {@link Session#beginTransaction}\r\n         * * {@link Session#executeRead}\r\n         * * {@link Session#executeWrite}\r\n         * * {@link Session#writeTransaction}\r\n         * * {@link Session#readTransaction}\r\n         * * The reactive counterparts of methods above.\r\n         *\r\n         * Metrics are only collected when enabled both in server and driver instances.\r\n         *\r\n         * **Default**: ```false```\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.telemetryDisabled = false;\r\n        /**\r\n         * Client Certificate used for mutual TLS.\r\n         *\r\n         * A {@link ClientCertificateProvider} can be configure for scenarios\r\n         * where the {@link ClientCertificate} might change over time.\r\n         *\r\n         * @type {ClientCertificate|ClientCertificateProvider|undefined}\r\n         * @since 5.27\r\n         */\r\n        this.clientCertificate = undefined;\r\n    }\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\nvar InternalConfig = /** @class */ (function (_super) {\r\n    __extends(InternalConfig, _super);\r\n    function InternalConfig() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return InternalConfig;\r\n}(Config));\r\nexports.InternalConfig = InternalConfig;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveCertificateProvider = exports.clientCertificateProviders = exports.RotatingClientCertificateProvider = exports.ClientCertificateProvider = void 0;\r\nvar json = __importStar(require(\"./json\"));\r\n/**\r\n * Represents KeyFile represented as file.\r\n *\r\n * @typedef {object} KeyFileObject\r\n * @property {string} path - The path of the file\r\n * @property {string|undefined} password - the password of the key. If none,\r\n * the password defined at {@link ClientCertificate} will be used.\r\n */\r\n/**\r\n * Holds the Client TLS certificate information.\r\n *\r\n * Browser instances of the driver should configure the certificate\r\n * in the system.\r\n *\r\n * Files defined in the {@link ClientCertificate#certfile}\r\n * and {@link ClientCertificate#keyfile} will read and loaded to\r\n * memory to fill the fields `cert` and `key` in security context.\r\n *\r\n * @interface\r\n * @see https://nodejs.org/api/tls.html#tlscreatesecurecontextoptions\r\n * @since 5.27\r\n */\r\nvar ClientCertificate = /** @class */ (function () {\r\n    function ClientCertificate() {\r\n        /**\r\n         * The path to client certificate file.\r\n         *\r\n         * @type {string|string[]}\r\n         */\r\n        this.certfile = '';\r\n        /**\r\n         * The path to the key file.\r\n         *\r\n         * @type {string|string[]|KeyFileObject|KeyFileObject[]}\r\n         */\r\n        this.keyfile = '';\r\n        /**\r\n         * The key's password.\r\n         *\r\n         * @type {string|undefined}\r\n         */\r\n        this.password = undefined;\r\n    }\r\n    return ClientCertificate;\r\n}());\r\nexports.default = ClientCertificate;\r\n/**\r\n * Provides a client certificate to the driver for mutual TLS.\r\n *\r\n * The driver will call {@link ClientCertificateProvider#hasUpdate} to check if the client wants to update the certificate.\r\n * If so, it will call {@link ClientCertificateProvider#getClientCertificate} to get the new certificate.\r\n *\r\n * The certificate is only used as a second factor for authentication authenticating the client.\r\n * The DMBS user still needs to authenticate with an authentication token.\r\n *\r\n * All implementations of this interface must be thread-safe and non-blocking for caller threads.\r\n * For instance, IO operations must not be done on the calling thread.\r\n *\r\n * Note that the work done in the methods of this interface count towards the connectionAcquisition.\r\n * Should fetching the certificate be particularly slow, it might be necessary to increase the timeout.\r\n *\r\n * @interface\r\n * @since 5.27\r\n */\r\nvar ClientCertificateProvider = /** @class */ (function () {\r\n    function ClientCertificateProvider() {\r\n    }\r\n    /**\r\n     * Indicates whether the client wants the driver to update the certificate.\r\n     *\r\n     * @returns {Promise<boolean>|boolean} true if the client wants the driver to update the certificate\r\n     */\r\n    ClientCertificateProvider.prototype.hasUpdate = function () {\r\n        throw new Error('Not Implemented');\r\n    };\r\n    /**\r\n     * Returns the certificate to use for new connections.\r\n     *\r\n     * Will be called by the driver after {@link ClientCertificateProvider#hasUpdate} returned true\r\n     * or when the driver establishes the first connection.\r\n     *\r\n     * @returns {Promise<ClientCertificate>|ClientCertificate} the certificate to use for new connections\r\n     */\r\n    ClientCertificateProvider.prototype.getClientCertificate = function () {\r\n        throw new Error('Not Implemented');\r\n    };\r\n    return ClientCertificateProvider;\r\n}());\r\nexports.ClientCertificateProvider = ClientCertificateProvider;\r\n/**\r\n * Interface for  {@link ClientCertificateProvider} which provides update certificate function.\r\n * @interface\r\n * @since 5.27\r\n */\r\nvar RotatingClientCertificateProvider = /** @class */ (function (_super) {\r\n    __extends(RotatingClientCertificateProvider, _super);\r\n    function RotatingClientCertificateProvider() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates the certificate stored in the provider.\r\n     *\r\n     * To be called by user-code when a new client certificate is available.\r\n     *\r\n     * @param {ClientCertificate} certificate - the new certificate\r\n     * @throws {TypeError} If initialCertificate is not a ClientCertificate.\r\n     */\r\n    RotatingClientCertificateProvider.prototype.updateCertificate = function (certificate) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    return RotatingClientCertificateProvider;\r\n}(ClientCertificateProvider));\r\nexports.RotatingClientCertificateProvider = RotatingClientCertificateProvider;\r\n/**\r\n * Defines the object which holds the common {@link ClientCertificateProviders} used in the Driver\r\n *\r\n * @since 5.27\r\n */\r\nvar ClientCertificateProviders = /** @class */ (function () {\r\n    function ClientCertificateProviders() {\r\n    }\r\n    /**\r\n     *\r\n     * @param {object} param0 - The params\r\n     * @param {ClientCertificate} param0.initialCertificate - The certificated used by the driver until {@link RotatingClientCertificateProvider#updateCertificate} get called.\r\n     *\r\n     * @returns {RotatingClientCertificateProvider} The rotating client certificate provider\r\n     * @throws {TypeError} If initialCertificate is not a ClientCertificate.\r\n     */\r\n    ClientCertificateProviders.prototype.rotating = function (_a) {\r\n        var initialCertificate = _a.initialCertificate;\r\n        if (initialCertificate == null || !isClientClientCertificate(initialCertificate)) {\r\n            throw new TypeError(\"initialCertificate should be ClientCertificate, but got \".concat(json.stringify(initialCertificate)));\r\n        }\r\n        var certificate = __assign({}, initialCertificate);\r\n        return new InternalRotatingClientCertificateProvider(certificate);\r\n    };\r\n    return ClientCertificateProviders;\r\n}());\r\n/**\r\n * Holds the common {@link ClientCertificateProviders} used in the Driver.\r\n *\r\n * @since 5.27\r\n */\r\nvar clientCertificateProviders = new ClientCertificateProviders();\r\nexports.clientCertificateProviders = clientCertificateProviders;\r\nObject.freeze(clientCertificateProviders);\r\n/**\r\n * Resolves ClientCertificate or ClientCertificateProvider to a ClientCertificateProvider\r\n *\r\n * Method validates the input.\r\n *\r\n * @private\r\n * @param input\r\n * @returns {ClientCertificateProvider?} A client certificate provider if provided a ClientCertificate or a ClientCertificateProvider\r\n * @throws {TypeError} If input is not a ClientCertificate, ClientCertificateProvider, undefined or null.\r\n */\r\nfunction resolveCertificateProvider(input) {\r\n    if (input == null) {\r\n        return undefined;\r\n    }\r\n    if (typeof input === 'object' && 'hasUpdate' in input && 'getClientCertificate' in input &&\r\n        typeof input.getClientCertificate === 'function' && typeof input.hasUpdate === 'function') {\r\n        return input;\r\n    }\r\n    if (isClientClientCertificate(input)) {\r\n        var certificate_1 = __assign({}, input);\r\n        return {\r\n            getClientCertificate: function () { return certificate_1; },\r\n            hasUpdate: function () { return false; }\r\n        };\r\n    }\r\n    throw new TypeError(\"clientCertificate should be configured with ClientCertificate or ClientCertificateProvider, but got \".concat(json.stringify(input)));\r\n}\r\nexports.resolveCertificateProvider = resolveCertificateProvider;\r\n/**\r\n * Verify if object is a client certificate\r\n * @private\r\n * @param maybeClientCertificate - Maybe the certificate\r\n * @returns {boolean} if maybeClientCertificate is a client certificate object\r\n */\r\nfunction isClientClientCertificate(maybeClientCertificate) {\r\n    return maybeClientCertificate != null &&\r\n        typeof maybeClientCertificate === 'object' &&\r\n        'certfile' in maybeClientCertificate && isCertFile(maybeClientCertificate.certfile) &&\r\n        'keyfile' in maybeClientCertificate && isKeyFile(maybeClientCertificate.keyfile) &&\r\n        isStringOrNotPresent('password', maybeClientCertificate);\r\n}\r\n/**\r\n * Check value is a cert file\r\n * @private\r\n * @param {any} value the value\r\n * @returns {boolean} is a cert file\r\n */\r\nfunction isCertFile(value) {\r\n    return isString(value) || isArrayOf(value, isString);\r\n}\r\n/**\r\n * Check if the value is a keyfile.\r\n *\r\n * @private\r\n * @param {any} maybeKeyFile might be a keyfile value\r\n * @returns {boolean} the value is a KeyFile\r\n */\r\nfunction isKeyFile(maybeKeyFile) {\r\n    function check(obj) {\r\n        return typeof obj === 'string' ||\r\n            (obj != null &&\r\n                typeof obj === 'object' &&\r\n                'path' in obj && typeof obj.path === 'string' &&\r\n                isStringOrNotPresent('password', obj));\r\n    }\r\n    return check(maybeKeyFile) || isArrayOf(maybeKeyFile, check);\r\n}\r\n/**\r\n * Verify if value is string\r\n *\r\n * @private\r\n * @param {any} value the value\r\n * @returns {boolean} is string\r\n */\r\nfunction isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n/**\r\n * Verifies if value is a array of type\r\n *\r\n * @private\r\n * @param {any} value the value\r\n * @param {function} isType the type checker\r\n * @returns {boolean} value is array of type\r\n */\r\nfunction isArrayOf(value, isType, allowEmpty) {\r\n    if (allowEmpty === void 0) { allowEmpty = false; }\r\n    return Array.isArray(value) &&\r\n        (allowEmpty || value.length > 0) &&\r\n        value.filter(isType).length === value.length;\r\n}\r\n/**\r\n * Verify if valueName is present in the object and is a string, or not present at all.\r\n *\r\n * @private\r\n * @param {string} valueName The value in the object\r\n * @param {object} obj The object\r\n * @returns {boolean} if the value is present in object as string or not present\r\n */\r\nfunction isStringOrNotPresent(valueName, obj) {\r\n    return !(valueName in obj) || obj[valueName] == null || typeof obj[valueName] === 'string';\r\n}\r\n/**\r\n * Internal implementation\r\n *\r\n * @private\r\n */\r\nvar InternalRotatingClientCertificateProvider = /** @class */ (function () {\r\n    function InternalRotatingClientCertificateProvider(_certificate, _updated) {\r\n        if (_updated === void 0) { _updated = false; }\r\n        this._certificate = _certificate;\r\n        this._updated = _updated;\r\n    }\r\n    /**\r\n     *\r\n     * @returns {boolean|Promise<boolean>}\r\n     */\r\n    InternalRotatingClientCertificateProvider.prototype.hasUpdate = function () {\r\n        try {\r\n            return this._updated;\r\n        }\r\n        finally {\r\n            this._updated = false;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @returns {ClientCertificate|Promise<ClientCertificate>}\r\n     */\r\n    InternalRotatingClientCertificateProvider.prototype.getClientCertificate = function () {\r\n        return this._certificate;\r\n    };\r\n    /**\r\n     *\r\n     * @param certificate\r\n     * @returns {void}\r\n     */\r\n    InternalRotatingClientCertificateProvider.prototype.updateCertificate = function (certificate) {\r\n        if (!isClientClientCertificate(certificate)) {\r\n            throw new TypeError(\"certificate should be ClientCertificate, but got \".concat(json.stringify(certificate)));\r\n        }\r\n        this._certificate = __assign({}, certificate);\r\n        this._updated = true;\r\n    };\r\n    return InternalRotatingClientCertificateProvider;\r\n}());\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EagerResult = exports.Result = exports.Stats = exports.QueryStatistics = exports.ProfiledPlan = exports.Plan = exports.GqlStatusObject = exports.Notification = exports.ServerInfo = exports.queryType = exports.ResultSummary = exports.Record = exports.isPathSegment = exports.PathSegment = exports.isPath = exports.Path = exports.isUnboundRelationship = exports.UnboundRelationship = exports.isRelationship = exports.Relationship = exports.isNode = exports.Node = exports.Time = exports.LocalTime = exports.LocalDateTime = exports.isTime = exports.isLocalTime = exports.isLocalDateTime = exports.isDuration = exports.isDateTime = exports.isDate = exports.Duration = exports.DateTime = exports.Date = exports.Point = exports.isPoint = exports.internal = exports.toString = exports.toNumber = exports.inSafeRange = exports.isInt = exports.int = exports.Integer = exports.error = exports.isRetriableError = exports.GQLError = exports.newGQLError = exports.Neo4jError = exports.newError = exports.authTokenManagers = void 0;\r\nexports.resolveCertificateProvider = exports.clientCertificateProviders = exports.notificationFilterMinimumSeverityLevel = exports.notificationFilterDisabledClassification = exports.notificationFilterDisabledCategory = exports.notificationSeverityLevel = exports.notificationClassification = exports.notificationCategory = exports.resultTransformers = exports.routing = exports.staticAuthTokenManager = exports.bookmarkManager = exports.auth = exports.json = exports.driver = exports.types = exports.Driver = exports.Session = exports.TransactionPromise = exports.ManagedTransaction = exports.Transaction = exports.Connection = exports.Releasable = exports.ConnectionProvider = void 0;\r\nvar error_1 = require(\"./error\");\r\nObject.defineProperty(exports, \"newError\", { enumerable: true, get: function () { return error_1.newError; } });\r\nObject.defineProperty(exports, \"Neo4jError\", { enumerable: true, get: function () { return error_1.Neo4jError; } });\r\nObject.defineProperty(exports, \"newGQLError\", { enumerable: true, get: function () { return error_1.newGQLError; } });\r\nObject.defineProperty(exports, \"GQLError\", { enumerable: true, get: function () { return error_1.GQLError; } });\r\nObject.defineProperty(exports, \"isRetriableError\", { enumerable: true, get: function () { return error_1.isRetriableError; } });\r\nvar integer_1 = __importStar(require(\"./integer\"));\r\nexports.Integer = integer_1.default;\r\nObject.defineProperty(exports, \"int\", { enumerable: true, get: function () { return integer_1.int; } });\r\nObject.defineProperty(exports, \"isInt\", { enumerable: true, get: function () { return integer_1.isInt; } });\r\nObject.defineProperty(exports, \"inSafeRange\", { enumerable: true, get: function () { return integer_1.inSafeRange; } });\r\nObject.defineProperty(exports, \"toNumber\", { enumerable: true, get: function () { return integer_1.toNumber; } });\r\nObject.defineProperty(exports, \"toString\", { enumerable: true, get: function () { return integer_1.toString; } });\r\nvar temporal_types_1 = require(\"./temporal-types\");\r\nObject.defineProperty(exports, \"Date\", { enumerable: true, get: function () { return temporal_types_1.Date; } });\r\nObject.defineProperty(exports, \"DateTime\", { enumerable: true, get: function () { return temporal_types_1.DateTime; } });\r\nObject.defineProperty(exports, \"Duration\", { enumerable: true, get: function () { return temporal_types_1.Duration; } });\r\nObject.defineProperty(exports, \"isDate\", { enumerable: true, get: function () { return temporal_types_1.isDate; } });\r\nObject.defineProperty(exports, \"isDateTime\", { enumerable: true, get: function () { return temporal_types_1.isDateTime; } });\r\nObject.defineProperty(exports, \"isDuration\", { enumerable: true, get: function () { return temporal_types_1.isDuration; } });\r\nObject.defineProperty(exports, \"isLocalDateTime\", { enumerable: true, get: function () { return temporal_types_1.isLocalDateTime; } });\r\nObject.defineProperty(exports, \"isLocalTime\", { enumerable: true, get: function () { return temporal_types_1.isLocalTime; } });\r\nObject.defineProperty(exports, \"isTime\", { enumerable: true, get: function () { return temporal_types_1.isTime; } });\r\nObject.defineProperty(exports, \"LocalDateTime\", { enumerable: true, get: function () { return temporal_types_1.LocalDateTime; } });\r\nObject.defineProperty(exports, \"LocalTime\", { enumerable: true, get: function () { return temporal_types_1.LocalTime; } });\r\nObject.defineProperty(exports, \"Time\", { enumerable: true, get: function () { return temporal_types_1.Time; } });\r\nvar graph_types_1 = require(\"./graph-types\");\r\nObject.defineProperty(exports, \"Node\", { enumerable: true, get: function () { return graph_types_1.Node; } });\r\nObject.defineProperty(exports, \"isNode\", { enumerable: true, get: function () { return graph_types_1.isNode; } });\r\nObject.defineProperty(exports, \"Relationship\", { enumerable: true, get: function () { return graph_types_1.Relationship; } });\r\nObject.defineProperty(exports, \"isRelationship\", { enumerable: true, get: function () { return graph_types_1.isRelationship; } });\r\nObject.defineProperty(exports, \"UnboundRelationship\", { enumerable: true, get: function () { return graph_types_1.UnboundRelationship; } });\r\nObject.defineProperty(exports, \"isUnboundRelationship\", { enumerable: true, get: function () { return graph_types_1.isUnboundRelationship; } });\r\nObject.defineProperty(exports, \"Path\", { enumerable: true, get: function () { return graph_types_1.Path; } });\r\nObject.defineProperty(exports, \"isPath\", { enumerable: true, get: function () { return graph_types_1.isPath; } });\r\nObject.defineProperty(exports, \"PathSegment\", { enumerable: true, get: function () { return graph_types_1.PathSegment; } });\r\nObject.defineProperty(exports, \"isPathSegment\", { enumerable: true, get: function () { return graph_types_1.isPathSegment; } });\r\nvar record_1 = __importDefault(require(\"./record\"));\r\nexports.Record = record_1.default;\r\nvar spatial_types_1 = require(\"./spatial-types\");\r\nObject.defineProperty(exports, \"isPoint\", { enumerable: true, get: function () { return spatial_types_1.isPoint; } });\r\nObject.defineProperty(exports, \"Point\", { enumerable: true, get: function () { return spatial_types_1.Point; } });\r\nvar result_summary_1 = __importStar(require(\"./result-summary\"));\r\nexports.ResultSummary = result_summary_1.default;\r\nObject.defineProperty(exports, \"queryType\", { enumerable: true, get: function () { return result_summary_1.queryType; } });\r\nObject.defineProperty(exports, \"ServerInfo\", { enumerable: true, get: function () { return result_summary_1.ServerInfo; } });\r\nObject.defineProperty(exports, \"Plan\", { enumerable: true, get: function () { return result_summary_1.Plan; } });\r\nObject.defineProperty(exports, \"ProfiledPlan\", { enumerable: true, get: function () { return result_summary_1.ProfiledPlan; } });\r\nObject.defineProperty(exports, \"QueryStatistics\", { enumerable: true, get: function () { return result_summary_1.QueryStatistics; } });\r\nObject.defineProperty(exports, \"Stats\", { enumerable: true, get: function () { return result_summary_1.Stats; } });\r\nvar notification_1 = __importStar(require(\"./notification\"));\r\nexports.Notification = notification_1.default;\r\nObject.defineProperty(exports, \"GqlStatusObject\", { enumerable: true, get: function () { return notification_1.GqlStatusObject; } });\r\nObject.defineProperty(exports, \"notificationCategory\", { enumerable: true, get: function () { return notification_1.notificationCategory; } });\r\nObject.defineProperty(exports, \"notificationClassification\", { enumerable: true, get: function () { return notification_1.notificationClassification; } });\r\nObject.defineProperty(exports, \"notificationSeverityLevel\", { enumerable: true, get: function () { return notification_1.notificationSeverityLevel; } });\r\nvar notification_filter_1 = require(\"./notification-filter\");\r\nObject.defineProperty(exports, \"notificationFilterDisabledCategory\", { enumerable: true, get: function () { return notification_filter_1.notificationFilterDisabledCategory; } });\r\nObject.defineProperty(exports, \"notificationFilterDisabledClassification\", { enumerable: true, get: function () { return notification_filter_1.notificationFilterDisabledClassification; } });\r\nObject.defineProperty(exports, \"notificationFilterMinimumSeverityLevel\", { enumerable: true, get: function () { return notification_filter_1.notificationFilterMinimumSeverityLevel; } });\r\nvar result_1 = __importDefault(require(\"./result\"));\r\nexports.Result = result_1.default;\r\nvar result_eager_1 = __importDefault(require(\"./result-eager\"));\r\nexports.EagerResult = result_eager_1.default;\r\nvar connection_provider_1 = __importStar(require(\"./connection-provider\"));\r\nexports.ConnectionProvider = connection_provider_1.default;\r\nObject.defineProperty(exports, \"Releasable\", { enumerable: true, get: function () { return connection_provider_1.Releasable; } });\r\nvar connection_1 = __importDefault(require(\"./connection\"));\r\nexports.Connection = connection_1.default;\r\nvar transaction_1 = __importDefault(require(\"./transaction\"));\r\nexports.Transaction = transaction_1.default;\r\nvar transaction_managed_1 = __importDefault(require(\"./transaction-managed\"));\r\nexports.ManagedTransaction = transaction_managed_1.default;\r\nvar transaction_promise_1 = __importDefault(require(\"./transaction-promise\"));\r\nexports.TransactionPromise = transaction_promise_1.default;\r\nvar session_1 = __importDefault(require(\"./session\"));\r\nexports.Session = session_1.default;\r\nvar driver_1 = __importStar(require(\"./driver\")), driver = driver_1;\r\nexports.Driver = driver_1.default;\r\nexports.driver = driver;\r\nvar auth_1 = __importDefault(require(\"./auth\"));\r\nexports.auth = auth_1.default;\r\nvar bookmark_manager_1 = require(\"./bookmark-manager\");\r\nObject.defineProperty(exports, \"bookmarkManager\", { enumerable: true, get: function () { return bookmark_manager_1.bookmarkManager; } });\r\nvar auth_token_manager_1 = require(\"./auth-token-manager\");\r\nObject.defineProperty(exports, \"authTokenManagers\", { enumerable: true, get: function () { return auth_token_manager_1.authTokenManagers; } });\r\nObject.defineProperty(exports, \"staticAuthTokenManager\", { enumerable: true, get: function () { return auth_token_manager_1.staticAuthTokenManager; } });\r\nvar driver_2 = require(\"./driver\");\r\nObject.defineProperty(exports, \"routing\", { enumerable: true, get: function () { return driver_2.routing; } });\r\nvar types = __importStar(require(\"./types\"));\r\nexports.types = types;\r\nvar json = __importStar(require(\"./json\"));\r\nexports.json = json;\r\nvar result_transformers_1 = __importDefault(require(\"./result-transformers\"));\r\nexports.resultTransformers = result_transformers_1.default;\r\nvar client_certificate_1 = require(\"./client-certificate\");\r\nObject.defineProperty(exports, \"clientCertificateProviders\", { enumerable: true, get: function () { return client_certificate_1.clientCertificateProviders; } });\r\nObject.defineProperty(exports, \"resolveCertificateProvider\", { enumerable: true, get: function () { return client_certificate_1.resolveCertificateProvider; } });\r\nvar internal = __importStar(require(\"./internal\")); // todo: removed afterwards\r\nexports.internal = internal;\r\n/**\r\n * Object containing string constants representing predefined {@link Neo4jError} codes.\r\n */\r\nvar error = {\r\n    SERVICE_UNAVAILABLE: error_1.SERVICE_UNAVAILABLE,\r\n    SESSION_EXPIRED: error_1.SESSION_EXPIRED,\r\n    PROTOCOL_ERROR: error_1.PROTOCOL_ERROR\r\n};\r\nexports.error = error;\r\n/**\r\n * @private\r\n */\r\nvar forExport = {\r\n    authTokenManagers: auth_token_manager_1.authTokenManagers,\r\n    newError: error_1.newError,\r\n    Neo4jError: error_1.Neo4jError,\r\n    newGQLError: error_1.newGQLError,\r\n    GQLError: error_1.GQLError,\r\n    isRetriableError: error_1.isRetriableError,\r\n    error: error,\r\n    Integer: integer_1.default,\r\n    int: integer_1.int,\r\n    isInt: integer_1.isInt,\r\n    inSafeRange: integer_1.inSafeRange,\r\n    toNumber: integer_1.toNumber,\r\n    toString: integer_1.toString,\r\n    internal: internal,\r\n    isPoint: spatial_types_1.isPoint,\r\n    Point: spatial_types_1.Point,\r\n    Date: temporal_types_1.Date,\r\n    DateTime: temporal_types_1.DateTime,\r\n    Duration: temporal_types_1.Duration,\r\n    isDate: temporal_types_1.isDate,\r\n    isDateTime: temporal_types_1.isDateTime,\r\n    isDuration: temporal_types_1.isDuration,\r\n    isLocalDateTime: temporal_types_1.isLocalDateTime,\r\n    isLocalTime: temporal_types_1.isLocalTime,\r\n    isTime: temporal_types_1.isTime,\r\n    LocalDateTime: temporal_types_1.LocalDateTime,\r\n    LocalTime: temporal_types_1.LocalTime,\r\n    Time: temporal_types_1.Time,\r\n    Node: graph_types_1.Node,\r\n    isNode: graph_types_1.isNode,\r\n    Relationship: graph_types_1.Relationship,\r\n    isRelationship: graph_types_1.isRelationship,\r\n    UnboundRelationship: graph_types_1.UnboundRelationship,\r\n    isUnboundRelationship: graph_types_1.isUnboundRelationship,\r\n    Path: graph_types_1.Path,\r\n    isPath: graph_types_1.isPath,\r\n    PathSegment: graph_types_1.PathSegment,\r\n    isPathSegment: graph_types_1.isPathSegment,\r\n    Record: record_1.default,\r\n    ResultSummary: result_summary_1.default,\r\n    queryType: result_summary_1.queryType,\r\n    ServerInfo: result_summary_1.ServerInfo,\r\n    Notification: notification_1.default,\r\n    GqlStatusObject: notification_1.GqlStatusObject,\r\n    Plan: result_summary_1.Plan,\r\n    ProfiledPlan: result_summary_1.ProfiledPlan,\r\n    QueryStatistics: result_summary_1.QueryStatistics,\r\n    Stats: result_summary_1.Stats,\r\n    Result: result_1.default,\r\n    EagerResult: result_eager_1.default,\r\n    Transaction: transaction_1.default,\r\n    ManagedTransaction: transaction_managed_1.default,\r\n    TransactionPromise: transaction_promise_1.default,\r\n    Session: session_1.default,\r\n    Driver: driver_1.default,\r\n    Connection: connection_1.default,\r\n    Releasable: connection_provider_1.Releasable,\r\n    types: types,\r\n    driver: driver,\r\n    json: json,\r\n    auth: auth_1.default,\r\n    bookmarkManager: bookmark_manager_1.bookmarkManager,\r\n    routing: driver_2.routing,\r\n    resultTransformers: result_transformers_1.default,\r\n    notificationCategory: notification_1.notificationCategory,\r\n    notificationClassification: notification_1.notificationClassification,\r\n    notificationSeverityLevel: notification_1.notificationSeverityLevel,\r\n    notificationFilterDisabledCategory: notification_filter_1.notificationFilterDisabledCategory,\r\n    notificationFilterDisabledClassification: notification_filter_1.notificationFilterDisabledClassification,\r\n    notificationFilterMinimumSeverityLevel: notification_filter_1.notificationFilterMinimumSeverityLevel,\r\n    clientCertificateProviders: client_certificate_1.clientCertificateProviders,\r\n    resolveCertificateProvider: client_certificate_1.resolveCertificateProvider\r\n};\r\nexports.default = forExport;\r\n", "/**\r\n * Returns true if the object is a function.\r\n * @param value The value to check\r\n */\r\nexport function isFunction(value: any): value is (...args: any[]) => any {\r\n  return typeof value === 'function';\r\n}\r\n", "/**\r\n * Used to create Error subclasses until the community moves away from ES5.\r\n *\r\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\r\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\r\n *\r\n * @param createImpl A factory function to create the actual constructor implementation. The returned\r\n * function should be a named function that calls `_super` internally.\r\n */\r\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\r\n  const _super = (instance: any) => {\r\n    Error.call(instance);\r\n    instance.stack = new Error().stack;\r\n  };\r\n\r\n  const ctorFunc = createImpl(_super);\r\n  ctorFunc.prototype = Object.create(Error.prototype);\r\n  ctorFunc.prototype.constructor = ctorFunc;\r\n  return ctorFunc;\r\n}\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface UnsubscriptionError extends Error {\r\n  readonly errors: any[];\r\n}\r\n\r\nexport interface UnsubscriptionErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (errors: any[]): UnsubscriptionError;\r\n}\r\n\r\n/**\r\n * An error thrown when one or more errors have occurred during the\r\n * `unsubscribe` of a {@link Subscription}.\r\n */\r\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\r\n      _super(this);\r\n      this.message = errors\r\n        ? `${errors.length} errors occurred during unsubscription:\r\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\r\n        : '';\r\n      this.name = 'UnsubscriptionError';\r\n      this.errors = errors;\r\n    }\r\n);\r\n", "/**\r\n * Removes an item from an array, mutating it.\r\n * @param arr The array to remove the item from\r\n * @param item The item to remove\r\n */\r\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\r\n  if (arr) {\r\n    const index = arr.indexOf(item);\r\n    0 <= index && arr.splice(index, 1);\r\n  }\r\n}\r\n", "import { isFunction } from './util/isFunction';\r\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\r\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\r\nimport { arrRemove } from './util/arrRemove';\r\n\r\n/**\r\n * Represents a disposable resource, such as the execution of an Observable. A\r\n * Subscription has one important method, `unsubscribe`, that takes no argument\r\n * and just disposes the resource held by the subscription.\r\n *\r\n * Additionally, subscriptions may be grouped together through the `add()`\r\n * method, which will attach a child Subscription to the current Subscription.\r\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\r\n * will be unsubscribed as well.\r\n *\r\n * @class Subscription\r\n */\r\nexport class Subscription implements SubscriptionLike {\r\n  /** @nocollapse */\r\n  public static EMPTY = (() => {\r\n    const empty = new Subscription();\r\n    empty.closed = true;\r\n    return empty;\r\n  })();\r\n\r\n  /**\r\n   * A flag to indicate whether this Subscription has already been unsubscribed.\r\n   */\r\n  public closed = false;\r\n\r\n  private _parentage: Subscription[] | Subscription | null = null;\r\n\r\n  /**\r\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\r\n   * list occurs in the {@link #add} and {@link #remove} methods.\r\n   */\r\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\r\n\r\n  /**\r\n   * @param initialTeardown A function executed first as part of the finalization\r\n   * process that is kicked off when {@link #unsubscribe} is called.\r\n   */\r\n  constructor(private initialTeardown?: () => void) {}\r\n\r\n  /**\r\n   * Disposes the resources held by the subscription. May, for instance, cancel\r\n   * an ongoing Observable execution or cancel any other type of work that\r\n   * started when the Subscription was created.\r\n   * @return {void}\r\n   */\r\n  unsubscribe(): void {\r\n    let errors: any[] | undefined;\r\n\r\n    if (!this.closed) {\r\n      this.closed = true;\r\n\r\n      // Remove this from it's parents.\r\n      const { _parentage } = this;\r\n      if (_parentage) {\r\n        this._parentage = null;\r\n        if (Array.isArray(_parentage)) {\r\n          for (const parent of _parentage) {\r\n            parent.remove(this);\r\n          }\r\n        } else {\r\n          _parentage.remove(this);\r\n        }\r\n      }\r\n\r\n      const { initialTeardown: initialFinalizer } = this;\r\n      if (isFunction(initialFinalizer)) {\r\n        try {\r\n          initialFinalizer();\r\n        } catch (e) {\r\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\r\n        }\r\n      }\r\n\r\n      const { _finalizers } = this;\r\n      if (_finalizers) {\r\n        this._finalizers = null;\r\n        for (const finalizer of _finalizers) {\r\n          try {\r\n            execFinalizer(finalizer);\r\n          } catch (err) {\r\n            errors = errors ?? [];\r\n            if (err instanceof UnsubscriptionError) {\r\n              errors = [...errors, ...err.errors];\r\n            } else {\r\n              errors.push(err);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (errors) {\r\n        throw new UnsubscriptionError(errors);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\r\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\r\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\r\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\r\n   *\r\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\r\n   * subscription to a any subscription will result in no operation. (A noop).\r\n   *\r\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\r\n   * operation at all. (A noop).\r\n   *\r\n   * `Subscription` instances that are added to this instance will automatically remove themselves\r\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\r\n   * will need to be removed manually with {@link #remove}\r\n   *\r\n   * @param teardown The finalization logic to add to this subscription.\r\n   */\r\n  add(teardown: TeardownLogic): void {\r\n    // Only add the finalizer if it's not undefined\r\n    // and don't add a subscription to itself.\r\n    if (teardown && teardown !== this) {\r\n      if (this.closed) {\r\n        // If this subscription is already closed,\r\n        // execute whatever finalizer is handed to it automatically.\r\n        execFinalizer(teardown);\r\n      } else {\r\n        if (teardown instanceof Subscription) {\r\n          // We don't add closed subscriptions, and we don't add the same subscription\r\n          // twice. Subscription unsubscribe is idempotent.\r\n          if (teardown.closed || teardown._hasParent(this)) {\r\n            return;\r\n          }\r\n          teardown._addParent(this);\r\n        }\r\n        (this._finalizers = this._finalizers ?? []).push(teardown);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks to see if a this subscription already has a particular parent.\r\n   * This will signal that this subscription has already been added to the parent in question.\r\n   * @param parent the parent to check for\r\n   */\r\n  private _hasParent(parent: Subscription) {\r\n    const { _parentage } = this;\r\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\r\n  }\r\n\r\n  /**\r\n   * Adds a parent to this subscription so it can be removed from the parent if it\r\n   * unsubscribes on it's own.\r\n   *\r\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\r\n   * @param parent The parent subscription to add\r\n   */\r\n  private _addParent(parent: Subscription) {\r\n    const { _parentage } = this;\r\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\r\n  }\r\n\r\n  /**\r\n   * Called on a child when it is removed via {@link #remove}.\r\n   * @param parent The parent to remove\r\n   */\r\n  private _removeParent(parent: Subscription) {\r\n    const { _parentage } = this;\r\n    if (_parentage === parent) {\r\n      this._parentage = null;\r\n    } else if (Array.isArray(_parentage)) {\r\n      arrRemove(_parentage, parent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\r\n   *\r\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\r\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\r\n   * is not a common thing and should be used thoughtfully.\r\n   *\r\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\r\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\r\n   *\r\n   * All finalizer instances are removed to free up memory upon unsubscription.\r\n   *\r\n   * @param teardown The finalizer to remove from this subscription\r\n   */\r\n  remove(teardown: Exclude<TeardownLogic, void>): void {\r\n    const { _finalizers } = this;\r\n    _finalizers && arrRemove(_finalizers, teardown);\r\n\r\n    if (teardown instanceof Subscription) {\r\n      teardown._removeParent(this);\r\n    }\r\n  }\r\n}\r\n\r\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\r\n\r\nexport function isSubscription(value: any): value is Subscription {\r\n  return (\r\n    value instanceof Subscription ||\r\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\r\n  );\r\n}\r\n\r\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\r\n  if (isFunction(finalizer)) {\r\n    finalizer();\r\n  } else {\r\n    finalizer.unsubscribe();\r\n  }\r\n}\r\n", "import { Subscriber } from './Subscriber';\r\nimport { ObservableNotification } from './types';\r\n\r\n/**\r\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\r\n * like how to react on unhandled errors.\r\n */\r\nexport const config: GlobalConfig = {\r\n  onUnhandledError: null,\r\n  onStoppedNotification: null,\r\n  Promise: undefined,\r\n  useDeprecatedSynchronousErrorHandling: false,\r\n  useDeprecatedNextContext: false,\r\n};\r\n\r\n/**\r\n * The global configuration object for RxJS, used to configure things\r\n * like how to react on unhandled errors. Accessible via {@link config}\r\n * object.\r\n */\r\nexport interface GlobalConfig {\r\n  /**\r\n   * A registration point for unhandled errors from RxJS. These are errors that\r\n   * cannot were not handled by consuming code in the usual subscription path. For\r\n   * example, if you have this configured, and you subscribe to an observable without\r\n   * providing an error handler, errors from that subscription will end up here. This\r\n   * will _always_ be called asynchronously on another job in the runtime. This is because\r\n   * we do not want errors thrown in this user-configured handler to interfere with the\r\n   * behavior of the library.\r\n   */\r\n  onUnhandledError: ((err: any) => void) | null;\r\n\r\n  /**\r\n   * A registration point for notifications that cannot be sent to subscribers because they\r\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\r\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\r\n   * might want a different behavior. For example, with sources that attempt to report errors\r\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\r\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\r\n   * we do not want errors thrown in this user-configured handler to interfere with the\r\n   * behavior of the library.\r\n   */\r\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\r\n\r\n  /**\r\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\r\n   * methods.\r\n   *\r\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\r\n   * Promise constructor. If you need a Promise implementation other than native promises,\r\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\r\n   */\r\n  Promise?: PromiseConstructorLike;\r\n\r\n  /**\r\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\r\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\r\n   * call in a try/catch block. It also enables producer interference, a nasty bug\r\n   * where a multicast can be broken for all observers by a downstream consumer with\r\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\r\n   * FOR MIGRATION REASONS.\r\n   *\r\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\r\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\r\n   * behaviors described above. Will be removed in v8.\r\n   */\r\n  useDeprecatedSynchronousErrorHandling: boolean;\r\n\r\n  /**\r\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\r\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\r\n   * to `subscribe`.\r\n   *\r\n   * This is being removed because the performance was severely problematic, and it could also cause\r\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\r\n   * their `this` context overwritten.\r\n   *\r\n   * @deprecated As of version 8, RxJS will no longer support altering the\r\n   * context of next functions provided as part of an observer to Subscribe. Instead,\r\n   * you will have access to a subscription or a signal or token that will allow you to do things like\r\n   * unsubscribe and test closed status. Will be removed in v8.\r\n   */\r\n  useDeprecatedNextContext: boolean;\r\n}\r\n", "import type { TimerHandle } from './timerHandle';\r\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\r\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\r\n\r\ninterface TimeoutProvider {\r\n  setTimeout: SetTimeoutFunction;\r\n  clearTimeout: ClearTimeoutFunction;\r\n  delegate:\r\n    | {\r\n        setTimeout: SetTimeoutFunction;\r\n        clearTimeout: ClearTimeoutFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const timeoutProvider: TimeoutProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setTimeout(handler: () => void, timeout?: number, ...args) {\r\n    const { delegate } = timeoutProvider;\r\n    if (delegate?.setTimeout) {\r\n      return delegate.setTimeout(handler, timeout, ...args);\r\n    }\r\n    return setTimeout(handler, timeout, ...args);\r\n  },\r\n  clearTimeout(handle) {\r\n    const { delegate } = timeoutProvider;\r\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { config } from '../config';\r\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\r\n\r\n/**\r\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\r\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\r\n *\r\n * This should be called whenever there is an error that is out-of-band with the subscription\r\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\r\n *\r\n * @param err the error to report\r\n */\r\nexport function reportUnhandledError(err: any) {\r\n  timeoutProvider.setTimeout(() => {\r\n    const { onUnhandledError } = config;\r\n    if (onUnhandledError) {\r\n      // Execute the user-configured error handler.\r\n      onUnhandledError(err);\r\n    } else {\r\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\r\n      throw err;\r\n    }\r\n  });\r\n}\r\n", "/* tslint:disable:no-empty */\r\nexport function noop() { }\r\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\r\n\r\n/**\r\n * A completion object optimized for memory use and created to be the\r\n * same \"shape\" as other notifications in v8.\r\n * @internal\r\n */\r\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\r\n\r\n/**\r\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\r\n * as other notifications.\r\n * @internal\r\n */\r\nexport function errorNotification(error: any): ErrorNotification {\r\n  return createNotification('E', undefined, error) as any;\r\n}\r\n\r\n/**\r\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\r\n * as other notifications.\r\n * @internal\r\n */\r\nexport function nextNotification<T>(value: T) {\r\n  return createNotification('N', value, undefined) as NextNotification<T>;\r\n}\r\n\r\n/**\r\n * Ensures that all notifications created internally have the same \"shape\" in v8.\r\n *\r\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\r\n * @internal\r\n */\r\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\r\n  return {\r\n    kind,\r\n    value,\r\n    error,\r\n  };\r\n}\r\n", "import { config } from '../config';\r\n\r\nlet context: { errorThrown: boolean; error: any } | null = null;\r\n\r\n/**\r\n * Handles dealing with errors for super-gross mode. Creates a context, in which\r\n * any synchronously thrown errors will be passed to {@link captureError}. Which\r\n * will record the error such that it will be rethrown after the call back is complete.\r\n * TODO: Remove in v8\r\n * @param cb An immediately executed function.\r\n */\r\nexport function errorContext(cb: () => void) {\r\n  if (config.useDeprecatedSynchronousErrorHandling) {\r\n    const isRoot = !context;\r\n    if (isRoot) {\r\n      context = { errorThrown: false, error: null };\r\n    }\r\n    cb();\r\n    if (isRoot) {\r\n      const { errorThrown, error } = context!;\r\n      context = null;\r\n      if (errorThrown) {\r\n        throw error;\r\n      }\r\n    }\r\n  } else {\r\n    // This is the general non-deprecated path for everyone that\r\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\r\n    cb();\r\n  }\r\n}\r\n\r\n/**\r\n * Captures errors only in super-gross mode.\r\n * @param err the error to capture\r\n */\r\nexport function captureError(err: any) {\r\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\r\n    context.errorThrown = true;\r\n    context.error = err;\r\n  }\r\n}\r\n", "import { isFunction } from './util/isFunction';\r\nimport { Observer, ObservableNotification } from './types';\r\nimport { isSubscription, Subscription } from './Subscription';\r\nimport { config } from './config';\r\nimport { reportUnhandledError } from './util/reportUnhandledError';\r\nimport { noop } from './util/noop';\r\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\r\nimport { timeoutProvider } from './scheduler/timeoutProvider';\r\nimport { captureError } from './util/errorContext';\r\n\r\n/**\r\n * Implements the {@link Observer} interface and extends the\r\n * {@link Subscription} class. While the {@link Observer} is the public API for\r\n * consuming the values of an {@link Observable}, all Observers get converted to\r\n * a Subscriber, in order to provide Subscription-like capabilities such as\r\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\r\n * implementing operators, but it is rarely used as a public API.\r\n *\r\n * @class Subscriber<T>\r\n */\r\nexport class Subscriber<T> extends Subscription implements Observer<T> {\r\n  /**\r\n   * A static factory for a Subscriber, given a (potentially partial) definition\r\n   * of an Observer.\r\n   * @param next The `next` callback of an Observer.\r\n   * @param error The `error` callback of an\r\n   * Observer.\r\n   * @param complete The `complete` callback of an\r\n   * Observer.\r\n   * @return A Subscriber wrapping the (partially defined)\r\n   * Observer represented by the given arguments.\r\n   * @nocollapse\r\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\r\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\r\n   * If you have a specific use case, please file an issue.\r\n   */\r\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\r\n    return new SafeSubscriber(next, error, complete);\r\n  }\r\n\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  protected isStopped: boolean = false;\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\r\n\r\n  /**\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\r\n   */\r\n  constructor(destination?: Subscriber<any> | Observer<any>) {\r\n    super();\r\n    if (destination) {\r\n      this.destination = destination;\r\n      // Automatically chain subscriptions together here.\r\n      // if destination is a Subscription, then it is a Subscriber.\r\n      if (isSubscription(destination)) {\r\n        destination.add(this);\r\n      }\r\n    } else {\r\n      this.destination = EMPTY_OBSERVER;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The {@link Observer} callback to receive notifications of type `next` from\r\n   * the Observable, with a value. The Observable may call this method 0 or more\r\n   * times.\r\n   * @param {T} [value] The `next` value.\r\n   * @return {void}\r\n   */\r\n  next(value?: T): void {\r\n    if (this.isStopped) {\r\n      handleStoppedNotification(nextNotification(value), this);\r\n    } else {\r\n      this._next(value!);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The {@link Observer} callback to receive notifications of type `error` from\r\n   * the Observable, with an attached `Error`. Notifies the Observer that\r\n   * the Observable has experienced an error condition.\r\n   * @param {any} [err] The `error` exception.\r\n   * @return {void}\r\n   */\r\n  error(err?: any): void {\r\n    if (this.isStopped) {\r\n      handleStoppedNotification(errorNotification(err), this);\r\n    } else {\r\n      this.isStopped = true;\r\n      this._error(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The {@link Observer} callback to receive a valueless notification of type\r\n   * `complete` from the Observable. Notifies the Observer that the Observable\r\n   * has finished sending push-based notifications.\r\n   * @return {void}\r\n   */\r\n  complete(): void {\r\n    if (this.isStopped) {\r\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\r\n    } else {\r\n      this.isStopped = true;\r\n      this._complete();\r\n    }\r\n  }\r\n\r\n  unsubscribe(): void {\r\n    if (!this.closed) {\r\n      this.isStopped = true;\r\n      super.unsubscribe();\r\n      this.destination = null!;\r\n    }\r\n  }\r\n\r\n  protected _next(value: T): void {\r\n    this.destination.next(value);\r\n  }\r\n\r\n  protected _error(err: any): void {\r\n    try {\r\n      this.destination.error(err);\r\n    } finally {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected _complete(): void {\r\n    try {\r\n      this.destination.complete();\r\n    } finally {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This bind is captured here because we want to be able to have\r\n * compatibility with monoid libraries that tend to use a method named\r\n * `bind`. In particular, a library called Monio requires this.\r\n */\r\nconst _bind = Function.prototype.bind;\r\n\r\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\r\n  return _bind.call(fn, thisArg);\r\n}\r\n\r\n/**\r\n * Internal optimization only, DO NOT EXPOSE.\r\n * @internal\r\n */\r\nclass ConsumerObserver<T> implements Observer<T> {\r\n  constructor(private partialObserver: Partial<Observer<T>>) {}\r\n\r\n  next(value: T): void {\r\n    const { partialObserver } = this;\r\n    if (partialObserver.next) {\r\n      try {\r\n        partialObserver.next(value);\r\n      } catch (error) {\r\n        handleUnhandledError(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  error(err: any): void {\r\n    const { partialObserver } = this;\r\n    if (partialObserver.error) {\r\n      try {\r\n        partialObserver.error(err);\r\n      } catch (error) {\r\n        handleUnhandledError(error);\r\n      }\r\n    } else {\r\n      handleUnhandledError(err);\r\n    }\r\n  }\r\n\r\n  complete(): void {\r\n    const { partialObserver } = this;\r\n    if (partialObserver.complete) {\r\n      try {\r\n        partialObserver.complete();\r\n      } catch (error) {\r\n        handleUnhandledError(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class SafeSubscriber<T> extends Subscriber<T> {\r\n  constructor(\r\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\r\n    error?: ((e?: any) => void) | null,\r\n    complete?: (() => void) | null\r\n  ) {\r\n    super();\r\n\r\n    let partialObserver: Partial<Observer<T>>;\r\n    if (isFunction(observerOrNext) || !observerOrNext) {\r\n      // The first argument is a function, not an observer. The next\r\n      // two arguments *could* be observers, or they could be empty.\r\n      partialObserver = {\r\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\r\n        error: error ?? undefined,\r\n        complete: complete ?? undefined,\r\n      };\r\n    } else {\r\n      // The first argument is a partial observer.\r\n      let context: any;\r\n      if (this && config.useDeprecatedNextContext) {\r\n        // This is a deprecated path that made `this.unsubscribe()` available in\r\n        // next handler functions passed to subscribe. This only exists behind a flag\r\n        // now, as it is *very* slow.\r\n        context = Object.create(observerOrNext);\r\n        context.unsubscribe = () => this.unsubscribe();\r\n        partialObserver = {\r\n          next: observerOrNext.next && bind(observerOrNext.next, context),\r\n          error: observerOrNext.error && bind(observerOrNext.error, context),\r\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\r\n        };\r\n      } else {\r\n        // The \"normal\" path. Just use the partial observer directly.\r\n        partialObserver = observerOrNext;\r\n      }\r\n    }\r\n\r\n    // Wrap the partial observer to ensure it's a full observer, and\r\n    // make sure proper error handling is accounted for.\r\n    this.destination = new ConsumerObserver(partialObserver);\r\n  }\r\n}\r\n\r\nfunction handleUnhandledError(error: any) {\r\n  if (config.useDeprecatedSynchronousErrorHandling) {\r\n    captureError(error);\r\n  } else {\r\n    // Ideal path, we report this as an unhandled error,\r\n    // which is thrown on a new call stack.\r\n    reportUnhandledError(error);\r\n  }\r\n}\r\n\r\n/**\r\n * An error handler used when no error handler was supplied\r\n * to the SafeSubscriber -- meaning no error handler was supplied\r\n * do the `subscribe` call on our observable.\r\n * @param err The error to handle\r\n */\r\nfunction defaultErrorHandler(err: any) {\r\n  throw err;\r\n}\r\n\r\n/**\r\n * A handler for notifications that cannot be sent to a stopped subscriber.\r\n * @param notification The notification being sent\r\n * @param subscriber The stopped subscriber\r\n */\r\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\r\n  const { onStoppedNotification } = config;\r\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\r\n}\r\n\r\n/**\r\n * The observer used as a stub for subscriptions where the user did not\r\n * pass any arguments to `subscribe`. Comes with the default error handling\r\n * behavior.\r\n */\r\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\r\n  closed: true,\r\n  next: noop,\r\n  error: defaultErrorHandler,\r\n  complete: noop,\r\n};\r\n", "/**\r\n * Symbol.observable or a string \"@@observable\". Used for interop\r\n *\r\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\r\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\r\n */\r\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\r\n", "/**\r\n * This function takes one parameter and just returns it. Simply put,\r\n * this is like `<T>(x: T): T => x`.\r\n *\r\n * ## Examples\r\n *\r\n * This is useful in some cases when using things like `mergeMap`\r\n *\r\n * ```ts\r\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\r\n *\r\n * const source$ = interval(1000).pipe(take(5));\r\n *\r\n * const result$ = source$.pipe(\r\n *   map(i => range(i)),\r\n *   mergeMap(identity) // same as mergeMap(x => x)\r\n * );\r\n *\r\n * result$.subscribe({\r\n *   next: console.log\r\n * });\r\n * ```\r\n *\r\n * Or when you want to selectively apply an operator\r\n *\r\n * ```ts\r\n * import { interval, take, identity } from 'rxjs';\r\n *\r\n * const shouldLimit = () => Math.random() < 0.5;\r\n *\r\n * const source$ = interval(1000);\r\n *\r\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\r\n *\r\n * result$.subscribe({\r\n *   next: console.log\r\n * });\r\n * ```\r\n *\r\n * @param x Any value that is returned by this function\r\n * @returns The value passed as the first parameter to this function\r\n */\r\nexport function identity<T>(x: T): T {\r\n  return x;\r\n}\r\n", "import { identity } from './identity';\r\nimport { UnaryFunction } from '../types';\r\n\r\nexport function pipe(): typeof identity;\r\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\r\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\r\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\r\nexport function pipe<T, A, B, C, D>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>\r\n): UnaryFunction<T, D>;\r\nexport function pipe<T, A, B, C, D, E>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>\r\n): UnaryFunction<T, E>;\r\nexport function pipe<T, A, B, C, D, E, F>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>\r\n): UnaryFunction<T, F>;\r\nexport function pipe<T, A, B, C, D, E, F, G>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>\r\n): UnaryFunction<T, G>;\r\nexport function pipe<T, A, B, C, D, E, F, G, H>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>,\r\n  fn8: UnaryFunction<G, H>\r\n): UnaryFunction<T, H>;\r\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>,\r\n  fn8: UnaryFunction<G, H>,\r\n  fn9: UnaryFunction<H, I>\r\n): UnaryFunction<T, I>;\r\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\r\n  fn1: UnaryFunction<T, A>,\r\n  fn2: UnaryFunction<A, B>,\r\n  fn3: UnaryFunction<B, C>,\r\n  fn4: UnaryFunction<C, D>,\r\n  fn5: UnaryFunction<D, E>,\r\n  fn6: UnaryFunction<E, F>,\r\n  fn7: UnaryFunction<F, G>,\r\n  fn8: UnaryFunction<G, H>,\r\n  fn9: UnaryFunction<H, I>,\r\n  ...fns: UnaryFunction<any, any>[]\r\n): UnaryFunction<T, unknown>;\r\n\r\n/**\r\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\r\n * and uses it to return a value.\r\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\r\n * passes the result to the next one, passes that result to the next one, and so on.  \r\n */\r\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\r\n  return pipeFromArray(fns);\r\n}\r\n\r\n/** @internal */\r\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\r\n  if (fns.length === 0) {\r\n    return identity as UnaryFunction<any, any>;\r\n  }\r\n\r\n  if (fns.length === 1) {\r\n    return fns[0];\r\n  }\r\n\r\n  return function piped(input: T): R {\r\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\r\n  };\r\n}\r\n", "import { Operator } from './Operator';\r\nimport { SafeSubscriber, Subscriber } from './Subscriber';\r\nimport { isSubscription, Subscription } from './Subscription';\r\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\r\nimport { observable as Symbol_observable } from './symbol/observable';\r\nimport { pipeFromArray } from './util/pipe';\r\nimport { config } from './config';\r\nimport { isFunction } from './util/isFunction';\r\nimport { errorContext } from './util/errorContext';\r\n\r\n/**\r\n * A representation of any set of values over any amount of time. This is the most basic building block\r\n * of RxJS.\r\n *\r\n * @class Observable<T>\r\n */\r\nexport class Observable<T> implements Subscribable<T> {\r\n  /**\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   */\r\n  source: Observable<any> | undefined;\r\n\r\n  /**\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   */\r\n  operator: Operator<any, T> | undefined;\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {Function} subscribe the function that is called when the Observable is\r\n   * initially subscribed to. This function is given a Subscriber, to which new values\r\n   * can be `next`ed, or an `error` method can be called to raise an error, or\r\n   * `complete` can be called to notify of a successful completion.\r\n   */\r\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\r\n    if (subscribe) {\r\n      this._subscribe = subscribe;\r\n    }\r\n  }\r\n\r\n  // HACK: Since TypeScript inherits static properties too, we have to\r\n  // fight against TypeScript here so Subject can have a different static create signature\r\n  /**\r\n   * Creates a new Observable by calling the Observable constructor\r\n   * @owner Observable\r\n   * @method create\r\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\r\n   * @return {Observable} a new observable\r\n   * @nocollapse\r\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\r\n   */\r\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\r\n    return new Observable<T>(subscribe);\r\n  };\r\n\r\n  /**\r\n   * Creates a new Observable, with this Observable instance as the source, and the passed\r\n   * operator defined as the new observable's operator.\r\n   * @method lift\r\n   * @param operator the operator defining the operation to take on the observable\r\n   * @return a new observable with the Operator applied\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   * If you have implemented an operator using `lift`, it is recommended that you create an\r\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\r\n   * scratch\" section here: https://rxjs.dev/guide/operators\r\n   */\r\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\r\n    const observable = new Observable<R>();\r\n    observable.source = this;\r\n    observable.operator = operator;\r\n    return observable;\r\n  }\r\n\r\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\r\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\r\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\r\n  /**\r\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\r\n   *\r\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\r\n   *\r\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\r\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\r\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\r\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\r\n   * the thought.\r\n   *\r\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\r\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\r\n   * of the following ways.\r\n   *\r\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\r\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\r\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\r\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\r\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\r\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\r\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\r\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\r\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\r\n   * an `error` method to avoid missing thrown errors.\r\n   *\r\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\r\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\r\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\r\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\r\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\r\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\r\n   *\r\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\r\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\r\n   *\r\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\r\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\r\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\r\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\r\n   *\r\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\r\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\r\n   * by default emits all its values synchronously. Always check documentation for how given Observable\r\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\r\n   *\r\n   * #### Examples\r\n   *\r\n   * Subscribe with an {@link guide/observer Observer}\r\n   *\r\n   * ```ts\r\n   * import { of } from 'rxjs';\r\n   *\r\n   * const sumObserver = {\r\n   *   sum: 0,\r\n   *   next(value) {\r\n   *     console.log('Adding: ' + value);\r\n   *     this.sum = this.sum + value;\r\n   *   },\r\n   *   error() {\r\n   *     // We actually could just remove this method,\r\n   *     // since we do not really care about errors right now.\r\n   *   },\r\n   *   complete() {\r\n   *     console.log('Sum equals: ' + this.sum);\r\n   *   }\r\n   * };\r\n   *\r\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\r\n   *   .subscribe(sumObserver);\r\n   *\r\n   * // Logs:\r\n   * // 'Adding: 1'\r\n   * // 'Adding: 2'\r\n   * // 'Adding: 3'\r\n   * // 'Sum equals: 6'\r\n   * ```\r\n   *\r\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\r\n   *\r\n   * ```ts\r\n   * import { of } from 'rxjs'\r\n   *\r\n   * let sum = 0;\r\n   *\r\n   * of(1, 2, 3).subscribe(\r\n   *   value => {\r\n   *     console.log('Adding: ' + value);\r\n   *     sum = sum + value;\r\n   *   },\r\n   *   undefined,\r\n   *   () => console.log('Sum equals: ' + sum)\r\n   * );\r\n   *\r\n   * // Logs:\r\n   * // 'Adding: 1'\r\n   * // 'Adding: 2'\r\n   * // 'Adding: 3'\r\n   * // 'Sum equals: 6'\r\n   * ```\r\n   *\r\n   * Cancel a subscription\r\n   *\r\n   * ```ts\r\n   * import { interval } from 'rxjs';\r\n   *\r\n   * const subscription = interval(1000).subscribe({\r\n   *   next(num) {\r\n   *     console.log(num)\r\n   *   },\r\n   *   complete() {\r\n   *     // Will not be called, even when cancelling subscription.\r\n   *     console.log('completed!');\r\n   *   }\r\n   * });\r\n   *\r\n   * setTimeout(() => {\r\n   *   subscription.unsubscribe();\r\n   *   console.log('unsubscribed!');\r\n   * }, 2500);\r\n   *\r\n   * // Logs:\r\n   * // 0 after 1s\r\n   * // 1 after 2s\r\n   * // 'unsubscribed!' after 2.5s\r\n   * ```\r\n   *\r\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\r\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\r\n   * Observable.\r\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\r\n   * the error will be thrown asynchronously as unhandled.\r\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\r\n   * @return {Subscription} a subscription reference to the registered handlers\r\n   * @method subscribe\r\n   */\r\n  subscribe(\r\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\r\n    error?: ((error: any) => void) | null,\r\n    complete?: (() => void) | null\r\n  ): Subscription {\r\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\r\n\r\n    errorContext(() => {\r\n      const { operator, source } = this;\r\n      subscriber.add(\r\n        operator\r\n          ? // We're dealing with a subscription in the\r\n            // operator chain to one of our lifted operators.\r\n            operator.call(subscriber, source)\r\n          : source\r\n          ? // If `source` has a value, but `operator` does not, something that\r\n            // had intimate knowledge of our API, like our `Subject`, must have\r\n            // set it. We're going to just call `_subscribe` directly.\r\n            this._subscribe(subscriber)\r\n          : // In all other cases, we're likely wrapping a user-provided initializer\r\n            // function, so we need to catch errors and handle them appropriately.\r\n            this._trySubscribe(subscriber)\r\n      );\r\n    });\r\n\r\n    return subscriber;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\r\n    try {\r\n      return this._subscribe(sink);\r\n    } catch (err) {\r\n      // We don't need to return anything in this case,\r\n      // because it's just going to try to `add()` to a subscription\r\n      // above.\r\n      sink.error(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\r\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\r\n   *\r\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\r\n   * observable does not complete, you will end up with a promise that is hung up, and\r\n   * potentially all of the state of an async function hanging out in memory. To avoid\r\n   * this situation, look into adding something like {@link timeout}, {@link take},\r\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\r\n   *\r\n   * #### Example\r\n   *\r\n   * ```ts\r\n   * import { interval, take } from 'rxjs';\r\n   *\r\n   * const source$ = interval(1000).pipe(take(4));\r\n   *\r\n   * async function getTotal() {\r\n   *   let total = 0;\r\n   *\r\n   *   await source$.forEach(value => {\r\n   *     total += value;\r\n   *     console.log('observable -> ' + value);\r\n   *   });\r\n   *\r\n   *   return total;\r\n   * }\r\n   *\r\n   * getTotal().then(\r\n   *   total => console.log('Total: ' + total)\r\n   * );\r\n   *\r\n   * // Expected:\r\n   * // 'observable -> 0'\r\n   * // 'observable -> 1'\r\n   * // 'observable -> 2'\r\n   * // 'observable -> 3'\r\n   * // 'Total: 6'\r\n   * ```\r\n   *\r\n   * @param next a handler for each value emitted by the observable\r\n   * @return a promise that either resolves on observable completion or\r\n   *  rejects with the handled error\r\n   */\r\n  forEach(next: (value: T) => void): Promise<void>;\r\n\r\n  /**\r\n   * @param next a handler for each value emitted by the observable\r\n   * @param promiseCtor a constructor function used to instantiate the Promise\r\n   * @return a promise that either resolves on observable completion or\r\n   *  rejects with the handled error\r\n   * @deprecated Passing a Promise constructor will no longer be available\r\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\r\n   * little benefit. If you need this functionality, it is recommended that you either\r\n   * polyfill Promise, or you create an adapter to convert the returned native promise\r\n   * to whatever promise implementation you wanted. Will be removed in v8.\r\n   */\r\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\r\n\r\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\r\n    promiseCtor = getPromiseCtor(promiseCtor);\r\n\r\n    return new promiseCtor<void>((resolve, reject) => {\r\n      const subscriber = new SafeSubscriber<T>({\r\n        next: (value) => {\r\n          try {\r\n            next(value);\r\n          } catch (err) {\r\n            reject(err);\r\n            subscriber.unsubscribe();\r\n          }\r\n        },\r\n        error: reject,\r\n        complete: resolve,\r\n      });\r\n      this.subscribe(subscriber);\r\n    }) as Promise<void>;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\r\n    return this.source?.subscribe(subscriber);\r\n  }\r\n\r\n  /**\r\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\r\n   * @method Symbol.observable\r\n   * @return {Observable} this instance of the observable\r\n   */\r\n  [Symbol_observable]() {\r\n    return this;\r\n  }\r\n\r\n  /* tslint:disable:max-line-length */\r\n  pipe(): Observable<T>;\r\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\r\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\r\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\r\n  pipe<A, B, C, D>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>\r\n  ): Observable<D>;\r\n  pipe<A, B, C, D, E>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>\r\n  ): Observable<E>;\r\n  pipe<A, B, C, D, E, F>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>\r\n  ): Observable<F>;\r\n  pipe<A, B, C, D, E, F, G>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>\r\n  ): Observable<G>;\r\n  pipe<A, B, C, D, E, F, G, H>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>,\r\n    op8: OperatorFunction<G, H>\r\n  ): Observable<H>;\r\n  pipe<A, B, C, D, E, F, G, H, I>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>,\r\n    op8: OperatorFunction<G, H>,\r\n    op9: OperatorFunction<H, I>\r\n  ): Observable<I>;\r\n  pipe<A, B, C, D, E, F, G, H, I>(\r\n    op1: OperatorFunction<T, A>,\r\n    op2: OperatorFunction<A, B>,\r\n    op3: OperatorFunction<B, C>,\r\n    op4: OperatorFunction<C, D>,\r\n    op5: OperatorFunction<D, E>,\r\n    op6: OperatorFunction<E, F>,\r\n    op7: OperatorFunction<F, G>,\r\n    op8: OperatorFunction<G, H>,\r\n    op9: OperatorFunction<H, I>,\r\n    ...operations: OperatorFunction<any, any>[]\r\n  ): Observable<unknown>;\r\n  /* tslint:enable:max-line-length */\r\n\r\n  /**\r\n   * Used to stitch together functional operators into a chain.\r\n   * @method pipe\r\n   * @return {Observable} the Observable result of all of the operators having\r\n   * been called in the order they were passed in.\r\n   *\r\n   * ## Example\r\n   *\r\n   * ```ts\r\n   * import { interval, filter, map, scan } from 'rxjs';\r\n   *\r\n   * interval(1000)\r\n   *   .pipe(\r\n   *     filter(x => x % 2 === 0),\r\n   *     map(x => x + x),\r\n   *     scan((acc, x) => acc + x)\r\n   *   )\r\n   *   .subscribe(x => console.log(x));\r\n   * ```\r\n   */\r\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\r\n    return pipeFromArray(operations)(this);\r\n  }\r\n\r\n  /* tslint:disable:max-line-length */\r\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\r\n  toPromise(): Promise<T | undefined>;\r\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\r\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\r\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\r\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\r\n  /* tslint:enable:max-line-length */\r\n\r\n  /**\r\n   * Subscribe to this Observable and get a Promise resolving on\r\n   * `complete` with the last emission (if any).\r\n   *\r\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\r\n   * observable does not complete, you will end up with a promise that is hung up, and\r\n   * potentially all of the state of an async function hanging out in memory. To avoid\r\n   * this situation, look into adding something like {@link timeout}, {@link take},\r\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\r\n   *\r\n   * @method toPromise\r\n   * @param [promiseCtor] a constructor function used to instantiate\r\n   * the Promise\r\n   * @return A Promise that resolves with the last value emit, or\r\n   * rejects on an error. If there were no emissions, Promise\r\n   * resolves with undefined.\r\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\r\n   */\r\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\r\n    promiseCtor = getPromiseCtor(promiseCtor);\r\n\r\n    return new promiseCtor((resolve, reject) => {\r\n      let value: T | undefined;\r\n      this.subscribe(\r\n        (x: T) => (value = x),\r\n        (err: any) => reject(err),\r\n        () => resolve(value)\r\n      );\r\n    }) as Promise<T | undefined>;\r\n  }\r\n}\r\n\r\n/**\r\n * Decides between a passed promise constructor from consuming code,\r\n * A default configured promise constructor, and the native promise\r\n * constructor and returns it. If nothing can be found, it will throw\r\n * an error.\r\n * @param promiseCtor The optional promise constructor to passed by consuming code\r\n */\r\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\r\n  return promiseCtor ?? config.Promise ?? Promise;\r\n}\r\n\r\nfunction isObserver<T>(value: any): value is Observer<T> {\r\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\r\n}\r\n\r\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\r\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { OperatorFunction } from '../types';\r\nimport { isFunction } from './isFunction';\r\n\r\n/**\r\n * Used to determine if an object is an Observable with a lift function.\r\n */\r\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\r\n  return isFunction(source?.lift);\r\n}\r\n\r\n/**\r\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\r\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\r\n */\r\nexport function operate<T, R>(\r\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\r\n): OperatorFunction<T, R> {\r\n  return (source: Observable<T>) => {\r\n    if (hasLift(source)) {\r\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\r\n        try {\r\n          return init(liftedSource, this);\r\n        } catch (err) {\r\n          this.error(err);\r\n        }\r\n      });\r\n    }\r\n    throw new TypeError('Unable to lift unknown Observable type');\r\n  };\r\n}\r\n", "import { Subscriber } from '../Subscriber';\r\n\r\n/**\r\n * Creates an instance of an `OperatorSubscriber`.\r\n * @param destination The downstream subscriber.\r\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\r\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\r\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\r\n * and send to the `destination` error handler.\r\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\r\n * this handler are sent to the `destination` error handler.\r\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\r\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\r\n */\r\nexport function createOperatorSubscriber<T>(\r\n  destination: Subscriber<any>,\r\n  onNext?: (value: T) => void,\r\n  onComplete?: () => void,\r\n  onError?: (err: any) => void,\r\n  onFinalize?: () => void\r\n): Subscriber<T> {\r\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\r\n}\r\n\r\n/**\r\n * A generic helper for allowing operators to be created with a Subscriber and\r\n * use closures to capture necessary state from the operator function itself.\r\n */\r\nexport class OperatorSubscriber<T> extends Subscriber<T> {\r\n  /**\r\n   * Creates an instance of an `OperatorSubscriber`.\r\n   * @param destination The downstream subscriber.\r\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\r\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\r\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\r\n   * and send to the `destination` error handler.\r\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\r\n   * this handler are sent to the `destination` error handler.\r\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\r\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\r\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\r\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\r\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\r\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\r\n   */\r\n  constructor(\r\n    destination: Subscriber<any>,\r\n    onNext?: (value: T) => void,\r\n    onComplete?: () => void,\r\n    onError?: (err: any) => void,\r\n    private onFinalize?: () => void,\r\n    private shouldUnsubscribe?: () => boolean\r\n  ) {\r\n    // It's important - for performance reasons - that all of this class's\r\n    // members are initialized and that they are always initialized in the same\r\n    // order. This will ensure that all OperatorSubscriber instances have the\r\n    // same hidden class in V8. This, in turn, will help keep the number of\r\n    // hidden classes involved in property accesses within the base class as\r\n    // low as possible. If the number of hidden classes involved exceeds four,\r\n    // the property accesses will become megamorphic and performance penalties\r\n    // will be incurred - i.e. inline caches won't be used.\r\n    //\r\n    // The reasons for ensuring all instances have the same hidden class are\r\n    // further discussed in this blog post from Benedikt Meurer:\r\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\r\n    super(destination);\r\n    this._next = onNext\r\n      ? function (this: OperatorSubscriber<T>, value: T) {\r\n          try {\r\n            onNext(value);\r\n          } catch (err) {\r\n            destination.error(err);\r\n          }\r\n        }\r\n      : super._next;\r\n    this._error = onError\r\n      ? function (this: OperatorSubscriber<T>, err: any) {\r\n          try {\r\n            onError(err);\r\n          } catch (err) {\r\n            // Send any errors that occur down stream.\r\n            destination.error(err);\r\n          } finally {\r\n            // Ensure finalization.\r\n            this.unsubscribe();\r\n          }\r\n        }\r\n      : super._error;\r\n    this._complete = onComplete\r\n      ? function (this: OperatorSubscriber<T>) {\r\n          try {\r\n            onComplete();\r\n          } catch (err) {\r\n            // Send any errors that occur down stream.\r\n            destination.error(err);\r\n          } finally {\r\n            // Ensure finalization.\r\n            this.unsubscribe();\r\n          }\r\n        }\r\n      : super._complete;\r\n  }\r\n\r\n  unsubscribe() {\r\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\r\n      const { closed } = this;\r\n      super.unsubscribe();\r\n      // Execute additional teardown if we have any and we didn't already do so.\r\n      !closed && this.onFinalize?.();\r\n    }\r\n  }\r\n}\r\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\r\nimport { Subscription } from '../Subscription';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\r\n * you can connect to it.\r\n *\r\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\r\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\r\n * unsubscribes from the source. This way you can make sure that everything before the *published*\r\n * refCount has only a single subscription independently of the number of subscribers to the target\r\n * observable.\r\n *\r\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\r\n * (making the observable hot) and the *refCount* operator in a sequence.\r\n *\r\n * ![](refCount.png)\r\n *\r\n * ## Example\r\n *\r\n * In the following example there are two intervals turned into connectable observables\r\n * by using the *publish* operator. The first one uses the *refCount* operator, the\r\n * second one does not use it. You will notice that a connectable observable does nothing\r\n * until you call its connect function.\r\n *\r\n * ```ts\r\n * import { interval, tap, publish, refCount } from 'rxjs';\r\n *\r\n * // Turn the interval observable into a ConnectableObservable (hot)\r\n * const refCountInterval = interval(400).pipe(\r\n *   tap(num => console.log(`refCount ${ num }`)),\r\n *   publish(),\r\n *   refCount()\r\n * );\r\n *\r\n * const publishedInterval = interval(400).pipe(\r\n *   tap(num => console.log(`publish ${ num }`)),\r\n *   publish()\r\n * );\r\n *\r\n * refCountInterval.subscribe();\r\n * refCountInterval.subscribe();\r\n * // 'refCount 0' -----> 'refCount 1' -----> etc\r\n * // All subscriptions will receive the same value and the tap (and\r\n * // every other operator) before the `publish` operator will be executed\r\n * // only once per event independently of the number of subscriptions.\r\n *\r\n * publishedInterval.subscribe();\r\n * // Nothing happens until you call .connect() on the observable.\r\n * ```\r\n *\r\n * @return A function that returns an Observable that automates the connection\r\n * to ConnectableObservable.\r\n * @see {@link ConnectableObservable}\r\n * @see {@link share}\r\n * @see {@link publish}\r\n * @deprecated Replaced with the {@link share} operator. How `share` is used\r\n * will depend on the connectable observable you created just prior to the\r\n * `refCount` operator.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let connection: Subscription | null = null;\r\n\r\n    (source as any)._refCount++;\r\n\r\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\r\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\r\n        connection = null;\r\n        return;\r\n      }\r\n\r\n      ///\r\n      // Compare the local RefCountSubscriber's connection Subscription to the\r\n      // connection Subscription on the shared ConnectableObservable. In cases\r\n      // where the ConnectableObservable source synchronously emits values, and\r\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\r\n      // execution continues to here before the RefCountOperator has a chance to\r\n      // supply the RefCountSubscriber with the shared connection Subscription.\r\n      // For example:\r\n      // ```\r\n      // range(0, 10).pipe(\r\n      //   publish(),\r\n      //   refCount(),\r\n      //   take(5),\r\n      // )\r\n      // .subscribe();\r\n      // ```\r\n      // In order to account for this case, RefCountSubscriber should only dispose\r\n      // the ConnectableObservable's shared connection Subscription if the\r\n      // connection Subscription exists, *and* either:\r\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\r\n      //      Subscription yet, or,\r\n      //   b. RefCountSubscriber's connection Subscription reference is identical\r\n      //      to the shared connection Subscription\r\n      ///\r\n\r\n      const sharedConnection = (source as any)._connection;\r\n      const conn = connection;\r\n      connection = null;\r\n\r\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\r\n        sharedConnection.unsubscribe();\r\n      }\r\n\r\n      subscriber.unsubscribe();\r\n    });\r\n\r\n    source.subscribe(refCounter);\r\n\r\n    if (!refCounter.closed) {\r\n      connection = (source as ConnectableObservable<T>).connect();\r\n    }\r\n  });\r\n}\r\n", "import { Subject } from '../Subject';\r\nimport { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { Subscription } from '../Subscription';\r\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\r\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { hasLift } from '../util/lift';\r\n\r\n/**\r\n * @class ConnectableObservable<T>\r\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\r\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\r\n * instead.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport class ConnectableObservable<T> extends Observable<T> {\r\n  protected _subject: Subject<T> | null = null;\r\n  protected _refCount: number = 0;\r\n  protected _connection: Subscription | null = null;\r\n\r\n  /**\r\n   * @param source The source observable\r\n   * @param subjectFactory The factory that creates the subject used internally.\r\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\r\n   * `new ConnectableObservable(source, factory)` is equivalent to\r\n   * `connectable(source, { connector: factory })`.\r\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\r\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\r\n   * `source.pipe(share({ connector: factory }))`.\r\n   * Details: https://rxjs.dev/deprecations/multicasting\r\n   */\r\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\r\n    super();\r\n    // If we have lift, monkey patch that here. This is done so custom observable\r\n    // types will compose through multicast. Otherwise the resulting observable would\r\n    // simply be an instance of `ConnectableObservable`.\r\n    if (hasLift(source)) {\r\n      this.lift = source.lift;\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>) {\r\n    return this.getSubject().subscribe(subscriber);\r\n  }\r\n\r\n  protected getSubject(): Subject<T> {\r\n    const subject = this._subject;\r\n    if (!subject || subject.isStopped) {\r\n      this._subject = this.subjectFactory();\r\n    }\r\n    return this._subject!;\r\n  }\r\n\r\n  protected _teardown() {\r\n    this._refCount = 0;\r\n    const { _connection } = this;\r\n    this._subject = this._connection = null;\r\n    _connection?.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\r\n   * Details: https://rxjs.dev/deprecations/multicasting\r\n   */\r\n  connect(): Subscription {\r\n    let connection = this._connection;\r\n    if (!connection) {\r\n      connection = this._connection = new Subscription();\r\n      const subject = this.getSubject();\r\n      connection.add(\r\n        this.source.subscribe(\r\n          createOperatorSubscriber(\r\n            subject as any,\r\n            undefined,\r\n            () => {\r\n              this._teardown();\r\n              subject.complete();\r\n            },\r\n            (err) => {\r\n              this._teardown();\r\n              subject.error(err);\r\n            },\r\n            () => this._teardown()\r\n          )\r\n        )\r\n      );\r\n\r\n      if (connection.closed) {\r\n        this._connection = null;\r\n        connection = Subscription.EMPTY;\r\n      }\r\n    }\r\n    return connection;\r\n  }\r\n\r\n  /**\r\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\r\n   * Details: https://rxjs.dev/deprecations/multicasting\r\n   */\r\n  refCount(): Observable<T> {\r\n    return higherOrderRefCount()(this) as Observable<T>;\r\n  }\r\n}\r\n", "import { TimestampProvider } from '../types';\r\n\r\ninterface PerformanceTimestampProvider extends TimestampProvider {\r\n  delegate: TimestampProvider | undefined;\r\n}\r\n\r\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\r\n  now() {\r\n    // Use the variable rather than `this` so that the function can be called\r\n    // without being bound to the provider.\r\n    return (performanceTimestampProvider.delegate || performance).now();\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Subscription } from '../Subscription';\r\n\r\ninterface AnimationFrameProvider {\r\n  schedule(callback: FrameRequestCallback): Subscription;\r\n  requestAnimationFrame: typeof requestAnimationFrame;\r\n  cancelAnimationFrame: typeof cancelAnimationFrame;\r\n  delegate:\r\n    | {\r\n        requestAnimationFrame: typeof requestAnimationFrame;\r\n        cancelAnimationFrame: typeof cancelAnimationFrame;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const animationFrameProvider: AnimationFrameProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  schedule(callback) {\r\n    let request = requestAnimationFrame;\r\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\r\n    const { delegate } = animationFrameProvider;\r\n    if (delegate) {\r\n      request = delegate.requestAnimationFrame;\r\n      cancel = delegate.cancelAnimationFrame;\r\n    }\r\n    const handle = request((timestamp) => {\r\n      // Clear the cancel function. The request has been fulfilled, so\r\n      // attempting to cancel the request upon unsubscription would be\r\n      // pointless.\r\n      cancel = undefined;\r\n      callback(timestamp);\r\n    });\r\n    return new Subscription(() => cancel?.(handle));\r\n  },\r\n  requestAnimationFrame(...args) {\r\n    const { delegate } = animationFrameProvider;\r\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\r\n  },\r\n  cancelAnimationFrame(...args) {\r\n    const { delegate } = animationFrameProvider;\r\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Observable } from '../../Observable';\r\nimport { TimestampProvider } from '../../types';\r\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\r\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\r\n\r\n/**\r\n * An observable of animation frames\r\n *\r\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\r\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\r\n *\r\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\r\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\r\n * should not be much different or have more overhead than looping over an array of events during\r\n * a single animation frame. However, if for some reason the developer would like to ensure the\r\n * execution of animation-related handlers are all executed during the same task by the engine,\r\n * the `share` operator can be used.\r\n *\r\n * This is useful for setting up animations with RxJS.\r\n *\r\n * ## Examples\r\n *\r\n * Tweening a div to move it on the screen\r\n *\r\n * ```ts\r\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\r\n *\r\n * function tween(start: number, end: number, duration: number) {\r\n *   const diff = end - start;\r\n *   return animationFrames().pipe(\r\n *     // Figure out what percentage of time has passed\r\n *     map(({ elapsed }) => elapsed / duration),\r\n *     // Take the vector while less than 100%\r\n *     takeWhile(v => v < 1),\r\n *     // Finish with 100%\r\n *     endWith(1),\r\n *     // Calculate the distance traveled between start and end\r\n *     map(v => v * diff + start)\r\n *   );\r\n * }\r\n *\r\n * // Setup a div for us to move around\r\n * const div = document.createElement('div');\r\n * document.body.appendChild(div);\r\n * div.style.position = 'absolute';\r\n * div.style.width = '40px';\r\n * div.style.height = '40px';\r\n * div.style.backgroundColor = 'lime';\r\n * div.style.transform = 'translate3d(10px, 0, 0)';\r\n *\r\n * tween(10, 200, 4000).subscribe(x => {\r\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\r\n * });\r\n * ```\r\n *\r\n * Providing a custom timestamp provider\r\n *\r\n * ```ts\r\n * import { animationFrames, TimestampProvider } from 'rxjs';\r\n *\r\n * // A custom timestamp provider\r\n * let now = 0;\r\n * const customTSProvider: TimestampProvider = {\r\n *   now() { return now++; }\r\n * };\r\n *\r\n * const source$ = animationFrames(customTSProvider);\r\n *\r\n * // Log increasing numbers 0...1...2... on every animation frame.\r\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\r\n * ```\r\n *\r\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\r\n */\r\nexport function animationFrames(timestampProvider?: TimestampProvider) {\r\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\r\n}\r\n\r\n/**\r\n * Does the work of creating the observable for `animationFrames`.\r\n * @param timestampProvider The timestamp provider to use to create the observable\r\n */\r\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\r\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\r\n    // If no timestamp provider is specified, use performance.now() - as it\r\n    // will return timestamps 'compatible' with those passed to the run\r\n    // callback and won't be affected by NTP adjustments, etc.\r\n    const provider = timestampProvider || performanceTimestampProvider;\r\n\r\n    // Capture the start time upon subscription, as the run callback can remain\r\n    // queued for a considerable period of time and the elapsed time should\r\n    // represent the time elapsed since subscription - not the time since the\r\n    // first rendered animation frame.\r\n    const start = provider.now();\r\n\r\n    let id = 0;\r\n    const run = () => {\r\n      if (!subscriber.closed) {\r\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\r\n          id = 0;\r\n          // Use the provider's timestamp to calculate the elapsed time. Note that\r\n          // this means - if the caller hasn't passed a provider - that\r\n          // performance.now() will be used instead of the timestamp that was\r\n          // passed to the run callback. The reason for this is that the timestamp\r\n          // passed to the callback can be earlier than the start time, as it\r\n          // represents the time at which the browser decided it would render any\r\n          // queued frames - and that time can be earlier the captured start time.\r\n          const now = provider.now();\r\n          subscriber.next({\r\n            timestamp: timestampProvider ? now : timestamp,\r\n            elapsed: now - start,\r\n          });\r\n          run();\r\n        });\r\n      }\r\n    };\r\n\r\n    run();\r\n\r\n    return () => {\r\n      if (id) {\r\n        animationFrameProvider.cancelAnimationFrame(id);\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * In the common case, where the timestamp provided by the rAF API is used,\r\n * we use this shared observable to reduce overhead.\r\n */\r\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface ObjectUnsubscribedError extends Error {}\r\n\r\nexport interface ObjectUnsubscribedErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): ObjectUnsubscribedError;\r\n}\r\n\r\n/**\r\n * An error thrown when an action is invalid because the object has been\r\n * unsubscribed.\r\n *\r\n * @see {@link Subject}\r\n * @see {@link BehaviorSubject}\r\n *\r\n * @class ObjectUnsubscribedError\r\n */\r\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function ObjectUnsubscribedErrorImpl(this: any) {\r\n      _super(this);\r\n      this.name = 'ObjectUnsubscribedError';\r\n      this.message = 'object unsubscribed';\r\n    }\r\n);\r\n", "import { Operator } from './Operator';\r\nimport { Observable } from './Observable';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\r\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\r\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\r\nimport { arrRemove } from './util/arrRemove';\r\nimport { errorContext } from './util/errorContext';\r\n\r\n/**\r\n * A Subject is a special type of Observable that allows values to be\r\n * multicasted to many Observers. Subjects are like EventEmitters.\r\n *\r\n * Every Subject is an Observable and an Observer. You can subscribe to a\r\n * Subject, and you can call next to feed values as well as error and complete.\r\n */\r\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\r\n  closed = false;\r\n\r\n  private currentObservers: Observer<T>[] | null = null;\r\n\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  observers: Observer<T>[] = [];\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  isStopped = false;\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  hasError = false;\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  thrownError: any = null;\r\n\r\n  /**\r\n   * Creates a \"subject\" by basically gluing an observer to an observable.\r\n   *\r\n   * @nocollapse\r\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\r\n   */\r\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\r\n    return new AnonymousSubject<T>(destination, source);\r\n  };\r\n\r\n  constructor() {\r\n    // NOTE: This must be here to obscure Observable's constructor.\r\n    super();\r\n  }\r\n\r\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n  lift<R>(operator: Operator<T, R>): Observable<R> {\r\n    const subject = new AnonymousSubject(this, this);\r\n    subject.operator = operator as any;\r\n    return subject as any;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _throwIfClosed() {\r\n    if (this.closed) {\r\n      throw new ObjectUnsubscribedError();\r\n    }\r\n  }\r\n\r\n  next(value: T) {\r\n    errorContext(() => {\r\n      this._throwIfClosed();\r\n      if (!this.isStopped) {\r\n        if (!this.currentObservers) {\r\n          this.currentObservers = Array.from(this.observers);\r\n        }\r\n        for (const observer of this.currentObservers) {\r\n          observer.next(value);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  error(err: any) {\r\n    errorContext(() => {\r\n      this._throwIfClosed();\r\n      if (!this.isStopped) {\r\n        this.hasError = this.isStopped = true;\r\n        this.thrownError = err;\r\n        const { observers } = this;\r\n        while (observers.length) {\r\n          observers.shift()!.error(err);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  complete() {\r\n    errorContext(() => {\r\n      this._throwIfClosed();\r\n      if (!this.isStopped) {\r\n        this.isStopped = true;\r\n        const { observers } = this;\r\n        while (observers.length) {\r\n          observers.shift()!.complete();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.isStopped = this.closed = true;\r\n    this.observers = this.currentObservers = null!;\r\n  }\r\n\r\n  get observed() {\r\n    return this.observers?.length > 0;\r\n  }\r\n\r\n  /** @internal */\r\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\r\n    this._throwIfClosed();\r\n    return super._trySubscribe(subscriber);\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    this._throwIfClosed();\r\n    this._checkFinalizedStatuses(subscriber);\r\n    return this._innerSubscribe(subscriber);\r\n  }\r\n\r\n  /** @internal */\r\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\r\n    const { hasError, isStopped, observers } = this;\r\n    if (hasError || isStopped) {\r\n      return EMPTY_SUBSCRIPTION;\r\n    }\r\n    this.currentObservers = null;\r\n    observers.push(subscriber);\r\n    return new Subscription(() => {\r\n      this.currentObservers = null;\r\n      arrRemove(observers, subscriber);\r\n    });\r\n  }\r\n\r\n  /** @internal */\r\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\r\n    const { hasError, thrownError, isStopped } = this;\r\n    if (hasError) {\r\n      subscriber.error(thrownError);\r\n    } else if (isStopped) {\r\n      subscriber.complete();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new Observable with this Subject as the source. You can do this\r\n   * to create custom Observer-side logic of the Subject and conceal it from\r\n   * code that uses the Observable.\r\n   * @return {Observable} Observable that the Subject casts to\r\n   */\r\n  asObservable(): Observable<T> {\r\n    const observable: any = new Observable<T>();\r\n    observable.source = this;\r\n    return observable;\r\n  }\r\n}\r\n\r\n/**\r\n * @class AnonymousSubject<T>\r\n */\r\nexport class AnonymousSubject<T> extends Subject<T> {\r\n  constructor(\r\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\r\n    public destination?: Observer<T>,\r\n    source?: Observable<T>\r\n  ) {\r\n    super();\r\n    this.source = source;\r\n  }\r\n\r\n  next(value: T) {\r\n    this.destination?.next?.(value);\r\n  }\r\n\r\n  error(err: any) {\r\n    this.destination?.error?.(err);\r\n  }\r\n\r\n  complete() {\r\n    this.destination?.complete?.();\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\r\n  }\r\n}\r\n", "import { Subject } from './Subject';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription } from './Subscription';\r\n\r\n/**\r\n * A variant of Subject that requires an initial value and emits its current\r\n * value whenever it is subscribed to.\r\n *\r\n * @class BehaviorSubject<T>\r\n */\r\nexport class BehaviorSubject<T> extends Subject<T> {\r\n  constructor(private _value: T) {\r\n    super();\r\n  }\r\n\r\n  get value(): T {\r\n    return this.getValue();\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    const subscription = super._subscribe(subscriber);\r\n    !subscription.closed && subscriber.next(this._value);\r\n    return subscription;\r\n  }\r\n\r\n  getValue(): T {\r\n    const { hasError, thrownError, _value } = this;\r\n    if (hasError) {\r\n      throw thrownError;\r\n    }\r\n    this._throwIfClosed();\r\n    return _value;\r\n  }\r\n\r\n  next(value: T): void {\r\n    super.next((this._value = value));\r\n  }\r\n}\r\n", "import { TimestampProvider } from '../types';\r\n\r\ninterface DateTimestampProvider extends TimestampProvider {\r\n  delegate: TimestampProvider | undefined;\r\n}\r\n\r\nexport const dateTimestampProvider: DateTimestampProvider = {\r\n  now() {\r\n    // Use the variable rather than `this` so that the function can be called\r\n    // without being bound to the provider.\r\n    return (dateTimestampProvider.delegate || Date).now();\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Subject } from './Subject';\r\nimport { TimestampProvider } from './types';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription } from './Subscription';\r\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\r\n\r\n/**\r\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\r\n *\r\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\r\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\r\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\r\n *\r\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\r\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\r\n * error if it has observed an error.\r\n *\r\n * There are two main configuration items to be concerned with:\r\n *\r\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\r\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\r\n *\r\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\r\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\r\n *\r\n * ### Differences with BehaviorSubject\r\n *\r\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\r\n *\r\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\r\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\r\n *\r\n * @see {@link Subject}\r\n * @see {@link BehaviorSubject}\r\n * @see {@link shareReplay}\r\n */\r\nexport class ReplaySubject<T> extends Subject<T> {\r\n  private _buffer: (T | number)[] = [];\r\n  private _infiniteTimeWindow = true;\r\n\r\n  /**\r\n   * @param bufferSize The size of the buffer to replay on subscription\r\n   * @param windowTime The amount of time the buffered items will stay buffered\r\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\r\n   * calculate the amount of time something has been buffered.\r\n   */\r\n  constructor(\r\n    private _bufferSize = Infinity,\r\n    private _windowTime = Infinity,\r\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\r\n  ) {\r\n    super();\r\n    this._infiniteTimeWindow = _windowTime === Infinity;\r\n    this._bufferSize = Math.max(1, _bufferSize);\r\n    this._windowTime = Math.max(1, _windowTime);\r\n  }\r\n\r\n  next(value: T): void {\r\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\r\n    if (!isStopped) {\r\n      _buffer.push(value);\r\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\r\n    }\r\n    this._trimBuffer();\r\n    super.next(value);\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    this._throwIfClosed();\r\n    this._trimBuffer();\r\n\r\n    const subscription = this._innerSubscribe(subscriber);\r\n\r\n    const { _infiniteTimeWindow, _buffer } = this;\r\n    // We use a copy here, so reentrant code does not mutate our array while we're\r\n    // emitting it to a new subscriber.\r\n    const copy = _buffer.slice();\r\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\r\n      subscriber.next(copy[i] as T);\r\n    }\r\n\r\n    this._checkFinalizedStatuses(subscriber);\r\n\r\n    return subscription;\r\n  }\r\n\r\n  private _trimBuffer() {\r\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\r\n    // If we don't have an infinite buffer size, and we're over the length,\r\n    // use splice to truncate the old buffer values off. Note that we have to\r\n    // double the size for instances where we're not using an infinite time window\r\n    // because we're storing the values and the timestamps in the same array.\r\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\r\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\r\n\r\n    // Now, if we're not in an infinite time window, remove all values where the time is\r\n    // older than what is allowed.\r\n    if (!_infiniteTimeWindow) {\r\n      const now = _timestampProvider.now();\r\n      let last = 0;\r\n      // Search the array for the first timestamp that isn't expired and\r\n      // truncate the buffer up to that point.\r\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\r\n        last = i;\r\n      }\r\n      last && _buffer.splice(0, last + 1);\r\n    }\r\n  }\r\n}\r\n", "import { Subject } from './Subject';\r\nimport { Subscriber } from './Subscriber';\r\n\r\n/**\r\n * A variant of Subject that only emits a value when it completes. It will emit\r\n * its latest value to all its observers on completion.\r\n *\r\n * @class AsyncSubject<T>\r\n */\r\nexport class AsyncSubject<T> extends Subject<T> {\r\n  private _value: T | null = null;\r\n  private _hasValue = false;\r\n  private _isComplete = false;\r\n\r\n  /** @internal */\r\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\r\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\r\n    if (hasError) {\r\n      subscriber.error(thrownError);\r\n    } else if (isStopped || _isComplete) {\r\n      _hasValue && subscriber.next(_value!);\r\n      subscriber.complete();\r\n    }\r\n  }\r\n\r\n  next(value: T): void {\r\n    if (!this.isStopped) {\r\n      this._value = value;\r\n      this._hasValue = true;\r\n    }\r\n  }\r\n\r\n  complete(): void {\r\n    const { _hasValue, _value, _isComplete } = this;\r\n    if (!_isComplete) {\r\n      this._isComplete = true;\r\n      _hasValue && super.next(_value!);\r\n      super.complete();\r\n    }\r\n  }\r\n}\r\n", "import { Scheduler } from '../Scheduler';\r\nimport { Subscription } from '../Subscription';\r\nimport { SchedulerAction } from '../types';\r\n\r\n/**\r\n * A unit of work to be executed in a `scheduler`. An action is typically\r\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\r\n * themselves about creating and manipulating an Action.\r\n *\r\n * ```ts\r\n * class Action<T> extends Subscription {\r\n *   new (scheduler: Scheduler, work: (state?: T) => void);\r\n *   schedule(state?: T, delay: number = 0): Subscription;\r\n * }\r\n * ```\r\n *\r\n * @class Action<T>\r\n */\r\nexport class Action<T> extends Subscription {\r\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super();\r\n  }\r\n  /**\r\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\r\n   * some context object, `state`. May happen at some point in the future,\r\n   * according to the `delay` parameter, if specified.\r\n   * @param {T} [state] Some contextual data that the `work` function uses when\r\n   * called by the Scheduler.\r\n   * @param {number} [delay] Time to wait before executing the work, where the\r\n   * time unit is implicit and defined by the Scheduler.\r\n   * @return {void}\r\n   */\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    return this;\r\n  }\r\n}\r\n", "import type { TimerHandle } from './timerHandle';\r\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\r\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\r\n\r\ninterface IntervalProvider {\r\n  setInterval: SetIntervalFunction;\r\n  clearInterval: ClearIntervalFunction;\r\n  delegate:\r\n    | {\r\n        setInterval: SetIntervalFunction;\r\n        clearInterval: ClearIntervalFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const intervalProvider: IntervalProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setInterval(handler: () => void, timeout?: number, ...args) {\r\n    const { delegate } = intervalProvider;\r\n    if (delegate?.setInterval) {\r\n      return delegate.setInterval(handler, timeout, ...args);\r\n    }\r\n    return setInterval(handler, timeout, ...args);\r\n  },\r\n  clearInterval(handle) {\r\n    const { delegate } = intervalProvider;\r\n    return (delegate?.clearInterval || clearInterval)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { Action } from './Action';\r\nimport { SchedulerAction } from '../types';\r\nimport { Subscription } from '../Subscription';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\nimport { intervalProvider } from './intervalProvider';\r\nimport { arrRemove } from '../util/arrRemove';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AsyncAction<T> extends Action<T> {\r\n  public id: TimerHandle | undefined;\r\n  public state?: T;\r\n  // @ts-ignore: Property has no initializer and is not definitely assigned\r\n  public delay: number;\r\n  protected pending: boolean = false;\r\n\r\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    if (this.closed) {\r\n      return this;\r\n    }\r\n\r\n    // Always replace the current state with the new state.\r\n    this.state = state;\r\n\r\n    const id = this.id;\r\n    const scheduler = this.scheduler;\r\n\r\n    //\r\n    // Important implementation note:\r\n    //\r\n    // Actions only execute once by default, unless rescheduled from within the\r\n    // scheduled callback. This allows us to implement single and repeat\r\n    // actions via the same code path, without adding API surface area, as well\r\n    // as mimic traditional recursion but across asynchronous boundaries.\r\n    //\r\n    // However, JS runtimes and timers distinguish between intervals achieved by\r\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\r\n    // serial `setTimeout` calls can be individually delayed, which delays\r\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\r\n    // guarantee the interval callback will be invoked more precisely to the\r\n    // interval period, regardless of load.\r\n    //\r\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\r\n    // If the action reschedules itself with the same delay, the interval is not\r\n    // canceled. If the action doesn't reschedule, or reschedules with a\r\n    // different delay, the interval will be canceled after scheduled callback\r\n    // execution.\r\n    //\r\n    if (id != null) {\r\n      this.id = this.recycleAsyncId(scheduler, id, delay);\r\n    }\r\n\r\n    // Set the pending flag indicating that this action has been scheduled, or\r\n    // has recursively rescheduled itself.\r\n    this.pending = true;\r\n\r\n    this.delay = delay;\r\n    // If this action has already an async Id, don't request a new one.\r\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\r\n\r\n    return this;\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\r\n  }\r\n\r\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\r\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\r\n    if (delay != null && this.delay === delay && this.pending === false) {\r\n      return id;\r\n    }\r\n    // Otherwise, if the action's delay time is different from the current delay,\r\n    // or the action has been rescheduled before it's executed, clear the interval id\r\n    if (id != null) {\r\n      intervalProvider.clearInterval(id);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Immediately executes this action and the `work` it contains.\r\n   * @return {any}\r\n   */\r\n  public execute(state: T, delay: number): any {\r\n    if (this.closed) {\r\n      return new Error('executing a cancelled action');\r\n    }\r\n\r\n    this.pending = false;\r\n    const error = this._execute(state, delay);\r\n    if (error) {\r\n      return error;\r\n    } else if (this.pending === false && this.id != null) {\r\n      // Dequeue if the action didn't reschedule itself. Don't call\r\n      // unsubscribe(), because the action could reschedule later.\r\n      // For example:\r\n      // ```\r\n      // scheduler.schedule(function doWork(counter) {\r\n      //   /* ... I'm a busy worker bee ... */\r\n      //   var originalAction = this;\r\n      //   /* wait 100ms before rescheduling the action */\r\n      //   setTimeout(function () {\r\n      //     originalAction.schedule(counter + 1);\r\n      //   }, 100);\r\n      // }, 1000);\r\n      // ```\r\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\r\n    }\r\n  }\r\n\r\n  protected _execute(state: T, _delay: number): any {\r\n    let errored: boolean = false;\r\n    let errorValue: any;\r\n    try {\r\n      this.work(state);\r\n    } catch (e) {\r\n      errored = true;\r\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\r\n      // return here, we can't have it return \"\" or 0 or false.\r\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\r\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\r\n    }\r\n    if (errored) {\r\n      this.unsubscribe();\r\n      return errorValue;\r\n    }\r\n  }\r\n\r\n  unsubscribe() {\r\n    if (!this.closed) {\r\n      const { id, scheduler } = this;\r\n      const { actions } = scheduler;\r\n\r\n      this.work = this.state = this.scheduler = null!;\r\n      this.pending = false;\r\n\r\n      arrRemove(actions, this);\r\n      if (id != null) {\r\n        this.id = this.recycleAsyncId(scheduler, id, null);\r\n      }\r\n\r\n      this.delay = null!;\r\n      super.unsubscribe();\r\n    }\r\n  }\r\n}\r\n", "let nextHandle = 1;\r\n// The promise needs to be created lazily otherwise it won't be patched by Zones\r\nlet resolved: Promise<any>;\r\nconst activeHandles: { [key: number]: any } = {};\r\n\r\n/**\r\n * Finds the handle in the list of active handles, and removes it.\r\n * Returns `true` if found, `false` otherwise. Used both to clear\r\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\r\n */\r\nfunction findAndClearHandle(handle: number): boolean {\r\n  if (handle in activeHandles) {\r\n    delete activeHandles[handle];\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Helper functions to schedule and unschedule microtasks.\r\n */\r\nexport const Immediate = {\r\n  setImmediate(cb: () => void): number {\r\n    const handle = nextHandle++;\r\n    activeHandles[handle] = true;\r\n    if (!resolved) {\r\n      resolved = Promise.resolve();\r\n    }\r\n    resolved.then(() => findAndClearHandle(handle) && cb());\r\n    return handle;\r\n  },\r\n\r\n  clearImmediate(handle: number): void {\r\n    findAndClearHandle(handle);\r\n  },\r\n};\r\n\r\n/**\r\n * Used for internal testing purposes only. Do not export from library.\r\n */\r\nexport const TestTools = {\r\n  pending() {\r\n    return Object.keys(activeHandles).length;\r\n  }\r\n};\r\n", "import { Immediate } from '../util/Immediate';\r\nimport type { TimerHandle } from './timerHandle';\r\nconst { setImmediate, clearImmediate } = Immediate;\r\n\r\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\r\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\r\n\r\ninterface ImmediateProvider {\r\n  setImmediate: SetImmediateFunction;\r\n  clearImmediate: ClearImmediateFunction;\r\n  delegate:\r\n    | {\r\n        setImmediate: SetImmediateFunction;\r\n        clearImmediate: ClearImmediateFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const immediateProvider: ImmediateProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setImmediate(...args) {\r\n    const { delegate } = immediateProvider;\r\n    return (delegate?.setImmediate || setImmediate)(...args);\r\n  },\r\n  clearImmediate(handle) {\r\n    const { delegate } = immediateProvider;\r\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsapScheduler } from './AsapScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { immediateProvider } from './immediateProvider';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AsapAction<T> extends AsyncAction<T> {\r\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    // If delay is greater than 0, request as an async action.\r\n    if (delay !== null && delay > 0) {\r\n      return super.requestAsyncId(scheduler, id, delay);\r\n    }\r\n    // Push the action to the end of the scheduler queue.\r\n    scheduler.actions.push(this);\r\n    // If a microtask has already been scheduled, don't schedule another\r\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\r\n    // the current scheduled microtask id.\r\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\r\n  }\r\n\r\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\r\n    // If delay exists and is greater than 0, or if the delay is null (the\r\n    // action wasn't rescheduled) but was originally scheduled as an async\r\n    // action, then recycle as an async action.\r\n    if (delay != null ? delay > 0 : this.delay > 0) {\r\n      return super.recycleAsyncId(scheduler, id, delay);\r\n    }\r\n    // If the scheduler queue has no remaining actions with the same async id,\r\n    // cancel the requested microtask and set the scheduled flag to undefined\r\n    // so the next AsapAction will request its own.\r\n    const { actions } = scheduler;\r\n    if (id != null && actions[actions.length - 1]?.id !== id) {\r\n      immediateProvider.clearImmediate(id);\r\n      if (scheduler._scheduled === id) {\r\n        scheduler._scheduled = undefined;\r\n      }\r\n    }\r\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\r\n    return undefined;\r\n  }\r\n}\r\n", "import { Action } from './scheduler/Action';\r\nimport { Subscription } from './Subscription';\r\nimport { SchedulerLike, SchedulerAction } from './types';\r\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\r\n\r\n/**\r\n * An execution context and a data structure to order tasks and schedule their\r\n * execution. Provides a notion of (potentially virtual) time, through the\r\n * `now()` getter method.\r\n *\r\n * Each unit of work in a Scheduler is called an `Action`.\r\n *\r\n * ```ts\r\n * class Scheduler {\r\n *   now(): number;\r\n *   schedule(work, delay?, state?): Subscription;\r\n * }\r\n * ```\r\n *\r\n * @class Scheduler\r\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\r\n * should not be used directly. Rather, create your own class and implement\r\n * {@link SchedulerLike}. Will be made internal in v8.\r\n */\r\nexport class Scheduler implements SchedulerLike {\r\n  public static now: () => number = dateTimestampProvider.now;\r\n\r\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\r\n    this.now = now;\r\n  }\r\n\r\n  /**\r\n   * A getter method that returns a number representing the current time\r\n   * (at the time this function was called) according to the scheduler's own\r\n   * internal clock.\r\n   * @return {number} A number that represents the current time. May or may not\r\n   * have a relation to wall-clock time. May or may not refer to a time unit\r\n   * (e.g. milliseconds).\r\n   */\r\n  public now: () => number;\r\n\r\n  /**\r\n   * Schedules a function, `work`, for execution. May happen at some point in\r\n   * the future, according to the `delay` parameter, if specified. May be passed\r\n   * some context object, `state`, which will be passed to the `work` function.\r\n   *\r\n   * The given arguments will be processed an stored as an Action object in a\r\n   * queue of actions.\r\n   *\r\n   * @param {function(state: ?T): ?Subscription} work A function representing a\r\n   * task, or some unit of work to be executed by the Scheduler.\r\n   * @param {number} [delay] Time to wait before executing the work, where the\r\n   * time unit is implicit and defined by the Scheduler itself.\r\n   * @param {T} [state] Some contextual data that the `work` function uses when\r\n   * called by the Scheduler.\r\n   * @return {Subscription} A subscription in order to be able to unsubscribe\r\n   * the scheduled work.\r\n   */\r\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\r\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\r\n  }\r\n}\r\n", "import { Scheduler } from '../Scheduler';\r\nimport { Action } from './Action';\r\nimport { AsyncAction } from './AsyncAction';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AsyncScheduler extends Scheduler {\r\n  public actions: Array<AsyncAction<any>> = [];\r\n  /**\r\n   * A flag to indicate whether the Scheduler is currently executing a batch of\r\n   * queued actions.\r\n   * @type {boolean}\r\n   * @internal\r\n   */\r\n  public _active: boolean = false;\r\n  /**\r\n   * An internal ID used to track the latest asynchronous task such as those\r\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\r\n   * others.\r\n   * @type {any}\r\n   * @internal\r\n   */\r\n  public _scheduled: TimerHandle | undefined;\r\n\r\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\r\n    super(SchedulerAction, now);\r\n  }\r\n\r\n  public flush(action: AsyncAction<any>): void {\r\n    const { actions } = this;\r\n\r\n    if (this._active) {\r\n      actions.push(action);\r\n      return;\r\n    }\r\n\r\n    let error: any;\r\n    this._active = true;\r\n\r\n    do {\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\r\n\r\n    this._active = false;\r\n\r\n    if (error) {\r\n      while ((action = actions.shift()!)) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\n\r\nexport class AsapScheduler extends AsyncScheduler {\r\n  public flush(action?: AsyncAction<any>): void {\r\n    this._active = true;\r\n    // The async id that effects a call to flush is stored in _scheduled.\r\n    // Before executing an action, it's necessary to check the action's async\r\n    // id to determine whether it's supposed to be executed in the current\r\n    // flush.\r\n    // Previous implementations of this method used a count to determine this,\r\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\r\n    // are removed from the actions array and that can shift actions that are\r\n    // scheduled to be executed in a subsequent flush into positions at which\r\n    // they are executed within the current flush.\r\n    const flushId = this._scheduled;\r\n    this._scheduled = undefined;\r\n\r\n    const { actions } = this;\r\n    let error: any;\r\n    action = action || actions.shift()!;\r\n\r\n    do {\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\r\n\r\n    this._active = false;\r\n\r\n    if (error) {\r\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n", "import { AsapAction } from './AsapAction';\r\nimport { AsapScheduler } from './AsapScheduler';\r\n\r\n/**\r\n *\r\n * Asap Scheduler\r\n *\r\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\r\n *\r\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\r\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\r\n * code to end and then it will try to execute given task as fast as possible.\r\n *\r\n * `asap` scheduler will do its best to minimize time between end of currently executing code\r\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\r\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\r\n * some (although minimal) unwanted delay.\r\n *\r\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\r\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\r\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\r\n * as soon as possible, `asap` scheduler is your best bet.\r\n *\r\n * ## Example\r\n * Compare async and asap scheduler<\r\n * ```ts\r\n * import { asapScheduler, asyncScheduler } from 'rxjs';\r\n *\r\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\r\n * asapScheduler.schedule(() => console.log('asap'));\r\n *\r\n * // Logs:\r\n * // \"asap\"\r\n * // \"async\"\r\n * // ... but 'asap' goes first!\r\n * ```\r\n */\r\n\r\nexport const asapScheduler = new AsapScheduler(AsapAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\r\n */\r\nexport const asap = asapScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\n\r\n/**\r\n *\r\n * Async Scheduler\r\n *\r\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\r\n *\r\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\r\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\r\n * in intervals.\r\n *\r\n * If you just want to \"defer\" task, that is to perform it right after currently\r\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\r\n * better choice will be the {@link asapScheduler} scheduler.\r\n *\r\n * ## Examples\r\n * Use async scheduler to delay task\r\n * ```ts\r\n * import { asyncScheduler } from 'rxjs';\r\n *\r\n * const task = () => console.log('it works!');\r\n *\r\n * asyncScheduler.schedule(task, 2000);\r\n *\r\n * // After 2 seconds logs:\r\n * // \"it works!\"\r\n * ```\r\n *\r\n * Use async scheduler to repeat task in intervals\r\n * ```ts\r\n * import { asyncScheduler } from 'rxjs';\r\n *\r\n * function task(state) {\r\n *   console.log(state);\r\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\r\n *                                   // which we reschedule with new state and delay\r\n * }\r\n *\r\n * asyncScheduler.schedule(task, 3000, 0);\r\n *\r\n * // Logs:\r\n * // 0 after 3s\r\n * // 1 after 4s\r\n * // 2 after 5s\r\n * // 3 after 6s\r\n * ```\r\n */\r\n\r\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\r\n */\r\nexport const async = asyncScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { Subscription } from '../Subscription';\r\nimport { QueueScheduler } from './QueueScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class QueueAction<T> extends AsyncAction<T> {\r\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    if (delay > 0) {\r\n      return super.schedule(state, delay);\r\n    }\r\n    this.delay = delay;\r\n    this.state = state;\r\n    this.scheduler.flush(this);\r\n    return this;\r\n  }\r\n\r\n  public execute(state: T, delay: number): any {\r\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    // If delay exists and is greater than 0, or if the delay is null (the\r\n    // action wasn't rescheduled) but was originally scheduled as an async\r\n    // action, then recycle as an async action.\r\n\r\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\r\n      return super.requestAsyncId(scheduler, id, delay);\r\n    }\r\n\r\n    // Otherwise flush the scheduler starting with this action.\r\n    scheduler.flush(this);\r\n\r\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\r\n    // `TimerHandle`, and generally the return value here isn't really used. So the\r\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\r\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\r\n    return 0;\r\n  }\r\n}\r\n", "import { AsyncScheduler } from './AsyncScheduler';\r\n\r\nexport class QueueScheduler extends AsyncScheduler {\r\n}\r\n", "import { QueueAction } from './QueueAction';\r\nimport { QueueScheduler } from './QueueScheduler';\r\n\r\n/**\r\n *\r\n * Queue Scheduler\r\n *\r\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\r\n *\r\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\r\n *\r\n * When used without delay, it schedules given task synchronously - executes it right when\r\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\r\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\r\n * that task will be put on a queue and wait for current one to finish.\r\n *\r\n * This means that when you execute task with `queue` scheduler, you are sure it will end\r\n * before any other task scheduled with that scheduler will start.\r\n *\r\n * ## Examples\r\n * Schedule recursively first, then do something\r\n * ```ts\r\n * import { queueScheduler } from 'rxjs';\r\n *\r\n * queueScheduler.schedule(() => {\r\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\r\n *\r\n *   console.log('first');\r\n * });\r\n *\r\n * // Logs:\r\n * // \"first\"\r\n * // \"second\"\r\n * ```\r\n *\r\n * Reschedule itself recursively\r\n * ```ts\r\n * import { queueScheduler } from 'rxjs';\r\n *\r\n * queueScheduler.schedule(function(state) {\r\n *   if (state !== 0) {\r\n *     console.log('before', state);\r\n *     this.schedule(state - 1); // `this` references currently executing Action,\r\n *                               // which we reschedule with new state\r\n *     console.log('after', state);\r\n *   }\r\n * }, 0, 3);\r\n *\r\n * // In scheduler that runs recursively, you would expect:\r\n * // \"before\", 3\r\n * // \"before\", 2\r\n * // \"before\", 1\r\n * // \"after\", 1\r\n * // \"after\", 2\r\n * // \"after\", 3\r\n *\r\n * // But with queue it logs:\r\n * // \"before\", 3\r\n * // \"after\", 3\r\n * // \"before\", 2\r\n * // \"after\", 2\r\n * // \"before\", 1\r\n * // \"after\", 1\r\n * ```\r\n */\r\n\r\nexport const queueScheduler = new QueueScheduler(QueueAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\r\n */\r\nexport const queue = queueScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { animationFrameProvider } from './animationFrameProvider';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\r\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\r\n    super(scheduler, work);\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\r\n    // If delay is greater than 0, request as an async action.\r\n    if (delay !== null && delay > 0) {\r\n      return super.requestAsyncId(scheduler, id, delay);\r\n    }\r\n    // Push the action to the end of the scheduler queue.\r\n    scheduler.actions.push(this);\r\n    // If an animation frame has already been requested, don't request another\r\n    // one. If an animation frame hasn't been requested yet, request one. Return\r\n    // the current animation frame request id.\r\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\r\n  }\r\n\r\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\r\n    // If delay exists and is greater than 0, or if the delay is null (the\r\n    // action wasn't rescheduled) but was originally scheduled as an async\r\n    // action, then recycle as an async action.\r\n    if (delay != null ? delay > 0 : this.delay > 0) {\r\n      return super.recycleAsyncId(scheduler, id, delay);\r\n    }\r\n    // If the scheduler queue has no remaining actions with the same async id,\r\n    // cancel the requested animation frame and set the scheduled flag to\r\n    // undefined so the next AnimationFrameAction will request its own.\r\n    const { actions } = scheduler;\r\n    if (id != null && actions[actions.length - 1]?.id !== id) {\r\n      animationFrameProvider.cancelAnimationFrame(id as number);\r\n      scheduler._scheduled = undefined;\r\n    }\r\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\r\n    return undefined;\r\n  }\r\n}\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\n\r\nexport class AnimationFrameScheduler extends AsyncScheduler {\r\n  public flush(action?: AsyncAction<any>): void {\r\n    this._active = true;\r\n    // The async id that effects a call to flush is stored in _scheduled.\r\n    // Before executing an action, it's necessary to check the action's async\r\n    // id to determine whether it's supposed to be executed in the current\r\n    // flush.\r\n    // Previous implementations of this method used a count to determine this,\r\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\r\n    // are removed from the actions array and that can shift actions that are\r\n    // scheduled to be executed in a subsequent flush into positions at which\r\n    // they are executed within the current flush.\r\n    const flushId = this._scheduled;\r\n    this._scheduled = undefined;\r\n\r\n    const { actions } = this;\r\n    let error: any;\r\n    action = action || actions.shift()!;\r\n\r\n    do {\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\r\n\r\n    this._active = false;\r\n\r\n    if (error) {\r\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n", "import { AnimationFrameAction } from './AnimationFrameAction';\r\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\r\n\r\n/**\r\n *\r\n * Animation Frame Scheduler\r\n *\r\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\r\n *\r\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\r\n * behaviour.\r\n *\r\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\r\n * It makes sure scheduled task will happen just before next browser content repaint,\r\n * thus performing animations as efficiently as possible.\r\n *\r\n * ## Example\r\n * Schedule div height animation\r\n * ```ts\r\n * // html: <div style=\"background: #0ff;\"></div>\r\n * import { animationFrameScheduler } from 'rxjs';\r\n *\r\n * const div = document.querySelector('div');\r\n *\r\n * animationFrameScheduler.schedule(function(height) {\r\n *   div.style.height = height + \"px\";\r\n *\r\n *   this.schedule(height + 1);  // `this` references currently executing Action,\r\n *                               // which we reschedule with new state\r\n * }, 0, 0);\r\n *\r\n * // You will see a div element growing in height\r\n * ```\r\n */\r\n\r\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\r\n\r\n/**\r\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\r\n */\r\nexport const animationFrame = animationFrameScheduler;\r\n", "import { AsyncAction } from './AsyncAction';\r\nimport { Subscription } from '../Subscription';\r\nimport { AsyncScheduler } from './AsyncScheduler';\r\nimport { SchedulerAction } from '../types';\r\nimport { TimerHandle } from './timerHandle';\r\n\r\nexport class VirtualTimeScheduler extends AsyncScheduler {\r\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\r\n  static frameTimeFactor = 10;\r\n\r\n  /**\r\n   * The current frame for the state of the virtual scheduler instance. The difference\r\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\r\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\r\n   * that means `10` virtual time units have passed.\r\n   */\r\n  public frame: number = 0;\r\n\r\n  /**\r\n   * Used internally to examine the current virtual action index being processed.\r\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\r\n   */\r\n  public index: number = -1;\r\n\r\n  /**\r\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\r\n   * this constructor is likely to change in the long run.\r\n   *\r\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\r\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\r\n   */\r\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\r\n    super(schedulerActionCtor, () => this.frame);\r\n  }\r\n\r\n  /**\r\n   * Prompt the Scheduler to execute all of its queued actions, therefore\r\n   * clearing its queue.\r\n   * @return {void}\r\n   */\r\n  public flush(): void {\r\n    const { actions, maxFrames } = this;\r\n    let error: any;\r\n    let action: AsyncAction<any> | undefined;\r\n\r\n    while ((action = actions[0]) && action.delay <= maxFrames) {\r\n      actions.shift();\r\n      this.frame = action.delay;\r\n\r\n      if ((error = action.execute(action.state, action.delay))) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      while ((action = actions.shift())) {\r\n        action.unsubscribe();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport class VirtualAction<T> extends AsyncAction<T> {\r\n  protected active: boolean = true;\r\n\r\n  constructor(\r\n    protected scheduler: VirtualTimeScheduler,\r\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\r\n    protected index: number = (scheduler.index += 1)\r\n  ) {\r\n    super(scheduler, work);\r\n    this.index = scheduler.index = index;\r\n  }\r\n\r\n  public schedule(state?: T, delay: number = 0): Subscription {\r\n    if (Number.isFinite(delay)) {\r\n      if (!this.id) {\r\n        return super.schedule(state, delay);\r\n      }\r\n      this.active = false;\r\n      // If an action is rescheduled, we save allocations by mutating its state,\r\n      // pushing it to the end of the scheduler queue, and recycling the action.\r\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\r\n      // must be immutable so they can be inspected later.\r\n      const action = new VirtualAction(this.scheduler, this.work);\r\n      this.add(action);\r\n      return action.schedule(state, delay);\r\n    } else {\r\n      // If someone schedules something with Infinity, it'll never happen. So we\r\n      // don't even schedule it.\r\n      return Subscription.EMPTY;\r\n    }\r\n  }\r\n\r\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\r\n    this.delay = scheduler.frame + delay;\r\n    const { actions } = scheduler;\r\n    actions.push(this);\r\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\r\n    return 1;\r\n  }\r\n\r\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\r\n    return undefined;\r\n  }\r\n\r\n  protected _execute(state: T, delay: number): any {\r\n    if (this.active === true) {\r\n      return super._execute(state, delay);\r\n    }\r\n  }\r\n\r\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\r\n    if (a.delay === b.delay) {\r\n      if (a.index === b.index) {\r\n        return 0;\r\n      } else if (a.index > b.index) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    } else if (a.delay > b.delay) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\n\r\n/**\r\n * A simple Observable that emits no items to the Observer and immediately\r\n * emits a complete notification.\r\n *\r\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\r\n *\r\n * ![](empty.png)\r\n *\r\n * A simple Observable that only emits the complete notification. It can be used\r\n * for composing with other Observables, such as in a {@link mergeMap}.\r\n *\r\n * ## Examples\r\n *\r\n * Log complete notification\r\n *\r\n * ```ts\r\n * import { EMPTY } from 'rxjs';\r\n *\r\n * EMPTY.subscribe({\r\n *   next: () => console.log('Next'),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Outputs\r\n * // Complete!\r\n * ```\r\n *\r\n * Emit the number 7, then complete\r\n *\r\n * ```ts\r\n * import { EMPTY, startWith } from 'rxjs';\r\n *\r\n * const result = EMPTY.pipe(startWith(7));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // 7\r\n * ```\r\n *\r\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\r\n *\r\n * ```ts\r\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\r\n *\r\n * const interval$ = interval(1000);\r\n * const result = interval$.pipe(\r\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following to the console:\r\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\r\n * // x will occur every 1000ms\r\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\r\n * // if x % 2 is not equal to 1, nothing will be output\r\n * ```\r\n *\r\n * @see {@link Observable}\r\n * @see {@link NEVER}\r\n * @see {@link of}\r\n * @see {@link throwError}\r\n */\r\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\r\n\r\n/**\r\n * @param scheduler A {@link SchedulerLike} to use for scheduling\r\n * the emission of the complete notification.\r\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\r\n */\r\nexport function empty(scheduler?: SchedulerLike) {\r\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\r\n}\r\n\r\nfunction emptyScheduled(scheduler: SchedulerLike) {\r\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { isFunction } from './isFunction';\r\n\r\nexport function isScheduler(value: any): value is SchedulerLike {\r\n  return value && isFunction(value.schedule);\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { isFunction } from './isFunction';\r\nimport { isScheduler } from './isScheduler';\r\n\r\nfunction last<T>(arr: T[]): T | undefined {\r\n  return arr[arr.length - 1];\r\n}\r\n\r\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\r\n  return isFunction(last(args)) ? args.pop() : undefined;\r\n}\r\n\r\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\r\n  return isScheduler(last(args)) ? args.pop() : undefined;\r\n}\r\n\r\nexport function popNumber(args: any[], defaultValue: number): number {\r\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\r\n}\r\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\r\n\r\n/**\r\n * Tests to see if the object is \"thennable\".\r\n * @param value the object to test\r\n */\r\nexport function isPromise(value: any): value is PromiseLike<any> {\r\n  return isFunction(value?.then);\r\n}\r\n", "import { InteropObservable } from '../types';\r\nimport { observable as Symbol_observable } from '../symbol/observable';\r\nimport { isFunction } from './isFunction';\r\n\r\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\r\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\r\n  return isFunction(input[Symbol_observable]);\r\n}\r\n", "import { isFunction } from './isFunction';\r\n\r\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\r\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\r\n}\r\n", "/**\r\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\r\n * @param input The object that was passed.\r\n */\r\nexport function createInvalidObservableTypeError(input: any) {\r\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\r\n  return new TypeError(\r\n    `You provided ${\r\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\r\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\r\n  );\r\n}\r\n", "export function getSymbolIterator(): symbol {\r\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\r\n    return '@@iterator' as any;\r\n  }\r\n\r\n  return Symbol.iterator;\r\n}\r\n\r\nexport const iterator = getSymbolIterator();\r\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\r\nimport { isFunction } from './isFunction';\r\n\r\n/** Identifies an input as being an Iterable */\r\nexport function isIterable(input: any): input is Iterable<any> {\r\n  return isFunction(input?.[Symbol_iterator]);\r\n}\r\n", "import { ReadableStreamLike } from '../types';\r\nimport { isFunction } from './isFunction';\r\n\r\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\r\n  const reader = readableStream.getReader();\r\n  try {\r\n    while (true) {\r\n      const { value, done } = await reader.read();\r\n      if (done) {\r\n        return;\r\n      }\r\n      yield value!;\r\n    }\r\n  } finally {\r\n    reader.releaseLock();\r\n  }\r\n}\r\n\r\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\r\n  // We don't want to use instanceof checks because they would return\r\n  // false for instances from another Realm, like an <iframe>.\r\n  return isFunction(obj?.getReader);\r\n}\r\n", "import { isArrayLike } from '../util/isArrayLike';\r\nimport { isPromise } from '../util/isPromise';\r\nimport { Observable } from '../Observable';\r\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\r\nimport { isInteropObservable } from '../util/isInteropObservable';\r\nimport { isAsyncIterable } from '../util/isAsyncIterable';\r\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\r\nimport { isIterable } from '../util/isIterable';\r\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { reportUnhandledError } from '../util/reportUnhandledError';\r\nimport { observable as Symbol_observable } from '../symbol/observable';\r\n\r\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\r\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\r\n  if (input instanceof Observable) {\r\n    return input;\r\n  }\r\n  if (input != null) {\r\n    if (isInteropObservable(input)) {\r\n      return fromInteropObservable(input);\r\n    }\r\n    if (isArrayLike(input)) {\r\n      return fromArrayLike(input);\r\n    }\r\n    if (isPromise(input)) {\r\n      return fromPromise(input);\r\n    }\r\n    if (isAsyncIterable(input)) {\r\n      return fromAsyncIterable(input);\r\n    }\r\n    if (isIterable(input)) {\r\n      return fromIterable(input);\r\n    }\r\n    if (isReadableStreamLike(input)) {\r\n      return fromReadableStreamLike(input);\r\n    }\r\n  }\r\n\r\n  throw createInvalidObservableTypeError(input);\r\n}\r\n\r\n/**\r\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\r\n * @param obj An object that properly implements `Symbol.observable`.\r\n */\r\nexport function fromInteropObservable<T>(obj: any) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    const obs = obj[Symbol_observable]();\r\n    if (isFunction(obs.subscribe)) {\r\n      return obs.subscribe(subscriber);\r\n    }\r\n    // Should be caught by observable subscribe function error handling.\r\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\r\n  });\r\n}\r\n\r\n/**\r\n * Synchronously emits the values of an array like and completes.\r\n * This is exported because there are creation functions and operators that need to\r\n * make direct use of the same logic, and there's no reason to make them run through\r\n * `from` conditionals because we *know* they're dealing with an array.\r\n * @param array The array to emit values from\r\n */\r\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    // Loop over the array and emit each value. Note two things here:\r\n    // 1. We're making sure that the subscriber is not closed on each loop.\r\n    //    This is so we don't continue looping over a very large array after\r\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\r\n    //    has already unsubscribed.\r\n    // 2. In this form, reentrant code can alter that array we're looping over.\r\n    //    This is a known issue, but considered an edge case. The alternative would\r\n    //    be to copy the array before executing the loop, but this has\r\n    //    performance implications.\r\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\r\n      subscriber.next(array[i]);\r\n    }\r\n    subscriber.complete();\r\n  });\r\n}\r\n\r\nexport function fromPromise<T>(promise: PromiseLike<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    promise\r\n      .then(\r\n        (value) => {\r\n          if (!subscriber.closed) {\r\n            subscriber.next(value);\r\n            subscriber.complete();\r\n          }\r\n        },\r\n        (err: any) => subscriber.error(err)\r\n      )\r\n      .then(null, reportUnhandledError);\r\n  });\r\n}\r\n\r\nexport function fromIterable<T>(iterable: Iterable<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    for (const value of iterable) {\r\n      subscriber.next(value);\r\n      if (subscriber.closed) {\r\n        return;\r\n      }\r\n    }\r\n    subscriber.complete();\r\n  });\r\n}\r\n\r\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => {\r\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\r\n  });\r\n}\r\n\r\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\r\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\r\n}\r\n\r\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\r\n  for await (const value of asyncIterable) {\r\n    subscriber.next(value);\r\n    // A side-effect may have closed our subscriber,\r\n    // check before the next iteration.\r\n    if (subscriber.closed) {\r\n      return;\r\n    }\r\n  }\r\n  subscriber.complete();\r\n}\r\n", "import { Subscription } from '../Subscription';\r\nimport { SchedulerAction, SchedulerLike } from '../types';\r\n\r\nexport function executeSchedule(\r\n  parentSubscription: Subscription,\r\n  scheduler: SchedulerLike,\r\n  work: () => void,\r\n  delay: number,\r\n  repeat: true\r\n): void;\r\nexport function executeSchedule(\r\n  parentSubscription: Subscription,\r\n  scheduler: SchedulerLike,\r\n  work: () => void,\r\n  delay?: number,\r\n  repeat?: false\r\n): Subscription;\r\n\r\nexport function executeSchedule(\r\n  parentSubscription: Subscription,\r\n  scheduler: SchedulerLike,\r\n  work: () => void,\r\n  delay = 0,\r\n  repeat = false\r\n): Subscription | void {\r\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\r\n    work();\r\n    if (repeat) {\r\n      parentSubscription.add(this.schedule(null, delay));\r\n    } else {\r\n      this.unsubscribe();\r\n    }\r\n  }, delay);\r\n\r\n  parentSubscription.add(scheduleSubscription);\r\n\r\n  if (!repeat) {\r\n    // Because user-land scheduler implementations are unlikely to properly reuse\r\n    // Actions for repeat scheduling, we can't trust that the returned subscription\r\n    // will control repeat subscription scenarios. So we're trying to avoid using them\r\n    // incorrectly within this library.\r\n    return scheduleSubscription;\r\n  }\r\n}\r\n", "/** @prettier */\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Re-emits all notifications from source Observable with specified scheduler.\r\n *\r\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\r\n *\r\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\r\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\r\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\r\n *\r\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\r\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\r\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\r\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\r\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\r\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\r\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\r\n * little bit more, to ensure that they are emitted at expected moments.\r\n *\r\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\r\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\r\n * will delay all notifications - including error notifications - while `delay` will pass through error\r\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\r\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\r\n * for notification emissions in general.\r\n *\r\n * ## Example\r\n *\r\n * Ensure values in subscribe are called just before browser repaint\r\n *\r\n * ```ts\r\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\r\n *\r\n * const someDiv = document.createElement('div');\r\n * someDiv.style.cssText = 'width: 200px;background: #09c';\r\n * document.body.appendChild(someDiv);\r\n * const intervals = interval(10);      // Intervals are scheduled\r\n *                                      // with async scheduler by default...\r\n * intervals.pipe(\r\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\r\n * )                                    // scheduler to ensure smooth animation.\r\n * .subscribe(val => {\r\n *   someDiv.style.height = val + 'px';\r\n * });\r\n * ```\r\n *\r\n * @see {@link delay}\r\n *\r\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\r\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\r\n * @return A function that returns an Observable that emits the same\r\n * notifications as the source Observable, but with provided scheduler.\r\n */\r\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\r\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\r\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\n/**\r\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\r\n *\r\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\r\n *\r\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\r\n *\r\n * ![](subscribeOn.png)\r\n *\r\n * ## Example\r\n *\r\n * Given the following code:\r\n *\r\n * ```ts\r\n * import { of, merge } from 'rxjs';\r\n *\r\n * const a = of(1, 2, 3);\r\n * const b = of(4, 5, 6);\r\n *\r\n * merge(a, b).subscribe(console.log);\r\n *\r\n * // Outputs\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * // 5\r\n * // 6\r\n * ```\r\n *\r\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\r\n *\r\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\r\n *\r\n * ```ts\r\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\r\n *\r\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\r\n * const b = of(4, 5, 6);\r\n *\r\n * merge(a, b).subscribe(console.log);\r\n *\r\n * // Outputs\r\n * // 4\r\n * // 5\r\n * // 6\r\n * // 1\r\n * // 2\r\n * // 3\r\n * ```\r\n *\r\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\r\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\r\n *\r\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\r\n * @param delay A delay to pass to the scheduler to delay subscriptions\r\n * @return A function that returns an Observable modified so that its\r\n * subscriptions happen on the specified {@link SchedulerLike}.\r\n */\r\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\r\n  });\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { observeOn } from '../operators/observeOn';\r\nimport { subscribeOn } from '../operators/subscribeOn';\r\nimport { InteropObservable, SchedulerLike } from '../types';\r\n\r\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\r\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { observeOn } from '../operators/observeOn';\r\nimport { subscribeOn } from '../operators/subscribeOn';\r\nimport { SchedulerLike } from '../types';\r\n\r\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\r\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\n\r\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\r\n  return new Observable<T>((subscriber) => {\r\n    // The current array index.\r\n    let i = 0;\r\n    // Start iterating over the array like on a schedule.\r\n    return scheduler.schedule(function () {\r\n      if (i === input.length) {\r\n        // If we have hit the end of the array like in the\r\n        // previous job, we can complete.\r\n        subscriber.complete();\r\n      } else {\r\n        // Otherwise let's next the value at the current index,\r\n        // then increment our index.\r\n        subscriber.next(input[i++]);\r\n        // If the last emission didn't cause us to close the subscriber\r\n        // (via take or some side effect), reschedule the job and we'll\r\n        // make another pass.\r\n        if (!subscriber.closed) {\r\n          this.schedule();\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\n/**\r\n * Used in {@link scheduled} to create an observable from an Iterable.\r\n * @param input The iterable to create an observable from\r\n * @param scheduler The scheduler to use\r\n */\r\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\r\n  return new Observable<T>((subscriber) => {\r\n    let iterator: Iterator<T, T>;\r\n\r\n    // Schedule the initial creation of the iterator from\r\n    // the iterable. This is so the code in the iterable is\r\n    // not called until the scheduled job fires.\r\n    executeSchedule(subscriber, scheduler, () => {\r\n      // Create the iterator.\r\n      iterator = (input as any)[Symbol_iterator]();\r\n\r\n      executeSchedule(\r\n        subscriber,\r\n        scheduler,\r\n        () => {\r\n          let value: T;\r\n          let done: boolean | undefined;\r\n          try {\r\n            // Pull the value out of the iterator\r\n            ({ value, done } = iterator.next());\r\n          } catch (err) {\r\n            // We got an error while pulling from the iterator\r\n            subscriber.error(err);\r\n            return;\r\n          }\r\n\r\n          if (done) {\r\n            // If it is \"done\" we just complete. This mimics the\r\n            // behavior of JavaScript's `for..of` consumption of\r\n            // iterables, which will not emit the value from an iterator\r\n            // result of `{ done: true: value: 'here' }`.\r\n            subscriber.complete();\r\n          } else {\r\n            // The iterable is not done, emit the value.\r\n            subscriber.next(value);\r\n          }\r\n        },\r\n        0,\r\n        true\r\n      );\r\n    });\r\n\r\n    // During finalization, if we see this iterator has a `return` method,\r\n    // then we know it is a Generator, and not just an Iterator. So we call\r\n    // the `return()` function. This will ensure that any `finally { }` blocks\r\n    // inside of the generator we can hit will be hit properly.\r\n    return () => isFunction(iterator?.return) && iterator.return();\r\n  });\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\r\n  if (!input) {\r\n    throw new Error('Iterable cannot be null');\r\n  }\r\n  return new Observable<T>((subscriber) => {\r\n    executeSchedule(subscriber, scheduler, () => {\r\n      const iterator = input[Symbol.asyncIterator]();\r\n      executeSchedule(\r\n        subscriber,\r\n        scheduler,\r\n        () => {\r\n          iterator.next().then((result) => {\r\n            if (result.done) {\r\n              // This will remove the subscriptions from\r\n              // the parent subscription.\r\n              subscriber.complete();\r\n            } else {\r\n              subscriber.next(result.value);\r\n            }\r\n          });\r\n        },\r\n        0,\r\n        true\r\n      );\r\n    });\r\n  });\r\n}\r\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\r\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\r\n\r\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\r\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\r\n}\r\n", "import { scheduleObservable } from './scheduleObservable';\r\nimport { schedulePromise } from './schedulePromise';\r\nimport { scheduleArray } from './scheduleArray';\r\nimport { scheduleIterable } from './scheduleIterable';\r\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\r\nimport { isInteropObservable } from '../util/isInteropObservable';\r\nimport { isPromise } from '../util/isPromise';\r\nimport { isArrayLike } from '../util/isArrayLike';\r\nimport { isIterable } from '../util/isIterable';\r\nimport { ObservableInput, SchedulerLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { isAsyncIterable } from '../util/isAsyncIterable';\r\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\r\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\r\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\r\n\r\n/**\r\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\r\n * are scheduled on the provided scheduler.\r\n *\r\n * @see {@link from}\r\n * @see {@link of}\r\n *\r\n * @param input The observable, array, promise, iterable, etc you would like to schedule\r\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\r\n * the returned observable.\r\n */\r\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\r\n  if (input != null) {\r\n    if (isInteropObservable(input)) {\r\n      return scheduleObservable(input, scheduler);\r\n    }\r\n    if (isArrayLike(input)) {\r\n      return scheduleArray(input, scheduler);\r\n    }\r\n    if (isPromise(input)) {\r\n      return schedulePromise(input, scheduler);\r\n    }\r\n    if (isAsyncIterable(input)) {\r\n      return scheduleAsyncIterable(input, scheduler);\r\n    }\r\n    if (isIterable(input)) {\r\n      return scheduleIterable(input, scheduler);\r\n    }\r\n    if (isReadableStreamLike(input)) {\r\n      return scheduleReadableStreamLike(input, scheduler);\r\n    }\r\n  }\r\n  throw createInvalidObservableTypeError(input);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\r\nimport { scheduled } from '../scheduled/scheduled';\r\nimport { innerFrom } from './innerFrom';\r\n\r\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\r\n\r\n/**\r\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\r\n *\r\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\r\n *\r\n * ![](from.png)\r\n *\r\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\r\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\r\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\r\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\r\n * converted through this operator.\r\n *\r\n * ## Examples\r\n *\r\n * Converts an array to an Observable\r\n *\r\n * ```ts\r\n * import { from } from 'rxjs';\r\n *\r\n * const array = [10, 20, 30];\r\n * const result = from(array);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 10\r\n * // 20\r\n * // 30\r\n * ```\r\n *\r\n * Convert an infinite iterable (from a generator) to an Observable\r\n *\r\n * ```ts\r\n * import { from, take } from 'rxjs';\r\n *\r\n * function* generateDoubles(seed) {\r\n *    let i = seed;\r\n *    while (true) {\r\n *      yield i;\r\n *      i = 2 * i; // double it\r\n *    }\r\n * }\r\n *\r\n * const iterator = generateDoubles(3);\r\n * const result = from(iterator).pipe(take(10));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 3\r\n * // 6\r\n * // 12\r\n * // 24\r\n * // 48\r\n * // 96\r\n * // 192\r\n * // 384\r\n * // 768\r\n * // 1536\r\n * ```\r\n *\r\n * With `asyncScheduler`\r\n *\r\n * ```ts\r\n * import { from, asyncScheduler } from 'rxjs';\r\n *\r\n * console.log('start');\r\n *\r\n * const array = [10, 20, 30];\r\n * const result = from(array, asyncScheduler);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * console.log('end');\r\n *\r\n * // Logs:\r\n * // 'start'\r\n * // 'end'\r\n * // 10\r\n * // 20\r\n * // 30\r\n * ```\r\n *\r\n * @see {@link fromEvent}\r\n * @see {@link fromEventPattern}\r\n *\r\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\r\n * an Array, an iterable, or an array-like object to be converted.\r\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\r\n * @return {Observable<T>}\r\n */\r\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\r\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\r\n}\r\n", "import { SchedulerLike, ValueFromArray } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { popScheduler } from '../util/args';\r\nimport { from } from './from';\r\n\r\n// Devs are more likely to pass null or undefined than they are a scheduler\r\n// without accompanying values. To make things easier for (naughty) devs who\r\n// use the `strictNullChecks: false` TypeScript compiler option, these\r\n// overloads with explicit null and undefined values are included.\r\n\r\nexport function of(value: null): Observable<null>;\r\nexport function of(value: undefined): Observable<undefined>;\r\n\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function of(scheduler: SchedulerLike): Observable<never>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\r\n\r\nexport function of(): Observable<never>;\r\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\r\nexport function of<T>(): Observable<T>;\r\nexport function of<T>(value: T): Observable<T>;\r\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\r\n\r\n/**\r\n * Converts the arguments to an observable sequence.\r\n *\r\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\r\n *\r\n * ![](of.png)\r\n *\r\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\r\n * as a separate `next` notification.\r\n *\r\n * ## Examples\r\n *\r\n * Emit the values `10, 20, 30`\r\n *\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n *\r\n * of(10, 20, 30)\r\n *   .subscribe({\r\n *     next: value => console.log('next:', value),\r\n *     error: err => console.log('error:', err),\r\n *     complete: () => console.log('the end'),\r\n *   });\r\n *\r\n * // Outputs\r\n * // next: 10\r\n * // next: 20\r\n * // next: 30\r\n * // the end\r\n * ```\r\n *\r\n * Emit the array `[1, 2, 3]`\r\n *\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n *\r\n * of([1, 2, 3])\r\n *   .subscribe({\r\n *     next: value => console.log('next:', value),\r\n *     error: err => console.log('error:', err),\r\n *     complete: () => console.log('the end'),\r\n *   });\r\n *\r\n * // Outputs\r\n * // next: [1, 2, 3]\r\n * // the end\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link range}\r\n *\r\n * @param {...T} values A comma separated list of arguments you want to be emitted\r\n * @return {Observable} An Observable that emits the arguments\r\n * described above and then completes.\r\n */\r\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\r\n  const scheduler = popScheduler(args);\r\n  return from(args as T[], scheduler);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { SchedulerLike } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * Creates an observable that will create an error instance and push it to the consumer as an error\r\n * immediately upon subscription.\r\n *\r\n * <span class=\"informal\">Just errors and does nothing else</span>\r\n *\r\n * ![](throw.png)\r\n *\r\n * This creation function is useful for creating an observable that will create an error and error every\r\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\r\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\r\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\r\n * that up and notify the consumer of the error.\r\n *\r\n * ## Example\r\n *\r\n * Create a simple observable that will create a new error with a timestamp and log it\r\n * and the message every time you subscribe to it\r\n *\r\n * ```ts\r\n * import { throwError } from 'rxjs';\r\n *\r\n * let errorCount = 0;\r\n *\r\n * const errorWithTimestamp$ = throwError(() => {\r\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\r\n *   error.timestamp = Date.now();\r\n *   return error;\r\n * });\r\n *\r\n * errorWithTimestamp$.subscribe({\r\n *   error: err => console.log(err.timestamp, err.message)\r\n * });\r\n *\r\n * errorWithTimestamp$.subscribe({\r\n *   error: err => console.log(err.timestamp, err.message)\r\n * });\r\n *\r\n * // Logs the timestamp and a new error message for each subscription\r\n * ```\r\n *\r\n * ### Unnecessary usage\r\n *\r\n * Using `throwError` inside of an operator or creation function\r\n * with a callback, is usually not necessary\r\n *\r\n * ```ts\r\n * import { of, concatMap, timer, throwError } from 'rxjs';\r\n *\r\n * const delays$ = of(1000, 2000, Infinity, 3000);\r\n *\r\n * delays$.pipe(\r\n *   concatMap(ms => {\r\n *     if (ms < 10000) {\r\n *       return timer(ms);\r\n *     } else {\r\n *       // This is probably overkill.\r\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * You can just throw the error instead\r\n *\r\n * ```ts\r\n * import { of, concatMap, timer } from 'rxjs';\r\n *\r\n * const delays$ = of(1000, 2000, Infinity, 3000);\r\n *\r\n * delays$.pipe(\r\n *   concatMap(ms => {\r\n *     if (ms < 10000) {\r\n *       return timer(ms);\r\n *     } else {\r\n *       // Cleaner and easier to read for most folks.\r\n *       throw new Error(`Invalid time ${ ms }`);\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * @param errorFactory A factory function that will create the error instance that is pushed.\r\n */\r\nexport function throwError(errorFactory: () => any): Observable<never>;\r\n\r\n/**\r\n * Returns an observable that will error with the specified error immediately upon subscription.\r\n *\r\n * @param error The error instance to emit\r\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\r\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\r\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\r\n */\r\nexport function throwError(error: any): Observable<never>;\r\n\r\n/**\r\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\r\n *\r\n * @param errorOrErrorFactory An error instance or error factory\r\n * @param scheduler A scheduler to use to schedule the error notification\r\n * @deprecated The `scheduler` parameter will be removed in v8.\r\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\r\n * Details: https://rxjs.dev/deprecations/scheduler-argument\r\n */\r\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\r\n\r\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\r\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\r\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\r\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\r\n}\r\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\r\nimport { Observable } from './Observable';\r\nimport { EMPTY } from './observable/empty';\r\nimport { of } from './observable/of';\r\nimport { throwError } from './observable/throwError';\r\nimport { isFunction } from './util/isFunction';\r\n\r\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\r\n/**\r\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\r\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\r\n */\r\nexport enum NotificationKind {\r\n  NEXT = 'N',\r\n  ERROR = 'E',\r\n  COMPLETE = 'C',\r\n}\r\n\r\n/**\r\n * Represents a push-based event or value that an {@link Observable} can emit.\r\n * This class is particularly useful for operators that manage notifications,\r\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\r\n * others. Besides wrapping the actual delivered value, it also annotates it\r\n * with metadata of, for instance, what type of push message it is (`next`,\r\n * `error`, or `complete`).\r\n *\r\n * @see {@link materialize}\r\n * @see {@link dematerialize}\r\n * @see {@link observeOn}\r\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n * Will be removed in v8.\r\n */\r\nexport class Notification<T> {\r\n  /**\r\n   * A value signifying that the notification will \"next\" if observed. In truth,\r\n   * This is really synonymous with just checking `kind === \"N\"`.\r\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\r\n   */\r\n  readonly hasValue: boolean;\r\n\r\n  /**\r\n   * Creates a \"Next\" notification object.\r\n   * @param kind Always `'N'`\r\n   * @param value The value to notify with if observed.\r\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\r\n   */\r\n  constructor(kind: 'N', value?: T);\r\n  /**\r\n   * Creates an \"Error\" notification object.\r\n   * @param kind Always `'E'`\r\n   * @param value Always `undefined`\r\n   * @param error The error to notify with if observed.\r\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\r\n   */\r\n  constructor(kind: 'E', value: undefined, error: any);\r\n  /**\r\n   * Creates a \"completion\" notification object.\r\n   * @param kind Always `'C'`\r\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\r\n   */\r\n  constructor(kind: 'C');\r\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\r\n    this.hasValue = kind === 'N';\r\n  }\r\n\r\n  /**\r\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\r\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\r\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\r\n   * @param observer The observer to notify.\r\n   */\r\n  observe(observer: PartialObserver<T>): void {\r\n    return observeNotification(this as ObservableNotification<T>, observer);\r\n  }\r\n\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @param complete A complete handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  do(next: (value: T) => void, error: (err: any) => void): void;\r\n  /**\r\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\r\n   * this will not error, and it will be a noop.\r\n   * @param next The next handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  do(next: (value: T) => void): void;\r\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\r\n    const { kind, value, error } = this;\r\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\r\n  }\r\n\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @param complete A complete handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\r\n  /**\r\n   * Executes a notification on the appropriate handler from a list provided.\r\n   * If a handler is missing for the kind of notification, nothing is called\r\n   * and no error is thrown, it will be a noop.\r\n   * @param next A next handler\r\n   * @param error An error handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(next: (value: T) => void, error: (err: any) => void): void;\r\n  /**\r\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\r\n   * this will not error, and it will be a noop.\r\n   * @param next The next handler\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(next: (value: T) => void): void;\r\n\r\n  /**\r\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\r\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\r\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\r\n   * @param observer The observer to notify.\r\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\r\n   */\r\n  accept(observer: PartialObserver<T>): void;\r\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\r\n    return isFunction((nextOrObserver as any)?.next)\r\n      ? this.observe(nextOrObserver as PartialObserver<T>)\r\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\r\n  }\r\n\r\n  /**\r\n   * Returns a simple Observable that just delivers the notification represented\r\n   * by this Notification instance.\r\n   *\r\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\r\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\r\n   */\r\n  toObservable(): Observable<T> {\r\n    const { kind, value, error } = this;\r\n    // Select the observable to return by `kind`\r\n    const result =\r\n      kind === 'N'\r\n        ? // Next kind. Return an observable of that value.\r\n          of(value!)\r\n        : //\r\n        kind === 'E'\r\n        ? // Error kind. Return an observable that emits the error.\r\n          throwError(() => error)\r\n        : //\r\n        kind === 'C'\r\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\r\n          EMPTY\r\n        : // Unknown kind, return falsy, so we error below.\r\n          0;\r\n    if (!result) {\r\n      // TODO: consider removing this check. The only way to cause this would be to\r\n      // use the Notification constructor directly in a way that is not type-safe.\r\n      // and direct use of the Notification constructor is deprecated.\r\n      throw new TypeError(`Unexpected notification kind ${kind}`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\r\n  /**\r\n   * A shortcut to create a Notification instance of the type `next` from a\r\n   * given value.\r\n   * @param {T} value The `next` value.\r\n   * @return {Notification<T>} The \"next\" Notification representing the\r\n   * argument.\r\n   * @nocollapse\r\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n   * Will be removed in v8.\r\n   */\r\n  static createNext<T>(value: T) {\r\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\r\n  }\r\n\r\n  /**\r\n   * A shortcut to create a Notification instance of the type `error` from a\r\n   * given error.\r\n   * @param {any} [err] The `error` error.\r\n   * @return {Notification<T>} The \"error\" Notification representing the\r\n   * argument.\r\n   * @nocollapse\r\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n   * Will be removed in v8.\r\n   */\r\n  static createError(err?: any) {\r\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\r\n  }\r\n\r\n  /**\r\n   * A shortcut to create a Notification instance of the type `complete`.\r\n   * @return {Notification<any>} The valueless \"complete\" Notification.\r\n   * @nocollapse\r\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\r\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\r\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\r\n   * Will be removed in v8.\r\n   */\r\n  static createComplete(): Notification<never> & CompleteNotification {\r\n    return Notification.completeNotification;\r\n  }\r\n}\r\n\r\n/**\r\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\r\n * If the handler is missing it will do nothing. Even if the notification is an error, if\r\n * there is no error handler on the observer, an error will not be thrown, it will noop.\r\n * @param notification The notification object to observe.\r\n * @param observer The observer to notify.\r\n */\r\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\r\n  const { kind, value, error } = notification as any;\r\n  if (typeof kind !== 'string') {\r\n    throw new TypeError('Invalid notification, missing \"kind\"');\r\n  }\r\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\r\n}\r\n", "/** prettier */\r\nimport { Observable } from '../Observable';\r\nimport { isFunction } from './isFunction';\r\n\r\n/**\r\n * Tests to see if the object is an RxJS {@link Observable}\r\n * @param obj the object to test\r\n */\r\nexport function isObservable(obj: any): obj is Observable<unknown> {\r\n  // The !! is to ensure that this publicly exposed function returns\r\n  // `false` if something like `null` or `0` is passed.\r\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\r\n}\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface EmptyError extends Error {}\r\n\r\nexport interface EmptyErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): EmptyError;\r\n}\r\n\r\n/**\r\n * An error thrown when an Observable or a sequence was queried but has no\r\n * elements.\r\n *\r\n * @see {@link first}\r\n * @see {@link last}\r\n * @see {@link single}\r\n * @see {@link firstValueFrom}\r\n * @see {@link lastValueFrom}\r\n *\r\n * @class EmptyError\r\n */\r\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\r\n  _super(this);\r\n  this.name = 'EmptyError';\r\n  this.message = 'no elements in sequence';\r\n});\r\n", "import { Observable } from './Observable';\r\nimport { EmptyError } from './util/EmptyError';\r\n\r\nexport interface LastValueFromConfig<T> {\r\n  defaultValue: T;\r\n}\r\n\r\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\r\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\r\n\r\n/**\r\n * Converts an observable to a promise by subscribing to the observable,\r\n * waiting for it to complete, and resolving the returned promise with the\r\n * last value from the observed stream.\r\n *\r\n * If the observable stream completes before any values were emitted, the\r\n * returned promise will reject with {@link EmptyError} or will resolve\r\n * with the default value if a default was specified.\r\n *\r\n * If the observable stream emits an error, the returned promise will reject\r\n * with that error.\r\n *\r\n * **WARNING**: Only use this with observables you *know* will complete. If the source\r\n * observable does not complete, you will end up with a promise that is hung up, and\r\n * potentially all of the state of an async function hanging out in memory. To avoid\r\n * this situation, look into adding something like {@link timeout}, {@link take},\r\n * {@link takeWhile}, or {@link takeUntil} amongst others.\r\n *\r\n * ## Example\r\n *\r\n * Wait for the last value from a stream and emit it from a promise in\r\n * an async function\r\n *\r\n * ```ts\r\n * import { interval, take, lastValueFrom } from 'rxjs';\r\n *\r\n * async function execute() {\r\n *   const source$ = interval(2000).pipe(take(10));\r\n *   const finalNumber = await lastValueFrom(source$);\r\n *   console.log(`The final number is ${ finalNumber }`);\r\n * }\r\n *\r\n * execute();\r\n *\r\n * // Expected output:\r\n * // 'The final number is 9'\r\n * ```\r\n *\r\n * @see {@link firstValueFrom}\r\n *\r\n * @param source the observable to convert to a promise\r\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\r\n */\r\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\r\n  const hasConfig = typeof config === 'object';\r\n  return new Promise<T | D>((resolve, reject) => {\r\n    let _hasValue = false;\r\n    let _value: T;\r\n    source.subscribe({\r\n      next: (value) => {\r\n        _value = value;\r\n        _hasValue = true;\r\n      },\r\n      error: reject,\r\n      complete: () => {\r\n        if (_hasValue) {\r\n          resolve(_value);\r\n        } else if (hasConfig) {\r\n          resolve(config!.defaultValue);\r\n        } else {\r\n          reject(new EmptyError());\r\n        }\r\n      },\r\n    });\r\n  });\r\n}\r\n", "import { Observable } from './Observable';\r\nimport { EmptyError } from './util/EmptyError';\r\nimport { SafeSubscriber } from './Subscriber';\r\n\r\nexport interface FirstValueFromConfig<T> {\r\n  defaultValue: T;\r\n}\r\n\r\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\r\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\r\n\r\n/**\r\n * Converts an observable to a promise by subscribing to the observable,\r\n * and returning a promise that will resolve as soon as the first value\r\n * arrives from the observable. The subscription will then be closed.\r\n *\r\n * If the observable stream completes before any values were emitted, the\r\n * returned promise will reject with {@link EmptyError} or will resolve\r\n * with the default value if a default was specified.\r\n *\r\n * If the observable stream emits an error, the returned promise will reject\r\n * with that error.\r\n *\r\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\r\n * *OR* complete. If the source observable does not emit one value or complete, you will\r\n * end up with a promise that is hung up, and potentially all of the state of an\r\n * async function hanging out in memory. To avoid this situation, look into adding\r\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\r\n * amongst others.\r\n *\r\n * ## Example\r\n *\r\n * Wait for the first value from a stream and emit it from a promise in\r\n * an async function\r\n *\r\n * ```ts\r\n * import { interval, firstValueFrom } from 'rxjs';\r\n *\r\n * async function execute() {\r\n *   const source$ = interval(2000);\r\n *   const firstNumber = await firstValueFrom(source$);\r\n *   console.log(`The first number is ${ firstNumber }`);\r\n * }\r\n *\r\n * execute();\r\n *\r\n * // Expected output:\r\n * // 'The first number is 0'\r\n * ```\r\n *\r\n * @see {@link lastValueFrom}\r\n *\r\n * @param source the observable to convert to a promise\r\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\r\n */\r\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\r\n  const hasConfig = typeof config === 'object';\r\n  return new Promise<T | D>((resolve, reject) => {\r\n    const subscriber = new SafeSubscriber<T>({\r\n      next: (value) => {\r\n        resolve(value);\r\n        subscriber.unsubscribe();\r\n      },\r\n      error: reject,\r\n      complete: () => {\r\n        if (hasConfig) {\r\n          resolve(config!.defaultValue);\r\n        } else {\r\n          reject(new EmptyError());\r\n        }\r\n      },\r\n    });\r\n    source.subscribe(subscriber);\r\n  });\r\n}\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface ArgumentOutOfRangeError extends Error {}\r\n\r\nexport interface ArgumentOutOfRangeErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): ArgumentOutOfRangeError;\r\n}\r\n\r\n/**\r\n * An error thrown when an element was queried at a certain index of an\r\n * Observable, but no such index or position exists in that sequence.\r\n *\r\n * @see {@link elementAt}\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n *\r\n * @class ArgumentOutOfRangeError\r\n */\r\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function ArgumentOutOfRangeErrorImpl(this: any) {\r\n      _super(this);\r\n      this.name = 'ArgumentOutOfRangeError';\r\n      this.message = 'argument out of range';\r\n    }\r\n);\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface NotFoundError extends Error {}\r\n\r\nexport interface NotFoundErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (message: string): NotFoundError;\r\n}\r\n\r\n/**\r\n * An error thrown when a value or values are missing from an\r\n * observable sequence.\r\n *\r\n * @see {@link operators/single}\r\n *\r\n * @class NotFoundError\r\n */\r\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function NotFoundErrorImpl(this: any, message: string) {\r\n      _super(this);\r\n      this.name = 'NotFoundError';\r\n      this.message = message;\r\n    }\r\n);\r\n", "import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface SequenceError extends Error {}\r\n\r\nexport interface SequenceErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (message: string): SequenceError;\r\n}\r\n\r\n/**\r\n * An error thrown when something is wrong with the sequence of\r\n * values arriving on the observable.\r\n *\r\n * @see {@link operators/single}\r\n *\r\n * @class SequenceError\r\n */\r\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function SequenceErrorImpl(this: any, message: string) {\r\n      _super(this);\r\n      this.name = 'SequenceError';\r\n      this.message = message;\r\n    }\r\n);\r\n", "/**\r\n * Checks to see if a value is not only a `Date` object,\r\n * but a *valid* `Date` object that can be converted to a\r\n * number. For example, `new Date('blah')` is indeed an\r\n * `instanceof Date`, however it cannot be converted to a\r\n * number.\r\n */\r\nexport function isValidDate(value: any): value is Date {\r\n  return value instanceof Date && !isNaN(value as any);\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\r\nimport { isValidDate } from '../util/isDate';\r\nimport { Subscription } from '../Subscription';\r\nimport { operate } from '../util/lift';\r\nimport { Observable } from '../Observable';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { createErrorClass } from '../util/createErrorClass';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\r\n  /**\r\n   * The time allowed between values from the source before timeout is triggered.\r\n   */\r\n  each?: number;\r\n\r\n  /**\r\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\r\n   * by which the first value must arrive from the source before timeout is triggered.\r\n   */\r\n  first?: number | Date;\r\n\r\n  /**\r\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\r\n   */\r\n  scheduler?: SchedulerLike;\r\n\r\n  /**\r\n   * A factory used to create observable to switch to when timeout occurs. Provides\r\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\r\n   * exact time triggered the timeout.\r\n   */\r\n  with?: (info: TimeoutInfo<T, M>) => O;\r\n\r\n  /**\r\n   * Optional additional metadata you can provide to code that handles\r\n   * the timeout, will be provided through the {@link TimeoutError}.\r\n   * This can be used to help identify the source of a timeout or pass along\r\n   * other information related to the timeout.\r\n   */\r\n  meta?: M;\r\n}\r\n\r\nexport interface TimeoutInfo<T, M = unknown> {\r\n  /** Optional metadata that was provided to the timeout configuration. */\r\n  readonly meta: M;\r\n  /** The number of messages seen before the timeout */\r\n  readonly seen: number;\r\n  /** The last message seen */\r\n  readonly lastValue: T | null;\r\n}\r\n\r\n/**\r\n * An error emitted when a timeout occurs.\r\n */\r\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\r\n  /**\r\n   * The information provided to the error by the timeout\r\n   * operation that created the error. Will be `null` if\r\n   * used directly in non-RxJS code with an empty constructor.\r\n   * (Note that using this constructor directly is not recommended,\r\n   * you should create your own errors)\r\n   */\r\n  info: TimeoutInfo<T, M> | null;\r\n}\r\n\r\nexport interface TimeoutErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\r\n}\r\n\r\n/**\r\n * An error thrown by the {@link timeout} operator.\r\n *\r\n * Provided so users can use as a type and do quality comparisons.\r\n * We recommend you do not subclass this or create instances of this class directly.\r\n * If you have need of a error representing a timeout, you should\r\n * create your own error class and use that.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\r\n      _super(this);\r\n      this.message = 'Timeout has occurred';\r\n      this.name = 'TimeoutError';\r\n      this.info = info;\r\n    }\r\n);\r\n\r\n/**\r\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\r\n * does not push values within the specified time parameters.\r\n *\r\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\r\n *\r\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\r\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\r\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\r\n * the settings in `first` and `each`.\r\n *\r\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\r\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\r\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\r\n * against the time period provided by `each`, if it was provided.\r\n *\r\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\r\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\r\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\r\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\r\n *\r\n * ## Examples\r\n *\r\n * Emit a custom error if there is too much time between values\r\n *\r\n * ```ts\r\n * import { interval, timeout, throwError } from 'rxjs';\r\n *\r\n * class CustomTimeoutError extends Error {\r\n *   constructor() {\r\n *     super('It was too slow');\r\n *     this.name = 'CustomTimeoutError';\r\n *   }\r\n * }\r\n *\r\n * const slow$ = interval(900);\r\n *\r\n * slow$.pipe(\r\n *   timeout({\r\n *     each: 1000,\r\n *     with: () => throwError(() => new CustomTimeoutError())\r\n *   })\r\n * )\r\n * .subscribe({\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * Switch to a faster observable if your source is slow.\r\n *\r\n * ```ts\r\n * import { interval, timeout } from 'rxjs';\r\n *\r\n * const slow$ = interval(900);\r\n * const fast$ = interval(500);\r\n *\r\n * slow$.pipe(\r\n *   timeout({\r\n *     each: 1000,\r\n *     with: () => fast$,\r\n *   })\r\n * )\r\n * .subscribe(console.log);\r\n * ```\r\n * @param config The configuration for the timeout.\r\n */\r\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\r\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\r\n): OperatorFunction<T, T | ObservedValueOf<O>>;\r\n\r\n/**\r\n * Returns an observable that will error or switch to a different observable if the source does not push values\r\n * within the specified time parameters.\r\n *\r\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\r\n *\r\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\r\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\r\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\r\n * the settings in `first` and `each`.\r\n *\r\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\r\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\r\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\r\n * against the time period provided by `each`, if it was provided.\r\n *\r\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\r\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\r\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\r\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\r\n *\r\n * ### Handling TimeoutErrors\r\n *\r\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\r\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\r\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\r\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\r\n *\r\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\r\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\r\n *\r\n * ## Examples\r\n *\r\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\r\n *\r\n * ```ts\r\n * import { interval, timeout } from 'rxjs';\r\n *\r\n * // A random interval that lasts between 0 and 10 seconds per tick\r\n * const source$ = interval(Math.round(Math.random() * 10_000));\r\n *\r\n * source$.pipe(\r\n *   timeout({ first: 5_000 })\r\n * )\r\n * .subscribe({\r\n *   next: console.log,\r\n *   error: console.error\r\n * });\r\n * ```\r\n *\r\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\r\n * and subscription.\r\n *\r\n * ```ts\r\n * import { timer, timeout, expand } from 'rxjs';\r\n *\r\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\r\n *\r\n * // An observable that waits a random amount of time between each delivered value\r\n * const source$ = timer(getRandomTime())\r\n *   .pipe(expand(() => timer(getRandomTime())));\r\n *\r\n * source$\r\n *   .pipe(timeout({ each: 5_000 }))\r\n *   .subscribe({\r\n *     next: console.log,\r\n *     error: console.error\r\n *   });\r\n * ```\r\n *\r\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\r\n * 5 seconds between any two values after the first.\r\n *\r\n * ```ts\r\n * import { timer, timeout, expand } from 'rxjs';\r\n *\r\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\r\n *\r\n * // An observable that waits a random amount of time between each delivered value\r\n * const source$ = timer(getRandomTime())\r\n *   .pipe(expand(() => timer(getRandomTime())));\r\n *\r\n * source$\r\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\r\n *   .subscribe({\r\n *     next: console.log,\r\n *     error: console.error\r\n *   });\r\n * ```\r\n */\r\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\r\n\r\n/**\r\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\r\n * This is functionally the same as `timeout({ first: someDate })`.\r\n *\r\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\r\n *\r\n * ![](timeout.png)\r\n *\r\n * @param first The date to at which the resulting observable will timeout if the source observable\r\n * does not emit at least one value.\r\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\r\n */\r\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\r\n * This is functionally the same as `timeout({ each: milliseconds })`.\r\n *\r\n * <span class=\"informal\">Errors if it waits too long between any value</span>\r\n *\r\n * ![](timeout.png)\r\n *\r\n * @param each The time allowed between each pushed value from the source before the resulting observable\r\n * will timeout.\r\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\r\n */\r\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n *\r\n * Errors if Observable does not emit a value in given time span.\r\n *\r\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\r\n *\r\n * ![](timeout.png)\r\n *\r\n * @see {@link timeoutWith}\r\n *\r\n * @return A function that returns an Observable that mirrors behaviour of the\r\n * source Observable, unless timeout happens when it throws an error.\r\n */\r\nexport function timeout<T, O extends ObservableInput<any>, M>(\r\n  config: number | Date | TimeoutConfig<T, O, M>,\r\n  schedulerArg?: SchedulerLike\r\n): OperatorFunction<T, T | ObservedValueOf<O>> {\r\n  // Intentionally terse code.\r\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\r\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\r\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\r\n  // we destructure that into what we're going to use, setting important defaults as we do.\r\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\r\n  // it will default to the `asyncScheduler`.\r\n  const {\r\n    first,\r\n    each,\r\n    with: _with = timeoutErrorFactory,\r\n    scheduler = schedulerArg ?? asyncScheduler,\r\n    meta = null!,\r\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\r\n\r\n  if (first == null && each == null) {\r\n    // Ensure timeout was provided at runtime.\r\n    throw new TypeError('No timeout provided.');\r\n  }\r\n\r\n  return operate((source, subscriber) => {\r\n    // This subscription encapsulates our subscription to the\r\n    // source for this operator. We're capturing it separately,\r\n    // because if there is a `with` observable to fail over to,\r\n    // we want to unsubscribe from our original subscription, and\r\n    // hand of the subscription to that one.\r\n    let originalSourceSubscription: Subscription;\r\n    // The subscription for our timeout timer. This changes\r\n    // every time we get a new value.\r\n    let timerSubscription: Subscription;\r\n    // A bit of state we pass to our with and error factories to\r\n    // tell what the last value we saw was.\r\n    let lastValue: T | null = null;\r\n    // A bit of state we pass to the with and error factories to\r\n    // tell how many values we have seen so far.\r\n    let seen = 0;\r\n    const startTimer = (delay: number) => {\r\n      timerSubscription = executeSchedule(\r\n        subscriber,\r\n        scheduler,\r\n        () => {\r\n          try {\r\n            originalSourceSubscription.unsubscribe();\r\n            innerFrom(\r\n              _with!({\r\n                meta,\r\n                lastValue,\r\n                seen,\r\n              })\r\n            ).subscribe(subscriber);\r\n          } catch (err) {\r\n            subscriber.error(err);\r\n          }\r\n        },\r\n        delay\r\n      );\r\n    };\r\n\r\n    originalSourceSubscription = source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          // clear the timer so we can emit and start another one.\r\n          timerSubscription?.unsubscribe();\r\n          seen++;\r\n          // Emit\r\n          subscriber.next((lastValue = value));\r\n          // null | undefined are both < 0. Thanks, JavaScript.\r\n          each! > 0 && startTimer(each!);\r\n        },\r\n        undefined,\r\n        undefined,\r\n        () => {\r\n          if (!timerSubscription?.closed) {\r\n            timerSubscription?.unsubscribe();\r\n          }\r\n          // Be sure not to hold the last value in memory after unsubscription\r\n          // it could be quite large.\r\n          lastValue = null;\r\n        }\r\n      )\r\n    );\r\n\r\n    // Intentionally terse code.\r\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\r\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\r\n    // If `first` was provided, and it's a number, then use it.\r\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\r\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\r\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\r\n  });\r\n}\r\n\r\n/**\r\n * The default function to use to emit an error when timeout occurs and a `with` function\r\n * is not specified.\r\n * @param info The information about the timeout to pass along to the error\r\n */\r\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\r\n  throw new TimeoutError(info);\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\r\n\r\n/**\r\n * Applies a given `project` function to each value emitted by the source\r\n * Observable, and emits the resulting values as an Observable.\r\n *\r\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\r\n * it passes each source value through a transformation function to get\r\n * corresponding output values.</span>\r\n *\r\n * ![](map.png)\r\n *\r\n * Similar to the well known `Array.prototype.map` function, this operator\r\n * applies a projection to each value and emits that projection in the output\r\n * Observable.\r\n *\r\n * ## Example\r\n *\r\n * Map every click to the `clientX` position of that click\r\n *\r\n * ```ts\r\n * import { fromEvent, map } from 'rxjs';\r\n *\r\n * const clicks = fromEvent<PointerEvent>(document, 'click');\r\n * const positions = clicks.pipe(map(ev => ev.clientX));\r\n *\r\n * positions.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link mapTo}\r\n * @see {@link pluck}\r\n *\r\n * @param {function(value: T, index: number): R} project The function to apply\r\n * to each `value` emitted by the source Observable. The `index` parameter is\r\n * the number `i` for the i-th emission that has happened since the\r\n * subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to define what `this` is in the\r\n * `project` function.\r\n * @return A function that returns an Observable that emits the values from the\r\n * source Observable transformed by the given `project` function.\r\n */\r\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\r\n  return operate((source, subscriber) => {\r\n    // The index of the value from the source. Used with projection.\r\n    let index = 0;\r\n    // Subscribe to the source, all errors and completions are sent along\r\n    // to the consumer.\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value: T) => {\r\n        // Call the projection function with the appropriate this context,\r\n        // and send the resulting value to the consumer.\r\n        subscriber.next(project.call(thisArg, value, index++));\r\n      })\r\n    );\r\n  });\r\n}\r\n", "import { OperatorFunction } from \"../types\";\r\nimport { map } from \"../operators/map\";\r\n\r\nconst { isArray } = Array;\r\n\r\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\r\n    return isArray(args) ? fn(...args) : fn(args);\r\n}\r\n\r\n/**\r\n * Used in several -- mostly deprecated -- situations where we need to \r\n * apply a list of arguments or a single argument to a result selector.\r\n */\r\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\r\n    return map(args => callOrApply(fn, args))\r\n}", "import { SchedulerLike } from '../types';\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { Observable } from '../Observable';\r\nimport { subscribeOn } from '../operators/subscribeOn';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\nimport { observeOn } from '../operators/observeOn';\r\nimport { AsyncSubject } from '../AsyncSubject';\r\n\r\nexport function bindCallbackInternals(\r\n  isNodeStyle: boolean,\r\n  callbackFunc: any,\r\n  resultSelector?: any,\r\n  scheduler?: SchedulerLike\r\n): (...args: any[]) => Observable<unknown> {\r\n  if (resultSelector) {\r\n    if (isScheduler(resultSelector)) {\r\n      scheduler = resultSelector;\r\n    } else {\r\n      // The user provided a result selector.\r\n      return function (this: any, ...args: any[]) {\r\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\r\n          .apply(this, args)\r\n          .pipe(mapOneOrManyArgs(resultSelector as any));\r\n      };\r\n    }\r\n  }\r\n\r\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\r\n  // to compose that behavior for the user.\r\n  if (scheduler) {\r\n    return function (this: any, ...args: any[]) {\r\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\r\n        .apply(this, args)\r\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\r\n    };\r\n  }\r\n\r\n  return function (this: any, ...args: any[]): Observable<any> {\r\n    // We're using AsyncSubject, because it emits when it completes,\r\n    // and it will play the value to all late-arriving subscribers.\r\n    const subject = new AsyncSubject<any>();\r\n\r\n    // If this is true, then we haven't called our function yet.\r\n    let uninitialized = true;\r\n    return new Observable((subscriber) => {\r\n      // Add our subscriber to the subject.\r\n      const subs = subject.subscribe(subscriber);\r\n\r\n      if (uninitialized) {\r\n        uninitialized = false;\r\n        // We're going to execute the bound function\r\n        // This bit is to signal that we are hitting the callback asynchronously.\r\n        // Because we don't have any anti-\"Zalgo\" guarantees with whatever\r\n        // function we are handed, we use this bit to figure out whether or not\r\n        // we are getting hit in a callback synchronously during our call.\r\n        let isAsync = false;\r\n\r\n        // This is used to signal that the callback completed synchronously.\r\n        let isComplete = false;\r\n\r\n        // Call our function that has a callback. If at any time during this\r\n        // call, an error is thrown, it will be caught by the Observable\r\n        // subscription process and sent to the consumer.\r\n        callbackFunc.apply(\r\n          // Pass the appropriate `this` context.\r\n          this,\r\n          [\r\n            // Pass the arguments.\r\n            ...args,\r\n            // And our callback handler.\r\n            (...results: any[]) => {\r\n              if (isNodeStyle) {\r\n                // If this is a node callback, shift the first value off of the\r\n                // results and check it, as it is the error argument. By shifting,\r\n                // we leave only the argument(s) we want to pass to the consumer.\r\n                const err = results.shift();\r\n                if (err != null) {\r\n                  subject.error(err);\r\n                  // If we've errored, we can stop processing this function\r\n                  // as there's nothing else to do. Just return to escape.\r\n                  return;\r\n                }\r\n              }\r\n              // If we have one argument, notify the consumer\r\n              // of it as a single value, otherwise, if there's more than one, pass\r\n              // them as an array. Note that if there are no arguments, `undefined`\r\n              // will be emitted.\r\n              subject.next(1 < results.length ? results : results[0]);\r\n              // Flip this flag, so we know we can complete it in the synchronous\r\n              // case below.\r\n              isComplete = true;\r\n              // If we're not asynchronous, we need to defer the `complete` call\r\n              // until after the call to the function is over. This is because an\r\n              // error could be thrown in the function after it calls our callback,\r\n              // and if that is the case, if we complete here, we are unable to notify\r\n              // the consumer than an error occurred.\r\n              if (isAsync) {\r\n                subject.complete();\r\n              }\r\n            },\r\n          ]\r\n        );\r\n        // If we flipped `isComplete` during the call, we resolved synchronously,\r\n        // notify complete, because we skipped it in the callback to wait\r\n        // to make sure there were no errors during the call.\r\n        if (isComplete) {\r\n          subject.complete();\r\n        }\r\n\r\n        // We're no longer synchronous. If the callback is called at this point\r\n        // we can notify complete on the spot.\r\n        isAsync = true;\r\n      }\r\n\r\n      // Return the subscription from adding our subscriber to the subject.\r\n      return subs;\r\n    });\r\n  };\r\n}\r\n", "/* @prettier */\r\nimport { SchedulerLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { bindCallbackInternals } from './bindCallbackInternals';\r\n\r\nexport function bindCallback(\r\n  callbackFunc: (...args: any[]) => void,\r\n  resultSelector: (...args: any[]) => any,\r\n  scheduler?: SchedulerLike\r\n): (...args: any[]) => Observable<any>;\r\n\r\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\r\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\r\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\r\n  schedulerLike?: SchedulerLike\r\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\r\n\r\n/**\r\n * Converts a callback API to a function that returns an Observable.\r\n *\r\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\r\n * it will return a function `g` that when called as `g(x)` will output an\r\n * Observable.</span>\r\n *\r\n * `bindCallback` is not an operator because its input and output are not\r\n * Observables. The input is a function `func` with some parameters. The\r\n * last parameter must be a callback function that `func` calls when it is\r\n * done.\r\n *\r\n * The output of `bindCallback` is a function that takes the same parameters\r\n * as `func`, except the last one (the callback). When the output function\r\n * is called with arguments it will return an Observable. If function `func`\r\n * calls its callback with one argument, the Observable will emit that value.\r\n * If on the other hand the callback is called with multiple values the resulting\r\n * Observable will emit an array with said values as arguments.\r\n *\r\n * It is **very important** to remember that input function `func` is not called\r\n * when the output function is, but rather when the Observable returned by the output\r\n * function is subscribed. This means if `func` makes an AJAX request, that request\r\n * will be made every time someone subscribes to the resulting Observable, but not before.\r\n *\r\n * The last optional parameter - `scheduler` - can be used to control when the call\r\n * to `func` happens after someone subscribes to Observable, as well as when results\r\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\r\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\r\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\r\n * and call `subscribe` on the output Observable, all function calls that are currently executing\r\n * will end before `func` is invoked.\r\n *\r\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\r\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\r\n * will call the `next` function synchronously as well.  If you want to defer that call,\r\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\r\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\r\n *\r\n * Note that the Observable created by the output function will always emit a single value\r\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\r\n * calls will not appear in the stream. If you need to listen for multiple calls,\r\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\r\n *\r\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\r\n * will be the context that the output function has at call time. In particular, if `func`\r\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\r\n * it is recommended that the context of the output function is set to that object as well.\r\n *\r\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\r\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\r\n * provides convenient error handling and probably is a better choice.\r\n * `bindCallback` will treat such functions the same as any other and error parameters\r\n * (whether passed or not) will always be interpreted as regular callback argument.\r\n *\r\n * ## Examples\r\n *\r\n * ### Convert jQuery's getJSON to an Observable API\r\n * ```ts\r\n * import { bindCallback } from 'rxjs';\r\n * import * as jQuery from 'jquery';\r\n *\r\n * // Suppose we have jQuery.getJSON('/my/url', callback)\r\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\r\n * const result = getJSONAsObservable('/my/url');\r\n * result.subscribe(x => console.log(x), e => console.error(e));\r\n * ```\r\n *\r\n * ### Receive an array of arguments passed to a callback\r\n * ```ts\r\n * import { bindCallback } from 'rxjs';\r\n *\r\n * const someFunction = (n, s, cb) => {\r\n *   cb(n, s, { someProperty: 'someValue' });\r\n * };\r\n *\r\n * const boundSomeFunction = bindCallback(someFunction);\r\n * boundSomeFunction(5, 'some string').subscribe((values) => {\r\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\r\n * });\r\n * ```\r\n *\r\n * ### Compare behaviour with and without async Scheduler\r\n * ```ts\r\n * import { bindCallback, asyncScheduler } from 'rxjs';\r\n *\r\n * function iCallMyCallbackSynchronously(cb) {\r\n *   cb();\r\n * }\r\n *\r\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\r\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\r\n *\r\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\r\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\r\n * console.log('This happened...');\r\n *\r\n * // Logs:\r\n * // I was sync!\r\n * // This happened...\r\n * // I was async!\r\n * ```\r\n *\r\n * ### Use bindCallback on an object method\r\n * ```ts\r\n * import { bindCallback } from 'rxjs';\r\n *\r\n * const boundMethod = bindCallback(someObject.methodWithCallback);\r\n * boundMethod\r\n *   .call(someObject) // make sure methodWithCallback has access to someObject\r\n *   .subscribe(subscriber);\r\n * ```\r\n *\r\n * @see {@link bindNodeCallback}\r\n * @see {@link from}\r\n *\r\n * @param {function} func A function with a callback as the last parameter.\r\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\r\n * callbacks.\r\n * @return {function(...params: *): Observable} A function which returns the\r\n * Observable that delivers the same values the callback would deliver.\r\n */\r\nexport function bindCallback(\r\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\r\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\r\n  scheduler?: SchedulerLike\r\n): (...args: any[]) => Observable<unknown> {\r\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\r\n}\r\n", "/* @prettier */\r\nimport { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\nimport { bindCallbackInternals } from './bindCallbackInternals';\r\n\r\nexport function bindNodeCallback(\r\n  callbackFunc: (...args: any[]) => void,\r\n  resultSelector: (...args: any[]) => any,\r\n  scheduler?: SchedulerLike\r\n): (...args: any[]) => Observable<any>;\r\n\r\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\r\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\r\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\r\n  schedulerLike?: SchedulerLike\r\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\r\n\r\n/**\r\n * Converts a Node.js-style callback API to a function that returns an\r\n * Observable.\r\n *\r\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\r\n * callback is expected to be of type `callback(error, result)`.</span>\r\n *\r\n * `bindNodeCallback` is not an operator because its input and output are not\r\n * Observables. The input is a function `func` with some parameters, but the\r\n * last parameter must be a callback function that `func` calls when it is\r\n * done. The callback function is expected to follow Node.js conventions,\r\n * where the first argument to the callback is an error object, signaling\r\n * whether call was successful. If that object is passed to callback, it means\r\n * something went wrong.\r\n *\r\n * The output of `bindNodeCallback` is a function that takes the same\r\n * parameters as `func`, except the last one (the callback). When the output\r\n * function is called with arguments, it will return an Observable.\r\n * If `func` calls its callback with error parameter present, Observable will\r\n * error with that value as well. If error parameter is not passed, Observable will emit\r\n * second parameter. If there are more parameters (third and so on),\r\n * Observable will emit an array with all arguments, except first error argument.\r\n *\r\n * Note that `func` will not be called at the same time output function is,\r\n * but rather whenever resulting Observable is subscribed. By default call to\r\n * `func` will happen synchronously after subscription, but that can be changed\r\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\r\n * can also control when values from callback will be emitted by Observable.\r\n * To find out more, check out documentation for {@link bindCallback}, where\r\n * {@link SchedulerLike} works exactly the same.\r\n *\r\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\r\n * of returned function, when it is called.\r\n *\r\n * After Observable emits value, it will complete immediately. This means\r\n * even if `func` calls callback again, values from second and consecutive\r\n * calls will never appear on the stream. If you need to handle functions\r\n * that call callbacks multiple times, check out {@link fromEvent} or\r\n * {@link fromEventPattern} instead.\r\n *\r\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\r\n * \"Node.js-style\" callbacks are just a convention, so if you write for\r\n * browsers or any other environment and API you use implements that callback style,\r\n * `bindNodeCallback` can be safely used on that API functions as well.\r\n *\r\n * Remember that Error object passed to callback does not have to be an instance\r\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\r\n * Error parameter of callback function is interpreted as \"present\", when value\r\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\r\n * string or boolean `true`. In all of these cases resulting Observable would error\r\n * with that value. This means usually regular style callbacks will fail very often when\r\n * `bindNodeCallback` is used. If your Observable errors much more often then you\r\n * would expect, check if callback really is called in Node.js-style and, if not,\r\n * switch to {@link bindCallback} instead.\r\n *\r\n * Note that even if error parameter is technically present in callback, but its value\r\n * is falsy, it still won't appear in array emitted by Observable.\r\n *\r\n * ## Examples\r\n * ###  Read a file from the filesystem and get the data as an Observable\r\n * ```ts\r\n * import * as fs from 'fs';\r\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\r\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\r\n * result.subscribe(x => console.log(x), e => console.error(e));\r\n * ```\r\n *\r\n * ### Use on function calling callback with multiple arguments\r\n * ```ts\r\n * someFunction((err, a, b) => {\r\n *   console.log(err); // null\r\n *   console.log(a); // 5\r\n *   console.log(b); // \"some string\"\r\n * });\r\n * const boundSomeFunction = bindNodeCallback(someFunction);\r\n * boundSomeFunction()\r\n * .subscribe(value => {\r\n *   console.log(value); // [5, \"some string\"]\r\n * });\r\n * ```\r\n *\r\n * ### Use on function calling callback in regular style\r\n * ```ts\r\n * someFunction(a => {\r\n *   console.log(a); // 5\r\n * });\r\n * const boundSomeFunction = bindNodeCallback(someFunction);\r\n * boundSomeFunction()\r\n * .subscribe(\r\n *   value => {}             // never gets called\r\n *   err => console.log(err) // 5\r\n * );\r\n * ```\r\n *\r\n * @see {@link bindCallback}\r\n * @see {@link from}\r\n *\r\n * @param {function} func Function with a Node.js-style callback as the last parameter.\r\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\r\n * callbacks.\r\n * @return {function(...params: *): Observable} A function which returns the\r\n * Observable that delivers the same values the Node.js callback would\r\n * deliver.\r\n */\r\nexport function bindNodeCallback(\r\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\r\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\r\n  scheduler?: SchedulerLike\r\n): (...args: any[]) => Observable<any> {\r\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\r\n}\r\n", "const { isArray } = Array;\r\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\r\n\r\n/**\r\n * Used in functions where either a list of arguments, a single array of arguments, or a\r\n * dictionary of arguments can be returned. Returns an object with an `args` property with\r\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\r\n * property.\r\n */\r\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\r\n  if (args.length === 1) {\r\n    const first = args[0];\r\n    if (isArray(first)) {\r\n      return { args: first, keys: null };\r\n    }\r\n    if (isPOJO(first)) {\r\n      const keys = getKeys(first);\r\n      return {\r\n        args: keys.map((key) => first[key]),\r\n        keys,\r\n      };\r\n    }\r\n  }\r\n\r\n  return { args: args as T[], keys: null };\r\n}\r\n\r\nfunction isPOJO(obj: any): obj is object {\r\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\r\n}\r\n", "export function createObject(keys: string[], values: any[]) {\r\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\r\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { from } from './from';\r\nimport { identity } from '../util/identity';\r\nimport { Subscription } from '../Subscription';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\nimport { popResultSelector, popScheduler } from '../util/args';\r\nimport { createObject } from '../util/createObject';\r\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { AnyCatcher } from '../AnyCatcher';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\n// combineLatest(any)\r\n// We put this first because we need to catch cases where the user has supplied\r\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\r\n// we don't want it to randomly hit one of the other type signatures below,\r\n// as we have no idea at build-time what type we should be returning when given an any.\r\n\r\n/**\r\n * You have passed `any` here, we can't figure out if it is\r\n * an array or an object, so you're getting `unknown`. Use better types.\r\n * @param arg Something typed as `any`\r\n */\r\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\r\n\r\n// combineLatest([a, b, c])\r\nexport function combineLatest(sources: []): Observable<never>;\r\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function combineLatest<A extends readonly unknown[], R>(\r\n  sources: readonly [...ObservableInputTuple<A>],\r\n  resultSelector: (...values: A) => R,\r\n  scheduler: SchedulerLike\r\n): Observable<R>;\r\nexport function combineLatest<A extends readonly unknown[], R>(\r\n  sources: readonly [...ObservableInputTuple<A>],\r\n  resultSelector: (...values: A) => R\r\n): Observable<R>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function combineLatest<A extends readonly unknown[]>(\r\n  sources: readonly [...ObservableInputTuple<A>],\r\n  scheduler: SchedulerLike\r\n): Observable<A>;\r\n\r\n// combineLatest(a, b, c)\r\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\r\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function combineLatest<A extends readonly unknown[], R>(\r\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\r\n): Observable<R>;\r\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\r\nexport function combineLatest<A extends readonly unknown[], R>(\r\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\r\n): Observable<R>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function combineLatest<A extends readonly unknown[]>(\r\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\r\n): Observable<A>;\r\n\r\n// combineLatest({a, b, c})\r\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\r\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\r\n  sourcesObject: T\r\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\r\n\r\n/**\r\n * Combines multiple Observables to create an Observable whose values are\r\n * calculated from the latest values of each of its input Observables.\r\n *\r\n * <span class=\"informal\">Whenever any input Observable emits a value, it\r\n * computes a formula using the latest values from all the inputs, then emits\r\n * the output of that formula.</span>\r\n *\r\n * ![](combineLatest.png)\r\n *\r\n * `combineLatest` combines the values from all the Observables passed in the\r\n * observables array. This is done by subscribing to each Observable in order and,\r\n * whenever any Observable emits, collecting an array of the most recent\r\n * values from each Observable. So if you pass `n` Observables to this operator,\r\n * the returned Observable will always emit an array of `n` values, in an order\r\n * corresponding to the order of the passed Observables (the value from the first Observable\r\n * will be at index 0 of the array and so on).\r\n *\r\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\r\n * Observables is a good choice, if you don't know beforehand how many Observables\r\n * you will combine. Passing an empty array will result in an Observable that\r\n * completes immediately.\r\n *\r\n * To ensure the output array always has the same length, `combineLatest` will\r\n * actually wait for all input Observables to emit at least once,\r\n * before it starts emitting results. This means if some Observable emits\r\n * values before other Observables started emitting, all these values but the last\r\n * will be lost. On the other hand, if some Observable does not emit a value but\r\n * completes, resulting Observable will complete at the same moment without\r\n * emitting anything, since it will now be impossible to include a value from the\r\n * completed Observable in the resulting array. Also, if some input Observable does\r\n * not emit any value and never completes, `combineLatest` will also never emit\r\n * and never complete, since, again, it will wait for all streams to emit some\r\n * value.\r\n *\r\n * If at least one Observable was passed to `combineLatest` and all passed Observables\r\n * emitted something, the resulting Observable will complete when all combined\r\n * streams complete. So even if some Observable completes, the result of\r\n * `combineLatest` will still emit values when other Observables do. In case\r\n * of a completed Observable, its value from now on will always be the last\r\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\r\n * will error immediately as well, and all other Observables will be unsubscribed.\r\n *\r\n * ## Examples\r\n *\r\n * Combine two timer Observables\r\n *\r\n * ```ts\r\n * import { timer, combineLatest } from 'rxjs';\r\n *\r\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\r\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\r\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\r\n * combinedTimers.subscribe(value => console.log(value));\r\n * // Logs\r\n * // [0, 0] after 0.5s\r\n * // [1, 0] after 1s\r\n * // [1, 1] after 1.5s\r\n * // [2, 1] after 2s\r\n * ```\r\n *\r\n * Combine a dictionary of Observables\r\n *\r\n * ```ts\r\n * import { of, delay, startWith, combineLatest } from 'rxjs';\r\n *\r\n * const observables = {\r\n *   a: of(1).pipe(delay(1000), startWith(0)),\r\n *   b: of(5).pipe(delay(5000), startWith(0)),\r\n *   c: of(10).pipe(delay(10000), startWith(0))\r\n * };\r\n * const combined = combineLatest(observables);\r\n * combined.subscribe(value => console.log(value));\r\n * // Logs\r\n * // { a: 0, b: 0, c: 0 } immediately\r\n * // { a: 1, b: 0, c: 0 } after 1s\r\n * // { a: 1, b: 5, c: 0 } after 5s\r\n * // { a: 1, b: 5, c: 10 } after 10s\r\n * ```\r\n *\r\n * Combine an array of Observables\r\n *\r\n * ```ts\r\n * import { of, delay, startWith, combineLatest } from 'rxjs';\r\n *\r\n * const observables = [1, 5, 10].map(\r\n *   n => of(n).pipe(\r\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\r\n *     startWith(0)\r\n *   )\r\n * );\r\n * const combined = combineLatest(observables);\r\n * combined.subscribe(value => console.log(value));\r\n * // Logs\r\n * // [0, 0, 0] immediately\r\n * // [1, 0, 0] after 1s\r\n * // [1, 5, 0] after 5s\r\n * // [1, 5, 10] after 10s\r\n * ```\r\n *\r\n * Use map operator to dynamically calculate the Body-Mass Index\r\n *\r\n * ```ts\r\n * import { of, combineLatest, map } from 'rxjs';\r\n *\r\n * const weight = of(70, 72, 76, 79, 75);\r\n * const height = of(1.76, 1.77, 1.78);\r\n * const bmi = combineLatest([weight, height]).pipe(\r\n *   map(([w, h]) => w / (h * h)),\r\n * );\r\n * bmi.subscribe(x => console.log('BMI is ' + x));\r\n *\r\n * // With output to console:\r\n * // BMI is 24.212293388429753\r\n * // BMI is 23.93948099205209\r\n * // BMI is 23.671253629592222\r\n * ```\r\n *\r\n * @see {@link combineLatestAll}\r\n * @see {@link merge}\r\n * @see {@link withLatestFrom}\r\n *\r\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\r\n * An array of Observables must be given as the first argument.\r\n * @param {function} [project] An optional function to project the values from\r\n * the combined latest values into a new value on the output Observable.\r\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\r\n * each input Observable.\r\n * @return {Observable} An Observable of projected values from the most recent\r\n * values from each input Observable, or an array of the most recent values from\r\n * each input Observable.\r\n */\r\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\r\n  const scheduler = popScheduler(args);\r\n  const resultSelector = popResultSelector(args);\r\n\r\n  const { args: observables, keys } = argsArgArrayOrObject(args);\r\n\r\n  if (observables.length === 0) {\r\n    // If no observables are passed, or someone has passed an empty array\r\n    // of observables, or even an empty object POJO, we need to just\r\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\r\n    return from([], scheduler as any);\r\n  }\r\n\r\n  const result = new Observable<ObservedValueOf<O>[]>(\r\n    combineLatestInit(\r\n      observables as ObservableInput<ObservedValueOf<O>>[],\r\n      scheduler,\r\n      keys\r\n        ? // A handler for scrubbing the array of args into a dictionary.\r\n          (values) => createObject(keys, values)\r\n        : // A passthrough to just return the array\r\n          identity\r\n    )\r\n  );\r\n\r\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\r\n}\r\n\r\nexport function combineLatestInit(\r\n  observables: ObservableInput<any>[],\r\n  scheduler?: SchedulerLike,\r\n  valueTransform: (values: any[]) => any = identity\r\n) {\r\n  return (subscriber: Subscriber<any>) => {\r\n    // The outer subscription. We're capturing this in a function\r\n    // because we may have to schedule it.\r\n    maybeSchedule(\r\n      scheduler,\r\n      () => {\r\n        const { length } = observables;\r\n        // A store for the values each observable has emitted so far. We match observable to value on index.\r\n        const values = new Array(length);\r\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\r\n        // we are all done combining values, so we can complete the result.\r\n        let active = length;\r\n        // The number of inner sources that still haven't emitted the first value\r\n        // We need to track this because all sources need to emit one value in order\r\n        // to start emitting values.\r\n        let remainingFirstValues = length;\r\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\r\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\r\n        for (let i = 0; i < length; i++) {\r\n          maybeSchedule(\r\n            scheduler,\r\n            () => {\r\n              const source = from(observables[i], scheduler as any);\r\n              let hasFirstValue = false;\r\n              source.subscribe(\r\n                createOperatorSubscriber(\r\n                  subscriber,\r\n                  (value) => {\r\n                    // When we get a value, record it in our set of values.\r\n                    values[i] = value;\r\n                    if (!hasFirstValue) {\r\n                      // If this is our first value, record that.\r\n                      hasFirstValue = true;\r\n                      remainingFirstValues--;\r\n                    }\r\n                    if (!remainingFirstValues) {\r\n                      // We're not waiting for any more\r\n                      // first values, so we can emit!\r\n                      subscriber.next(valueTransform(values.slice()));\r\n                    }\r\n                  },\r\n                  () => {\r\n                    if (!--active) {\r\n                      // We only complete the result if we have no more active\r\n                      // inner observables.\r\n                      subscriber.complete();\r\n                    }\r\n                  }\r\n                )\r\n              );\r\n            },\r\n            subscriber\r\n          );\r\n        }\r\n      },\r\n      subscriber\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\r\n * but we don't if there was no scheduler.\r\n */\r\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\r\n  if (scheduler) {\r\n    executeSchedule(subscription, scheduler, execute);\r\n  } else {\r\n    execute();\r\n  }\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { ObservableInput, SchedulerLike } from '../types';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * A process embodying the general \"merge\" strategy. This is used in\r\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\r\n * @param source The original source observable\r\n * @param subscriber The consumer subscriber\r\n * @param project The projection function to get our inner sources\r\n * @param concurrent The number of concurrent inner subscriptions\r\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\r\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\r\n * in that it recurses, and the inner subscription must be schedule-able.\r\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\r\n * this is to support the expand strategy, mostly, and should be deprecated\r\n */\r\nexport function mergeInternals<T, R>(\r\n  source: Observable<T>,\r\n  subscriber: Subscriber<R>,\r\n  project: (value: T, index: number) => ObservableInput<R>,\r\n  concurrent: number,\r\n  onBeforeNext?: (innerValue: R) => void,\r\n  expand?: boolean,\r\n  innerSubScheduler?: SchedulerLike,\r\n  additionalFinalizer?: () => void\r\n) {\r\n  // Buffered values, in the event of going over our concurrency limit\r\n  const buffer: T[] = [];\r\n  // The number of active inner subscriptions.\r\n  let active = 0;\r\n  // An index to pass to our accumulator function\r\n  let index = 0;\r\n  // Whether or not the outer source has completed.\r\n  let isComplete = false;\r\n\r\n  /**\r\n   * Checks to see if we can complete our result or not.\r\n   */\r\n  const checkComplete = () => {\r\n    // If the outer has completed, and nothing is left in the buffer,\r\n    // and we don't have any active inner subscriptions, then we can\r\n    // Emit the state and complete.\r\n    if (isComplete && !buffer.length && !active) {\r\n      subscriber.complete();\r\n    }\r\n  };\r\n\r\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\r\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\r\n\r\n  const doInnerSub = (value: T) => {\r\n    // If we're expanding, we need to emit the outer values and the inner values\r\n    // as the inners will \"become outers\" in a way as they are recursively fed\r\n    // back to the projection mechanism.\r\n    expand && subscriber.next(value as any);\r\n\r\n    // Increment the number of active subscriptions so we can track it\r\n    // against our concurrency limit later.\r\n    active++;\r\n\r\n    // A flag used to show that the inner observable completed.\r\n    // This is checked during finalization to see if we should\r\n    // move to the next item in the buffer, if there is on.\r\n    let innerComplete = false;\r\n\r\n    // Start our inner subscription.\r\n    innerFrom(project(value, index++)).subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (innerValue) => {\r\n          // `mergeScan` has additional handling here. For example\r\n          // taking the inner value and updating state.\r\n          onBeforeNext?.(innerValue);\r\n\r\n          if (expand) {\r\n            // If we're expanding, then just recurse back to our outer\r\n            // handler. It will emit the value first thing.\r\n            outerNext(innerValue as any);\r\n          } else {\r\n            // Otherwise, emit the inner value.\r\n            subscriber.next(innerValue);\r\n          }\r\n        },\r\n        () => {\r\n          // Flag that we have completed, so we know to check the buffer\r\n          // during finalization.\r\n          innerComplete = true;\r\n        },\r\n        // Errors are passed to the destination.\r\n        undefined,\r\n        () => {\r\n          // During finalization, if the inner completed (it wasn't errored or\r\n          // cancelled), then we want to try the next item in the buffer if\r\n          // there is one.\r\n          if (innerComplete) {\r\n            // We have to wrap this in a try/catch because it happens during\r\n            // finalization, possibly asynchronously, and we want to pass\r\n            // any errors that happen (like in a projection function) to\r\n            // the outer Subscriber.\r\n            try {\r\n              // INNER SOURCE COMPLETE\r\n              // Decrement the active count to ensure that the next time\r\n              // we try to call `doInnerSub`, the number is accurate.\r\n              active--;\r\n              // If we have more values in the buffer, try to process those\r\n              // Note that this call will increment `active` ahead of the\r\n              // next conditional, if there were any more inner subscriptions\r\n              // to start.\r\n              while (buffer.length && active < concurrent) {\r\n                const bufferedValue = buffer.shift()!;\r\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\r\n                // for when we want to start our inner subscription. Otherwise, we just start\r\n                // are next inner subscription.\r\n                if (innerSubScheduler) {\r\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\r\n                } else {\r\n                  doInnerSub(bufferedValue);\r\n                }\r\n              }\r\n              // Check to see if we can complete, and complete if so.\r\n              checkComplete();\r\n            } catch (err) {\r\n              subscriber.error(err);\r\n            }\r\n          }\r\n        }\r\n      )\r\n    );\r\n  };\r\n\r\n  // Subscribe to our source observable.\r\n  source.subscribe(\r\n    createOperatorSubscriber(subscriber, outerNext, () => {\r\n      // Outer completed, make a note of it, and check to see if we can complete everything.\r\n      isComplete = true;\r\n      checkComplete();\r\n    })\r\n  );\r\n\r\n  // Additional finalization (for when the destination is torn down).\r\n  // Other finalization is added implicitly via subscription above.\r\n  return () => {\r\n    additionalFinalizer?.();\r\n  };\r\n}\r\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { map } from './map';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { operate } from '../util/lift';\r\nimport { mergeInternals } from './mergeInternals';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function mergeMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  concurrent?: number\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function mergeMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: undefined,\r\n  concurrent?: number\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\r\n  concurrent?: number\r\n): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to an Observable which is merged in the output\r\n * Observable.\r\n *\r\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\r\n * these inner Observables using {@link mergeAll}.</span>\r\n *\r\n * ![](mergeMap.png)\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an Observable, and then merging those resulting Observables and\r\n * emitting the results of this merger.\r\n *\r\n * ## Example\r\n *\r\n * Map and flatten each letter to an Observable ticking every 1 second\r\n *\r\n * ```ts\r\n * import { of, mergeMap, interval, map } from 'rxjs';\r\n *\r\n * const letters = of('a', 'b', 'c');\r\n * const result = letters.pipe(\r\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\r\n * );\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // a0\r\n * // b0\r\n * // c0\r\n * // a1\r\n * // b1\r\n * // c1\r\n * // continues to list a, b, c every second with respective ascending integers\r\n * ```\r\n *\r\n * @see {@link concatMap}\r\n * @see {@link exhaustMap}\r\n * @see {@link merge}\r\n * @see {@link mergeAll}\r\n * @see {@link mergeMapTo}\r\n * @see {@link mergeScan}\r\n * @see {@link switchMap}\r\n *\r\n * @param {function(value: T, ?index: number): ObservableInput} project A function\r\n * that, when applied to an item emitted by the source Observable, returns an\r\n * Observable.\r\n * @param {number} [concurrent=Infinity] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @return A function that returns an Observable that emits the result of\r\n * applying the projection function (and the optional deprecated\r\n * `resultSelector`) to each item emitted by the source Observable and merging\r\n * the results of the Observables obtained from this transformation.\r\n */\r\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\r\n  concurrent: number = Infinity\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  if (isFunction(resultSelector)) {\r\n    // DEPRECATED PATH\r\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\r\n  } else if (typeof resultSelector === 'number') {\r\n    concurrent = resultSelector;\r\n  }\r\n\r\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\r\n}\r\n", "import { mergeMap } from './mergeMap';\r\nimport { identity } from '../util/identity';\r\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\r\n\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable which\r\n * concurrently delivers all values that are emitted on the inner Observables.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\r\n *\r\n * ![](mergeAll.png)\r\n *\r\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\r\n * a higher-order Observable. Each time it observes one of these emitted inner\r\n * Observables, it subscribes to that and delivers all the values from the\r\n * inner Observable on the output Observable. The output Observable only\r\n * completes once all inner Observables have completed. Any error delivered by\r\n * a inner Observable will be immediately emitted on the output Observable.\r\n *\r\n * ## Examples\r\n *\r\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\r\n *\r\n * ```ts\r\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\r\n * const firstOrder = higherOrder.pipe(mergeAll());\r\n *\r\n * firstOrder.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\r\n *\r\n * ```ts\r\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const higherOrder = clicks.pipe(\r\n *   map(() => interval(1000).pipe(take(10)))\r\n * );\r\n * const firstOrder = higherOrder.pipe(mergeAll(2));\r\n *\r\n * firstOrder.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link combineLatestAll}\r\n * @see {@link concatAll}\r\n * @see {@link exhaustAll}\r\n * @see {@link merge}\r\n * @see {@link mergeMap}\r\n * @see {@link mergeMapTo}\r\n * @see {@link mergeScan}\r\n * @see {@link switchAll}\r\n * @see {@link switchMap}\r\n * @see {@link zipAll}\r\n *\r\n * @param {number} [concurrent=Infinity] Maximum number of inner\r\n * Observables being subscribed to concurrently.\r\n * @return A function that returns an Observable that emits values coming from\r\n * all the inner Observables emitted by the source Observable.\r\n */\r\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\r\n  return mergeMap(identity, concurrent);\r\n}\r\n", "import { mergeAll } from './mergeAll';\r\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\r\n\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable by\r\n * concatenating the inner Observables in order.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\r\n * inner Observable after the other.</span>\r\n *\r\n * ![](concatAll.svg)\r\n *\r\n * Joins every Observable emitted by the source (a higher-order Observable), in\r\n * a serial fashion. It subscribes to each inner Observable only after the\r\n * previous inner Observable has completed, and merges all of their values into\r\n * the returned observable.\r\n *\r\n * __Warning:__ If the source Observable emits Observables quickly and\r\n * endlessly, and the inner Observables it emits generally complete slower than\r\n * the source emits, you can run into memory issues as the incoming Observables\r\n * collect in an unbounded buffer.\r\n *\r\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\r\n * to `1`.\r\n *\r\n * ## Example\r\n *\r\n * For each click event, tick every second from 0 to 3, with no concurrency\r\n *\r\n * ```ts\r\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const higherOrder = clicks.pipe(\r\n *   map(() => interval(1000).pipe(take(4)))\r\n * );\r\n * const firstOrder = higherOrder.pipe(concatAll());\r\n * firstOrder.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // (results are not concurrent)\r\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\r\n * // on a 1000ms interval\r\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\r\n * ```\r\n *\r\n * @see {@link combineLatestAll}\r\n * @see {@link concat}\r\n * @see {@link concatMap}\r\n * @see {@link concatMapTo}\r\n * @see {@link exhaustAll}\r\n * @see {@link mergeAll}\r\n * @see {@link switchAll}\r\n * @see {@link switchMap}\r\n * @see {@link zipAll}\r\n *\r\n * @return A function that returns an Observable emitting values from all the\r\n * inner Observables concatenated.\r\n */\r\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\r\n  return mergeAll(1);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInputTuple, SchedulerLike } from '../types';\r\nimport { concatAll } from '../operators/concatAll';\r\nimport { popScheduler } from '../util/args';\r\nimport { from } from './from';\r\n\r\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\r\nexport function concat<T extends readonly unknown[]>(\r\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\r\n): Observable<T[number]>;\r\n\r\n/**\r\n * Creates an output Observable which sequentially emits all values from the first given\r\n * Observable and then moves on to the next.\r\n *\r\n * <span class=\"informal\">Concatenates multiple Observables together by\r\n * sequentially emitting their values, one Observable after the other.</span>\r\n *\r\n * ![](concat.png)\r\n *\r\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\r\n * merging their results into the output Observable. You can pass either an array of\r\n * Observables, or put them directly as arguments. Passing an empty array will result\r\n * in Observable that completes immediately.\r\n *\r\n * `concat` will subscribe to first input Observable and emit all its values, without\r\n * changing or affecting them in any way. When that Observable completes, it will\r\n * subscribe to then next Observable passed and, again, emit its values. This will be\r\n * repeated, until the operator runs out of Observables. When last input Observable completes,\r\n * `concat` will complete as well. At any given moment only one Observable passed to operator\r\n * emits values. If you would like to emit values from passed Observables concurrently, check out\r\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\r\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\r\n *\r\n * Note that if some input Observable never completes, `concat` will also never complete\r\n * and Observables following the one that did not complete will never be subscribed. On the other\r\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\r\n * invisible for `concat`, which will just move on to the next Observable.\r\n *\r\n * If any Observable in chain errors, instead of passing control to the next Observable,\r\n * `concat` will error immediately as well. Observables that would be subscribed after\r\n * the one that emitted error, never will.\r\n *\r\n * If you pass to `concat` the same Observable many times, its stream of values\r\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\r\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\r\n * you can always use {@link repeat}.\r\n *\r\n * ## Examples\r\n *\r\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\r\n *\r\n * ```ts\r\n * import { interval, take, range, concat } from 'rxjs';\r\n *\r\n * const timer = interval(1000).pipe(take(4));\r\n * const sequence = range(1, 10);\r\n * const result = concat(timer, sequence);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in:\r\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\r\n * ```\r\n *\r\n * Concatenate 3 Observables\r\n *\r\n * ```ts\r\n * import { interval, take, concat } from 'rxjs';\r\n *\r\n * const timer1 = interval(1000).pipe(take(10));\r\n * const timer2 = interval(2000).pipe(take(6));\r\n * const timer3 = interval(500).pipe(take(10));\r\n *\r\n * const result = concat(timer1, timer2, timer3);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in the following:\r\n * // (Prints to console sequentially)\r\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\r\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\r\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\r\n * ```\r\n *\r\n * Concatenate the same Observable to repeat it\r\n *\r\n * ```ts\r\n * import { interval, take, concat } from 'rxjs';\r\n *\r\n * const timer = interval(1000).pipe(take(2));\r\n *\r\n * concat(timer, timer) // concatenating the same Observable!\r\n *   .subscribe({\r\n *     next: value => console.log(value),\r\n *     complete: () => console.log('...and it is done!')\r\n *   });\r\n *\r\n * // Logs:\r\n * // 0 after 1s\r\n * // 1 after 2s\r\n * // 0 after 3s\r\n * // 1 after 4s\r\n * // '...and it is done!' also after 4s\r\n * ```\r\n *\r\n * @see {@link concatAll}\r\n * @see {@link concatMap}\r\n * @see {@link concatMapTo}\r\n * @see {@link startWith}\r\n * @see {@link endWith}\r\n *\r\n * @param args Input Observables to concatenate.\r\n */\r\nexport function concat(...args: any[]): Observable<unknown> {\r\n  return concatAll()(from(args, popScheduler(args)));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservedValueOf, ObservableInput } from '../types';\r\nimport { innerFrom } from './innerFrom';\r\n\r\n/**\r\n * Creates an Observable that, on subscribe, calls an Observable factory to\r\n * make an Observable for each new Observer.\r\n *\r\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\r\n * is subscribed.\r\n * </span>\r\n *\r\n * ![](defer.png)\r\n *\r\n * `defer` allows you to create an Observable only when the Observer\r\n * subscribes. It waits until an Observer subscribes to it, calls the given\r\n * factory function to get an Observable -- where a factory function typically\r\n * generates a new Observable -- and subscribes the Observer to this Observable.\r\n * In case the factory function returns a falsy value, then EMPTY is used as\r\n * Observable instead. Last but not least, an exception during the factory\r\n * function call is transferred to the Observer by calling `error`.\r\n *\r\n * ## Example\r\n *\r\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\r\n *\r\n * ```ts\r\n * import { defer, fromEvent, interval } from 'rxjs';\r\n *\r\n * const clicksOrInterval = defer(() => {\r\n *   return Math.random() > 0.5\r\n *     ? fromEvent(document, 'click')\r\n *     : interval(1000);\r\n * });\r\n * clicksOrInterval.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following behavior:\r\n * // If the result of Math.random() is greater than 0.5 it will listen\r\n * // for clicks anywhere on the \"document\"; when document is clicked it\r\n * // will log a MouseEvent object to the console. If the result is less\r\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\r\n * ```\r\n *\r\n * @see {@link Observable}\r\n *\r\n * @param {function(): ObservableInput} observableFactory The Observable\r\n * factory function to invoke for each Observer that subscribes to the output\r\n * Observable. May also return a Promise, which will be converted on the fly\r\n * to an Observable.\r\n * @return {Observable} An Observable whose Observers' subscriptions trigger\r\n * an invocation of the given Observable factory function.\r\n */\r\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\r\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\r\n    innerFrom(observableFactory()).subscribe(subscriber);\r\n  });\r\n}\r\n", "import { Connectable, ObservableInput, SubjectLike } from '../types';\r\nimport { Subject } from '../Subject';\r\nimport { Subscription } from '../Subscription';\r\nimport { Observable } from '../Observable';\r\nimport { defer } from './defer';\r\n\r\nexport interface ConnectableConfig<T> {\r\n  /**\r\n   * A factory function used to create the Subject through which the source\r\n   * is multicast. By default this creates a {@link Subject}.\r\n   */\r\n  connector: () => SubjectLike<T>;\r\n  /**\r\n   * If true, the resulting observable will reset internal state upon disconnection\r\n   * and return to a \"cold\" state. This allows the resulting observable to be\r\n   * reconnected.\r\n   * If false, upon disconnection, the connecting subject will remain the\r\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\r\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\r\n   */\r\n  resetOnDisconnect?: boolean;\r\n}\r\n\r\n/**\r\n * The default configuration for `connectable`.\r\n */\r\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\r\n  connector: () => new Subject<unknown>(),\r\n  resetOnDisconnect: true,\r\n};\r\n\r\n/**\r\n * Creates an observable that multicasts once `connect()` is called on it.\r\n *\r\n * @param source The observable source to make connectable.\r\n * @param config The configuration object for `connectable`.\r\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\r\n * connect the source to all consumers through the subject provided as the connector.\r\n */\r\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\r\n  // The subscription representing the connection.\r\n  let connection: Subscription | null = null;\r\n  const { connector, resetOnDisconnect = true } = config;\r\n  let subject = connector();\r\n\r\n  const result: any = new Observable<T>((subscriber) => {\r\n    return subject.subscribe(subscriber);\r\n  });\r\n\r\n  // Define the `connect` function. This is what users must call\r\n  // in order to \"connect\" the source to the subject that is\r\n  // multicasting it.\r\n  result.connect = () => {\r\n    if (!connection || connection.closed) {\r\n      connection = defer(() => source).subscribe(subject);\r\n      if (resetOnDisconnect) {\r\n        connection.add(() => (subject = connector()));\r\n      }\r\n    }\r\n    return connection;\r\n  };\r\n\r\n  return result;\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\r\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\r\nimport { innerFrom } from './innerFrom';\r\nimport { popResultSelector } from '../util/args';\r\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\nimport { createObject } from '../util/createObject';\r\nimport { AnyCatcher } from '../AnyCatcher';\r\n\r\n// forkJoin(any)\r\n// We put this first because we need to catch cases where the user has supplied\r\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\r\n// we don't want it to randomly hit one of the other type signatures below,\r\n// as we have no idea at build-time what type we should be returning when given an any.\r\n\r\n/**\r\n * You have passed `any` here, we can't figure out if it is\r\n * an array or an object, so you're getting `unknown`. Use better types.\r\n * @param arg Something typed as `any`\r\n */\r\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\r\n\r\n// forkJoin(null | undefined)\r\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\r\n\r\n// forkJoin([a, b, c])\r\nexport function forkJoin(sources: readonly []): Observable<never>;\r\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\r\nexport function forkJoin<A extends readonly unknown[], R>(\r\n  sources: readonly [...ObservableInputTuple<A>],\r\n  resultSelector: (...values: A) => R\r\n): Observable<R>;\r\n\r\n// forkJoin(a, b, c)\r\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\r\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\r\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\r\nexport function forkJoin<A extends readonly unknown[], R>(\r\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\r\n): Observable<R>;\r\n\r\n// forkJoin({a, b, c})\r\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\r\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\r\n  sourcesObject: T\r\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\r\n\r\n/**\r\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\r\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\r\n * or a dictionary of values in the same shape as the passed dictionary.\r\n *\r\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\r\n * complete immediately if an empty array is passed.</span>\r\n *\r\n * ![](forkJoin.png)\r\n *\r\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\r\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\r\n * then the resulting stream will complete immediately.\r\n *\r\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\r\n * values from corresponding observables.\r\n *\r\n * If you pass an array of `n` observables to the operator, then the resulting\r\n * array will have `n` values, where the first value is the last one emitted by the first observable,\r\n * second value is the last one emitted by the second observable and so on.\r\n *\r\n * If you pass a dictionary of observables to the operator, then the resulting\r\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\r\n * located at the corresponding key.\r\n *\r\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\r\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\r\n * or {@link zip} instead.\r\n *\r\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\r\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\r\n * and it will not emit anything either, even if it already has some last values from other observables.\r\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\r\n * unless at any point some other observable completes without emitting a value, which brings us back to\r\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\r\n * have to emit something at least once and complete.\r\n *\r\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\r\n * from the other observables.\r\n *\r\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\r\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\r\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\r\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\r\n * when `forkJoin` is supposed to emit a result.\r\n *\r\n * ## Examples\r\n *\r\n * Use `forkJoin` with a dictionary of observable inputs\r\n *\r\n * ```ts\r\n * import { forkJoin, of, timer } from 'rxjs';\r\n *\r\n * const observable = forkJoin({\r\n *   foo: of(1, 2, 3, 4),\r\n *   bar: Promise.resolve(8),\r\n *   baz: timer(4000)\r\n * });\r\n * observable.subscribe({\r\n *  next: value => console.log(value),\r\n *  complete: () => console.log('This is how it ends!'),\r\n * });\r\n *\r\n * // Logs:\r\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\r\n * // 'This is how it ends!' immediately after\r\n * ```\r\n *\r\n * Use `forkJoin` with an array of observable inputs\r\n *\r\n * ```ts\r\n * import { forkJoin, of, timer } from 'rxjs';\r\n *\r\n * const observable = forkJoin([\r\n *   of(1, 2, 3, 4),\r\n *   Promise.resolve(8),\r\n *   timer(4000)\r\n * ]);\r\n * observable.subscribe({\r\n *  next: value => console.log(value),\r\n *  complete: () => console.log('This is how it ends!'),\r\n * });\r\n *\r\n * // Logs:\r\n * // [4, 8, 0] after 4 seconds\r\n * // 'This is how it ends!' immediately after\r\n * ```\r\n *\r\n * @see {@link combineLatest}\r\n * @see {@link zip}\r\n *\r\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\r\n * passed directly to the operator.\r\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\r\n * that will appear in resulting Observable instead of default array.\r\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\r\n * or value from project function.\r\n */\r\nexport function forkJoin(...args: any[]): Observable<any> {\r\n  const resultSelector = popResultSelector(args);\r\n  const { args: sources, keys } = argsArgArrayOrObject(args);\r\n  const result = new Observable((subscriber) => {\r\n    const { length } = sources;\r\n    if (!length) {\r\n      subscriber.complete();\r\n      return;\r\n    }\r\n    const values = new Array(length);\r\n    let remainingCompletions = length;\r\n    let remainingEmissions = length;\r\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\r\n      let hasValue = false;\r\n      innerFrom(sources[sourceIndex]).subscribe(\r\n        createOperatorSubscriber(\r\n          subscriber,\r\n          (value) => {\r\n            if (!hasValue) {\r\n              hasValue = true;\r\n              remainingEmissions--;\r\n            }\r\n            values[sourceIndex] = value;\r\n          },\r\n          () => remainingCompletions--,\r\n          undefined,\r\n          () => {\r\n            if (!remainingCompletions || !hasValue) {\r\n              if (!remainingEmissions) {\r\n                subscriber.next(keys ? createObject(keys, values) : values);\r\n              }\r\n              subscriber.complete();\r\n            }\r\n          }\r\n        )\r\n      );\r\n    }\r\n  });\r\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { Observable } from '../Observable';\r\nimport { mergeMap } from '../operators/mergeMap';\r\nimport { isArrayLike } from '../util/isArrayLike';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\n\r\n// These constants are used to create handler registry functions using array mapping below.\r\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\r\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\r\nconst jqueryMethods = ['on', 'off'] as const;\r\n\r\nexport interface NodeStyleEventEmitter {\r\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\r\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\r\n}\r\n\r\nexport type NodeEventHandler = (...args: any[]) => void;\r\n\r\n// For APIs that implement `addListener` and `removeListener` methods that may\r\n// not use the same arguments or return EventEmitter values\r\n// such as React Native\r\nexport interface NodeCompatibleEventEmitter {\r\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\r\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\r\n}\r\n\r\n// Use handler types like those in @types/jquery. See:\r\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\r\nexport interface JQueryStyleEventEmitter<TContext, T> {\r\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\r\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\r\n}\r\n\r\nexport interface EventListenerObject<E> {\r\n  handleEvent(evt: E): void;\r\n}\r\n\r\nexport interface HasEventTargetAddRemove<E> {\r\n  addEventListener(\r\n    type: string,\r\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\r\n    options?: boolean | AddEventListenerOptions\r\n  ): void;\r\n  removeEventListener(\r\n    type: string,\r\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\r\n    options?: EventListenerOptions | boolean\r\n  ): void;\r\n}\r\n\r\nexport interface EventListenerOptions {\r\n  capture?: boolean;\r\n  passive?: boolean;\r\n  once?: boolean;\r\n}\r\n\r\nexport interface AddEventListenerOptions extends EventListenerOptions {\r\n  once?: boolean;\r\n  passive?: boolean;\r\n}\r\n\r\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\r\nexport function fromEvent<T, R>(\r\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\r\n  eventName: string,\r\n  resultSelector: (event: T) => R\r\n): Observable<R>;\r\nexport function fromEvent<T>(\r\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\r\n  eventName: string,\r\n  options: EventListenerOptions\r\n): Observable<T>;\r\nexport function fromEvent<T, R>(\r\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\r\n  eventName: string,\r\n  options: EventListenerOptions,\r\n  resultSelector: (event: T) => R\r\n): Observable<R>;\r\n\r\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\r\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\r\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\r\nexport function fromEvent<R>(\r\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\r\n  eventName: string,\r\n  resultSelector: (...args: any[]) => R\r\n): Observable<R>;\r\n\r\nexport function fromEvent(\r\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\r\n  eventName: string\r\n): Observable<unknown>;\r\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\r\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\r\nexport function fromEvent<R>(\r\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\r\n  eventName: string,\r\n  resultSelector: (...args: any[]) => R\r\n): Observable<R>;\r\n\r\nexport function fromEvent<T>(\r\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\r\n  eventName: string\r\n): Observable<T>;\r\nexport function fromEvent<T, R>(\r\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\r\n  eventName: string,\r\n  resultSelector: (value: T, ...args: any[]) => R\r\n): Observable<R>;\r\n\r\n/**\r\n * Creates an Observable that emits events of a specific type coming from the\r\n * given event target.\r\n *\r\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\r\n * EventEmitter events or others.</span>\r\n *\r\n * ![](fromEvent.png)\r\n *\r\n * `fromEvent` accepts as a first argument event target, which is an object with methods\r\n * for registering event handler functions. As a second argument it takes string that indicates\r\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\r\n * which are described in detail below. If your event target does not match any of the ones listed,\r\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\r\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\r\n * handler functions have different names, but they all accept a string describing event type\r\n * and function itself, which will be called whenever said event happens.\r\n *\r\n * Every time resulting Observable is subscribed, event handler function will be registered\r\n * to event target on given event type. When that event fires, value\r\n * passed as a first argument to registered function will be emitted by output Observable.\r\n * When Observable is unsubscribed, function will be unregistered from event target.\r\n *\r\n * Note that if event target calls registered function with more than one argument, second\r\n * and following arguments will not appear in resulting stream. In order to get access to them,\r\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\r\n * passed to event handler. Output Observable will then emit value returned by project function,\r\n * instead of the usual value.\r\n *\r\n * Remember that event targets listed below are checked via duck typing. It means that\r\n * no matter what kind of object you have and no matter what environment you work in,\r\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\r\n * of course they behave as was described above). So for example if Node.js library exposes\r\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\r\n * a good choice.\r\n *\r\n * If the API you use is more callback then event handler oriented (subscribed\r\n * callback function fires only once and thus there is no need to manually\r\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\r\n * instead.\r\n *\r\n * `fromEvent` supports following types of event targets:\r\n *\r\n * **DOM EventTarget**\r\n *\r\n * This is an object with `addEventListener` and `removeEventListener` methods.\r\n *\r\n * In the browser, `addEventListener` accepts - apart from event type string and event\r\n * handler function arguments - optional third parameter, which is either an object or boolean,\r\n * both used for additional configuration how and when passed function will be called. When\r\n * `fromEvent` is used with event target of that type, you can provide this values\r\n * as third parameter as well.\r\n *\r\n * **Node.js EventEmitter**\r\n *\r\n * An object with `addListener` and `removeListener` methods.\r\n *\r\n * **JQuery-style event target**\r\n *\r\n * An object with `on` and `off` methods\r\n *\r\n * **DOM NodeList**\r\n *\r\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\r\n *\r\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\r\n * it contains and install event handler function in every of them. When returned Observable\r\n * is unsubscribed, function will be removed from all Nodes.\r\n *\r\n * **DOM HtmlCollection**\r\n *\r\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\r\n * installed and removed in each of elements.\r\n *\r\n *\r\n * ## Examples\r\n *\r\n * Emit clicks happening on the DOM document\r\n *\r\n * ```ts\r\n * import { fromEvent } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * clicks.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // MouseEvent object logged to console every time a click\r\n * // occurs on the document.\r\n * ```\r\n *\r\n * Use `addEventListener` with capture option\r\n *\r\n * ```ts\r\n * import { fromEvent } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * // note optional configuration parameter which will be passed to addEventListener\r\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\r\n * const clicksInDiv = fromEvent(div, 'click');\r\n *\r\n * clicksInDocument.subscribe(() => console.log('document'));\r\n * clicksInDiv.subscribe(() => console.log('div'));\r\n *\r\n * // By default events bubble UP in DOM tree, so normally\r\n * // when we would click on div in document\r\n * // \"div\" would be logged first and then \"document\".\r\n * // Since we specified optional `capture` option, document\r\n * // will catch event when it goes DOWN DOM tree, so console\r\n * // will log \"document\" and then \"div\".\r\n * ```\r\n *\r\n * @see {@link bindCallback}\r\n * @see {@link bindNodeCallback}\r\n * @see {@link fromEventPattern}\r\n *\r\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\r\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\r\n * @param {string} eventName The event name of interest, being emitted by the\r\n * `target`.\r\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\r\n * @return {Observable<T>}\r\n */\r\nexport function fromEvent<T>(\r\n  target: any,\r\n  eventName: string,\r\n  options?: EventListenerOptions | ((...args: any[]) => T),\r\n  resultSelector?: (...args: any[]) => T\r\n): Observable<T> {\r\n  if (isFunction(options)) {\r\n    resultSelector = options;\r\n    options = undefined;\r\n  }\r\n  if (resultSelector) {\r\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\r\n  }\r\n\r\n  // Figure out our add and remove methods. In order to do this,\r\n  // we are going to analyze the target in a preferred order, if\r\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\r\n  // method names and apply them to a map to create opposite versions of the\r\n  // same function. This is because they all operate in duplicate pairs,\r\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\r\n  // The call only differs by method name, as to whether or not you're adding or removing.\r\n  const [add, remove] =\r\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\r\n    isEventTarget(target)\r\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\r\n      : // In all other cases, the call pattern is identical with the exception of the method names.\r\n      isNodeStyleEventEmitter(target)\r\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\r\n      : isJQueryStyleEventEmitter(target)\r\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\r\n      : [];\r\n\r\n  // If add is falsy, it's because we didn't match a pattern above.\r\n  // Check to see if it is an ArrayLike, because if it is, we want to\r\n  // try to apply fromEvent to all of it's items. We do this check last,\r\n  // because there are may be some types that are both ArrayLike *and* implement\r\n  // event registry points, and we'd rather delegate to that when possible.\r\n  if (!add) {\r\n    if (isArrayLike(target)) {\r\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\r\n        innerFrom(target)\r\n      ) as Observable<T>;\r\n    }\r\n  }\r\n\r\n  // If add is falsy and we made it here, it's because we didn't\r\n  // match any valid target objects above.\r\n  if (!add) {\r\n    throw new TypeError('Invalid event target');\r\n  }\r\n\r\n  return new Observable<T>((subscriber) => {\r\n    // The handler we are going to register. Forwards the event object, by itself, or\r\n    // an array of arguments to the event handler, if there is more than one argument,\r\n    // to the consumer.\r\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\r\n    // Do the work of adding the handler to the target.\r\n    add(handler);\r\n    // When we finalize, we want to remove the handler and free up memory.\r\n    return () => remove!(handler);\r\n  });\r\n}\r\n\r\n/**\r\n * Used to create `add` and `remove` functions to register and unregister event handlers\r\n * from a target in the most common handler pattern, where there are only two arguments.\r\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\r\n * @param target The target we're calling methods on\r\n * @param eventName The event name for the event we're creating register or unregister functions for\r\n */\r\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\r\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\r\n}\r\n\r\n/**\r\n * Checks to see if the target implements the required node-style EventEmitter methods\r\n * for adding and removing event handlers.\r\n * @param target the object to check\r\n */\r\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\r\n  return isFunction(target.addListener) && isFunction(target.removeListener);\r\n}\r\n\r\n/**\r\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\r\n * for adding and removing event handlers.\r\n * @param target the object to check\r\n */\r\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\r\n  return isFunction(target.on) && isFunction(target.off);\r\n}\r\n\r\n/**\r\n * Checks to see if the target implements the required EventTarget methods\r\n * for adding and removing event handlers.\r\n * @param target the object to check\r\n */\r\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\r\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { NodeEventHandler } from './fromEvent';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function fromEventPattern<T>(\r\n  addHandler: (handler: NodeEventHandler) => any,\r\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\r\n): Observable<T>;\r\nexport function fromEventPattern<T>(\r\n  addHandler: (handler: NodeEventHandler) => any,\r\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\r\n  resultSelector?: (...args: any[]) => T\r\n): Observable<T>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Creates an Observable from an arbitrary API for registering event handlers.\r\n *\r\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\r\n * was not prepared for.</span>\r\n *\r\n * ![](fromEventPattern.png)\r\n *\r\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\r\n * for events. It is similar to {@link fromEvent}, but far\r\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\r\n * `fromEventPattern` (although in slightly more verbose way).\r\n *\r\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\r\n * handler parameter. That handler is actually an event handler function that you now can pass\r\n * to API expecting it. `addHandler` will be called whenever Observable\r\n * returned by the operator is subscribed, so registering handler in API will not\r\n * necessarily happen when `fromEventPattern` is called.\r\n *\r\n * After registration, every time an event that we listen to happens,\r\n * Observable returned by `fromEventPattern` will emit value that event handler\r\n * function was called with. Note that if event handler was called with more\r\n * than one argument, second and following arguments will not appear in the Observable.\r\n *\r\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\r\n * another function - `removeHandler` - as a second parameter. It will be injected\r\n * with the same handler function as before, which now you can use to unregister\r\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\r\n * unsubscribes from it.\r\n *\r\n * In some APIs unregistering is actually handled differently. Method registering an event handler\r\n * returns some kind of token, which is later used to identify which function should\r\n * be unregistered or it itself has method that unregisters event handler.\r\n * If that is the case with your API, make sure token returned\r\n * by registering method is returned by `addHandler`. Then it will be passed\r\n * as a second argument to `removeHandler`, where you will be able to use it.\r\n *\r\n * If you need access to all event handler parameters (not only the first one),\r\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\r\n * third parameter - project function which will accept all arguments passed to\r\n * event handler when it is called. Whatever is returned from project function will appear on\r\n * resulting stream instead of usual event handlers first argument. This means\r\n * that default project can be thought of as function that takes its first parameter\r\n * and ignores the rest.\r\n *\r\n * ## Examples\r\n *\r\n * Emits clicks happening on the DOM document\r\n *\r\n * ```ts\r\n * import { fromEventPattern } from 'rxjs';\r\n *\r\n * function addClickHandler(handler) {\r\n *   document.addEventListener('click', handler);\r\n * }\r\n *\r\n * function removeClickHandler(handler) {\r\n *   document.removeEventListener('click', handler);\r\n * }\r\n *\r\n * const clicks = fromEventPattern(\r\n *   addClickHandler,\r\n *   removeClickHandler\r\n * );\r\n * clicks.subscribe(x => console.log(x));\r\n *\r\n * // Whenever you click anywhere in the browser, DOM MouseEvent\r\n * // object will be logged.\r\n * ```\r\n *\r\n * Use with API that returns cancellation token\r\n *\r\n * ```ts\r\n * import { fromEventPattern } from 'rxjs';\r\n *\r\n * const token = someAPI.registerEventHandler(function() {});\r\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\r\n *                                        // not handler itself, but special token.\r\n *\r\n * const someAPIObservable = fromEventPattern(\r\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\r\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\r\n * );\r\n * ```\r\n *\r\n * Use with project function\r\n *\r\n * ```ts\r\n * import { fromEventPattern } from 'rxjs';\r\n *\r\n * someAPI.registerEventHandler((eventType, eventMessage) => {\r\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\r\n * });\r\n *\r\n * const someAPIObservable = fromEventPattern(\r\n *   handler => someAPI.registerEventHandler(handler),\r\n *   handler => someAPI.unregisterEventHandler(handler)\r\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\r\n * );                                                                // would be emitted by the Observable\r\n *\r\n * someAPIObservable.subscribe(value => console.log(value));\r\n *\r\n * // Logs:\r\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\r\n * ```\r\n *\r\n * @see {@link fromEvent}\r\n * @see {@link bindCallback}\r\n * @see {@link bindNodeCallback}\r\n *\r\n * @param {function(handler: Function): any} addHandler A function that takes\r\n * a `handler` function as argument and attaches it somehow to the actual\r\n * source of events.\r\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\r\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\r\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\r\n * @param {function(...args: any): T} [project] A function to\r\n * transform results. It takes the arguments from the event handler and\r\n * should return a single value.\r\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\r\n * passed to registered event handler. Alternatively it emits whatever project function returns\r\n * at that moment.\r\n */\r\nexport function fromEventPattern<T>(\r\n  addHandler: (handler: NodeEventHandler) => any,\r\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\r\n  resultSelector?: (...args: any[]) => T\r\n): Observable<T | T[]> {\r\n  if (resultSelector) {\r\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\r\n  }\r\n\r\n  return new Observable<T | T[]>((subscriber) => {\r\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\r\n    const retValue = addHandler(handler);\r\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { identity } from '../util/identity';\r\nimport { ObservableInput, SchedulerLike } from '../types';\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { defer } from './defer';\r\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\r\n\r\ntype ConditionFunc<S> = (state: S) => boolean;\r\ntype IterateFunc<S> = (state: S) => S;\r\ntype ResultFunc<S, T> = (state: S) => T;\r\n\r\nexport interface GenerateBaseOptions<S> {\r\n  /**\r\n   * Initial state.\r\n   */\r\n  initialState: S;\r\n  /**\r\n   * Condition function that accepts state and returns boolean.\r\n   * When it returns false, the generator stops.\r\n   * If not specified, a generator never stops.\r\n   */\r\n  condition?: ConditionFunc<S>;\r\n  /**\r\n   * Iterate function that accepts state and returns new state.\r\n   */\r\n  iterate: IterateFunc<S>;\r\n  /**\r\n   * SchedulerLike to use for generation process.\r\n   * By default, a generator starts immediately.\r\n   */\r\n  scheduler?: SchedulerLike;\r\n}\r\n\r\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\r\n  /**\r\n   * Result selection function that accepts state and returns a value to emit.\r\n   */\r\n  resultSelector: ResultFunc<S, T>;\r\n}\r\n\r\n/**\r\n * Generates an observable sequence by running a state-driven loop\r\n * producing the sequence's elements, using the specified scheduler\r\n * to send out observer messages.\r\n *\r\n * ![](generate.png)\r\n *\r\n * ## Examples\r\n *\r\n * Produces sequence of numbers\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * ```\r\n *\r\n * Use `asapScheduler`\r\n *\r\n * ```ts\r\n * import { generate, asapScheduler } from 'rxjs';\r\n *\r\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 2\r\n * // 3\r\n * // 5\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link Observable}\r\n *\r\n * @param {S} initialState Initial state.\r\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\r\n * @param {function (state: S): S} iterate Iteration step function.\r\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\r\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\r\n * @returns {Observable<T>} The generated sequence.\r\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\r\n */\r\nexport function generate<T, S>(\r\n  initialState: S,\r\n  condition: ConditionFunc<S>,\r\n  iterate: IterateFunc<S>,\r\n  resultSelector: ResultFunc<S, T>,\r\n  scheduler?: SchedulerLike\r\n): Observable<T>;\r\n\r\n/**\r\n * Generates an Observable by running a state-driven loop\r\n * that emits an element on each iteration.\r\n *\r\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\r\n *\r\n * ![](generate.png)\r\n *\r\n * `generate` allows you to create a stream of values generated with a loop very similar to\r\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\r\n * is a function that accepts this value and tests if some condition still holds. If it does,\r\n * then the loop continues, if not, it stops. The third value is a function which takes the\r\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\r\n * are direct equivalents of three expressions in a traditional for loop: the first expression\r\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\r\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\r\n * will be modified on every step (for example, the index will be incremented by one).\r\n *\r\n * Return value of a `generate` operator is an Observable that on each loop iteration\r\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\r\n * emits the currently stored value (initial value at the first iteration) and finally updates\r\n * that value with iterate function. If at some point the condition returns false, then the Observable\r\n * completes at that moment.\r\n *\r\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\r\n * to immediately map the value that would normally be emitted by an Observable.\r\n *\r\n * If you find three anonymous functions in `generate` call hard to read, you can provide\r\n * a single object to the operator instead where the object has the properties: `initialState`,\r\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\r\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\r\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\r\n * condition always holds, or in other words the resulting Observable will never complete.\r\n *\r\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\r\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\r\n * function or not). In case of a single-parameter call, you can provide it as a\r\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\r\n * the next iteration of the loop will happen and therefore when the next value will be emitted\r\n * by the Observable. For example, to ensure that each value is pushed to the Observer\r\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\r\n * by default (when no scheduler is passed) values are simply emitted synchronously.\r\n *\r\n *\r\n * ## Examples\r\n *\r\n * Use with condition and iterate functions\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate(0, x => x < 3, x => x + 1);\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * Use with condition, iterate and resultSelector functions\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1000\r\n * // 2000\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * Use with options object\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   condition(value) { return value < 3; },\r\n *   iterate(value) { return value + 1; },\r\n *   resultSelector(value) { return value * 1000; }\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1000\r\n * // 2000\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * Use options object without condition function\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   iterate(value) { return value + 1; },\r\n *   resultSelector(value) { return value * 1000; }\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!') // This will never run\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1000\r\n * // 2000\r\n * // 3000\r\n * // ...and never stops.\r\n * ```\r\n *\r\n * @see {@link from}\r\n *\r\n * @param {S} initialState Initial state.\r\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\r\n * @param {function (state: S): S} iterate Iteration step function.\r\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\r\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\r\n * @return {Observable<T>} The generated sequence.\r\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\r\n */\r\nexport function generate<S>(\r\n  initialState: S,\r\n  condition: ConditionFunc<S>,\r\n  iterate: IterateFunc<S>,\r\n  scheduler?: SchedulerLike\r\n): Observable<S>;\r\n\r\n/**\r\n * Generates an observable sequence by running a state-driven loop\r\n * producing the sequence's elements, using the specified scheduler\r\n * to send out observer messages.\r\n * The overload accepts options object that might contain initial state, iterate,\r\n * condition and scheduler.\r\n *\r\n * ![](generate.png)\r\n *\r\n * ## Examples\r\n *\r\n * Use options object with condition function\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   condition: x => x < 3,\r\n *   iterate: x => x + 1\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link Observable}\r\n *\r\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\r\n * @returns {Observable<S>} The generated sequence.\r\n */\r\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\r\n\r\n/**\r\n * Generates an observable sequence by running a state-driven loop\r\n * producing the sequence's elements, using the specified scheduler\r\n * to send out observer messages.\r\n * The overload accepts options object that might contain initial state, iterate,\r\n * condition, result selector and scheduler.\r\n *\r\n * ![](generate.png)\r\n *\r\n * ## Examples\r\n *\r\n * Use options object with condition and iterate function\r\n *\r\n * ```ts\r\n * import { generate } from 'rxjs';\r\n *\r\n * const result = generate({\r\n *   initialState: 0,\r\n *   condition: x => x < 3,\r\n *   iterate: x => x + 1,\r\n *   resultSelector: x => x\r\n * });\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * @see {@link from}\r\n * @see {@link Observable}\r\n *\r\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\r\n * @returns {Observable<T>} The generated sequence.\r\n */\r\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\r\n\r\nexport function generate<T, S>(\r\n  initialStateOrOptions: S | GenerateOptions<T, S>,\r\n  condition?: ConditionFunc<S>,\r\n  iterate?: IterateFunc<S>,\r\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\r\n  scheduler?: SchedulerLike\r\n): Observable<T> {\r\n  let resultSelector: ResultFunc<S, T>;\r\n  let initialState: S;\r\n\r\n  // TODO: Remove this as we move away from deprecated signatures\r\n  // and move towards a configuration object argument.\r\n  if (arguments.length === 1) {\r\n    // If we only have one argument, we can assume it is a configuration object.\r\n    // Note that folks not using TypeScript may trip over this.\r\n    ({\r\n      initialState,\r\n      condition,\r\n      iterate,\r\n      resultSelector = identity as ResultFunc<S, T>,\r\n      scheduler,\r\n    } = initialStateOrOptions as GenerateOptions<T, S>);\r\n  } else {\r\n    // Deprecated arguments path. Figure out what the user\r\n    // passed and set it here.\r\n    initialState = initialStateOrOptions as S;\r\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\r\n      resultSelector = identity as ResultFunc<S, T>;\r\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\r\n    } else {\r\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\r\n    }\r\n  }\r\n\r\n  // The actual generator used to \"generate\" values.\r\n  function* gen() {\r\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\r\n      yield resultSelector(state);\r\n    }\r\n  }\r\n\r\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\r\n  return defer(\r\n    (scheduler\r\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\r\n        // happens on the scheduler.\r\n        () => scheduleIterable(gen(), scheduler!)\r\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\r\n        // `defer` and executing it will return the generator (which is iterable).\r\n        gen) as () => ObservableInput<T>\r\n  );\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { defer } from './defer';\r\nimport { ObservableInput } from '../types';\r\n\r\n/**\r\n * Checks a boolean at subscription time, and chooses between one of two observable sources\r\n *\r\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\r\n * the `trueResult` and the `falseResult`, and returns an Observable.\r\n *\r\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\r\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\r\n * to the source passed as the `falseResult`.\r\n *\r\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\r\n *\r\n * ## Examples\r\n *\r\n * Change at runtime which Observable will be subscribed\r\n *\r\n * ```ts\r\n * import { iif, of } from 'rxjs';\r\n *\r\n * let subscribeToFirst;\r\n * const firstOrSecond = iif(\r\n *   () => subscribeToFirst,\r\n *   of('first'),\r\n *   of('second')\r\n * );\r\n *\r\n * subscribeToFirst = true;\r\n * firstOrSecond.subscribe(value => console.log(value));\r\n *\r\n * // Logs:\r\n * // 'first'\r\n *\r\n * subscribeToFirst = false;\r\n * firstOrSecond.subscribe(value => console.log(value));\r\n *\r\n * // Logs:\r\n * // 'second'\r\n * ```\r\n *\r\n * Control access to an Observable\r\n *\r\n * ```ts\r\n * import { iif, of, EMPTY } from 'rxjs';\r\n *\r\n * let accessGranted;\r\n * const observableIfYouHaveAccess = iif(\r\n *   () => accessGranted,\r\n *   of('It seems you have an access...'),\r\n *   EMPTY\r\n * );\r\n *\r\n * accessGranted = true;\r\n * observableIfYouHaveAccess.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('The end')\r\n * });\r\n *\r\n * // Logs:\r\n * // 'It seems you have an access...'\r\n * // 'The end'\r\n *\r\n * accessGranted = false;\r\n * observableIfYouHaveAccess.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('The end')\r\n * });\r\n *\r\n * // Logs:\r\n * // 'The end'\r\n * ```\r\n *\r\n * @see {@link defer}\r\n *\r\n * @param condition Condition which Observable should be chosen.\r\n * @param trueResult An Observable that will be subscribed if condition is true.\r\n * @param falseResult An Observable that will be subscribed if condition is false.\r\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\r\n */\r\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\r\n  return defer(() => (condition() ? trueResult : falseResult));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\nimport { async as asyncScheduler } from '../scheduler/async';\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { isValidDate } from '../util/isDate';\r\n\r\n/**\r\n * Creates an observable that will wait for a specified time period, or exact date, before\r\n * emitting the number 0.\r\n *\r\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\r\n *\r\n * This observable is useful for creating delays in code, or racing against other values\r\n * for ad-hoc timeouts.\r\n *\r\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\r\n * create a different behavior.\r\n *\r\n * ## Examples\r\n *\r\n * Wait 3 seconds and start another observable\r\n *\r\n * You might want to use `timer` to delay subscription to an\r\n * observable by a set amount of time. Here we use a timer with\r\n * {@link concatMapTo} or {@link concatMap} in order to wait\r\n * a few seconds and start a subscription to a source.\r\n *\r\n * ```ts\r\n * import { of, timer, concatMap } from 'rxjs';\r\n *\r\n * // This could be any observable\r\n * const source = of(1, 2, 3);\r\n *\r\n * timer(3000)\r\n *   .pipe(concatMap(() => source))\r\n *   .subscribe(console.log);\r\n * ```\r\n *\r\n * Take all values until the start of the next minute\r\n *\r\n * Using a `Date` as the trigger for the first emission, you can\r\n * do things like wait until midnight to fire an event, or in this case,\r\n * wait until a new minute starts (chosen so the example wouldn't take\r\n * too long to run) in order to stop watching a stream. Leveraging\r\n * {@link takeUntil}.\r\n *\r\n * ```ts\r\n * import { interval, takeUntil, timer } from 'rxjs';\r\n *\r\n * // Build a Date object that marks the\r\n * // next minute.\r\n * const currentDate = new Date();\r\n * const startOfNextMinute = new Date(\r\n *   currentDate.getFullYear(),\r\n *   currentDate.getMonth(),\r\n *   currentDate.getDate(),\r\n *   currentDate.getHours(),\r\n *   currentDate.getMinutes() + 1\r\n * );\r\n *\r\n * // This could be any observable stream\r\n * const source = interval(1000);\r\n *\r\n * const result = source.pipe(\r\n *   takeUntil(timer(startOfNextMinute))\r\n * );\r\n *\r\n * result.subscribe(console.log);\r\n * ```\r\n *\r\n * ### Known Limitations\r\n *\r\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\r\n *\r\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\r\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\r\n * should occur will be incorrect. In this case, it would be best to do your own calculations\r\n * ahead of time, and pass a `number` in as the `dueTime`.\r\n *\r\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\r\n * If a `Date`, the exact time at which to emit.\r\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\r\n */\r\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\r\n\r\n/**\r\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\r\n * on each interval after words.\r\n *\r\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\r\n * create a different behavior.\r\n *\r\n * ## Example\r\n *\r\n * ### Start an interval that starts right away\r\n *\r\n * Since {@link interval} waits for the passed delay before starting,\r\n * sometimes that's not ideal. You may want to start an interval immediately.\r\n * `timer` works well for this. Here we have both side-by-side so you can\r\n * see them in comparison.\r\n *\r\n * Note that this observable will never complete.\r\n *\r\n * ```ts\r\n * import { timer, interval } from 'rxjs';\r\n *\r\n * timer(0, 1000).subscribe(n => console.log('timer', n));\r\n * interval(1000).subscribe(n => console.log('interval', n));\r\n * ```\r\n *\r\n * ### Known Limitations\r\n *\r\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\r\n *\r\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\r\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\r\n * should occur will be incorrect. In this case, it would be best to do your own calculations\r\n * ahead of time, and pass a `number` in as the `startDue`.\r\n * @param startDue If a `number`, is the time to wait before starting the interval.\r\n * If a `Date`, is the exact time at which to start the interval.\r\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\r\n * negative number here will result in immediate completion after the first value is emitted, as though\r\n * no `intervalDuration` was passed at all.\r\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\r\n */\r\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\r\n\r\n/**\r\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\r\n */\r\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\r\n\r\nexport function timer(\r\n  dueTime: number | Date = 0,\r\n  intervalOrScheduler?: number | SchedulerLike,\r\n  scheduler: SchedulerLike = asyncScheduler\r\n): Observable<number> {\r\n  // Since negative intervalDuration is treated as though no\r\n  // interval was specified at all, we start with a negative number.\r\n  let intervalDuration = -1;\r\n\r\n  if (intervalOrScheduler != null) {\r\n    // If we have a second argument, and it's a scheduler,\r\n    // override the scheduler we had defaulted. Otherwise,\r\n    // it must be an interval.\r\n    if (isScheduler(intervalOrScheduler)) {\r\n      scheduler = intervalOrScheduler;\r\n    } else {\r\n      // Note that this *could* be negative, in which case\r\n      // it's like not passing an intervalDuration at all.\r\n      intervalDuration = intervalOrScheduler;\r\n    }\r\n  }\r\n\r\n  return new Observable((subscriber) => {\r\n    // If a valid date is passed, calculate how long to wait before\r\n    // executing the first value... otherwise, if it's a number just schedule\r\n    // that many milliseconds (or scheduler-specified unit size) in the future.\r\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\r\n\r\n    if (due < 0) {\r\n      // Ensure we don't schedule in the future.\r\n      due = 0;\r\n    }\r\n\r\n    // The incrementing value we emit.\r\n    let n = 0;\r\n\r\n    // Start the timer.\r\n    return scheduler.schedule(function () {\r\n      if (!subscriber.closed) {\r\n        // Emit the next value and increment.\r\n        subscriber.next(n++);\r\n\r\n        if (0 <= intervalDuration) {\r\n          // If we have a interval after the initial timer,\r\n          // reschedule with the period.\r\n          this.schedule(undefined, intervalDuration);\r\n        } else {\r\n          // We didn't have an interval. So just complete.\r\n          subscriber.complete();\r\n        }\r\n      }\r\n    }, due);\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { asyncScheduler } from '../scheduler/async';\r\nimport { SchedulerLike } from '../types';\r\nimport { timer } from './timer';\r\n\r\n/**\r\n * Creates an Observable that emits sequential numbers every specified\r\n * interval of time, on a specified {@link SchedulerLike}.\r\n *\r\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\r\n *\r\n * ![](interval.png)\r\n *\r\n * `interval` returns an Observable that emits an infinite sequence of\r\n * ascending integers, with a constant interval of time of your choosing\r\n * between those emissions. The first emission is not sent immediately, but\r\n * only after the first period has passed. By default, this operator uses the\r\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\r\n * {@link SchedulerLike} to it.\r\n *\r\n * ## Example\r\n *\r\n * Emits ascending numbers, one every second (1000ms) up to the number 3\r\n *\r\n * ```ts\r\n * import { interval, take } from 'rxjs';\r\n *\r\n * const numbers = interval(1000);\r\n *\r\n * const takeFourNumbers = numbers.pipe(take(4));\r\n *\r\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\r\n *\r\n * // Logs:\r\n * // Next: 0\r\n * // Next: 1\r\n * // Next: 2\r\n * // Next: 3\r\n * ```\r\n *\r\n * @see {@link timer}\r\n * @see {@link delay}\r\n *\r\n * @param {number} [period=0] The interval size in milliseconds (by default)\r\n * or the time unit determined by the scheduler's clock.\r\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\r\n * the emission of values, and providing a notion of \"time\".\r\n * @return {Observable} An Observable that emits a sequential number each time\r\n * interval.\r\n */\r\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\r\n  if (period < 0) {\r\n    // We cannot schedule an interval in the past.\r\n    period = 0;\r\n  }\r\n\r\n  return timer(period, period, scheduler);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\r\nimport { mergeAll } from '../operators/mergeAll';\r\nimport { innerFrom } from './innerFrom';\r\nimport { EMPTY } from './empty';\r\nimport { popNumber, popScheduler } from '../util/args';\r\nimport { from } from './from';\r\n\r\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\r\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function merge<A extends readonly unknown[]>(\r\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\r\n): Observable<A[number]>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function merge<A extends readonly unknown[]>(\r\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\r\n): Observable<A[number]>;\r\n\r\n/**\r\n * Creates an output Observable which concurrently emits all values from every\r\n * given input Observable.\r\n *\r\n * <span class=\"informal\">Flattens multiple Observables together by blending\r\n * their values into one Observable.</span>\r\n *\r\n * ![](merge.png)\r\n *\r\n * `merge` subscribes to each given input Observable (as arguments), and simply\r\n * forwards (without doing any transformation) all the values from all the input\r\n * Observables to the output Observable. The output Observable only completes\r\n * once all input Observables have completed. Any error delivered by an input\r\n * Observable will be immediately emitted on the output Observable.\r\n *\r\n * ## Examples\r\n *\r\n * Merge together two Observables: 1s interval and clicks\r\n *\r\n * ```ts\r\n * import { merge, fromEvent, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const timer = interval(1000);\r\n * const clicksOrTimer = merge(clicks, timer);\r\n * clicksOrTimer.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // timer will emit ascending values, one every second(1000ms) to console\r\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\r\n * // Since the two streams are merged you see these happening\r\n * // as they occur.\r\n * ```\r\n *\r\n * Merge together 3 Observables, but run only 2 concurrently\r\n *\r\n * ```ts\r\n * import { interval, take, merge } from 'rxjs';\r\n *\r\n * const timer1 = interval(1000).pipe(take(10));\r\n * const timer2 = interval(2000).pipe(take(6));\r\n * const timer3 = interval(500).pipe(take(10));\r\n *\r\n * const concurrent = 2; // the argument\r\n * const merged = merge(timer1, timer2, timer3, concurrent);\r\n * merged.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // - First timer1 and timer2 will run concurrently\r\n * // - timer1 will emit a value every 1000ms for 10 iterations\r\n * // - timer2 will emit a value every 2000ms for 6 iterations\r\n * // - after timer1 hits its max iteration, timer2 will\r\n * //   continue, and timer3 will start to run concurrently with timer2\r\n * // - when timer2 hits its max iteration it terminates, and\r\n * //   timer3 will continue to emit a value every 500ms until it is complete\r\n * ```\r\n *\r\n * @see {@link mergeAll}\r\n * @see {@link mergeMap}\r\n * @see {@link mergeMapTo}\r\n * @see {@link mergeScan}\r\n *\r\n * @param {...ObservableInput} observables Input Observables to merge together.\r\n * @param {number} [concurrent=Infinity] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\r\n * concurrency of input Observables.\r\n * @return {Observable} an Observable that emits items that are the result of\r\n * every input Observable.\r\n */\r\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\r\n  const scheduler = popScheduler(args);\r\n  const concurrent = popNumber(args, Infinity);\r\n  const sources = args as ObservableInput<unknown>[];\r\n  return !sources.length\r\n    ? // No source provided\r\n      EMPTY\r\n    : sources.length === 1\r\n    ? // One source? Just return it.\r\n      innerFrom(sources[0])\r\n    : // Merge all sources\r\n      mergeAll(concurrent)(from(sources, scheduler));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * An Observable that emits no items to the Observer and never completes.\r\n *\r\n * ![](never.png)\r\n *\r\n * A simple Observable that emits neither values nor errors nor the completion\r\n * notification. It can be used for testing purposes or for composing with other\r\n * Observables. Please note that by never emitting a complete notification, this\r\n * Observable keeps the subscription from being disposed automatically.\r\n * Subscriptions need to be manually disposed.\r\n *\r\n * ##  Example\r\n *\r\n * Emit the number 7, then never emit anything else (not even complete)\r\n *\r\n * ```ts\r\n * import { NEVER, startWith } from 'rxjs';\r\n *\r\n * const info = () => console.log('Will not be called');\r\n *\r\n * const result = NEVER.pipe(startWith(7));\r\n * result.subscribe({\r\n *   next: x => console.log(x),\r\n *   error: info,\r\n *   complete: info\r\n * });\r\n * ```\r\n *\r\n * @see {@link Observable}\r\n * @see {@link EMPTY}\r\n * @see {@link of}\r\n * @see {@link throwError}\r\n */\r\nexport const NEVER = new Observable<never>(noop);\r\n\r\n/**\r\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\r\n */\r\nexport function never() {\r\n  return NEVER;\r\n}\r\n", "const { isArray } = Array;\r\n\r\n/**\r\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\r\n * as a single argument.\r\n */\r\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\r\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInputTuple } from '../types';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\nimport { innerFrom } from './innerFrom';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\r\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\r\n\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\r\n * that was passed.\r\n *\r\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\r\n *\r\n * ![](onErrorResumeNext.png)\r\n *\r\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\r\n * If the source it's subscribed to emits an error or completes, it will move to the next source\r\n * without error.\r\n *\r\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\r\n *\r\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\r\n * sources emits an error.\r\n *\r\n * Note that there is no way to handle any errors thrown by sources via the result of\r\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\r\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\r\n *\r\n * ## Example\r\n *\r\n * Subscribe to the next Observable after map fails\r\n *\r\n * ```ts\r\n * import { onErrorResumeNext, of, map } from 'rxjs';\r\n *\r\n * onErrorResumeNext(\r\n *   of(1, 2, 3, 0).pipe(\r\n *     map(x => {\r\n *       if (x === 0) {\r\n *         throw Error();\r\n *       }\r\n *       return 10 / x;\r\n *     })\r\n *   ),\r\n *   of(1, 2, 3)\r\n * )\r\n * .subscribe({\r\n *   next: value => console.log(value),\r\n *   error: err => console.log(err),     // Will never be called.\r\n *   complete: () => console.log('done')\r\n * });\r\n *\r\n * // Logs:\r\n * // 10\r\n * // 5\r\n * // 3.3333333333333335\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 'done'\r\n * ```\r\n *\r\n * @see {@link concat}\r\n * @see {@link catchError}\r\n *\r\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\r\n * @return {Observable} An Observable that concatenates all sources, one after the other,\r\n * ignoring all errors, such that any error causes it to move on to the next source.\r\n */\r\nexport function onErrorResumeNext<A extends readonly unknown[]>(\r\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\r\n): Observable<A[number]> {\r\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\r\n\r\n  return new Observable((subscriber) => {\r\n    let sourceIndex = 0;\r\n    const subscribeNext = () => {\r\n      if (sourceIndex < nextSources.length) {\r\n        let nextSource: Observable<A[number]>;\r\n        try {\r\n          nextSource = innerFrom(nextSources[sourceIndex++]);\r\n        } catch (err) {\r\n          subscribeNext();\r\n          return;\r\n        }\r\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\r\n        nextSource.subscribe(innerSubscriber);\r\n        innerSubscriber.add(subscribeNext);\r\n      } else {\r\n        subscriber.complete();\r\n      }\r\n    };\r\n    subscribeNext();\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { SchedulerLike } from '../types';\r\nimport { from } from './from';\r\n\r\n/**\r\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\r\n */\r\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\r\n/**\r\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\r\n */\r\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\r\n/**\r\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\r\n */\r\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\r\n/**\r\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\r\n */\r\nexport function pairs(\r\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\r\n  scheduler?: SchedulerLike\r\n): Observable<[never, never]>;\r\n\r\n/**\r\n * Convert an object into an Observable of `[key, value]` pairs.\r\n *\r\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\r\n *\r\n * ![](pairs.png)\r\n *\r\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\r\n * emitted array has exactly two elements - the first is a key from the object\r\n * and the second is a value corresponding to that key. Keys are extracted from\r\n * an object via `Object.keys` function, which means that they will be only\r\n * enumerable keys that are present on an object directly - not ones inherited\r\n * via prototype chain.\r\n *\r\n * By default, these arrays are emitted synchronously. To change that you can\r\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\r\n *\r\n * ## Example\r\n *\r\n * Converts an object to an Observable\r\n *\r\n * ```ts\r\n * import { pairs } from 'rxjs';\r\n *\r\n * const obj = {\r\n *   foo: 42,\r\n *   bar: 56,\r\n *   baz: 78\r\n * };\r\n *\r\n * pairs(obj).subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // ['foo', 42]\r\n * // ['bar', 56]\r\n * // ['baz', 78]\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * ### Object.entries required\r\n *\r\n * In IE, you will need to polyfill `Object.entries` in order to use this.\r\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\r\n *\r\n * @param {Object} obj The object to inspect and turn into an\r\n * Observable sequence.\r\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\r\n * when resulting Observable will emit values.\r\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\r\n * [key, value] pairs from the object.\r\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\r\n */\r\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\r\n  return from(Object.entries(obj), scheduler as any);\r\n}\r\n", "export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\r\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \r\n}", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\r\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\r\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\r\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Filter items emitted by the source Observable by only emitting those that\r\n * satisfy a specified predicate.\r\n *\r\n * <span class=\"informal\">Like\r\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\r\n * it only emits a value from the source if it passes a criterion function.</span>\r\n *\r\n * ![](filter.png)\r\n *\r\n * Similar to the well-known `Array.prototype.filter` method, this operator\r\n * takes values from the source Observable, passes them through a `predicate`\r\n * function and only emits those values that yielded `true`.\r\n *\r\n * ## Example\r\n *\r\n * Emit only click events whose target was a DIV element\r\n *\r\n * ```ts\r\n * import { fromEvent, filter } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n * clicksOnDivs.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilChanged}\r\n * @see {@link distinctUntilKeyChanged}\r\n * @see {@link ignoreElements}\r\n * @see {@link partition}\r\n * @see {@link skip}\r\n *\r\n * @param predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted, if `false` the value is not passed to the output\r\n * Observable. The `index` parameter is the number `i` for the i-th source\r\n * emission that has happened since the subscription, starting from the number\r\n * `0`.\r\n * @param thisArg An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable that satisfy the specified `predicate`.\r\n */\r\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    // An index passed to our predicate function on each call.\r\n    let index = 0;\r\n\r\n    // Subscribe to the source, all errors and completions are\r\n    // forwarded to the consumer.\r\n    source.subscribe(\r\n      // Call the predicate with the appropriate `this` context,\r\n      // if the predicate returns `true`, then send the value\r\n      // to the consumer.\r\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\r\n    );\r\n  });\r\n}\r\n", "import { not } from '../util/not';\r\nimport { filter } from '../operators/filter';\r\nimport { ObservableInput } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { innerFrom } from './innerFrom';\r\n\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function partition<T, U extends T, A>(\r\n  source: ObservableInput<T>,\r\n  predicate: (this: A, value: T, index: number) => value is U,\r\n  thisArg: A\r\n): [Observable<U>, Observable<Exclude<T, U>>];\r\nexport function partition<T, U extends T>(\r\n  source: ObservableInput<T>,\r\n  predicate: (value: T, index: number) => value is U\r\n): [Observable<U>, Observable<Exclude<T, U>>];\r\n\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function partition<T, A>(\r\n  source: ObservableInput<T>,\r\n  predicate: (this: A, value: T, index: number) => boolean,\r\n  thisArg: A\r\n): [Observable<T>, Observable<T>];\r\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\r\n\r\n/**\r\n * Splits the source Observable into two, one with values that satisfy a\r\n * predicate, and another with values that don't satisfy the predicate.\r\n *\r\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\r\n * one like the output of {@link filter}, and the other with values that did not\r\n * pass the condition.</span>\r\n *\r\n * ![](partition.png)\r\n *\r\n * `partition` outputs an array with two Observables that partition the values\r\n * from the source Observable through the given `predicate` function. The first\r\n * Observable in that array emits source values for which the predicate argument\r\n * returns true. The second Observable emits source values for which the\r\n * predicate returns false. The first behaves like {@link filter} and the second\r\n * behaves like {@link filter} with the predicate negated.\r\n *\r\n * ## Example\r\n *\r\n * Partition a set of numbers into odds and evens observables\r\n *\r\n * ```ts\r\n * import { of, partition } from 'rxjs';\r\n *\r\n * const observableValues = of(1, 2, 3, 4, 5, 6);\r\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\r\n *\r\n * odds$.subscribe(x => console.log('odds', x));\r\n * evens$.subscribe(x => console.log('evens', x));\r\n *\r\n * // Logs:\r\n * // odds 1\r\n * // odds 3\r\n * // odds 5\r\n * // evens 2\r\n * // evens 4\r\n * // evens 6\r\n * ```\r\n *\r\n * @see {@link filter}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted on the first Observable in the returned array, if\r\n * `false` the value is emitted on the second Observable in the array. The\r\n * `index` parameter is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\r\n * with values that passed the predicate, and another with values that did not\r\n * pass the predicate.\r\n */\r\nexport function partition<T>(\r\n  source: ObservableInput<T>,\r\n  predicate: (this: any, value: T, index: number) => boolean,\r\n  thisArg?: any\r\n): [Observable<T>, Observable<T>] {\r\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\r\n    Observable<T>,\r\n    Observable<T>\r\n  ];\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { innerFrom } from './innerFrom';\r\nimport { Subscription } from '../Subscription';\r\nimport { ObservableInput, ObservableInputTuple } from '../types';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { Subscriber } from '../Subscriber';\r\n\r\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\r\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\r\n\r\n/**\r\n * Returns an observable that mirrors the first source observable to emit an item.\r\n *\r\n * ![](race.png)\r\n *\r\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\r\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\r\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\r\n * source observable.\r\n *\r\n * If one of the used source observable throws an errors before a first notification\r\n * the race operator will also throw an error, no matter if another source observable\r\n * could potentially win the race.\r\n *\r\n * `race` can be useful for selecting the response from the fastest network connection for\r\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\r\n * input.\r\n *\r\n * ## Example\r\n *\r\n * Subscribes to the observable that was the first to start emitting.\r\n *\r\n * ```ts\r\n * import { interval, map, race } from 'rxjs';\r\n *\r\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\r\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\r\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\r\n *\r\n * race(obs1, obs2, obs3)\r\n *   .subscribe(winner => console.log(winner));\r\n *\r\n * // Outputs\r\n * // a series of 'fast one'\r\n * ```\r\n *\r\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\r\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\r\n */\r\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\r\n  sources = argsOrArgArray(sources);\r\n  // If only one source was passed, just return it. Otherwise return the race.\r\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\r\n}\r\n\r\n/**\r\n * An observable initializer function for both the static version and the\r\n * operator version of race.\r\n * @param sources The sources to race\r\n */\r\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\r\n  return (subscriber: Subscriber<T>) => {\r\n    let subscriptions: Subscription[] = [];\r\n\r\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\r\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\r\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\r\n    // stop before it subscribes to any more.\r\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\r\n      subscriptions.push(\r\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\r\n          createOperatorSubscriber(subscriber, (value) => {\r\n            if (subscriptions) {\r\n              // We're still racing, but we won! So unsubscribe\r\n              // all other subscriptions that we have, except this one.\r\n              for (let s = 0; s < subscriptions.length; s++) {\r\n                s !== i && subscriptions[s].unsubscribe();\r\n              }\r\n              subscriptions = null!;\r\n            }\r\n            subscriber.next(value);\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n", "import { SchedulerLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { EMPTY } from './empty';\r\n\r\nexport function range(start: number, count?: number): Observable<number>;\r\n\r\n/**\r\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\r\n */\r\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\r\n\r\n/**\r\n * Creates an Observable that emits a sequence of numbers within a specified\r\n * range.\r\n *\r\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\r\n *\r\n * ![](range.png)\r\n *\r\n * `range` operator emits a range of sequential integers, in order, where you\r\n * select the `start` of the range and its `length`. By default, uses no\r\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\r\n * an optional {@link SchedulerLike} to regulate those deliveries.\r\n *\r\n * ## Example\r\n *\r\n * Produce a range of numbers\r\n *\r\n * ```ts\r\n * import { range } from 'rxjs';\r\n *\r\n * const numbers = range(1, 3);\r\n *\r\n * numbers.subscribe({\r\n *   next: value => console.log(value),\r\n *   complete: () => console.log('Complete!')\r\n * });\r\n *\r\n * // Logs:\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 'Complete!'\r\n * ```\r\n *\r\n * @see {@link timer}\r\n * @see {@link interval}\r\n *\r\n * @param {number} [start=0] The value of the first integer in the sequence.\r\n * @param {number} count The number of sequential integers to generate.\r\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\r\n * the emissions of the notifications.\r\n * @return {Observable} An Observable of numbers that emits a finite range of\r\n * sequential integers.\r\n */\r\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\r\n  if (count == null) {\r\n    // If one argument was passed, it's the count, not the start.\r\n    count = start;\r\n    start = 0;\r\n  }\r\n\r\n  if (count <= 0) {\r\n    // No count? We're going nowhere. Return EMPTY.\r\n    return EMPTY;\r\n  }\r\n\r\n  // Where the range should stop.\r\n  const end = count + start;\r\n\r\n  return new Observable(\r\n    scheduler\r\n      ? // The deprecated scheduled path.\r\n        (subscriber) => {\r\n          let n = start;\r\n          return scheduler.schedule(function () {\r\n            if (n < end) {\r\n              subscriber.next(n++);\r\n              this.schedule();\r\n            } else {\r\n              subscriber.complete();\r\n            }\r\n          });\r\n        }\r\n      : // Standard synchronous range.\r\n        (subscriber) => {\r\n          let n = start;\r\n          while (n < end && !subscriber.closed) {\r\n            subscriber.next(n++);\r\n          }\r\n          subscriber.complete();\r\n        }\r\n  );\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\r\nimport { innerFrom } from './innerFrom';\r\nimport { EMPTY } from './empty';\r\n\r\n/**\r\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\r\n *\r\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\r\n *\r\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\r\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\r\n * that object and should return an Observable. That Observable can use resource object during its execution.\r\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\r\n * resource object will be shared in any way between subscriptions.\r\n *\r\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\r\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\r\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\r\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\r\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\r\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\r\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\r\n *\r\n * @see {@link defer}\r\n *\r\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\r\n * that implements `unsubscribe` method.\r\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\r\n * creates an Observable, that can use injected resource object.\r\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\r\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\r\n */\r\nexport function using<T extends ObservableInput<any>>(\r\n  resourceFactory: () => Unsubscribable | void,\r\n  observableFactory: (resource: Unsubscribable | void) => T | void\r\n): Observable<ObservedValueOf<T>> {\r\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\r\n    const resource = resourceFactory();\r\n    const result = observableFactory(resource);\r\n    const source = result ? innerFrom(result) : EMPTY;\r\n    source.subscribe(subscriber);\r\n    return () => {\r\n      // NOTE: Optional chaining did not work here.\r\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\r\n      if (resource) {\r\n        resource.unsubscribe();\r\n      }\r\n    };\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInputTuple } from '../types';\r\nimport { innerFrom } from './innerFrom';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { EMPTY } from './empty';\r\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\r\nimport { popResultSelector } from '../util/args';\r\n\r\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\r\nexport function zip<A extends readonly unknown[], R>(\r\n  sources: [...ObservableInputTuple<A>],\r\n  resultSelector: (...values: A) => R\r\n): Observable<R>;\r\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\r\nexport function zip<A extends readonly unknown[], R>(\r\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\r\n): Observable<R>;\r\n\r\n/**\r\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\r\n * of its input Observables.\r\n *\r\n * If the last parameter is a function, this function is used to compute the created value from the input values.\r\n * Otherwise, an array of the input values is returned.\r\n *\r\n * ## Example\r\n *\r\n * Combine age and name from different sources\r\n *\r\n * ```ts\r\n * import { of, zip, map } from 'rxjs';\r\n *\r\n * const age$ = of(27, 25, 29);\r\n * const name$ = of('Foo', 'Bar', 'Beer');\r\n * const isDev$ = of(true, true, false);\r\n *\r\n * zip(age$, name$, isDev$).pipe(\r\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\r\n * )\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // { age: 27, name: 'Foo', isDev: true }\r\n * // { age: 25, name: 'Bar', isDev: true }\r\n * // { age: 29, name: 'Beer', isDev: false }\r\n * ```\r\n *\r\n * @param sources\r\n * @return {Observable<R>}\r\n */\r\nexport function zip(...args: unknown[]): Observable<unknown> {\r\n  const resultSelector = popResultSelector(args);\r\n\r\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\r\n\r\n  return sources.length\r\n    ? new Observable<unknown[]>((subscriber) => {\r\n        // A collection of buffers of values from each source.\r\n        // Keyed by the same index with which the sources were passed in.\r\n        let buffers: unknown[][] = sources.map(() => []);\r\n\r\n        // An array of flags of whether or not the sources have completed.\r\n        // This is used to check to see if we should complete the result.\r\n        // Keyed by the same index with which the sources were passed in.\r\n        let completed = sources.map(() => false);\r\n\r\n        // When everything is done, release the arrays above.\r\n        subscriber.add(() => {\r\n          buffers = completed = null!;\r\n        });\r\n\r\n        // Loop over our sources and subscribe to each one. The index `i` is\r\n        // especially important here, because we use it in closures below to\r\n        // access the related buffers and completion properties\r\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\r\n          innerFrom(sources[sourceIndex]).subscribe(\r\n            createOperatorSubscriber(\r\n              subscriber,\r\n              (value) => {\r\n                buffers[sourceIndex].push(value);\r\n                // if every buffer has at least one value in it, then we\r\n                // can shift out the oldest value from each buffer and emit\r\n                // them as an array.\r\n                if (buffers.every((buffer) => buffer.length)) {\r\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\r\n                  // Emit the array. If theres' a result selector, use that.\r\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\r\n                  // If any one of the sources is both complete and has an empty buffer\r\n                  // then we complete the result. This is because we cannot possibly have\r\n                  // any more values to zip together.\r\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\r\n                    subscriber.complete();\r\n                  }\r\n                }\r\n              },\r\n              () => {\r\n                // This source completed. Mark it as complete so we can check it later\r\n                // if we have to.\r\n                completed[sourceIndex] = true;\r\n                // But, if this complete source has nothing in its buffer, then we\r\n                // can complete the result, because we can't possibly have any more\r\n                // values from this to zip together with the other values.\r\n                !buffers[sourceIndex].length && subscriber.complete();\r\n              }\r\n            )\r\n          );\r\n        }\r\n\r\n        // When everything is done, release the arrays above.\r\n        return () => {\r\n          buffers = completed = null!;\r\n        };\r\n      })\r\n    : EMPTY;\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=types.js.map", "import { Subscriber } from '../Subscriber';\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\n\r\nimport { operate } from '../util/lift';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Ignores source values for a duration determined by another Observable, then\r\n * emits the most recent value from the source Observable, then repeats this\r\n * process.\r\n *\r\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\r\n * duration is determined by a second Observable.</span>\r\n *\r\n * ![](audit.svg)\r\n *\r\n * `audit` is similar to `throttle`, but emits the last value from the silenced\r\n * time window, instead of the first value. `audit` emits the most recent value\r\n * from the source Observable on the output Observable as soon as its internal\r\n * timer becomes disabled, and ignores source values while the timer is enabled.\r\n * Initially, the timer is disabled. As soon as the first source value arrives,\r\n * the timer is enabled by calling the `durationSelector` function with the\r\n * source value, which returns the \"duration\" Observable. When the duration\r\n * Observable emits a value, the timer is disabled, then the most\r\n * recent source value is emitted on the output Observable, and this process\r\n * repeats for the next source value.\r\n *\r\n * ## Example\r\n *\r\n * Emit clicks at a rate of at most one click per second\r\n *\r\n * ```ts\r\n * import { fromEvent, audit, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(audit(ev => interval(1000)));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounce}\r\n * @see {@link delayWhen}\r\n * @see {@link sample}\r\n * @see {@link throttle}\r\n *\r\n * @param durationSelector A function\r\n * that receives a value from the source Observable, for computing the silencing\r\n * duration, returned as an Observable or a Promise.\r\n * @return A function that returns an Observable that performs rate-limiting of\r\n * emissions from the source Observable.\r\n */\r\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    let lastValue: T | null = null;\r\n    let durationSubscriber: Subscriber<any> | null = null;\r\n    let isComplete = false;\r\n\r\n    const endDuration = () => {\r\n      durationSubscriber?.unsubscribe();\r\n      durationSubscriber = null;\r\n      if (hasValue) {\r\n        hasValue = false;\r\n        const value = lastValue!;\r\n        lastValue = null;\r\n        subscriber.next(value);\r\n      }\r\n      isComplete && subscriber.complete();\r\n    };\r\n\r\n    const cleanupDuration = () => {\r\n      durationSubscriber = null;\r\n      isComplete && subscriber.complete();\r\n    };\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          hasValue = true;\r\n          lastValue = value;\r\n          if (!durationSubscriber) {\r\n            innerFrom(durationSelector(value)).subscribe(\r\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\r\n            );\r\n          }\r\n        },\r\n        () => {\r\n          isComplete = true;\r\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { audit } from './audit';\r\nimport { timer } from '../observable/timer';\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\n\r\n/**\r\n * Ignores source values for `duration` milliseconds, then emits the most recent\r\n * value from the source Observable, then repeats this process.\r\n *\r\n * <span class=\"informal\">When it sees a source value, it ignores that plus\r\n * the next ones for `duration` milliseconds, and then it emits the most recent\r\n * value from the source.</span>\r\n *\r\n * ![](auditTime.png)\r\n *\r\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\r\n * silenced time window, instead of the first value. `auditTime` emits the most\r\n * recent value from the source Observable on the output Observable as soon as\r\n * its internal timer becomes disabled, and ignores source values while the\r\n * timer is enabled. Initially, the timer is disabled. As soon as the first\r\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\r\n * the time unit determined internally by the optional `scheduler`) has passed,\r\n * the timer is disabled, then the most recent source value is emitted on the\r\n * output Observable, and this process repeats for the next source value.\r\n * Optionally takes a {@link SchedulerLike} for managing timers.\r\n *\r\n * ## Example\r\n *\r\n * Emit clicks at a rate of at most one click per second\r\n *\r\n * ```ts\r\n * import { fromEvent, auditTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(auditTime(1000));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sampleTime}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {number} duration Time to wait before emitting the most recent source\r\n * value, measured in milliseconds or the time unit determined internally\r\n * by the optional `scheduler`.\r\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\r\n * managing the timers that handle the rate-limiting behavior.\r\n * @return A function that returns an Observable that performs rate-limiting of\r\n * emissions from the source Observable.\r\n */\r\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\r\n  return audit(() => timer(duration, scheduler));\r\n}\r\n", "import { OperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { noop } from '../util/noop';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Buffers the source Observable values until `closingNotifier` emits.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * that array only when another Observable emits.</span>\r\n *\r\n * ![](buffer.png)\r\n *\r\n * Buffers the incoming Observable values until the given `closingNotifier`\r\n * `ObservableInput` (that internally gets converted to an Observable)\r\n * emits a value, at which point it emits the buffer on the output\r\n * Observable and starts a new buffer internally, awaiting the next time\r\n * `closingNotifier` emits.\r\n *\r\n * ## Example\r\n *\r\n * On every click, emit array of most recent interval events\r\n *\r\n * ```ts\r\n * import { fromEvent, interval, buffer } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const intervalEvents = interval(1000);\r\n * const buffered = intervalEvents.pipe(buffer(clicks));\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link bufferCount}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link window}\r\n *\r\n * @param closingNotifier An `ObservableInput` that signals the\r\n * buffer to be emitted on the output Observable.\r\n * @return A function that returns an Observable of buffers, which are arrays\r\n * of values.\r\n */\r\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\r\n  return operate((source, subscriber) => {\r\n    // The current buffered values.\r\n    let currentBuffer: T[] = [];\r\n\r\n    // Subscribe to our source.\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => currentBuffer.push(value),\r\n        () => {\r\n          subscriber.next(currentBuffer);\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n\r\n    // Subscribe to the closing notifier.\r\n    innerFrom(closingNotifier).subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        () => {\r\n          // Start a new buffer and emit the previous one.\r\n          const b = currentBuffer;\r\n          currentBuffer = [];\r\n          subscriber.next(b);\r\n        },\r\n        noop\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      // Ensure buffered values are released on finalization.\r\n      currentBuffer = null!;\r\n    };\r\n  });\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { arrRemove } from '../util/arrRemove';\r\n\r\n/**\r\n * Buffers the source Observable values until the size hits the maximum\r\n * `bufferSize` given.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * that array only when its size reaches `bufferSize`.</span>\r\n *\r\n * ![](bufferCount.png)\r\n *\r\n * Buffers a number of values from the source Observable by `bufferSize` then\r\n * emits the buffer and clears it, and starts a new buffer each\r\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\r\n * `null`, then new buffers are started immediately at the start of the source\r\n * and when each buffer closes and is emitted.\r\n *\r\n * ## Examples\r\n *\r\n * Emit the last two click events as an array\r\n *\r\n * ```ts\r\n * import { fromEvent, bufferCount } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const buffered = clicks.pipe(bufferCount(2));\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * On every click, emit the last two click events as an array\r\n *\r\n * ```ts\r\n * import { fromEvent, bufferCount } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const buffered = clicks.pipe(bufferCount(2, 1));\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link pairwise}\r\n * @see {@link windowCount}\r\n *\r\n * @param {number} bufferSize The maximum size of the buffer emitted.\r\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\r\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\r\n * on every other value from the source. A new buffer is started at the\r\n * beginning of the source by default.\r\n * @return A function that returns an Observable of arrays of buffered values.\r\n */\r\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\r\n  // If no `startBufferEvery` value was supplied, then we're\r\n  // opening and closing on the bufferSize itself.\r\n  startBufferEvery = startBufferEvery ?? bufferSize;\r\n\r\n  return operate((source, subscriber) => {\r\n    let buffers: T[][] = [];\r\n    let count = 0;\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          let toEmit: T[][] | null = null;\r\n\r\n          // Check to see if we need to start a buffer.\r\n          // This will start one at the first value, and then\r\n          // a new one every N after that.\r\n          if (count++ % startBufferEvery! === 0) {\r\n            buffers.push([]);\r\n          }\r\n\r\n          // Push our value into our active buffers.\r\n          for (const buffer of buffers) {\r\n            buffer.push(value);\r\n            // Check to see if we're over the bufferSize\r\n            // if we are, record it so we can emit it later.\r\n            // If we emitted it now and removed it, it would\r\n            // mutate the `buffers` array while we're looping\r\n            // over it.\r\n            if (bufferSize <= buffer.length) {\r\n              toEmit = toEmit ?? [];\r\n              toEmit.push(buffer);\r\n            }\r\n          }\r\n\r\n          if (toEmit) {\r\n            // We have found some buffers that are over the\r\n            // `bufferSize`. Emit them, and remove them from our\r\n            // buffers list.\r\n            for (const buffer of toEmit) {\r\n              arrRemove(buffers, buffer);\r\n              subscriber.next(buffer);\r\n            }\r\n          }\r\n        },\r\n        () => {\r\n          // When the source completes, emit all of our\r\n          // active buffers.\r\n          for (const buffer of buffers) {\r\n            subscriber.next(buffer);\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        // Pass all errors through to consumer.\r\n        undefined,\r\n        () => {\r\n          // Clean up our memory when we finalize\r\n          buffers = null!;\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { Subscription } from '../Subscription';\r\nimport { OperatorFunction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { arrRemove } from '../util/arrRemove';\r\nimport { asyncScheduler } from '../scheduler/async';\r\nimport { popScheduler } from '../util/args';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\r\nexport function bufferTime<T>(\r\n  bufferTimeSpan: number,\r\n  bufferCreationInterval: number | null | undefined,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, T[]>;\r\nexport function bufferTime<T>(\r\n  bufferTimeSpan: number,\r\n  bufferCreationInterval: number | null | undefined,\r\n  maxBufferSize: number,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, T[]>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Buffers the source Observable values for a specific time period.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * those arrays periodically in time.</span>\r\n *\r\n * ![](bufferTime.png)\r\n *\r\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\r\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\r\n * resets the buffer every `bufferTimeSpan` milliseconds. If\r\n * `bufferCreationInterval` is given, this operator opens the buffer every\r\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\r\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\r\n * `maxBufferSize` is specified, the buffer will be closed either after\r\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\r\n *\r\n * ## Examples\r\n *\r\n * Every second, emit an array of the recent click events\r\n *\r\n * ```ts\r\n * import { fromEvent, bufferTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const buffered = clicks.pipe(bufferTime(1000));\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Every 5 seconds, emit the click events from the next 2 seconds\r\n *\r\n * ```ts\r\n * import { fromEvent, bufferTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link windowTime}\r\n *\r\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\r\n * @param {number} [bufferCreationInterval] The interval at which to start new\r\n * buffers.\r\n * @param {number} [maxBufferSize] The maximum buffer size.\r\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\r\n * intervals that determine buffer boundaries.\r\n * @return A function that returns an Observable of arrays of buffered values.\r\n */\r\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\r\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\r\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\r\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\r\n\r\n  return operate((source, subscriber) => {\r\n    // The active buffers, their related subscriptions, and removal functions.\r\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\r\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\r\n    // this is only really used for when *just* the buffer time span is passed.\r\n    let restartOnEmit = false;\r\n\r\n    /**\r\n     * Does the work of emitting the buffer from the record, ensuring that the\r\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\r\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\r\n     * after the emit.\r\n     */\r\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\r\n      const { buffer, subs } = record;\r\n      subs.unsubscribe();\r\n      arrRemove(bufferRecords, record);\r\n      subscriber.next(buffer);\r\n      restartOnEmit && startBuffer();\r\n    };\r\n\r\n    /**\r\n     * Called every time we start a new buffer. This does\r\n     * the work of scheduling a job at the requested bufferTimeSpan\r\n     * that will emit the buffer (if it's not unsubscribed before then).\r\n     */\r\n    const startBuffer = () => {\r\n      if (bufferRecords) {\r\n        const subs = new Subscription();\r\n        subscriber.add(subs);\r\n        const buffer: T[] = [];\r\n        const record = {\r\n          buffer,\r\n          subs,\r\n        };\r\n        bufferRecords.push(record);\r\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\r\n      }\r\n    };\r\n\r\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\r\n      // The user passed both a bufferTimeSpan (required), and a creation interval\r\n      // That means we need to start new buffers on the interval, and those buffers need\r\n      // to wait the required time span before emitting.\r\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\r\n    } else {\r\n      restartOnEmit = true;\r\n    }\r\n\r\n    startBuffer();\r\n\r\n    const bufferTimeSubscriber = createOperatorSubscriber(\r\n      subscriber,\r\n      (value: T) => {\r\n        // Copy the records, so if we need to remove one we\r\n        // don't mutate the array. It's hard, but not impossible to\r\n        // set up a buffer time that could mutate the array and\r\n        // cause issues here.\r\n        const recordsCopy = bufferRecords!.slice();\r\n        for (const record of recordsCopy) {\r\n          // Loop over all buffers and\r\n          const { buffer } = record;\r\n          buffer.push(value);\r\n          // If the buffer is over the max size, we need to emit it.\r\n          maxBufferSize <= buffer.length && emit(record);\r\n        }\r\n      },\r\n      () => {\r\n        // The source completed, emit all of the active\r\n        // buffers we have before we complete.\r\n        while (bufferRecords?.length) {\r\n          subscriber.next(bufferRecords.shift()!.buffer);\r\n        }\r\n        bufferTimeSubscriber?.unsubscribe();\r\n        subscriber.complete();\r\n        subscriber.unsubscribe();\r\n      },\r\n      // Pass all errors through to consumer.\r\n      undefined,\r\n      // Clean up\r\n      () => (bufferRecords = null)\r\n    );\r\n\r\n    source.subscribe(bufferTimeSubscriber);\r\n  });\r\n}\r\n", "import { Subscription } from '../Subscription';\r\nimport { OperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\nimport { arrRemove } from '../util/arrRemove';\r\n\r\n/**\r\n * Buffers the source Observable values starting from an emission from\r\n * `openings` and ending when the output of `closingSelector` emits.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array. Starts\r\n * collecting only when `opening` emits, and calls the `closingSelector`\r\n * function to get an Observable that tells when to close the buffer.</span>\r\n *\r\n * ![](bufferToggle.png)\r\n *\r\n * Buffers values from the source by opening the buffer via signals from an\r\n * Observable provided to `openings`, and closing and sending the buffers when\r\n * a Subscribable or Promise returned by the `closingSelector` function emits.\r\n *\r\n * ## Example\r\n *\r\n * Every other second, emit the click events from the next 500ms\r\n *\r\n * ```ts\r\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const openings = interval(1000);\r\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\r\n *   i % 2 ? interval(500) : EMPTY\r\n * ));\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferWhen}\r\n * @see {@link windowToggle}\r\n *\r\n * @param openings A Subscribable or Promise of notifications to start new\r\n * buffers.\r\n * @param closingSelector A function that takes\r\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\r\n * which, when it emits, signals that the associated buffer should be emitted\r\n * and cleared.\r\n * @return A function that returns an Observable of arrays of buffered values.\r\n */\r\nexport function bufferToggle<T, O>(\r\n  openings: ObservableInput<O>,\r\n  closingSelector: (value: O) => ObservableInput<any>\r\n): OperatorFunction<T, T[]> {\r\n  return operate((source, subscriber) => {\r\n    const buffers: T[][] = [];\r\n\r\n    // Subscribe to the openings notifier first\r\n    innerFrom(openings).subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (openValue) => {\r\n          const buffer: T[] = [];\r\n          buffers.push(buffer);\r\n          // We use this composite subscription, so that\r\n          // when the closing notifier emits, we can tear it down.\r\n          const closingSubscription = new Subscription();\r\n\r\n          const emitBuffer = () => {\r\n            arrRemove(buffers, buffer);\r\n            subscriber.next(buffer);\r\n            closingSubscription.unsubscribe();\r\n          };\r\n\r\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\r\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\r\n        },\r\n        noop\r\n      )\r\n    );\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          // Value from our source. Add it to all pending buffers.\r\n          for (const buffer of buffers) {\r\n            buffer.push(value);\r\n          }\r\n        },\r\n        () => {\r\n          // Source complete. Emit all pending buffers.\r\n          while (buffers.length > 0) {\r\n            subscriber.next(buffers.shift()!);\r\n          }\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { Subscriber } from '../Subscriber';\r\nimport { ObservableInput, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { noop } from '../util/noop';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Buffers the source Observable values, using a factory function of closing\r\n * Observables to determine when to close, emit, and reset the buffer.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array. When it\r\n * starts collecting values, it calls a function that returns an Observable that\r\n * tells when to close the buffer and restart collecting.</span>\r\n *\r\n * ![](bufferWhen.svg)\r\n *\r\n * Opens a buffer immediately, then closes the buffer when the observable\r\n * returned by calling `closingSelector` function emits a value. When it closes\r\n * the buffer, it immediately opens a new buffer and repeats the process.\r\n *\r\n * ## Example\r\n *\r\n * Emit an array of the last clicks every [1-5] random seconds\r\n *\r\n * ```ts\r\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const buffered = clicks.pipe(\r\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\r\n * );\r\n * buffered.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link windowWhen}\r\n *\r\n * @param {function(): Observable} closingSelector A function that takes no\r\n * arguments and returns an Observable that signals buffer closure.\r\n * @return A function that returns an Observable of arrays of buffered values.\r\n */\r\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\r\n  return operate((source, subscriber) => {\r\n    // The buffer we keep and emit.\r\n    let buffer: T[] | null = null;\r\n    // A reference to the subscriber used to subscribe to\r\n    // the closing notifier. We need to hold this so we can\r\n    // end the subscription after the first notification.\r\n    let closingSubscriber: Subscriber<T> | null = null;\r\n\r\n    // Ends the previous closing notifier subscription, so it\r\n    // terminates after the first emission, then emits\r\n    // the current buffer  if there is one, starts a new buffer, and starts a\r\n    // new closing notifier.\r\n    const openBuffer = () => {\r\n      // Make sure to finalize the closing subscription, we only cared\r\n      // about one notification.\r\n      closingSubscriber?.unsubscribe();\r\n      // emit the buffer if we have one, and start a new buffer.\r\n      const b = buffer;\r\n      buffer = [];\r\n      b && subscriber.next(b);\r\n\r\n      // Get a new closing notifier and subscribe to it.\r\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\r\n    };\r\n\r\n    // Start the first buffer.\r\n    openBuffer();\r\n\r\n    // Subscribe to our source.\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        // Add every new value to the current buffer.\r\n        (value) => buffer?.push(value),\r\n        // When we complete, emit the buffer if we have one,\r\n        // then complete the result.\r\n        () => {\r\n          buffer && subscriber.next(buffer);\r\n          subscriber.complete();\r\n        },\r\n        // Pass all errors through to consumer.\r\n        undefined,\r\n        // Release memory on finalization\r\n        () => (buffer = closingSubscriber = null!)\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\n\r\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { Subscription } from '../Subscription';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { operate } from '../util/lift';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function catchError<T, O extends ObservableInput<any>>(\r\n  selector: (err: any, caught: Observable<T>) => O\r\n): OperatorFunction<T, T | ObservedValueOf<O>>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\r\n *\r\n * <span class=\"informal\">\r\n * It only listens to the error channel and ignores notifications.\r\n * Handles errors from the source observable, and maps them to a new observable.\r\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\r\n * </span>\r\n *\r\n * ![](catch.png)\r\n *\r\n * This operator handles errors, but forwards along all other events to the resulting observable.\r\n * If the source observable terminates with an error, it will map that error to a new observable,\r\n * subscribe to it, and forward all of its events to the resulting observable.\r\n *\r\n * ## Examples\r\n *\r\n * Continue with a different Observable when there's an error\r\n *\r\n * ```ts\r\n * import { of, map, catchError } from 'rxjs';\r\n *\r\n * of(1, 2, 3, 4, 5)\r\n *   .pipe(\r\n *     map(n => {\r\n *       if (n === 4) {\r\n *         throw 'four!';\r\n *       }\r\n *       return n;\r\n *     }),\r\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\r\n *   )\r\n *   .subscribe(x => console.log(x));\r\n *   // 1, 2, 3, I, II, III, IV, V\r\n * ```\r\n *\r\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\r\n *\r\n * ```ts\r\n * import { of, map, catchError, take } from 'rxjs';\r\n *\r\n * of(1, 2, 3, 4, 5)\r\n *   .pipe(\r\n *     map(n => {\r\n *       if (n === 4) {\r\n *         throw 'four!';\r\n *       }\r\n *       return n;\r\n *     }),\r\n *     catchError((err, caught) => caught),\r\n *     take(30)\r\n *   )\r\n *   .subscribe(x => console.log(x));\r\n *   // 1, 2, 3, 1, 2, 3, ...\r\n * ```\r\n *\r\n * Throw a new error when the source Observable throws an error\r\n *\r\n * ```ts\r\n * import { of, map, catchError } from 'rxjs';\r\n *\r\n * of(1, 2, 3, 4, 5)\r\n *   .pipe(\r\n *     map(n => {\r\n *       if (n === 4) {\r\n *         throw 'four!';\r\n *       }\r\n *       return n;\r\n *     }),\r\n *     catchError(err => {\r\n *       throw 'error in source. Details: ' + err;\r\n *     })\r\n *   )\r\n *   .subscribe({\r\n *     next: x => console.log(x),\r\n *     error: err => console.log(err)\r\n *   });\r\n *   // 1, 2, 3, error in source. Details: four!\r\n * ```\r\n *\r\n * @see {@link onErrorResumeNext}\r\n * @see {@link repeat}\r\n * @see {@link repeatWhen}\r\n * @see {@link retry }\r\n * @see {@link retryWhen}\r\n *\r\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\r\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\r\n * is returned by the `selector` will be used to continue the observable chain.\r\n * @return A function that returns an Observable that originates from either\r\n * the source or the Observable returned by the `selector` function.\r\n */\r\nexport function catchError<T, O extends ObservableInput<any>>(\r\n  selector: (err: any, caught: Observable<T>) => O\r\n): OperatorFunction<T, T | ObservedValueOf<O>> {\r\n  return operate((source, subscriber) => {\r\n    let innerSub: Subscription | null = null;\r\n    let syncUnsub = false;\r\n    let handledResult: Observable<ObservedValueOf<O>>;\r\n\r\n    innerSub = source.subscribe(\r\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\r\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\r\n        if (innerSub) {\r\n          innerSub.unsubscribe();\r\n          innerSub = null;\r\n          handledResult.subscribe(subscriber);\r\n        } else {\r\n          // We don't have an innerSub yet, that means the error was synchronous\r\n          // because the subscribe call hasn't returned yet.\r\n          syncUnsub = true;\r\n        }\r\n      })\r\n    );\r\n\r\n    if (syncUnsub) {\r\n      // We have a synchronous error, we need to make sure to\r\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\r\n      // at the right time, and that finalization occurs at the expected\r\n      // time between the source error and the subscription to the\r\n      // next observable.\r\n      innerSub.unsubscribe();\r\n      innerSub = null;\r\n      handledResult!.subscribe(subscriber);\r\n    }\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * A basic scan operation. This is used for `scan` and `reduce`.\r\n * @param accumulator The accumulator to use\r\n * @param seed The seed value for the state to accumulate\r\n * @param hasSeed Whether or not a seed was provided\r\n * @param emitOnNext Whether or not to emit the state on next\r\n * @param emitBeforeComplete Whether or not to emit the before completion\r\n */\r\n\r\nexport function scanInternals<V, A, S>(\r\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\r\n  seed: S,\r\n  hasSeed: boolean,\r\n  emitOnNext: boolean,\r\n  emitBeforeComplete?: undefined | true\r\n) {\r\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\r\n    // Whether or not we have state yet. This will only be\r\n    // false before the first value arrives if we didn't get\r\n    // a seed value.\r\n    let hasState = hasSeed;\r\n    // The state that we're tracking, starting with the seed,\r\n    // if there is one, and then updated by the return value\r\n    // from the accumulator on each emission.\r\n    let state: any = seed;\r\n    // An index to pass to the accumulator function.\r\n    let index = 0;\r\n\r\n    // Subscribe to our source. All errors and completions are passed through.\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          // Always increment the index.\r\n          const i = index++;\r\n          // Set the state\r\n          state = hasState\r\n            ? // We already have state, so we can get the new state from the accumulator\r\n              accumulator(state, value, i)\r\n            : // We didn't have state yet, a seed value was not provided, so\r\n\r\n              // we set the state to the first value, and mark that we have state now\r\n              ((hasState = true), value);\r\n\r\n          // Maybe send it to the consumer.\r\n          emitOnNext && subscriber.next(state);\r\n        },\r\n        // If an onComplete was given, call it, otherwise\r\n        // just pass through the complete notification to the consumer.\r\n        emitBeforeComplete &&\r\n          (() => {\r\n            hasState && subscriber.next(state);\r\n            subscriber.complete();\r\n          })\r\n      )\r\n    );\r\n  };\r\n}\r\n", "import { scanInternals } from './scanInternals';\r\nimport { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\r\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\r\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\r\n\r\n/**\r\n * Applies an accumulator function over the source Observable, and returns the\r\n * accumulated result when the source completes, given an optional seed value.\r\n *\r\n * <span class=\"informal\">Combines together all values emitted on the source,\r\n * using an accumulator function that knows how to join a new source value into\r\n * the accumulation from the past.</span>\r\n *\r\n * ![](reduce.png)\r\n *\r\n * Like\r\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\r\n * `reduce` applies an `accumulator` function against an accumulation and each\r\n * value of the source Observable (from the past) to reduce it to a single\r\n * value, emitted on the output Observable. Note that `reduce` will only emit\r\n * one value, only when the source Observable completes. It is equivalent to\r\n * applying operator {@link scan} followed by operator {@link last}.\r\n *\r\n * Returns an Observable that applies a specified `accumulator` function to each\r\n * item emitted by the source Observable. If a `seed` value is specified, then\r\n * that value will be used as the initial value for the accumulator. If no seed\r\n * value is specified, the first item of the source is used as the seed.\r\n *\r\n * ## Example\r\n *\r\n * Count the number of click events that happened in 5 seconds\r\n *\r\n * ```ts\r\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\r\n *\r\n * const clicksInFiveSeconds = fromEvent(document, 'click')\r\n *   .pipe(takeUntil(interval(5000)));\r\n *\r\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\r\n * const seed = 0;\r\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\r\n *\r\n * count.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link count}\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link scan}\r\n *\r\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\r\n * called on each source value.\r\n * @param {A} [seed] The initial accumulation value.\r\n * @return A function that returns an Observable that emits a single value that\r\n * is the result of accumulating the values emitted by the source Observable.\r\n */\r\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\r\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\r\n}\r\n", "import { reduce } from './reduce';\r\nimport { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\r\n\r\n/**\r\n * Collects all source emissions and emits them as an array when the source completes.\r\n *\r\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\r\n *\r\n * ![](toArray.png)\r\n *\r\n * `toArray` will wait until the source Observable completes before emitting\r\n * the array containing all emissions. When the source Observable errors no\r\n * array will be emitted.\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * import { interval, take, toArray } from 'rxjs';\r\n *\r\n * const source = interval(1000);\r\n * const example = source.pipe(\r\n *   take(10),\r\n *   toArray()\r\n * );\r\n *\r\n * example.subscribe(value => console.log(value));\r\n *\r\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n * ```\r\n *\r\n * @return A function that returns an Observable that emits an array of items\r\n * emitted by the source Observable when source completes.\r\n */\r\nexport function toArray<T>(): OperatorFunction<T, T[]> {\r\n  // Because arrays are mutable, and we're mutating the array in this\r\n  // reducer process, we have to encapsulate the creation of the initial\r\n  // array within this `operate` function.\r\n  return operate((source, subscriber) => {\r\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ObservableInput, OperatorFunction } from '../types';\r\nimport { identity } from '../util/identity';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\nimport { pipe } from '../util/pipe';\r\nimport { mergeMap } from './mergeMap';\r\nimport { toArray } from './toArray';\r\n\r\n/**\r\n * Collects all of the inner sources from source observable. Then, once the\r\n * source completes, joins the values using the given static.\r\n *\r\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\r\n * same behavior of collecting all inner observables, then operating on them.\r\n *\r\n * @param joinFn The type of static join to apply to the sources collected\r\n * @param project The projection function to apply to the values, if any\r\n */\r\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\r\n  return pipe(\r\n    // Collect all inner sources into an array, and emit them when the\r\n    // source completes.\r\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\r\n    // Run the join function on the collected array of inner sources.\r\n    mergeMap((sources) => joinFn(sources)),\r\n    // If a projection function was supplied, apply it to each result.\r\n    project ? mapOneOrManyArgs(project) : (identity as any)\r\n  );\r\n}\r\n", "import { combineLatest } from '../observable/combineLatest';\r\nimport { OperatorFunction, ObservableInput } from '../types';\r\nimport { joinAllInternals } from './joinAllInternals';\r\n\r\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\r\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\r\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\r\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\r\n\r\n/**\r\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\r\n *\r\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\r\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\r\n *\r\n * * Every time an inner Observable emits, the output Observable emits\r\n * * When the returned observable emits, it emits all of the latest values by:\r\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\r\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\r\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\r\n *\r\n * ## Example\r\n *\r\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\r\n *\r\n * ```ts\r\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const higherOrder = clicks.pipe(\r\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\r\n *   take(2)\r\n * );\r\n * const result = higherOrder.pipe(combineLatestAll());\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link combineLatest}\r\n * @see {@link combineLatestWith}\r\n * @see {@link mergeAll}\r\n *\r\n * @param project optional function to map the most recent values from each inner Observable into a new result.\r\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\r\n * @return A function that returns an Observable that flattens Observables\r\n * emitted by the source Observable.\r\n */\r\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\r\n  return joinAllInternals(combineLatest, project);\r\n}\r\n", "import { combineLatestAll } from './combineLatestAll';\r\n\r\n/**\r\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\r\n */\r\nexport const combineAll = combineLatestAll;\r\n", "import { combineLatestInit } from '../observable/combineLatest';\r\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\r\nimport { pipe } from '../util/pipe';\r\nimport { popResultSelector } from '../util/args';\r\n\r\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\r\nexport function combineLatest<T, A extends readonly unknown[], R>(\r\n  sources: [...ObservableInputTuple<A>],\r\n  project: (...values: [T, ...A]) => R\r\n): OperatorFunction<T, R>;\r\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\r\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\r\n\r\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\r\nexport function combineLatest<T, A extends readonly unknown[], R>(\r\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\r\n): OperatorFunction<T, R>;\r\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\r\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\r\n\r\n/**\r\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\r\n */\r\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\r\n  const resultSelector = popResultSelector(args);\r\n  return resultSelector\r\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\r\n    : operate((source, subscriber) => {\r\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\r\n      });\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\r\nimport { combineLatest } from './combineLatest';\r\n\r\n/**\r\n * Create an observable that combines the latest values from all passed observables and the source\r\n * into arrays and emits them.\r\n *\r\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\r\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\r\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\r\n * will be emitted as an array.\r\n *\r\n * This is a useful operator for eagerly calculating values based off of changed inputs.\r\n *\r\n * ## Example\r\n *\r\n * Simple concatenation of values from two inputs\r\n *\r\n * ```ts\r\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\r\n *\r\n * // Setup: Add two inputs to the page\r\n * const input1 = document.createElement('input');\r\n * document.body.appendChild(input1);\r\n * const input2 = document.createElement('input');\r\n * document.body.appendChild(input2);\r\n *\r\n * // Get streams of changes\r\n * const input1Changes$ = fromEvent(input1, 'change');\r\n * const input2Changes$ = fromEvent(input2, 'change');\r\n *\r\n * // Combine the changes by adding them together\r\n * input1Changes$.pipe(\r\n *   combineLatestWith(input2Changes$),\r\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\r\n * )\r\n * .subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @param otherSources the other sources to subscribe to.\r\n * @return A function that returns an Observable that emits the latest\r\n * emissions from both source and provided Observables.\r\n */\r\nexport function combineLatestWith<T, A extends readonly unknown[]>(\r\n  ...otherSources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, Cons<T, A>> {\r\n  return combineLatest(...otherSources);\r\n}\r\n", "import { mergeMap } from './mergeMap';\r\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function concatMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function concatMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: undefined\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function concatMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to an Observable which is merged in the output\r\n * Observable, in a serialized fashion waiting for each one to complete before\r\n * merging the next.\r\n *\r\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\r\n * these inner Observables using {@link concatAll}.</span>\r\n *\r\n * ![](concatMap.png)\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\r\n * concatenated with the previous inner Observable.\r\n *\r\n * __Warning:__ if source values arrive endlessly and faster than their\r\n * corresponding inner Observables can complete, it will result in memory issues\r\n * as inner Observables amass in an unbounded buffer waiting for their turn to\r\n * be subscribed to.\r\n *\r\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\r\n * to `1`.\r\n *\r\n * ## Example\r\n *\r\n * For each click event, tick every second from 0 to 3, with no concurrency\r\n *\r\n * ```ts\r\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   concatMap(ev => interval(1000).pipe(take(4)))\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // (results are not concurrent)\r\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\r\n * // on a 1000ms interval\r\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\r\n * ```\r\n *\r\n * @see {@link concat}\r\n * @see {@link concatAll}\r\n * @see {@link concatMapTo}\r\n * @see {@link exhaustMap}\r\n * @see {@link mergeMap}\r\n * @see {@link switchMap}\r\n *\r\n * @param {function(value: T, ?index: number): ObservableInput} project A function\r\n * that, when applied to an item emitted by the source Observable, returns an\r\n * Observable.\r\n * @return A function that returns an Observable that emits the result of\r\n * applying the projection function (and the optional deprecated\r\n * `resultSelector`) to each item emitted by the source Observable and taking\r\n * values from each projected inner Observable sequentially.\r\n */\r\nexport function concatMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\r\n}\r\n", "import { concatMap } from './concatMap';\r\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\r\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function concatMapTo<O extends ObservableInput<unknown>>(\r\n  observable: O,\r\n  resultSelector: undefined\r\n): OperatorFunction<unknown, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  observable: O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, R>;\r\n\r\n/**\r\n * Projects each source value to the same Observable which is merged multiple\r\n * times in a serialized fashion on the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\r\n * always to the same inner Observable.</span>\r\n *\r\n * ![](concatMapTo.png)\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then flattens those resulting Observables into one\r\n * single Observable, which is the output Observable. Each new `innerObservable`\r\n * instance emitted on the output Observable is concatenated with the previous\r\n * `innerObservable` instance.\r\n *\r\n * __Warning:__ if source values arrive endlessly and faster than their\r\n * corresponding inner Observables can complete, it will result in memory issues\r\n * as inner Observables amass in an unbounded buffer waiting for their turn to\r\n * be subscribed to.\r\n *\r\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\r\n * set to `1`.\r\n *\r\n * ## Example\r\n *\r\n * For each click event, tick every second from 0 to 3, with no concurrency\r\n *\r\n * ```ts\r\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   concatMapTo(interval(1000).pipe(take(4)))\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // (results are not concurrent)\r\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\r\n * // on a 1000ms interval\r\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\r\n * ```\r\n *\r\n * @see {@link concat}\r\n * @see {@link concatAll}\r\n * @see {@link concatMap}\r\n * @see {@link mergeMapTo}\r\n * @see {@link switchMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @return A function that returns an Observable of values merged together by\r\n * joining the passed Observable with itself, one after the other, for each\r\n * value emitted from the source.\r\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\r\n */\r\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { concatAll } from './concatAll';\r\nimport { popScheduler } from '../util/args';\r\nimport { from } from '../observable/from';\r\n\r\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\r\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\r\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\r\nexport function concat<T, A extends readonly unknown[]>(\r\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\r\n): OperatorFunction<T, T | A[number]>;\r\n\r\n/**\r\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\r\n */\r\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\r\n  const scheduler = popScheduler(args);\r\n  return operate((source, subscriber) => {\r\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\r\n  });\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\r\nimport { concat } from './concat';\r\n\r\n/**\r\n * Emits all of the values from the source observable, then, once it completes, subscribes\r\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\r\n * to the next one until it completes.\r\n *\r\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\r\n *\r\n * ## Example\r\n *\r\n * Listen for one mouse click, then listen for all mouse moves.\r\n *\r\n * ```ts\r\n * import { fromEvent, map, take, concatWith } from 'rxjs';\r\n *\r\n * const clicks$ = fromEvent(document, 'click');\r\n * const moves$ = fromEvent(document, 'mousemove');\r\n *\r\n * clicks$.pipe(\r\n *   map(() => 'click'),\r\n *   take(1),\r\n *   concatWith(\r\n *     moves$.pipe(\r\n *       map(() => 'move')\r\n *     )\r\n *   )\r\n * )\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // 'click'\r\n * // 'move'\r\n * // 'move'\r\n * // 'move'\r\n * // ...\r\n * ```\r\n *\r\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\r\n * @return A function that returns an Observable that concatenates\r\n * subscriptions to the source and provided Observables subscribing to the next\r\n * only once the current subscription completes.\r\n */\r\nexport function concatWith<T, A extends readonly unknown[]>(\r\n  ...otherSources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]> {\r\n  return concat(...otherSources);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { Subscribable } from '../types';\r\n\r\n/**\r\n * Used to convert a subscribable to an observable.\r\n *\r\n * Currently, this is only used within internals.\r\n *\r\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\r\n * https://github.com/ReactiveX/rxjs/issues/5909\r\n *\r\n * @param subscribable A subscribable\r\n */\r\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\r\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\r\n}\r\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\r\nimport { Observable } from '../Observable';\r\nimport { Subject } from '../Subject';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { operate } from '../util/lift';\r\nimport { fromSubscribable } from '../observable/fromSubscribable';\r\n\r\n/**\r\n * An object used to configure {@link connect} operator.\r\n */\r\nexport interface ConnectConfig<T> {\r\n  /**\r\n   * A factory function used to create the Subject through which the source\r\n   * is multicast. By default, this creates a {@link Subject}.\r\n   */\r\n  connector: () => SubjectLike<T>;\r\n}\r\n\r\n/**\r\n * The default configuration for `connect`.\r\n */\r\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\r\n  connector: () => new Subject<unknown>(),\r\n};\r\n\r\n/**\r\n * Creates an observable by multicasting the source within a function that\r\n * allows the developer to define the usage of the multicast prior to connection.\r\n *\r\n * This is particularly useful if the observable source you wish to multicast could\r\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\r\n * case of totally synchronous sources will fail to share a single subscription with\r\n * multiple consumers, as by the time the subscription to the result of {@link share}\r\n * has returned, if the source is synchronous its internal reference count will jump from\r\n * 0 to 1 back to 0 and reset.\r\n *\r\n * To use `connect`, you provide a `selector` function that will give you\r\n * a multicast observable that is not yet connected. You then use that multicast observable\r\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\r\n * generally, but not always, accomplished with {@link merge}.\r\n *\r\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\r\n * to use the {@link takeWhile} operator instead.\r\n *\r\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\r\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\r\n * multicast will be connected to the source.\r\n *\r\n * ## Example\r\n *\r\n * Sharing a totally synchronous observable\r\n *\r\n * ```ts\r\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\r\n *\r\n * const source$ = of(1, 2, 3, 4, 5).pipe(\r\n *   tap({\r\n *     subscribe: () => console.log('subscription started'),\r\n *     next: n => console.log(`source emitted ${ n }`)\r\n *   })\r\n * );\r\n *\r\n * source$.pipe(\r\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\r\n *   connect(shared$ => merge(\r\n *     shared$.pipe(map(n => `all ${ n }`)),\r\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\r\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\r\n *   ))\r\n * )\r\n * .subscribe(console.log);\r\n *\r\n * // Expected output: (notice only one subscription)\r\n * 'subscription started'\r\n * 'source emitted 1'\r\n * 'all 1'\r\n * 'odd 1'\r\n * 'source emitted 2'\r\n * 'all 2'\r\n * 'even 2'\r\n * 'source emitted 3'\r\n * 'all 3'\r\n * 'odd 3'\r\n * 'source emitted 4'\r\n * 'all 4'\r\n * 'even 4'\r\n * 'source emitted 5'\r\n * 'all 5'\r\n * 'odd 5'\r\n * ```\r\n *\r\n * @param selector A function used to set up the multicast. Gives you a multicast observable\r\n * that is not yet connected. With that, you're expected to create and return\r\n * and Observable, that when subscribed to, will utilize the multicast observable.\r\n * After this function is executed -- and its return value subscribed to -- the\r\n * operator will subscribe to the source, and the connection will be made.\r\n * @param config The configuration object for `connect`.\r\n */\r\nexport function connect<T, O extends ObservableInput<unknown>>(\r\n  selector: (shared: Observable<T>) => O,\r\n  config: ConnectConfig<T> = DEFAULT_CONFIG\r\n): OperatorFunction<T, ObservedValueOf<O>> {\r\n  const { connector } = config;\r\n  return operate((source, subscriber) => {\r\n    const subject = connector();\r\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\r\n    subscriber.add(source.subscribe(subject));\r\n  });\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { reduce } from './reduce';\r\n\r\n/**\r\n * Counts the number of emissions on the source and emits that number when the\r\n * source completes.\r\n *\r\n * <span class=\"informal\">Tells how many values were emitted, when the source\r\n * completes.</span>\r\n *\r\n * ![](count.png)\r\n *\r\n * `count` transforms an Observable that emits values into an Observable that\r\n * emits a single value that represents the number of values emitted by the\r\n * source Observable. If the source Observable terminates with an error, `count`\r\n * will pass this error notification along without emitting a value first. If\r\n * the source Observable does not terminate at all, `count` will neither emit\r\n * a value nor terminate. This operator takes an optional `predicate` function\r\n * as argument, in which case the output emission will represent the number of\r\n * source values that matched `true` with the `predicate`.\r\n *\r\n * ## Examples\r\n *\r\n * Counts how many seconds have passed before the first click happened\r\n *\r\n * ```ts\r\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\r\n *\r\n * const seconds = interval(1000);\r\n * const clicks = fromEvent(document, 'click');\r\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\r\n * const result = secondsBeforeClick.pipe(count());\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Counts how many odd numbers are there between 1 and 7\r\n *\r\n * ```ts\r\n * import { range, count } from 'rxjs';\r\n *\r\n * const numbers = range(1, 7);\r\n * const result = numbers.pipe(count(i => i % 2 === 1));\r\n * result.subscribe(x => console.log(x));\r\n * // Results in:\r\n * // 4\r\n * ```\r\n *\r\n * @see {@link max}\r\n * @see {@link min}\r\n * @see {@link reduce}\r\n *\r\n * @param predicate A function that is used to analyze the value and the index and\r\n * determine whether or not to increment the count. Return `true` to increment the count,\r\n * and return `false` to keep the count the same.\r\n * If the predicate is not provided, every value will be counted.\r\n * @return A function that returns an Observable that emits one number that\r\n * represents the count of emissions.\r\n */\r\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\r\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\r\n}\r\n", "import { Subscriber } from '../Subscriber';\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { noop } from '../util/noop';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Emits a notification from the source Observable only after a particular time span\r\n * determined by another Observable has passed without another source emission.\r\n *\r\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\r\n * emission silence is determined by a second Observable.</span>\r\n *\r\n * ![](debounce.svg)\r\n *\r\n * `debounce` delays notifications emitted by the source Observable, but drops previous\r\n * pending delayed emissions if a new notification arrives on the source Observable.\r\n * This operator keeps track of the most recent notification from the source\r\n * Observable, and spawns a duration Observable by calling the\r\n * `durationSelector` function. The notification is emitted only when the duration\r\n * Observable emits a next notification, and if no other notification was emitted on\r\n * the source Observable since the duration Observable was spawned. If a new\r\n * notification appears before the duration Observable emits, the previous notification will\r\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\r\n * If the completing event happens during the scheduled duration the last cached notification\r\n * is emitted before the completion event is forwarded to the output observable.\r\n * If the error event happens during the scheduled duration or after it only the error event is\r\n * forwarded to the output observable. The cache notification is not emitted in this case.\r\n *\r\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\r\n * delay-like operator since output emissions do not necessarily occur at the\r\n * same time as they did on the source Observable.\r\n *\r\n * ## Example\r\n *\r\n * Emit the most recent click after a burst of clicks\r\n *\r\n * ```ts\r\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   scan(i => ++i, 1),\r\n *   debounce(i => interval(200 * i))\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link audit}\r\n * @see {@link auditTime}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sample}\r\n * @see {@link sampleTime}\r\n * @see {@link throttle}\r\n * @see {@link throttleTime}\r\n *\r\n * @param durationSelector A function\r\n * that receives a value from the source Observable, for computing the timeout\r\n * duration for each source value, returned as an Observable or a Promise.\r\n * @return A function that returns an Observable that delays the emissions of\r\n * the source Observable by the specified duration Observable returned by\r\n * `durationSelector`, and may drop some values if they occur too frequently.\r\n */\r\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    let lastValue: T | null = null;\r\n    // The subscriber/subscription for the current debounce, if there is one.\r\n    let durationSubscriber: Subscriber<any> | null = null;\r\n\r\n    const emit = () => {\r\n      // Unsubscribe any current debounce subscription we have,\r\n      // we only cared about the first notification from it, and we\r\n      // want to clean that subscription up as soon as possible.\r\n      durationSubscriber?.unsubscribe();\r\n      durationSubscriber = null;\r\n      if (hasValue) {\r\n        // We have a value! Free up memory first, then emit the value.\r\n        hasValue = false;\r\n        const value = lastValue!;\r\n        lastValue = null;\r\n        subscriber.next(value);\r\n      }\r\n    };\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          // Cancel any pending debounce duration. We don't\r\n          // need to null it out here yet tho, because we're just going\r\n          // to create another one in a few lines.\r\n          durationSubscriber?.unsubscribe();\r\n          hasValue = true;\r\n          lastValue = value;\r\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\r\n          // and we're going to emit the value.\r\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\r\n          // Subscribe to the duration.\r\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\r\n        },\r\n        () => {\r\n          // Source completed.\r\n          // Emit any pending debounced values then complete\r\n          emit();\r\n          subscriber.complete();\r\n        },\r\n        // Pass all errors through to consumer\r\n        undefined,\r\n        () => {\r\n          // Finalization.\r\n          lastValue = durationSubscriber = null;\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { Subscription } from '../Subscription';\r\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits a notification from the source Observable only after a particular time span\r\n * has passed without another source emission.\r\n *\r\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\r\n * recent notification from each burst of emissions.</span>\r\n *\r\n * ![](debounceTime.png)\r\n *\r\n * `debounceTime` delays notifications emitted by the source Observable, but drops\r\n * previous pending delayed emissions if a new notification arrives on the source\r\n * Observable. This operator keeps track of the most recent notification from the\r\n * source Observable, and emits that only when `dueTime` has passed\r\n * without any other notification appearing on the source Observable. If a new value\r\n * appears before `dueTime` silence occurs, the previous notification will be dropped\r\n * and will not be emitted and a new `dueTime` is scheduled.\r\n * If the completing event happens during `dueTime` the last cached notification\r\n * is emitted before the completion event is forwarded to the output observable.\r\n * If the error event happens during `dueTime` or after it only the error event is\r\n * forwarded to the output observable. The cache notification is not emitted in this case.\r\n *\r\n * This is a rate-limiting operator, because it is impossible for more than one\r\n * notification to be emitted in any time window of duration `dueTime`, but it is also\r\n * a delay-like operator since output emissions do not occur at the same time as\r\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\r\n * managing timers.\r\n *\r\n * ## Example\r\n *\r\n * Emit the most recent click after a burst of clicks\r\n *\r\n * ```ts\r\n * import { fromEvent, debounceTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(debounceTime(1000));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link audit}\r\n * @see {@link auditTime}\r\n * @see {@link debounce}\r\n * @see {@link sample}\r\n * @see {@link sampleTime}\r\n * @see {@link throttle}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {number} dueTime The timeout duration in milliseconds (or the time\r\n * unit determined internally by the optional `scheduler`) for the window of\r\n * time required to wait for emission silence before emitting the most recent\r\n * source value.\r\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\r\n * managing the timers that handle the timeout for each value.\r\n * @return A function that returns an Observable that delays the emissions of\r\n * the source Observable by the specified `dueTime`, and may drop some values\r\n * if they occur too frequently.\r\n */\r\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let activeTask: Subscription | null = null;\r\n    let lastValue: T | null = null;\r\n    let lastTime: number | null = null;\r\n\r\n    const emit = () => {\r\n      if (activeTask) {\r\n        // We have a value! Free up memory first, then emit the value.\r\n        activeTask.unsubscribe();\r\n        activeTask = null;\r\n        const value = lastValue!;\r\n        lastValue = null;\r\n        subscriber.next(value);\r\n      }\r\n    };\r\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\r\n      // This is called `dueTime` after the first value\r\n      // but we might have received new values during this window!\r\n\r\n      const targetTime = lastTime! + dueTime;\r\n      const now = scheduler.now();\r\n      if (now < targetTime) {\r\n        // On that case, re-schedule to the new target\r\n        activeTask = this.schedule(undefined, targetTime - now);\r\n        subscriber.add(activeTask);\r\n        return;\r\n      }\r\n\r\n      emit();\r\n    }\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          lastValue = value;\r\n          lastTime = scheduler.now();\r\n\r\n          // Only set up a task if it's not already up\r\n          if (!activeTask) {\r\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\r\n            subscriber.add(activeTask);\r\n          }\r\n        },\r\n        () => {\r\n          // Source completed.\r\n          // Emit any pending debounced values then complete\r\n          emit();\r\n          subscriber.complete();\r\n        },\r\n        // Pass all errors through to consumer.\r\n        undefined,\r\n        () => {\r\n          // Finalization.\r\n          lastValue = activeTask = null;\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits a given value if the source Observable completes without emitting any\r\n * `next` value, otherwise mirrors the source Observable.\r\n *\r\n * <span class=\"informal\">If the source Observable turns out to be empty, then\r\n * this operator will emit a default value.</span>\r\n *\r\n * ![](defaultIfEmpty.png)\r\n *\r\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\r\n * specified default value if the source Observable is empty (completes without\r\n * having emitted any `next` value).\r\n *\r\n * ## Example\r\n *\r\n * If no clicks happen in 5 seconds, then emit 'no clicks'\r\n *\r\n * ```ts\r\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\r\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link empty}\r\n * @see {@link last}\r\n *\r\n * @param defaultValue The default value used if the source\r\n * Observable is empty.\r\n * @return A function that returns an Observable that emits either the\r\n * specified `defaultValue` if the source Observable emits no items, or the\r\n * values emitted by the source Observable.\r\n */\r\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          hasValue = true;\r\n          subscriber.next(value);\r\n        },\r\n        () => {\r\n          if (!hasValue) {\r\n            subscriber.next(defaultValue!);\r\n          }\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction } from '../types';\r\nimport { EMPTY } from '../observable/empty';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits only the first `count` values emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Takes the first `count` values from the source, then\r\n * completes.</span>\r\n *\r\n * ![](take.png)\r\n *\r\n * `take` returns an Observable that emits only the first `count` values emitted\r\n * by the source Observable. If the source emits fewer than `count` values then\r\n * all of its values are emitted. After that, it completes, regardless if the\r\n * source completes.\r\n *\r\n * ## Example\r\n *\r\n * Take the first 5 seconds of an infinite 1-second interval Observable\r\n *\r\n * ```ts\r\n * import { interval, take } from 'rxjs';\r\n *\r\n * const intervalCount = interval(1000);\r\n * const takeFive = intervalCount.pipe(take(5));\r\n * takeFive.subscribe(x => console.log(x));\r\n *\r\n * // Logs:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * ```\r\n *\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link takeWhile}\r\n * @see {@link skip}\r\n *\r\n * @param count The maximum number of `next` values to emit.\r\n * @return A function that returns an Observable that emits only the first\r\n * `count` values emitted by the source Observable, or all of the values from\r\n * the source if the source emits fewer than `count` values.\r\n */\r\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\r\n  return count <= 0\r\n    ? // If we are taking no values, that's empty.\r\n      () => EMPTY\r\n    : operate((source, subscriber) => {\r\n        let seen = 0;\r\n        source.subscribe(\r\n          createOperatorSubscriber(subscriber, (value) => {\r\n            // Increment the number of values we have seen,\r\n            // then check it against the allowed count to see\r\n            // if we are still letting values through.\r\n            if (++seen <= count) {\r\n              subscriber.next(value);\r\n              // If we have met or passed our allowed count,\r\n              // we need to complete. We have to do <= here,\r\n              // because re-entrant code will increment `seen` twice.\r\n              if (count <= seen) {\r\n                subscriber.complete();\r\n              }\r\n            }\r\n          })\r\n        );\r\n      });\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\r\n *\r\n * ![](ignoreElements.png)\r\n *\r\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\r\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\r\n *\r\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\r\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\r\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\r\n *\r\n * ## Example\r\n *\r\n * Ignore all `next` emissions from the source\r\n *\r\n * ```ts\r\n * import { of, ignoreElements } from 'rxjs';\r\n *\r\n * of('you', 'talking', 'to', 'me')\r\n *   .pipe(ignoreElements())\r\n *   .subscribe({\r\n *     next: word => console.log(word),\r\n *     error: err => console.log('error:', err),\r\n *     complete: () => console.log('the end'),\r\n *   });\r\n *\r\n * // result:\r\n * // 'the end'\r\n * ```\r\n *\r\n * @return A function that returns an empty Observable that only calls\r\n * `complete` or `error`, based on which one is called by the source\r\n * Observable.\r\n */\r\nexport function ignoreElements(): OperatorFunction<unknown, never> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\r\n  });\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { map } from './map';\r\n\r\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\r\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\r\n/**\r\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\r\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\r\n * use {@link map} instead: `map(() => value)`.\r\n * */\r\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\r\n\r\n/**\r\n * Emits the given constant value on the output Observable every time the source\r\n * Observable emits a value.\r\n *\r\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\r\n * the same output value every time.</span>\r\n *\r\n * ![](mapTo.png)\r\n *\r\n * Takes a constant `value` as argument, and emits that whenever the source\r\n * Observable emits a value. In other words, ignores the actual source value,\r\n * and simply uses the emission moment to know when to emit the given `value`.\r\n *\r\n * ## Example\r\n *\r\n * Map every click to the string `'Hi'`\r\n *\r\n * ```ts\r\n * import { fromEvent, mapTo } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const greetings = clicks.pipe(mapTo('Hi'));\r\n *\r\n * greetings.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link map}\r\n *\r\n * @param value The value to map each source value to.\r\n * @return A function that returns an Observable that emits the given `value`\r\n * every time the source Observable emits.\r\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\r\n */\r\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\r\n  return map(() => value);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { concat } from '../observable/concat';\r\nimport { take } from './take';\r\nimport { ignoreElements } from './ignoreElements';\r\nimport { mapTo } from './mapTo';\r\nimport { mergeMap } from './mergeMap';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\r\nexport function delayWhen<T>(\r\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\r\n  subscriptionDelay: Observable<any>\r\n): MonoTypeOperatorFunction<T>;\r\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Delays the emission of items from the source Observable by a given time span\r\n * determined by the emissions of another Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\r\n * delay duration is determined by a second Observable.</span>\r\n *\r\n * ![](delayWhen.png)\r\n *\r\n * `delayWhen` operator shifts each emitted value from the source Observable by\r\n * a time span determined by another Observable. When the source emits a value,\r\n * the `delayDurationSelector` function is called with the value emitted from\r\n * the source Observable as the first argument to the `delayDurationSelector`.\r\n * The `delayDurationSelector` function should return an {@link ObservableInput},\r\n * that is internally converted to an Observable that is called the \"duration\"\r\n * Observable.\r\n *\r\n * The source value is emitted on the output Observable only when the \"duration\"\r\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\r\n * Upon that, the \"duration\" Observable gets unsubscribed.\r\n *\r\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\r\n * of the \"duration\" Observable would have been triggering the emission of the\r\n * source value to the output Observable, but with RxJS V7, this is not the case\r\n * anymore.\r\n *\r\n * Only next notifications (from the \"duration\" Observable) trigger values from\r\n * the source Observable to be passed to the output Observable. If the \"duration\"\r\n * Observable only emits the complete notification (without next), the value\r\n * emitted by the source Observable will never get to the output Observable - it\r\n * will be swallowed. If the \"duration\" Observable errors, the error will be\r\n * propagated to the output Observable.\r\n *\r\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\r\n * is an Observable. When `subscriptionDelay` emits its first value or\r\n * completes, the source Observable is subscribed to and starts behaving like\r\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\r\n * `delayWhen` will subscribe to the source Observable as soon as the output\r\n * Observable is subscribed.\r\n *\r\n * ## Example\r\n *\r\n * Delay each click by a random amount of time, between 0 and 5 seconds\r\n *\r\n * ```ts\r\n * import { fromEvent, delayWhen, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const delayedClicks = clicks.pipe(\r\n *   delayWhen(() => interval(Math.random() * 5000))\r\n * );\r\n * delayedClicks.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link delay}\r\n * @see {@link throttle}\r\n * @see {@link throttleTime}\r\n * @see {@link debounce}\r\n * @see {@link debounceTime}\r\n * @see {@link sample}\r\n * @see {@link sampleTime}\r\n * @see {@link audit}\r\n * @see {@link auditTime}\r\n *\r\n * @param delayDurationSelector A function that returns an `ObservableInput` for\r\n * each `value` emitted by the source Observable, which is then used to delay the\r\n * emission of that `value` on the output Observable until the `ObservableInput`\r\n * returned from this function emits a next value. When called, beside `value`,\r\n * this function receives a zero-based `index` of the emission order.\r\n * @param subscriptionDelay An Observable that triggers the subscription to the\r\n * source Observable once it emits any value.\r\n * @return A function that returns an Observable that delays the emissions of\r\n * the source Observable by an amount of time specified by the Observable\r\n * returned by `delayDurationSelector`.\r\n */\r\nexport function delayWhen<T>(\r\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\r\n  subscriptionDelay?: Observable<any>\r\n): MonoTypeOperatorFunction<T> {\r\n  if (subscriptionDelay) {\r\n    // DEPRECATED PATH\r\n    return (source: Observable<T>) =>\r\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\r\n  }\r\n\r\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { delayWhen } from './delayWhen';\r\nimport { timer } from '../observable/timer';\r\n\r\n/**\r\n * Delays the emission of items from the source Observable by a given timeout or\r\n * until a given Date.\r\n *\r\n * <span class=\"informal\">Time shifts each item by some specified amount of\r\n * milliseconds.</span>\r\n *\r\n * ![](delay.svg)\r\n *\r\n * If the delay argument is a Number, this operator time shifts the source\r\n * Observable by that amount of time expressed in milliseconds. The relative\r\n * time intervals between the values are preserved.\r\n *\r\n * If the delay argument is a Date, this operator time shifts the start of the\r\n * Observable execution until the given date occurs.\r\n *\r\n * ## Examples\r\n *\r\n * Delay each click by one second\r\n *\r\n * ```ts\r\n * import { fromEvent, delay } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\r\n * delayedClicks.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Delay all clicks until a future date happens\r\n *\r\n * ```ts\r\n * import { fromEvent, delay } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\r\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\r\n * delayedClicks.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link delayWhen}\r\n * @see {@link throttle}\r\n * @see {@link throttleTime}\r\n * @see {@link debounce}\r\n * @see {@link debounceTime}\r\n * @see {@link sample}\r\n * @see {@link sampleTime}\r\n * @see {@link audit}\r\n * @see {@link auditTime}\r\n *\r\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\r\n * a `Date` until which the emission of the source items is delayed.\r\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\r\n * managing the timers that handle the time-shift for each item.\r\n * @return A function that returns an Observable that delays the emissions of\r\n * the source Observable by the specified timeout or Date.\r\n */\r\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\r\n  const duration = timer(due, scheduler);\r\n  return delayWhen(() => duration);\r\n}\r\n", "import { observeNotification } from '../Notification';\r\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\r\n * that they represent.\r\n *\r\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\r\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\r\n *\r\n * ![](dematerialize.png)\r\n *\r\n * `dematerialize` is assumed to operate an Observable that only emits\r\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\r\n * `error`. Such Observable is the output of a `materialize` operation. Those\r\n * notifications are then unwrapped using the metadata they contain, and emitted\r\n * as `next`, `error`, and `complete` on the output Observable.\r\n *\r\n * Use this operator in conjunction with {@link materialize}.\r\n *\r\n * ## Example\r\n *\r\n * Convert an Observable of Notifications to an actual Observable\r\n *\r\n * ```ts\r\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\r\n *\r\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\r\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\r\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\r\n *\r\n * const materialized = of(notifA, notifB, notifE);\r\n *\r\n * const upperCase = materialized.pipe(dematerialize());\r\n * upperCase.subscribe({\r\n *   next: x => console.log(x),\r\n *   error: e => console.error(e)\r\n * });\r\n *\r\n * // Results in:\r\n * // A\r\n * // B\r\n * // TypeError: x.toUpperCase is not a function\r\n * ```\r\n *\r\n * @see {@link materialize}\r\n *\r\n * @return A function that returns an Observable that emits items and\r\n * notifications embedded in Notification objects emitted by the source\r\n * Observable.\r\n */\r\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\r\n *\r\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\r\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\r\n * source observable directly with an equality check against previous values.\r\n *\r\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\r\n *\r\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\r\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\r\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\r\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\r\n *\r\n * ## Examples\r\n *\r\n * A simple example with numbers\r\n *\r\n * ```ts\r\n * import { of, distinct } from 'rxjs';\r\n *\r\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\r\n *   .pipe(distinct())\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * ```\r\n *\r\n * An example using the `keySelector` function\r\n *\r\n * ```ts\r\n * import { of, distinct } from 'rxjs';\r\n *\r\n * of(\r\n *   { age: 4, name: 'Foo'},\r\n *   { age: 7, name: 'Bar'},\r\n *   { age: 5, name: 'Foo'}\r\n * )\r\n * .pipe(distinct(({ name }) => name))\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // { age: 4, name: 'Foo' }\r\n * // { age: 7, name: 'Bar' }\r\n * ```\r\n * @see {@link distinctUntilChanged}\r\n * @see {@link distinctUntilKeyChanged}\r\n *\r\n * @param keySelector Optional `function` to select which value you want to check as distinct.\r\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable with distinct values.\r\n */\r\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    const distinctKeys = new Set();\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        const key = keySelector ? keySelector(value) : value;\r\n        if (!distinctKeys.has(key)) {\r\n          distinctKeys.add(key);\r\n          subscriber.next(value);\r\n        }\r\n      })\r\n    );\r\n\r\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction } from '../types';\r\nimport { identity } from '../util/identity';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\r\nexport function distinctUntilChanged<T, K>(\r\n  comparator: (previous: K, current: K) => boolean,\r\n  keySelector: (value: T) => K\r\n): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\r\n * are distinct in comparison to the last value the result observable emitted.\r\n *\r\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\r\n * it behaves like this:\r\n *\r\n * 1. It will always emit the first value from the source.\r\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\r\n *    using the provided `comparator` or an `===` equality check.\r\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\r\n *    becomes the new \"previously emitted value\" internally.\r\n *\r\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\r\n * changes:\r\n *\r\n * 1. It will always emit the first value from the source.\r\n * 2. The `keySelector` will be run against all values, including the first value.\r\n * 3. For all values after the first, the selected key will be compared against the key selected from\r\n *    the previously emitted value using the `comparator`.\r\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\r\n *    and the selected key from that value is saved for future comparisons against other keys.\r\n *\r\n * ## Examples\r\n *\r\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\r\n * because it's distinct in comparison to the _previously emitted_ value,\r\n * not in comparison to _all other emitted values_.\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\r\n *   .pipe(distinctUntilChanged())\r\n *   .subscribe(console.log);\r\n * // Logs: 1, 2, 1, 3\r\n * ```\r\n *\r\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\r\n * you only want to emit a value when all of its components have\r\n * changed:\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * const totallyDifferentBuilds$ = of(\r\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\r\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\r\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\r\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\r\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\r\n * ).pipe(\r\n *   distinctUntilChanged((prev, curr) => {\r\n *     return (\r\n *       prev.engineVersion === curr.engineVersion ||\r\n *       prev.transmissionVersion === curr.transmissionVersion\r\n *     );\r\n *   })\r\n * );\r\n *\r\n * totallyDifferentBuilds$.subscribe(console.log);\r\n *\r\n * // Logs:\r\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\r\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\r\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\r\n * ```\r\n *\r\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\r\n * changes are only in one direction. Let's say you only want to get\r\n * the next record temperature:\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\r\n *\r\n * const recordHighs$ = temps$.pipe(\r\n *   distinctUntilChanged((prevHigh, temp) => {\r\n *     // If the current temp is less than\r\n *     // or the same as the previous record,\r\n *     // the record hasn't changed.\r\n *     return temp <= prevHigh;\r\n *   })\r\n * );\r\n *\r\n * recordHighs$.subscribe(console.log);\r\n * // Logs: 30, 31, 34, 35\r\n * ```\r\n *\r\n * Selecting update events only when the `updatedBy` field shows\r\n * the account changed hands.\r\n *\r\n * ```ts\r\n * import { of, distinctUntilChanged } from 'rxjs';\r\n *\r\n * // A stream of updates to a given account\r\n * const accountUpdates$ = of(\r\n *   { updatedBy: 'blesh', data: [] },\r\n *   { updatedBy: 'blesh', data: [] },\r\n *   { updatedBy: 'ncjamieson', data: [] },\r\n *   { updatedBy: 'ncjamieson', data: [] },\r\n *   { updatedBy: 'blesh', data: [] }\r\n * );\r\n *\r\n * // We only want the events where it changed hands\r\n * const changedHands$ = accountUpdates$.pipe(\r\n *   distinctUntilChanged(undefined, update => update.updatedBy)\r\n * );\r\n *\r\n * changedHands$.subscribe(console.log);\r\n * // Logs:\r\n * // { updatedBy: 'blesh', data: Array[0] }\r\n * // { updatedBy: 'ncjamieson', data: Array[0] }\r\n * // { updatedBy: 'blesh', data: Array[0] }\r\n * ```\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilKeyChanged}\r\n *\r\n * @param comparator A function used to compare the previous and current keys for\r\n * equality. Defaults to a `===` check.\r\n * @param keySelector Used to select a key value to be passed to the `comparator`.\r\n *\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable with distinct values.\r\n */\r\nexport function distinctUntilChanged<T, K>(\r\n  comparator?: (previous: K, current: K) => boolean,\r\n  keySelector: (value: T) => K = identity as (value: T) => K\r\n): MonoTypeOperatorFunction<T> {\r\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\r\n  // a default value for the parameter, because that will only work\r\n  // for `undefined`.\r\n  comparator = comparator ?? defaultCompare;\r\n\r\n  return operate((source, subscriber) => {\r\n    // The previous key, used to compare against keys selected\r\n    // from new arrivals to determine \"distinctiveness\".\r\n    let previousKey: K;\r\n    // Whether or not this is the first value we've gotten.\r\n    let first = true;\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        // We always call the key selector.\r\n        const currentKey = keySelector(value);\r\n\r\n        // If it's the first value, we always emit it.\r\n        // Otherwise, we compare this key to the previous key, and\r\n        // if the comparer returns false, we emit.\r\n        if (first || !comparator!(previousKey, currentKey)) {\r\n          // Update our state *before* we emit the value\r\n          // as emission can be the source of re-entrant code\r\n          // in functional libraries like this. We only really\r\n          // need to do this if it's the first value, or if the\r\n          // key we're tracking in previous needs to change.\r\n          first = false;\r\n          previousKey = currentKey;\r\n\r\n          // Emit the value!\r\n          subscriber.next(value);\r\n        }\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\nfunction defaultCompare(a: any, b: any) {\r\n  return a === b;\r\n}\r\n", "import { distinctUntilChanged } from './distinctUntilChanged';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\r\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\r\n * using a property accessed by using the key provided to check if the two items are distinct.\r\n *\r\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\r\n *\r\n * If a comparator function is not provided, an equality check is used by default.\r\n *\r\n * ## Examples\r\n *\r\n * An example comparing the name of persons\r\n *\r\n * ```ts\r\n * import { of, distinctUntilKeyChanged } from 'rxjs';\r\n *\r\n * of(\r\n *   { age: 4, name: 'Foo' },\r\n *   { age: 7, name: 'Bar' },\r\n *   { age: 5, name: 'Foo' },\r\n *   { age: 6, name: 'Foo' }\r\n * ).pipe(\r\n *   distinctUntilKeyChanged('name')\r\n * )\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo' }\r\n * // { age: 7, name: 'Bar' }\r\n * // { age: 5, name: 'Foo' }\r\n * ```\r\n *\r\n * An example comparing the first letters of the name\r\n *\r\n * ```ts\r\n * import { of, distinctUntilKeyChanged } from 'rxjs';\r\n *\r\n * of(\r\n *   { age: 4, name: 'Foo1' },\r\n *   { age: 7, name: 'Bar' },\r\n *   { age: 5, name: 'Foo2' },\r\n *   { age: 6, name: 'Foo3' }\r\n * ).pipe(\r\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\r\n * )\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo1' }\r\n * // { age: 7, name: 'Bar' }\r\n * // { age: 5, name: 'Foo2' }\r\n * ```\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilChanged}\r\n *\r\n * @param {string} key String key for object property lookup on each item.\r\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\r\n * @return A function that returns an Observable that emits items from the\r\n * source Observable with distinct values based on the key specified.\r\n */\r\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\r\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\r\n}\r\n", "import { EmptyError } from '../util/EmptyError';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * If the source observable completes without emitting a value, it will emit\r\n * an error. The error will be created at that time by the optional\r\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\r\n *\r\n * ![](throwIfEmpty.png)\r\n *\r\n * ## Example\r\n *\r\n * Throw an error if the document wasn't clicked within 1 second\r\n *\r\n * ```ts\r\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\r\n *\r\n * const click$ = fromEvent(document, 'click');\r\n *\r\n * click$.pipe(\r\n *   takeUntil(timer(1000)),\r\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\r\n * )\r\n * .subscribe({\r\n *   next() {\r\n *    console.log('The document was clicked');\r\n *   },\r\n *   error(err) {\r\n *     console.error(err.message);\r\n *   }\r\n * });\r\n * ```\r\n *\r\n * @param errorFactory A factory function called to produce the\r\n * error to be thrown when the source observable completes without emitting a\r\n * value.\r\n * @return A function that returns an Observable that throws an error if the\r\n * source Observable completed without emitting.\r\n */\r\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          hasValue = true;\r\n          subscriber.next(value);\r\n        },\r\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\nfunction defaultErrorFactory() {\r\n  return new EmptyError();\r\n}\r\n", "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\r\nimport { Observable } from '../Observable';\r\nimport { OperatorFunction } from '../types';\r\nimport { filter } from './filter';\r\nimport { throwIfEmpty } from './throwIfEmpty';\r\nimport { defaultIfEmpty } from './defaultIfEmpty';\r\nimport { take } from './take';\r\n\r\n/**\r\n * Emits the single value at the specified `index` in a sequence of emissions\r\n * from the source Observable.\r\n *\r\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\r\n *\r\n * ![](elementAt.png)\r\n *\r\n * `elementAt` returns an Observable that emits the item at the specified\r\n * `index` in the source Observable, or a default value if that `index` is out\r\n * of range and the `default` argument is provided. If the `default` argument is\r\n * not given and the `index` is out of range, the output Observable will emit an\r\n * `ArgumentOutOfRangeError` error.\r\n *\r\n * ## Example\r\n *\r\n * Emit only the third click event\r\n *\r\n * ```ts\r\n * import { fromEvent, elementAt } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(elementAt(2));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // click 1 = nothing\r\n * // click 2 = nothing\r\n * // click 3 = MouseEvent object logged to console\r\n * ```\r\n *\r\n * @see {@link first}\r\n * @see {@link last}\r\n * @see {@link skip}\r\n * @see {@link single}\r\n * @see {@link take}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\r\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\r\n * Observable has completed before emitting the i-th `next` notification.\r\n *\r\n * @param {number} index Is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {T} [defaultValue] The default value returned for missing indices.\r\n * @return A function that returns an Observable that emits a single item, if\r\n * it is found. Otherwise, it will emit the default value if given. If not, it\r\n * emits an error.\r\n */\r\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\r\n  if (index < 0) {\r\n    throw new ArgumentOutOfRangeError();\r\n  }\r\n  const hasDefaultValue = arguments.length >= 2;\r\n  return (source: Observable<T>) =>\r\n    source.pipe(\r\n      filter((v, i) => i === index),\r\n      take(1),\r\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\r\n    );\r\n}\r\n", "/** prettier */\r\nimport { Observable } from '../Observable';\r\nimport { concat } from '../observable/concat';\r\nimport { of } from '../observable/of';\r\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\r\n\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function endWith<T, A extends unknown[] = T[]>(\r\n  ...valuesAndScheduler: [...A, SchedulerLike]\r\n): OperatorFunction<T, T | ValueFromArray<A>>;\r\n\r\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\r\n\r\n/**\r\n * Returns an observable that will emit all values from the source, then synchronously emit\r\n * the provided value(s) immediately after the source completes.\r\n *\r\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\r\n * types in TypeScript.\r\n *\r\n * This is useful for knowing when an observable ends. Particularly when paired with an\r\n * operator like {@link takeUntil}\r\n *\r\n * ![](endWith.png)\r\n *\r\n * ## Example\r\n *\r\n * Emit values to know when an interval starts and stops. The interval will\r\n * stop when a user clicks anywhere on the document.\r\n *\r\n * ```ts\r\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\r\n *\r\n * const ticker$ = interval(5000).pipe(\r\n *   map(() => 'tick')\r\n * );\r\n *\r\n * const documentClicks$ = fromEvent(document, 'click');\r\n *\r\n * ticker$.pipe(\r\n *   startWith('interval started'),\r\n *   takeUntil(documentClicks$),\r\n *   endWith('interval ended by click')\r\n * )\r\n * .subscribe(x => console.log(x));\r\n *\r\n * // Result (assuming a user clicks after 15 seconds)\r\n * // 'interval started'\r\n * // 'tick'\r\n * // 'tick'\r\n * // 'tick'\r\n * // 'interval ended by click'\r\n * ```\r\n *\r\n * @see {@link startWith}\r\n * @see {@link concat}\r\n * @see {@link takeUntil}\r\n *\r\n * @param values Items you want the modified Observable to emit last.\r\n * @return A function that returns an Observable that emits all values from the\r\n * source, then synchronously emits the provided value(s) immediately after the\r\n * source completes.\r\n */\r\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\r\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Falsy, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function every<T>(\r\n  predicate: BooleanConstructor,\r\n  thisArg: any\r\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function every<T, A>(\r\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg: A\r\n): OperatorFunction<T, boolean>;\r\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\r\n\r\n/**\r\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\r\n *\r\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\r\n * otherwise emit false, then complete.</span>\r\n *\r\n * ![](every.png)\r\n *\r\n * ## Example\r\n *\r\n * A simple example emitting true if all elements are less than 5, false otherwise\r\n *\r\n * ```ts\r\n * import { of, every } from 'rxjs';\r\n *\r\n * of(1, 2, 3, 4, 5, 6)\r\n *   .pipe(every(x => x < 5))\r\n *   .subscribe(x => console.log(x)); // -> false\r\n * ```\r\n *\r\n * @param {function} predicate A function for determining if an item meets a specified condition.\r\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\r\n * @return A function that returns an Observable of booleans that determines if\r\n * all items of the source Observable meet the condition specified.\r\n */\r\nexport function every<T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg?: any\r\n): OperatorFunction<T, boolean> {\r\n  return operate((source, subscriber) => {\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          if (!predicate.call(thisArg, value, index++, source)) {\r\n            subscriber.next(false);\r\n            subscriber.complete();\r\n          }\r\n        },\r\n        () => {\r\n          subscriber.next(true);\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { map } from './map';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function exhaustMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function exhaustMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: undefined\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function exhaustMap<T, I, R>(\r\n  project: (value: T, index: number) => ObservableInput<I>,\r\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to an Observable which is merged in the output\r\n * Observable only if the previous projected Observable has completed.\r\n *\r\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\r\n * these inner Observables using {@link exhaustAll}.</span>\r\n *\r\n * ![](exhaustMap.png)\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an (so-called \"inner\") Observable. When it projects a source value to\r\n * an Observable, the output Observable begins emitting the items emitted by\r\n * that projected Observable. However, `exhaustMap` ignores every new projected\r\n * Observable if the previous projected Observable has not yet completed. Once\r\n * that one completes, it will accept and flatten the next projected Observable\r\n * and repeat this process.\r\n *\r\n * ## Example\r\n *\r\n * Run a finite timer for each click, only if there is no currently active timer\r\n *\r\n * ```ts\r\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   exhaustMap(() => interval(1000).pipe(take(5)))\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link concatMap}\r\n * @see {@link exhaust}\r\n * @see {@link mergeMap}\r\n * @see {@link switchMap}\r\n *\r\n * @param {function(value: T, ?index: number): ObservableInput} project A function\r\n * that, when applied to an item emitted by the source Observable, returns an\r\n * Observable.\r\n * @return A function that returns an Observable containing projected\r\n * Observables of each item of the source, ignoring projected Observables that\r\n * start before their preceding Observable has completed.\r\n */\r\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  if (resultSelector) {\r\n    // DEPRECATED PATH\r\n    return (source: Observable<T>) =>\r\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\r\n  }\r\n  return operate((source, subscriber) => {\r\n    let index = 0;\r\n    let innerSub: Subscriber<T> | null = null;\r\n    let isComplete = false;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (outerValue) => {\r\n          if (!innerSub) {\r\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\r\n              innerSub = null;\r\n              isComplete && subscriber.complete();\r\n            });\r\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\r\n          }\r\n        },\r\n        () => {\r\n          isComplete = true;\r\n          !innerSub && subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\r\nimport { exhaustMap } from './exhaustMap';\r\nimport { identity } from '../util/identity';\r\n\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable by dropping\r\n * inner Observables while the previous inner Observable has not yet completed.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\r\n * next inner Observables while the current inner is still executing.</span>\r\n *\r\n * ![](exhaustAll.svg)\r\n *\r\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\r\n * higher-order Observable. Each time it observes one of these emitted inner\r\n * Observables, the output Observable begins emitting the items emitted by that\r\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\r\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\r\n * not yet completed. Once that one completes, it will accept and flatten the\r\n * next inner Observable and repeat this process.\r\n *\r\n * ## Example\r\n *\r\n * Run a finite timer for each click, only if there is no currently active timer\r\n *\r\n * ```ts\r\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const higherOrder = clicks.pipe(\r\n *   map(() => interval(1000).pipe(take(5)))\r\n * );\r\n * const result = higherOrder.pipe(exhaustAll());\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link combineLatestAll}\r\n * @see {@link concatAll}\r\n * @see {@link switchAll}\r\n * @see {@link switchMap}\r\n * @see {@link mergeAll}\r\n * @see {@link exhaustMap}\r\n * @see {@link zipAll}\r\n *\r\n * @return A function that returns an Observable that takes a source of\r\n * Observables and propagates the first Observable exclusively until it\r\n * completes before subscribing to the next.\r\n */\r\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\r\n  return exhaustMap(identity);\r\n}\r\n", "import { exhaustAll } from './exhaustAll';\r\n\r\n/**\r\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\r\n */\r\nexport const exhaust = exhaustAll;\r\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { mergeInternals } from './mergeInternals';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function expand<T, O extends ObservableInput<unknown>>(\r\n  project: (value: T, index: number) => O,\r\n  concurrent?: number,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/**\r\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\r\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\r\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\r\n */\r\nexport function expand<T, O extends ObservableInput<unknown>>(\r\n  project: (value: T, index: number) => O,\r\n  concurrent: number | undefined,\r\n  scheduler: SchedulerLike\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Recursively projects each source value to an Observable which is merged in\r\n * the output Observable.\r\n *\r\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\r\n * projection function to every source value as well as every output value.\r\n * It's recursive.</span>\r\n *\r\n * ![](expand.png)\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an Observable, and then merging those resulting Observables and\r\n * emitting the results of this merger. *Expand* will re-emit on the output\r\n * Observable every source value. Then, each output value is given to the\r\n * `project` function which returns an inner Observable to be merged on the\r\n * output Observable. Those output values resulting from the projection are also\r\n * given to the `project` function to produce new output values. This is how\r\n * *expand* behaves recursively.\r\n *\r\n * ## Example\r\n *\r\n * Start emitting the powers of two on every click, at most 10 of them\r\n *\r\n * ```ts\r\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const powersOfTwo = clicks.pipe(\r\n *   map(() => 1),\r\n *   expand(x => of(2 * x).pipe(delay(1000))),\r\n *   take(10)\r\n * );\r\n * powersOfTwo.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link mergeMap}\r\n * @see {@link mergeScan}\r\n *\r\n * @param {function(value: T, index: number) => Observable} project A function\r\n * that, when applied to an item emitted by the source or the output Observable,\r\n * returns an Observable.\r\n * @param {number} [concurrent=Infinity] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\r\n * each projected inner Observable.\r\n * @return A function that returns an Observable that emits the source values\r\n * and also result of applying the projection function to each value emitted on\r\n * the output Observable and merging the results of the Observables obtained\r\n * from this transformation.\r\n */\r\nexport function expand<T, O extends ObservableInput<unknown>>(\r\n  project: (value: T, index: number) => O,\r\n  concurrent = Infinity,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, ObservedValueOf<O>> {\r\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\r\n  return operate((source, subscriber) =>\r\n    mergeInternals(\r\n      // General merge params\r\n      source,\r\n      subscriber,\r\n      project,\r\n      concurrent,\r\n\r\n      // onBeforeNext\r\n      undefined,\r\n\r\n      // Expand-specific\r\n      true, // Use expand path\r\n      scheduler // Inner subscription scheduler\r\n    )\r\n  );\r\n}\r\n", "import { MonoTypeOperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\n/**\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * The specified function will also be called when the subscriber explicitly unsubscribes.\r\n *\r\n * ## Examples\r\n *\r\n * Execute callback function when the observable completes\r\n *\r\n * ```ts\r\n * import { interval, take, finalize } from 'rxjs';\r\n *\r\n * // emit value in sequence every 1 second\r\n * const source = interval(1000);\r\n * const example = source.pipe(\r\n *   take(5), //take only the first 5 values\r\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\r\n * );\r\n * const subscribe = example.subscribe(val => console.log(val));\r\n *\r\n * // results:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * // 'Sequence complete'\r\n * ```\r\n *\r\n * Execute callback function when the subscriber explicitly unsubscribes\r\n *\r\n * ```ts\r\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\r\n *\r\n * const source = interval(100).pipe(\r\n *   finalize(() => console.log('[finalize] Called')),\r\n *   tap({\r\n *     next: () => console.log('[next] Called'),\r\n *     error: () => console.log('[error] Not called'),\r\n *     complete: () => console.log('[tap complete] Not called')\r\n *   })\r\n * );\r\n *\r\n * const sub = source.subscribe({\r\n *   next: x => console.log(x),\r\n *   error: noop,\r\n *   complete: () => console.log('[complete] Not called')\r\n * });\r\n *\r\n * timer(150).subscribe(() => sub.unsubscribe());\r\n *\r\n * // results:\r\n * // '[next] Called'\r\n * // 0\r\n * // '[finalize] Called'\r\n * ```\r\n *\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return A function that returns an Observable that mirrors the source, but\r\n * will call the specified function on termination.\r\n */\r\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\r\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\r\n    try {\r\n      source.subscribe(subscriber);\r\n    } finally {\r\n      subscriber.add(callback);\r\n    }\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subscriber } from '../Subscriber';\r\nimport { OperatorFunction, TruthyTypesOf } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function find<T, S extends T, A>(\r\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\r\n  thisArg: A\r\n): OperatorFunction<T, S | undefined>;\r\nexport function find<T, S extends T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\r\n): OperatorFunction<T, S | undefined>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function find<T, A>(\r\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg: A\r\n): OperatorFunction<T, T | undefined>;\r\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\r\n/**\r\n * Emits only the first value emitted by the source Observable that meets some\r\n * condition.\r\n *\r\n * <span class=\"informal\">Finds the first value that passes some test and emits\r\n * that.</span>\r\n *\r\n * ![](find.png)\r\n *\r\n * `find` searches for the first item in the source Observable that matches the\r\n * specified condition embodied by the `predicate`, and returns the first\r\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\r\n * in `find`, and does not emit an error if a valid value is not found\r\n * (emits `undefined` instead).\r\n *\r\n * ## Example\r\n *\r\n * Find and emit the first click that happens on a DIV element\r\n *\r\n * ```ts\r\n * import { fromEvent, find } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link filter}\r\n * @see {@link first}\r\n * @see {@link findIndex}\r\n * @see {@link take}\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\r\n * A function called with each item to test for condition matching.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return A function that returns an Observable that emits the first item that\r\n * matches the condition.\r\n */\r\nexport function find<T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg?: any\r\n): OperatorFunction<T, T | undefined> {\r\n  return operate(createFind(predicate, thisArg, 'value'));\r\n}\r\n\r\nexport function createFind<T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg: any,\r\n  emit: 'value' | 'index'\r\n) {\r\n  const findIndex = emit === 'index';\r\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          const i = index++;\r\n          if (predicate.call(thisArg, value, i, source)) {\r\n            subscriber.next(findIndex ? i : value);\r\n            subscriber.complete();\r\n          }\r\n        },\r\n        () => {\r\n          subscriber.next(findIndex ? -1 : undefined);\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  };\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Falsy, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createFind } from './find';\r\n\r\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function findIndex<T, A>(\r\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg: A\r\n): OperatorFunction<T, number>;\r\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\r\n\r\n/**\r\n * Emits only the index of the first value emitted by the source Observable that\r\n * meets some condition.\r\n *\r\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\r\n * found value, not the value itself.</span>\r\n *\r\n * ![](findIndex.png)\r\n *\r\n * `findIndex` searches for the first item in the source Observable that matches\r\n * the specified condition embodied by the `predicate`, and returns the\r\n * (zero-based) index of the first occurrence in the source. Unlike\r\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\r\n * an error if a valid value is not found.\r\n *\r\n * ## Example\r\n *\r\n * Emit the index of first click that happens on a DIV element\r\n *\r\n * ```ts\r\n * import { fromEvent, findIndex } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link first}\r\n * @see {@link take}\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\r\n * A function called with each item to test for condition matching.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return A function that returns an Observable that emits the index of the\r\n * first item that matches the condition.\r\n */\r\nexport function findIndex<T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg?: any\r\n): OperatorFunction<T, number> {\r\n  return operate(createFind(predicate, thisArg, 'index'));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { EmptyError } from '../util/EmptyError';\r\nimport { OperatorFunction, TruthyTypesOf } from '../types';\r\nimport { filter } from './filter';\r\nimport { take } from './take';\r\nimport { defaultIfEmpty } from './defaultIfEmpty';\r\nimport { throwIfEmpty } from './throwIfEmpty';\r\nimport { identity } from '../util/identity';\r\n\r\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\r\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\r\nexport function first<T, S extends T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\r\n  defaultValue?: S\r\n): OperatorFunction<T, S>;\r\nexport function first<T, S extends T, D>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\r\n  defaultValue: D\r\n): OperatorFunction<T, S | D>;\r\nexport function first<T, D = T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D>;\r\n\r\n/**\r\n * Emits only the first value (or the first value that meets some condition)\r\n * emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Emits only the first value. Or emits only the first\r\n * value that passes some test.</span>\r\n *\r\n * ![](first.png)\r\n *\r\n * If called with no arguments, `first` emits the first value of the source\r\n * Observable, then completes. If called with a `predicate` function, `first`\r\n * emits the first value of the source that matches the specified condition. Throws an error if\r\n * `defaultValue` was not provided and a matching element is not found.\r\n *\r\n * ## Examples\r\n *\r\n * Emit only the first click that happens on the DOM\r\n *\r\n * ```ts\r\n * import { fromEvent, first } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(first());\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Emits the first click that happens on a DIV\r\n *\r\n * ```ts\r\n * import { fromEvent, first } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link take}\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * This is how `first()` is different from {@link take}(1) which completes instead.\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\r\n * An optional function called with each item to test for condition matching.\r\n * @param {D} [defaultValue] The default value emitted in case no valid value\r\n * was found on the source.\r\n * @return A function that returns an Observable that emits the first item that\r\n * matches the condition.\r\n */\r\nexport function first<T, D>(\r\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D> {\r\n  const hasDefaultValue = arguments.length >= 2;\r\n  return (source: Observable<T>) =>\r\n    source.pipe(\r\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\r\n      take(1),\r\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\r\n    );\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { Subject } from '../Subject';\r\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport interface BasicGroupByOptions<K, T> {\r\n  element?: undefined;\r\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\r\n  connector?: () => SubjectLike<T>;\r\n}\r\n\r\nexport interface GroupByOptionsWithElement<K, E, T> {\r\n  element: (value: T) => E;\r\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\r\n  connector?: () => SubjectLike<E>;\r\n}\r\n\r\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\r\n\r\nexport function groupBy<T, K, E>(\r\n  key: (value: T) => K,\r\n  options: GroupByOptionsWithElement<K, E, T>\r\n): OperatorFunction<T, GroupedObservable<K, E>>;\r\n\r\nexport function groupBy<T, K extends T>(\r\n  key: (value: T) => value is K\r\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\r\n\r\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\r\n\r\n/**\r\n * @deprecated use the options parameter instead.\r\n */\r\nexport function groupBy<T, K>(\r\n  key: (value: T) => K,\r\n  element: void,\r\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\r\n): OperatorFunction<T, GroupedObservable<K, T>>;\r\n\r\n/**\r\n * @deprecated use the options parameter instead.\r\n */\r\nexport function groupBy<T, K, R>(\r\n  key: (value: T) => K,\r\n  element?: (value: T) => R,\r\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\r\n): OperatorFunction<T, GroupedObservable<K, R>>;\r\n\r\n/**\r\n * Groups the items emitted by an Observable according to a specified criterion,\r\n * and emits these grouped items as `GroupedObservables`, one\r\n * {@link GroupedObservable} per group.\r\n *\r\n * ![](groupBy.png)\r\n *\r\n * When the Observable emits an item, a key is computed for this item with the key function.\r\n *\r\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\r\n * {@link GroupedObservable} for this key is created and emits.\r\n *\r\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\r\n * key is available as the `key` field of a {@link GroupedObservable} instance.\r\n *\r\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\r\n * returned by the element function.\r\n *\r\n * ## Examples\r\n *\r\n * Group objects by `id` and return as array\r\n *\r\n * ```ts\r\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\r\n *\r\n * of(\r\n *   { id: 1, name: 'JavaScript' },\r\n *   { id: 2, name: 'Parcel' },\r\n *   { id: 2, name: 'webpack' },\r\n *   { id: 1, name: 'TypeScript' },\r\n *   { id: 3, name: 'TSLint' }\r\n * ).pipe(\r\n *   groupBy(p => p.id),\r\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\r\n * )\r\n * .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\r\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\r\n * // [{ id: 3, name: 'TSLint' }]\r\n * ```\r\n *\r\n * Pivot data on the `id` field\r\n *\r\n * ```ts\r\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\r\n *\r\n * of(\r\n *   { id: 1, name: 'JavaScript' },\r\n *   { id: 2, name: 'Parcel' },\r\n *   { id: 2, name: 'webpack' },\r\n *   { id: 1, name: 'TypeScript' },\r\n *   { id: 3, name: 'TSLint' }\r\n * ).pipe(\r\n *   groupBy(p => p.id, { element: p => p.name }),\r\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\r\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\r\n * )\r\n * .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\r\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\r\n * // { id: 3, values: [ 'TSLint' ] }\r\n * ```\r\n *\r\n * @param key A function that extracts the key\r\n * for each item.\r\n * @param element A function that extracts the\r\n * return element for each item.\r\n * @param duration\r\n * A function that returns an Observable to determine how long each group should\r\n * exist.\r\n * @param connector Factory function to create an\r\n * intermediate Subject through which grouped elements are emitted.\r\n * @return A function that returns an Observable that emits GroupedObservables,\r\n * each of which corresponds to a unique key value and each of which emits\r\n * those items from the source Observable that share that key value.\r\n *\r\n * @deprecated Use the options parameter instead.\r\n */\r\nexport function groupBy<T, K, R>(\r\n  key: (value: T) => K,\r\n  element?: (value: T) => R,\r\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\r\n  connector?: () => Subject<R>\r\n): OperatorFunction<T, GroupedObservable<K, R>>;\r\n\r\n// Impl\r\nexport function groupBy<T, K, R>(\r\n  keySelector: (value: T) => K,\r\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\r\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\r\n  connector?: () => SubjectLike<any>\r\n): OperatorFunction<T, GroupedObservable<K, R>> {\r\n  return operate((source, subscriber) => {\r\n    let element: ((value: any) => any) | void;\r\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\r\n      element = elementOrOptions as ((value: any) => any);\r\n    } else {\r\n      ({ duration, element, connector } = elementOrOptions);\r\n    }\r\n\r\n    // A lookup for the groups that we have so far.\r\n    const groups = new Map<K, SubjectLike<any>>();\r\n\r\n    // Used for notifying all groups and the subscriber in the same way.\r\n    const notify = (cb: (group: Observer<any>) => void) => {\r\n      groups.forEach(cb);\r\n      cb(subscriber);\r\n    };\r\n\r\n    // Used to handle errors from the source, AND errors that occur during the\r\n    // next call from the source.\r\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\r\n\r\n    // The number of actively subscribed groups\r\n    let activeGroups = 0;\r\n\r\n    // Whether or not teardown was attempted on this subscription.\r\n    let teardownAttempted = false;\r\n\r\n    // Capturing a reference to this, because we need a handle to it\r\n    // in `createGroupedObservable` below. This is what we use to\r\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\r\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\r\n    // in cases where a user unsubscribes from the main resulting subscription, but\r\n    // still has groups from this subscription subscribed and would expect values from it\r\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\r\n    const groupBySourceSubscriber = new OperatorSubscriber(\r\n      subscriber,\r\n      (value: T) => {\r\n        // Because we have to notify all groups of any errors that occur in here,\r\n        // we have to add our own try/catch to ensure that those errors are propagated.\r\n        // OperatorSubscriber will only send the error to the main subscriber.\r\n        try {\r\n          const key = keySelector(value);\r\n\r\n          let group = groups.get(key);\r\n          if (!group) {\r\n            // Create our group subject\r\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\r\n\r\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\r\n            // because the grouped observable has special semantics around reference counting\r\n            // to ensure we don't sever our connection to the source prematurely.\r\n            const grouped = createGroupedObservable(key, group);\r\n            subscriber.next(grouped);\r\n\r\n            if (duration) {\r\n              const durationSubscriber = createOperatorSubscriber(\r\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\r\n                // when the duration subscription is torn down. That is important, because then\r\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\r\n                // after the connection to the source has been severed, they will get an\r\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\r\n                group as any,\r\n                () => {\r\n                  // Our duration notified! We can complete the group.\r\n                  // The group will be removed from the map in the finalization phase.\r\n                  group!.complete();\r\n                  durationSubscriber?.unsubscribe();\r\n                },\r\n                // Completions are also sent to the group, but just the group.\r\n                undefined,\r\n                // Errors on the duration subscriber are sent to the group\r\n                // but only the group. They are not sent to the main subscription.\r\n                undefined,\r\n                // Finalization: Remove this group from our map.\r\n                () => groups.delete(key)\r\n              );\r\n\r\n              // Start our duration notifier.\r\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\r\n            }\r\n          }\r\n\r\n          // Send the value to our group.\r\n          group.next(element ? element(value) : value);\r\n        } catch (err) {\r\n          handleError(err);\r\n        }\r\n      },\r\n      // Source completes.\r\n      () => notify((consumer) => consumer.complete()),\r\n      // Error from the source.\r\n      handleError,\r\n      // Free up memory.\r\n      // When the source subscription is _finally_ torn down, release the subjects and keys\r\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\r\n      // don't have to.\r\n      () => groups.clear(),\r\n      () => {\r\n        teardownAttempted = true;\r\n        // We only kill our subscription to the source if we have\r\n        // no active groups. As stated above, consider this scenario:\r\n        // source$.pipe(groupBy(fn), take(2)).\r\n        return activeGroups === 0;\r\n      }\r\n    );\r\n\r\n    // Subscribe to the source\r\n    source.subscribe(groupBySourceSubscriber);\r\n\r\n    /**\r\n     * Creates the actual grouped observable returned.\r\n     * @param key The key of the group\r\n     * @param groupSubject The subject that fuels the group\r\n     */\r\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\r\n      const result: any = new Observable<T>((groupSubscriber) => {\r\n        activeGroups++;\r\n        const innerSub = groupSubject.subscribe(groupSubscriber);\r\n        return () => {\r\n          innerSub.unsubscribe();\r\n          // We can kill the subscription to our source if we now have no more\r\n          // active groups subscribed, and a finalization was already attempted on\r\n          // the source.\r\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\r\n        };\r\n      });\r\n      result.key = key;\r\n      return result;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\r\n * contains a `key` property for the grouping.\r\n */\r\nexport interface GroupedObservable<K, T> extends Observable<T> {\r\n  /**\r\n   * The key value for the grouped notifications.\r\n   */\r\n  readonly key: K;\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits `false` if the input Observable emits any values, or emits `true` if the\r\n * input Observable completes without emitting any values.\r\n *\r\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\r\n *\r\n * ![](isEmpty.png)\r\n *\r\n * `isEmpty` transforms an Observable that emits values into an Observable that\r\n * emits a single boolean value representing whether or not any values were\r\n * emitted by the source Observable. As soon as the source Observable emits a\r\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\r\n * completes having not emitted anything, `isEmpty` will emit a `true` and\r\n * complete.\r\n *\r\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\r\n * a `false` value sooner.\r\n *\r\n * ## Examples\r\n *\r\n * Emit `false` for a non-empty Observable\r\n *\r\n * ```ts\r\n * import { Subject, isEmpty } from 'rxjs';\r\n *\r\n * const source = new Subject<string>();\r\n * const result = source.pipe(isEmpty());\r\n *\r\n * source.subscribe(x => console.log(x));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * source.next('a');\r\n * source.next('b');\r\n * source.next('c');\r\n * source.complete();\r\n *\r\n * // Outputs\r\n * // 'a'\r\n * // false\r\n * // 'b'\r\n * // 'c'\r\n * ```\r\n *\r\n * Emit `true` for an empty Observable\r\n *\r\n * ```ts\r\n * import { EMPTY, isEmpty } from 'rxjs';\r\n *\r\n * const result = EMPTY.pipe(isEmpty());\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // true\r\n * ```\r\n *\r\n * @see {@link count}\r\n * @see {@link EMPTY}\r\n *\r\n * @return A function that returns an Observable that emits boolean value\r\n * indicating whether the source Observable was empty or not.\r\n */\r\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        () => {\r\n          subscriber.next(false);\r\n          subscriber.complete();\r\n        },\r\n        () => {\r\n          subscriber.next(true);\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { EMPTY } from '../observable/empty';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Waits for the source to complete, then emits the last N values from the source,\r\n * as specified by the `count` argument.\r\n *\r\n * ![](takeLast.png)\r\n *\r\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\r\n * until the source completes. It then pushes all values in memory to the consumer, in the\r\n * order they were received from the source, then notifies the consumer that it is\r\n * complete.\r\n *\r\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\r\n * all values received until that point are emitted, and then completion is notified.\r\n *\r\n * **Warning**: Using `takeLast` with an observable that never completes will result\r\n * in an observable that never emits a value.\r\n *\r\n * ## Example\r\n *\r\n * Take the last 3 values of an Observable with many values\r\n *\r\n * ```ts\r\n * import { range, takeLast } from 'rxjs';\r\n *\r\n * const many = range(1, 100);\r\n * const lastThree = many.pipe(takeLast(3));\r\n * lastThree.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link take}\r\n * @see {@link takeUntil}\r\n * @see {@link takeWhile}\r\n * @see {@link skip}\r\n *\r\n * @param count The maximum number of values to emit from the end of\r\n * the sequence of values emitted by the source Observable.\r\n * @return A function that returns an Observable that emits at most the last\r\n * `count` values emitted by the source Observable.\r\n */\r\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\r\n  return count <= 0\r\n    ? () => EMPTY\r\n    : operate((source, subscriber) => {\r\n        // This buffer will hold the values we are going to emit\r\n        // when the source completes. Since we only want to take the\r\n        // last N values, we can't emit until we're sure we're not getting\r\n        // any more values.\r\n        let buffer: T[] = [];\r\n        source.subscribe(\r\n          createOperatorSubscriber(\r\n            subscriber,\r\n            (value) => {\r\n              // Add the most recent value onto the end of our buffer.\r\n              buffer.push(value);\r\n              // If our buffer is now larger than the number of values we\r\n              // want to take, we remove the oldest value from the buffer.\r\n              count < buffer.length && buffer.shift();\r\n            },\r\n            () => {\r\n              // The source completed, we now know what are last values\r\n              // are, emit them in the order they were received.\r\n              for (const value of buffer) {\r\n                subscriber.next(value);\r\n              }\r\n              subscriber.complete();\r\n            },\r\n            // Errors are passed through to the consumer\r\n            undefined,\r\n            () => {\r\n              // During finalization release the values in our buffer.\r\n              buffer = null!;\r\n            }\r\n          )\r\n        );\r\n      });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { EmptyError } from '../util/EmptyError';\r\nimport { OperatorFunction, TruthyTypesOf } from '../types';\r\nimport { filter } from './filter';\r\nimport { takeLast } from './takeLast';\r\nimport { throwIfEmpty } from './throwIfEmpty';\r\nimport { defaultIfEmpty } from './defaultIfEmpty';\r\nimport { identity } from '../util/identity';\r\n\r\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\r\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\r\nexport function last<T, S extends T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\r\n  defaultValue?: S\r\n): OperatorFunction<T, S>;\r\nexport function last<T, D = T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D>;\r\n\r\n/**\r\n * Returns an Observable that emits only the last item emitted by the source Observable.\r\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\r\n * the last item from the source Observable, the resulting Observable will emit the last item\r\n * from the source Observable that satisfies the predicate.\r\n *\r\n * ![](last.png)\r\n *\r\n * It will throw an error if the source completes without notification or one that matches the predicate. It\r\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\r\n * given default value if no notification is emitted or matches the predicate.\r\n *\r\n * ## Examples\r\n *\r\n * Last alphabet from the sequence\r\n *\r\n * ```ts\r\n * import { from, last } from 'rxjs';\r\n *\r\n * const source = from(['x', 'y', 'z']);\r\n * const result = source.pipe(last());\r\n *\r\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\r\n *\r\n * // Outputs\r\n * // Last alphabet: z\r\n * ```\r\n *\r\n * Default value when the value in the predicate is not matched\r\n *\r\n * ```ts\r\n * import { from, last } from 'rxjs';\r\n *\r\n * const source = from(['x', 'y', 'z']);\r\n * const result = source.pipe(last(char => char === 'a', 'not found'));\r\n *\r\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\r\n *\r\n * // Outputs\r\n * // 'a' is not found.\r\n * ```\r\n *\r\n * @see {@link skip}\r\n * @see {@link skipUntil}\r\n * @see {@link skipLast}\r\n * @see {@link skipWhile}\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\r\n * @param {any} [defaultValue] - An optional default value to provide if last\r\n * predicate isn't met or no values were emitted.\r\n * @return A function that returns an Observable that emits only the last item\r\n * satisfying the given condition from the source, or a NoSuchElementException\r\n * if no such items are emitted.\r\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\r\n */\r\nexport function last<T, D>(\r\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D> {\r\n  const hasDefaultValue = arguments.length >= 2;\r\n  return (source: Observable<T>) =>\r\n    source.pipe(\r\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\r\n      takeLast(1),\r\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\r\n    );\r\n}\r\n", "import { Notification } from '../Notification';\r\nimport { OperatorFunction, ObservableNotification } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Represents all of the notifications from the source Observable as `next`\r\n * emissions marked with their original types within {@link Notification}\r\n * objects.\r\n *\r\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\r\n * {@link Notification} objects, emitted as `next` on the output Observable.\r\n * </span>\r\n *\r\n * ![](materialize.png)\r\n *\r\n * `materialize` returns an Observable that emits a `next` notification for each\r\n * `next`, `error`, or `complete` emission of the source Observable. When the\r\n * source Observable emits `complete`, the output Observable will emit `next` as\r\n * a Notification of type \"complete\", and then it will emit `complete` as well.\r\n * When the source Observable emits `error`, the output will emit `next` as a\r\n * Notification of type \"error\", and then `complete`.\r\n *\r\n * This operator is useful for producing metadata of the source Observable, to\r\n * be consumed as `next` emissions. Use it in conjunction with\r\n * {@link dematerialize}.\r\n *\r\n * ## Example\r\n *\r\n * Convert a faulty Observable to an Observable of Notifications\r\n *\r\n * ```ts\r\n * import { of, materialize, map } from 'rxjs';\r\n *\r\n * const letters = of('a', 'b', 13, 'd');\r\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\r\n * const materialized = upperCase.pipe(materialize());\r\n *\r\n * materialized.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\r\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\r\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\r\n * ```\r\n *\r\n * @see {@link Notification}\r\n * @see {@link dematerialize}\r\n *\r\n * @return A function that returns an Observable that emits\r\n * {@link Notification} objects that wrap the original emissions from the\r\n * source Observable with metadata.\r\n */\r\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\r\n  return operate((source, subscriber) => {\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          subscriber.next(Notification.createNext(value));\r\n        },\r\n        () => {\r\n          subscriber.next(Notification.createComplete());\r\n          subscriber.complete();\r\n        },\r\n        (err) => {\r\n          subscriber.next(Notification.createError(err));\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { reduce } from './reduce';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\r\n * and when source Observable completes it emits a single item: the item with the largest value.\r\n *\r\n * ![](max.png)\r\n *\r\n * ## Examples\r\n *\r\n * Get the maximal value of a series of numbers\r\n *\r\n * ```ts\r\n * import { of, max } from 'rxjs';\r\n *\r\n * of(5, 4, 7, 2, 8)\r\n *   .pipe(max())\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // 8\r\n * ```\r\n *\r\n * Use a comparer function to get the maximal item\r\n *\r\n * ```ts\r\n * import { of, max } from 'rxjs';\r\n *\r\n * of(\r\n *   { age: 7, name: 'Foo' },\r\n *   { age: 5, name: 'Bar' },\r\n *   { age: 9, name: 'Beer' }\r\n * ).pipe(\r\n *   max((a, b) => a.age < b.age ? -1 : 1)\r\n * )\r\n * .subscribe(x => console.log(x.name));\r\n *\r\n * // Outputs\r\n * // 'Beer'\r\n * ```\r\n *\r\n * @see {@link min}\r\n *\r\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\r\n * value of two items.\r\n * @return A function that returns an Observable that emits item with the\r\n * largest value.\r\n */\r\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\r\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\r\n}\r\n", "import { mergeMap } from './mergeMap';\r\n\r\n/**\r\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\r\n */\r\nexport const flatMap = mergeMap;\r\n", "import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\r\nimport { mergeMap } from './mergeMap';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\r\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  concurrent?: number\r\n): OperatorFunction<unknown, ObservedValueOf<O>>;\r\n/**\r\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\r\n * Details: https://rxjs.dev/deprecations/resultSelector\r\n */\r\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\r\n  concurrent?: number\r\n): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to the same Observable which is merged multiple\r\n * times in the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\r\n * to the same inner Observable.</span>\r\n *\r\n * ![](mergeMapTo.png)\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then merges those resulting Observables into one\r\n * single Observable, which is the output Observable.\r\n *\r\n * ## Example\r\n *\r\n * For each click event, start an interval Observable ticking every 1 second\r\n *\r\n * ```ts\r\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link concatMapTo}\r\n * @see {@link merge}\r\n * @see {@link mergeAll}\r\n * @see {@link mergeMap}\r\n * @see {@link mergeScan}\r\n * @see {@link switchMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @param {number} [concurrent=Infinity] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @return A function that returns an Observable that emits items from the\r\n * given `innerObservable`.\r\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\r\n */\r\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\r\n  concurrent: number = Infinity\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  if (isFunction(resultSelector)) {\r\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\r\n  }\r\n  if (typeof resultSelector === 'number') {\r\n    concurrent = resultSelector;\r\n  }\r\n  return mergeMap(() => innerObservable, concurrent);\r\n}\r\n", "import { ObservableInput, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { mergeInternals } from './mergeInternals';\r\n\r\n/**\r\n * Applies an accumulator function over the source Observable where the\r\n * accumulator function itself returns an Observable, then each intermediate\r\n * Observable returned is merged into the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\r\n * by the accumulator are merged into the outer Observable.</span>\r\n *\r\n * The first parameter of the `mergeScan` is an `accumulator` function which is\r\n * being called every time the source Observable emits a value. `mergeScan` will\r\n * subscribe to the value returned by the `accumulator` function and will emit\r\n * values to the subscriber emitted by inner Observable.\r\n *\r\n * The `accumulator` function is being called with three parameters passed to it:\r\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\r\n * whose value is initially set to the `seed` parameter (the second parameter\r\n * passed to the `mergeScan` operator).\r\n *\r\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\r\n * source Observable emits without inner Observable emitting, the `acc` will be\r\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\r\n * will internally remember it and it will be passed to the `accumulator`\r\n * function as `acc` parameter the next time source emits.\r\n *\r\n * The `value` parameter of the `accumulator` function is the value emitted by the\r\n * source Observable, while the `index` is a number which represent the order of the\r\n * current emission by the source Observable. It starts with 0.\r\n *\r\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\r\n * to Infinity. It represents the maximum number of inner Observable subscriptions\r\n * at a time.\r\n *\r\n * ## Example\r\n *\r\n * Count the number of click events\r\n *\r\n * ```ts\r\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\r\n *\r\n * const click$ = fromEvent(document, 'click');\r\n * const one$ = click$.pipe(map(() => 1));\r\n * const seed = 0;\r\n * const count$ = one$.pipe(\r\n *   mergeScan((acc, one) => of(acc + one), seed)\r\n * );\r\n *\r\n * count$.subscribe(x => console.log(x));\r\n *\r\n * // Results:\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * // ...and so on for each click\r\n * ```\r\n *\r\n * @see {@link scan}\r\n * @see {@link switchScan}\r\n *\r\n * @param {function(acc: R, value: T): Observable<R>} accumulator\r\n * The accumulator function called on each source value.\r\n * @param seed The initial accumulation value.\r\n * @param {number} [concurrent=Infinity] Maximum number of\r\n * input Observables being subscribed to concurrently.\r\n * @return A function that returns an Observable of the accumulated values.\r\n */\r\nexport function mergeScan<T, R>(\r\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\r\n  seed: R,\r\n  concurrent = Infinity\r\n): OperatorFunction<T, R> {\r\n  return operate((source, subscriber) => {\r\n    // The accumulated state.\r\n    let state = seed;\r\n\r\n    return mergeInternals(\r\n      source,\r\n      subscriber,\r\n      (value, index) => accumulator(state, value, index),\r\n      concurrent,\r\n      (value) => {\r\n        state = value;\r\n      },\r\n      false,\r\n      undefined,\r\n      () => (state = null!)\r\n    );\r\n  });\r\n}\r\n", "import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { mergeAll } from './mergeAll';\r\nimport { popNumber, popScheduler } from '../util/args';\r\nimport { from } from '../observable/from';\r\n\r\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\r\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\r\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\r\nexport function merge<T, A extends readonly unknown[]>(\r\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\r\n): OperatorFunction<T, T | A[number]>;\r\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\r\nexport function merge<T, A extends readonly unknown[]>(\r\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\r\n): OperatorFunction<T, T | A[number]>;\r\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\r\nexport function merge<T, A extends readonly unknown[]>(\r\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\r\n): OperatorFunction<T, T | A[number]>;\r\n\r\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\r\n  const scheduler = popScheduler(args);\r\n  const concurrent = popNumber(args, Infinity);\r\n  args = argsOrArgArray(args);\r\n\r\n  return operate((source, subscriber) => {\r\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\r\n  });\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\r\nimport { merge } from './merge';\r\n\r\n/**\r\n * Merge the values from all observables to a single observable result.\r\n *\r\n * Creates an observable, that when subscribed to, subscribes to the source\r\n * observable, and all other sources provided as arguments. All values from\r\n * every source are emitted from the resulting subscription.\r\n *\r\n * When all sources complete, the resulting observable will complete.\r\n *\r\n * When any source errors, the resulting observable will error.\r\n *\r\n * ## Example\r\n *\r\n * Joining all outputs from multiple user input event streams\r\n *\r\n * ```ts\r\n * import { fromEvent, map, mergeWith } from 'rxjs';\r\n *\r\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\r\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\r\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\r\n *\r\n * mousemoves$\r\n *   .pipe(mergeWith(clicks$, dblclicks$))\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // result (assuming user interactions)\r\n * // 'mousemove'\r\n * // 'mousemove'\r\n * // 'mousemove'\r\n * // 'click'\r\n * // 'click'\r\n * // 'dblclick'\r\n * ```\r\n *\r\n * @see {@link merge}\r\n *\r\n * @param otherSources the sources to combine the current source with.\r\n * @return A function that returns an Observable that merges the values from\r\n * all given Observables.\r\n */\r\nexport function mergeWith<T, A extends readonly unknown[]>(\r\n  ...otherSources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]> {\r\n  return merge(...otherSources);\r\n}\r\n", "import { reduce } from './reduce';\r\nimport { MonoTypeOperatorFunction } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\r\n * and when source Observable completes it emits a single item: the item with the smallest value.\r\n *\r\n * ![](min.png)\r\n *\r\n * ## Examples\r\n *\r\n * Get the minimal value of a series of numbers\r\n *\r\n * ```ts\r\n * import { of, min } from 'rxjs';\r\n *\r\n * of(5, 4, 7, 2, 8)\r\n *   .pipe(min())\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // Outputs\r\n * // 2\r\n * ```\r\n *\r\n * Use a comparer function to get the minimal item\r\n *\r\n * ```ts\r\n * import { of, min } from 'rxjs';\r\n *\r\n * of(\r\n *   { age: 7, name: 'Foo' },\r\n *   { age: 5, name: 'Bar' },\r\n *   { age: 9, name: 'Beer' }\r\n * ).pipe(\r\n *   min((a, b) => a.age < b.age ? -1 : 1)\r\n * )\r\n * .subscribe(x => console.log(x.name));\r\n *\r\n * // Outputs\r\n * // 'Bar'\r\n * ```\r\n *\r\n * @see {@link max}\r\n *\r\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\r\n * value of two items.\r\n * @return A function that returns an Observable that emits item with the\r\n * smallest value.\r\n */\r\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\r\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\r\n}\r\n", "import { Subject } from '../Subject';\r\nimport { Observable } from '../Observable';\r\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\r\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { connect } from './connect';\r\n\r\n/**\r\n * An operator that creates a {@link ConnectableObservable}, that when connected,\r\n * with the `connect` method, will use the provided subject to multicast the values\r\n * from the source to all consumers.\r\n *\r\n * @param subject The subject to multicast through.\r\n * @return A function that returns a {@link ConnectableObservable}\r\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\r\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\r\n * `multicast(subject), refCount()` is equivalent to\r\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\r\n\r\n/**\r\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\r\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\r\n * {@link connect} operator.\r\n *\r\n * @param subject The subject used to multicast.\r\n * @param selector A setup function to setup the multicast\r\n * @return A function that returns an observable that mirrors the observable returned by the selector.\r\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\r\n * `multicast(subject, selector)` is equivalent to\r\n * `connect(selector, { connector: () => subject })`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function multicast<T, O extends ObservableInput<any>>(\r\n  subject: Subject<T>,\r\n  selector: (shared: Observable<T>) => O\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n\r\n/**\r\n * An operator that creates a {@link ConnectableObservable}, that when connected,\r\n * with the `connect` method, will use the provided subject to multicast the values\r\n * from the source to all consumers.\r\n *\r\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\r\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\r\n * the source.\r\n * @return A function that returns a {@link ConnectableObservable}\r\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\r\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\r\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\r\n * `share({ connector: () => new BehaviorSubject('test') })`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\r\n\r\n/**\r\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\r\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\r\n * {@link connect} operator.\r\n *\r\n * @param subjectFactory A factory that creates the subject used to multicast.\r\n * @param selector A function to setup the multicast and select the output.\r\n * @return A function that returns an observable that mirrors the observable returned by the selector.\r\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\r\n * `multicast(subjectFactory, selector)` is equivalent to\r\n * `connect(selector, { connector: subjectFactory })`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function multicast<T, O extends ObservableInput<any>>(\r\n  subjectFactory: () => Subject<T>,\r\n  selector: (shared: Observable<T>) => O\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n\r\n/**\r\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\r\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\r\n * behaviors.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function multicast<T, R>(\r\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\r\n  selector?: (source: Observable<T>) => Observable<R>\r\n): OperatorFunction<T, R> {\r\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\r\n\r\n  if (isFunction(selector)) {\r\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\r\n    // going to return a ConnectableObservable. We can use `connect` to do what we\r\n    // need to do.\r\n    return connect(selector, {\r\n      connector: subjectFactory,\r\n    });\r\n  }\r\n\r\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\r\n\r\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\r\n  sources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]>;\r\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\r\n  ...sources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]>;\r\n\r\n/**\r\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\r\n * that was passed.\r\n *\r\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\r\n *\r\n * ![](onErrorResumeNext.png)\r\n *\r\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\r\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\r\n * as the source.\r\n *\r\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\r\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\r\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\r\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\r\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\r\n * be happening until there is no more Observables left in the series, at which point returned Observable will\r\n * complete - even if the last subscribed stream ended with an error.\r\n *\r\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\r\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\r\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\r\n * an error.\r\n *\r\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\r\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\r\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\r\n *\r\n *\r\n * ## Example\r\n *\r\n * Subscribe to the next Observable after map fails\r\n *\r\n * ```ts\r\n * import { of, onErrorResumeNext, map } from 'rxjs';\r\n *\r\n * of(1, 2, 3, 0)\r\n *   .pipe(\r\n *     map(x => {\r\n *       if (x === 0) {\r\n *         throw Error();\r\n *       }\r\n *\r\n *       return 10 / x;\r\n *     }),\r\n *     onErrorResumeNext(of(1, 2, 3))\r\n *   )\r\n *   .subscribe({\r\n *     next: val => console.log(val),\r\n *     error: err => console.log(err),          // Will never be called.\r\n *     complete: () => console.log('that\\'s it!')\r\n *   });\r\n *\r\n * // Logs:\r\n * // 10\r\n * // 5\r\n * // 3.3333333333333335\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 'that's it!'\r\n * ```\r\n *\r\n * @see {@link concat}\r\n * @see {@link catchError}\r\n *\r\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\r\n * @return A function that returns an Observable that emits values from source\r\n * Observable, but - if it errors - subscribes to the next passed Observable\r\n * and so on, until it completes or runs out of Observables.\r\n */\r\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\r\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]> {\r\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\r\n  // result to be `A[number][]` - completely dropping the ObservableInput part\r\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\r\n  // asserted explicitly.\r\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\r\n\r\n  return (source) => oERNCreate(source, ...nextSources);\r\n}\r\n\r\n/**\r\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\r\n */\r\nexport const onErrorResumeNext = onErrorResumeNextWith;\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Groups pairs of consecutive emissions together and emits them as an array of\r\n * two values.\r\n *\r\n * <span class=\"informal\">Puts the current value and previous value together as\r\n * an array, and emits that.</span>\r\n *\r\n * ![](pairwise.png)\r\n *\r\n * The Nth emission from the source Observable will cause the output Observable\r\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\r\n * pair. For this reason, `pairwise` emits on the second and subsequent\r\n * emissions from the source Observable, but not on the first emission, because\r\n * there is no previous value in that case.\r\n *\r\n * ## Example\r\n *\r\n * On every click (starting from the second), emit the relative distance to the previous click\r\n *\r\n * ```ts\r\n * import { fromEvent, pairwise, map } from 'rxjs';\r\n *\r\n * const clicks = fromEvent<PointerEvent>(document, 'click');\r\n * const pairs = clicks.pipe(pairwise());\r\n * const distance = pairs.pipe(\r\n *   map(([first, second]) => {\r\n *     const x0 = first.clientX;\r\n *     const y0 = first.clientY;\r\n *     const x1 = second.clientX;\r\n *     const y1 = second.clientY;\r\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\r\n *   })\r\n * );\r\n *\r\n * distance.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n *\r\n * @return A function that returns an Observable of pairs (as arrays) of\r\n * consecutive values from the source Observable.\r\n */\r\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\r\n  return operate((source, subscriber) => {\r\n    let prev: T;\r\n    let hasPrev = false;\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        const p = prev;\r\n        prev = value;\r\n        hasPrev && subscriber.next([p, value]);\r\n        hasPrev = true;\r\n      })\r\n    );\r\n  });\r\n}\r\n", "import { map } from './map';\r\nimport { OperatorFunction } from '../types';\r\n\r\n/* tslint:disable:max-line-length */\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\r\n  k1: K1,\r\n  k2: K2,\r\n  k3: K3\r\n): OperatorFunction<T, T[K1][K2][K3]>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\r\n  k1: K1,\r\n  k2: K2,\r\n  k3: K3,\r\n  k4: K4\r\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<\r\n  T,\r\n  K1 extends keyof T,\r\n  K2 extends keyof T[K1],\r\n  K3 extends keyof T[K1][K2],\r\n  K4 extends keyof T[K1][K2][K3],\r\n  K5 extends keyof T[K1][K2][K3][K4]\r\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<\r\n  T,\r\n  K1 extends keyof T,\r\n  K2 extends keyof T[K1],\r\n  K3 extends keyof T[K1][K2],\r\n  K4 extends keyof T[K1][K2][K3],\r\n  K5 extends keyof T[K1][K2][K3][K4],\r\n  K6 extends keyof T[K1][K2][K3][K4][K5]\r\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<\r\n  T,\r\n  K1 extends keyof T,\r\n  K2 extends keyof T[K1],\r\n  K3 extends keyof T[K1][K2],\r\n  K4 extends keyof T[K1][K2][K3],\r\n  K5 extends keyof T[K1][K2][K3][K4],\r\n  K6 extends keyof T[K1][K2][K3][K4][K5]\r\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\r\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\r\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Maps each source value to its specified nested property.\r\n *\r\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\r\n * the nested properties of every emitted value.</span>\r\n *\r\n * ![](pluck.png)\r\n *\r\n * Given a list of strings or numbers describing a path to a property, retrieves\r\n * the value of a specified nested property from all values in the source\r\n * Observable. If a property can't be resolved, it will return `undefined` for\r\n * that value.\r\n *\r\n * ## Example\r\n *\r\n * Map every click to the tagName of the clicked target element\r\n *\r\n * ```ts\r\n * import { fromEvent, pluck } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\r\n *\r\n * tagNames.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link map}\r\n *\r\n * @param properties The nested properties to pluck from each source\r\n * value.\r\n * @return A function that returns an Observable of property values from the\r\n * source values.\r\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\r\n */\r\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\r\n  const length = properties.length;\r\n  if (length === 0) {\r\n    throw new Error('list of properties cannot be empty.');\r\n  }\r\n  return map((x) => {\r\n    let currentProp: any = x;\r\n    for (let i = 0; i < length; i++) {\r\n      const p = currentProp?.[properties[i]];\r\n      if (typeof p !== 'undefined') {\r\n        currentProp = p;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n    return currentProp;\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subject } from '../Subject';\r\nimport { multicast } from './multicast';\r\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\r\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\r\nimport { connect } from './connect';\r\n\r\n/**\r\n * Returns a connectable observable that, when connected, will multicast\r\n * all values through a single underlying {@link Subject} instance.\r\n *\r\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\r\n * `source.pipe(publish())` is equivalent to\r\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\r\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\r\n * `source.pipe(publish(), refCount())` is equivalent to\r\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\r\n\r\n/**\r\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\r\n * provides an observable view of it to a `selector` function, takes the observable result of\r\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\r\n * the subject to the original source.\r\n *\r\n * @param selector A function used to setup multicasting prior to automatic connection.\r\n *\r\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\r\n * `publish(selector)` is equivalent to `connect(selector)`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\r\n\r\n/**\r\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\r\n * before it begins emitting items to those Observers that have subscribed to it.\r\n *\r\n * <span class=\"informal\">Makes a cold Observable hot</span>\r\n *\r\n * ![](publish.png)\r\n *\r\n * ## Examples\r\n *\r\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\r\n * and subscribe\r\n *\r\n * ```ts\r\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\r\n *\r\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\r\n *   .pipe(map(([, number]) => number));\r\n *\r\n * source$\r\n *   .pipe(\r\n *     publish(multicasted$ =>\r\n *       merge(\r\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\r\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\r\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\r\n *       )\r\n *     )\r\n *   )\r\n *   .subscribe();\r\n *\r\n * // Results every two seconds\r\n * // Stream 1: 1\r\n * // Stream 2: 1\r\n * // Stream 3: 1\r\n * // ...\r\n * // Stream 1: 9\r\n * // Stream 2: 9\r\n * // Stream 3: 9\r\n * ```\r\n *\r\n * @see {@link publishLast}\r\n * @see {@link publishReplay}\r\n * @see {@link publishBehavior}\r\n *\r\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\r\n * as needed, without causing multiple subscriptions to the source sequence.\r\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\r\n * @return A function that returns a ConnectableObservable that upon connection\r\n * causes the source Observable to emit items to its Observers.\r\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\r\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\r\n * behaviors.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\r\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { BehaviorSubject } from '../BehaviorSubject';\r\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\r\nimport { UnaryFunction } from '../types';\r\n\r\n/**\r\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\r\n *\r\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\r\n * @return A function that returns a {@link ConnectableObservable}\r\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\r\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\r\n * `source.pipe(publishBehavior(initValue))` is equivalent to\r\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\r\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\r\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\r\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\r\n  // Note that this has *never* supported the selector function.\r\n  return (source) => {\r\n    const subject = new BehaviorSubject<T>(initialValue);\r\n    return new ConnectableObservable(source, () => subject);\r\n  };\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { AsyncSubject } from '../AsyncSubject';\r\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\r\nimport { UnaryFunction } from '../types';\r\n\r\n/**\r\n * Returns a connectable observable sequence that shares a single subscription to the\r\n * underlying sequence containing only the last notification.\r\n *\r\n * ![](publishLast.png)\r\n *\r\n * Similar to {@link publish}, but it waits until the source observable completes and stores\r\n * the last emitted value.\r\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\r\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\r\n * immediately get that last stored value and complete.\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\r\n *\r\n * const connectable = <ConnectableObservable<number>>interval(1000)\r\n *   .pipe(\r\n *     tap(x => console.log('side effect', x)),\r\n *     take(3),\r\n *     publishLast()\r\n *   );\r\n *\r\n * connectable.subscribe({\r\n *   next: x => console.log('Sub. A', x),\r\n *   error: err => console.log('Sub. A Error', err),\r\n *   complete: () => console.log('Sub. A Complete')\r\n * });\r\n *\r\n * connectable.subscribe({\r\n *   next: x => console.log('Sub. B', x),\r\n *   error: err => console.log('Sub. B Error', err),\r\n *   complete: () => console.log('Sub. B Complete')\r\n * });\r\n *\r\n * connectable.connect();\r\n *\r\n * // Results:\r\n * // 'side effect 0'   - after one second\r\n * // 'side effect 1'   - after two seconds\r\n * // 'side effect 2'   - after three seconds\r\n * // 'Sub. A 2'        - immediately after 'side effect 2'\r\n * // 'Sub. B 2'\r\n * // 'Sub. A Complete'\r\n * // 'Sub. B Complete'\r\n * ```\r\n *\r\n * @see {@link ConnectableObservable}\r\n * @see {@link publish}\r\n * @see {@link publishReplay}\r\n * @see {@link publishBehavior}\r\n *\r\n * @return A function that returns an Observable that emits elements of a\r\n * sequence produced by multicasting the source sequence.\r\n * @deprecated Will be removed in v8. To create a connectable observable with an\r\n * {@link AsyncSubject} under the hood, use {@link connectable}.\r\n * `source.pipe(publishLast())` is equivalent to\r\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\r\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\r\n * `source.pipe(publishLast(), refCount())` is equivalent to\r\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\r\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\r\n  return (source) => {\r\n    const subject = new AsyncSubject<T>();\r\n    return new ConnectableObservable(source, () => subject);\r\n  };\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { ReplaySubject } from '../ReplaySubject';\r\nimport { multicast } from './multicast';\r\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/**\r\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\r\n * internally.\r\n *\r\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\r\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\r\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\r\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\r\n * {@link ReplaySubject} under the hood, use {@link connectable}.\r\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\r\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\r\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\r\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\r\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publishReplay<T>(\r\n  bufferSize?: number,\r\n  windowTime?: number,\r\n  timestampProvider?: TimestampProvider\r\n): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\r\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\r\n * the `selector` function, which then returns an observable that is subscribed to before\r\n * \"connecting\" the source to the internal `ReplaySubject`.\r\n *\r\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\r\n *\r\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\r\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\r\n * @param selector A function used to setup the multicast.\r\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\r\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\r\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\r\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publishReplay<T, O extends ObservableInput<any>>(\r\n  bufferSize: number | undefined,\r\n  windowTime: number | undefined,\r\n  selector: (shared: Observable<T>) => O,\r\n  timestampProvider?: TimestampProvider\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n\r\n/**\r\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\r\n * internally.\r\n *\r\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\r\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\r\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\r\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\r\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\r\n * {@link ReplaySubject} under the hood, use {@link connectable}.\r\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\r\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\r\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\r\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\r\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publishReplay<T, O extends ObservableInput<any>>(\r\n  bufferSize: number | undefined,\r\n  windowTime: number | undefined,\r\n  selector: undefined,\r\n  timestampProvider: TimestampProvider\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n\r\n/**\r\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\r\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\r\n * behaviors.\r\n * Details: https://rxjs.dev/deprecations/multicasting\r\n */\r\nexport function publishReplay<T, R>(\r\n  bufferSize?: number,\r\n  windowTime?: number,\r\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\r\n  timestampProvider?: TimestampProvider\r\n) {\r\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\r\n    timestampProvider = selectorOrScheduler;\r\n  }\r\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\r\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\r\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\r\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\r\n}\r\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\r\nimport { raceInit } from '../observable/race';\r\nimport { operate } from '../util/lift';\r\nimport { identity } from '../util/identity';\r\n\r\n/**\r\n * Creates an Observable that mirrors the first source Observable to emit a next,\r\n * error or complete notification from the combination of the Observable to which\r\n * the operator is applied and supplied Observables.\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * import { interval, map, raceWith } from 'rxjs';\r\n *\r\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\r\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\r\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\r\n *\r\n * obs1\r\n *   .pipe(raceWith(obs2, obs3))\r\n *   .subscribe(winner => console.log(winner));\r\n *\r\n * // Outputs\r\n * // a series of 'fast one'\r\n * ```\r\n *\r\n * @param otherSources Sources used to race for which Observable emits first.\r\n * @return A function that returns an Observable that mirrors the output of the\r\n * first Observable to emit an item.\r\n */\r\nexport function raceWith<T, A extends readonly unknown[]>(\r\n  ...otherSources: [...ObservableInputTuple<A>]\r\n): OperatorFunction<T, T | A[number]> {\r\n  return !otherSources.length\r\n    ? identity\r\n    : operate((source, subscriber) => {\r\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\r\n      });\r\n}\r\n", "import { Subscription } from '../Subscription';\r\nimport { EMPTY } from '../observable/empty';\r\nimport { operate } from '../util/lift';\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { timer } from '../observable/timer';\r\n\r\nexport interface RepeatConfig {\r\n  /**\r\n   * The number of times to repeat the source. Defaults to `Infinity`.\r\n   */\r\n  count?: number;\r\n\r\n  /**\r\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\r\n   * If a function, it will provide the number of times the source has been subscribed to,\r\n   * and the return value should be a valid observable input that will notify when the source\r\n   * should be repeated. If the notifier observable is empty, the result will complete.\r\n   */\r\n  delay?: number | ((count: number) => ObservableInput<any>);\r\n}\r\n\r\n/**\r\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\r\n *\r\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\r\n *\r\n * ![](repeat.png)\r\n *\r\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\r\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\r\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\r\n * as it can be used to restart a source again from scratch.\r\n *\r\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\r\n * `repeat` will resubscribe if the source completes.\r\n *\r\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\r\n *\r\n * - `repeat(0)` returns an empty observable\r\n * - `repeat()` will repeat forever\r\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\r\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\r\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\r\n *\r\n * ## Example\r\n *\r\n * Repeat a message stream\r\n *\r\n * ```ts\r\n * import { of, repeat } from 'rxjs';\r\n *\r\n * const source = of('Repeat message');\r\n * const result = source.pipe(repeat(3));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results\r\n * // 'Repeat message'\r\n * // 'Repeat message'\r\n * // 'Repeat message'\r\n * ```\r\n *\r\n * Repeat 3 values, 2 times\r\n *\r\n * ```ts\r\n * import { interval, take, repeat } from 'rxjs';\r\n *\r\n * const source = interval(1000);\r\n * const result = source.pipe(take(3), repeat(2));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results every second\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 0\r\n * // 1\r\n * // 2\r\n * ```\r\n *\r\n * Defining two complex repeats with delays on the same source.\r\n * Note that the second repeat cannot be called until the first\r\n * repeat as exhausted it's count.\r\n *\r\n * ```ts\r\n * import { defer, of, repeat } from 'rxjs';\r\n *\r\n * const source = defer(() => {\r\n *    return of(`Hello, it is ${new Date()}`)\r\n * });\r\n *\r\n * source.pipe(\r\n *    // Repeat 3 times with a delay of 1 second between repetitions\r\n *    repeat({\r\n *      count: 3,\r\n *      delay: 1000,\r\n *    }),\r\n *\r\n *    // *Then* repeat forever, but with an exponential step-back\r\n *    // maxing out at 1 minute.\r\n *    repeat({\r\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\r\n *    })\r\n * )\r\n * ```\r\n *\r\n * @see {@link repeatWhen}\r\n * @see {@link retry}\r\n *\r\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\r\n * an empty Observable.\r\n */\r\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\r\n  let count = Infinity;\r\n  let delay: RepeatConfig['delay'];\r\n\r\n  if (countOrConfig != null) {\r\n    if (typeof countOrConfig === 'object') {\r\n      ({ count = Infinity, delay } = countOrConfig);\r\n    } else {\r\n      count = countOrConfig;\r\n    }\r\n  }\r\n\r\n  return count <= 0\r\n    ? () => EMPTY\r\n    : operate((source, subscriber) => {\r\n        let soFar = 0;\r\n        let sourceSub: Subscription | null;\r\n\r\n        const resubscribe = () => {\r\n          sourceSub?.unsubscribe();\r\n          sourceSub = null;\r\n          if (delay != null) {\r\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\r\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\r\n              notifierSubscriber.unsubscribe();\r\n              subscribeToSource();\r\n            });\r\n            notifier.subscribe(notifierSubscriber);\r\n          } else {\r\n            subscribeToSource();\r\n          }\r\n        };\r\n\r\n        const subscribeToSource = () => {\r\n          let syncUnsub = false;\r\n          sourceSub = source.subscribe(\r\n            createOperatorSubscriber(subscriber, undefined, () => {\r\n              if (++soFar < count) {\r\n                if (sourceSub) {\r\n                  resubscribe();\r\n                } else {\r\n                  syncUnsub = true;\r\n                }\r\n              } else {\r\n                subscriber.complete();\r\n              }\r\n            })\r\n          );\r\n\r\n          if (syncUnsub) {\r\n            resubscribe();\r\n          }\r\n        };\r\n\r\n        subscribeToSource();\r\n      });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { Subject } from '../Subject';\r\nimport { Subscription } from '../Subscription';\r\n\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\r\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\r\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\r\n * this method will resubscribe to the source Observable.\r\n *\r\n * ![](repeatWhen.png)\r\n *\r\n * ## Example\r\n *\r\n * Repeat a message stream on click\r\n *\r\n * ```ts\r\n * import { of, fromEvent, repeatWhen } from 'rxjs';\r\n *\r\n * const source = of('Repeat message');\r\n * const documentClick$ = fromEvent(document, 'click');\r\n *\r\n * const result = source.pipe(repeatWhen(() => documentClick$));\r\n *\r\n * result.subscribe(data => console.log(data))\r\n * ```\r\n *\r\n * @see {@link repeat}\r\n * @see {@link retry}\r\n * @see {@link retryWhen}\r\n *\r\n * @param notifier Function that receives an Observable of notifications with\r\n * which a user can `complete` or `error`, aborting the repetition.\r\n * @return A function that returns an `ObservableInput` that mirrors the source\r\n * Observable with the exception of a `complete`.\r\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\r\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\r\n */\r\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let innerSub: Subscription | null;\r\n    let syncResub = false;\r\n    let completions$: Subject<void>;\r\n    let isNotifierComplete = false;\r\n    let isMainComplete = false;\r\n\r\n    /**\r\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\r\n     */\r\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\r\n    /**\r\n     * Gets the subject to send errors through. If it doesn't exist,\r\n     * we know we need to setup the notifier.\r\n     */\r\n    const getCompletionSubject = () => {\r\n      if (!completions$) {\r\n        completions$ = new Subject();\r\n\r\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\r\n        // In the main subscription -- in `subscribeForRepeatWhen`.\r\n        innerFrom(notifier(completions$)).subscribe(\r\n          createOperatorSubscriber(\r\n            subscriber,\r\n            () => {\r\n              if (innerSub) {\r\n                subscribeForRepeatWhen();\r\n              } else {\r\n                // If we don't have an innerSub yet, that's because the inner subscription\r\n                // call hasn't even returned yet. We've arrived here synchronously.\r\n                // So we flag that we want to resub, such that we can ensure finalization\r\n                // happens before we resubscribe.\r\n                syncResub = true;\r\n              }\r\n            },\r\n            () => {\r\n              isNotifierComplete = true;\r\n              checkComplete();\r\n            }\r\n          )\r\n        );\r\n      }\r\n      return completions$;\r\n    };\r\n\r\n    const subscribeForRepeatWhen = () => {\r\n      isMainComplete = false;\r\n\r\n      innerSub = source.subscribe(\r\n        createOperatorSubscriber(subscriber, undefined, () => {\r\n          isMainComplete = true;\r\n          // Check to see if we are complete, and complete if so.\r\n          // If we are not complete. Get the subject. This calls the `notifier` function.\r\n          // If that function fails, it will throw and `.next()` will not be reached on this\r\n          // line. The thrown error is caught by the _complete handler in this\r\n          // `OperatorSubscriber` and handled appropriately.\r\n          !checkComplete() && getCompletionSubject().next();\r\n        })\r\n      );\r\n\r\n      if (syncResub) {\r\n        // Ensure that the inner subscription is torn down before\r\n        // moving on to the next subscription in the synchronous case.\r\n        // If we don't do this here, all inner subscriptions will not be\r\n        // torn down until the entire observable is done.\r\n        innerSub.unsubscribe();\r\n        // It is important to null this out. Not only to free up memory, but\r\n        // to make sure code above knows we are in a subscribing state to\r\n        // handle synchronous resubscription.\r\n        innerSub = null;\r\n        // We may need to do this multiple times, so reset the flags.\r\n        syncResub = false;\r\n        // Resubscribe\r\n        subscribeForRepeatWhen();\r\n      }\r\n    };\r\n\r\n    // Start the subscription\r\n    subscribeForRepeatWhen();\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { Subscription } from '../Subscription';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { identity } from '../util/identity';\r\nimport { timer } from '../observable/timer';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\r\n * or an object described by this interface.\r\n */\r\nexport interface RetryConfig {\r\n  /**\r\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\r\n   * resubscribe on errors infinite number of times.\r\n   */\r\n  count?: number;\r\n  /**\r\n   * The number of milliseconds to delay before retrying, OR a function to\r\n   * return a notifier for delaying. If a function is given, that function should\r\n   * return a notifier that, when it emits will retry the source. If the notifier\r\n   * completes _without_ emitting, the resulting observable will complete without error,\r\n   * if the notifier errors, the error will be pushed to the result.\r\n   */\r\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\r\n  /**\r\n   * Whether or not to reset the retry counter when the retried subscription\r\n   * emits its first value.\r\n   */\r\n  resetOnSuccess?: boolean;\r\n}\r\n\r\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\r\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\r\n *\r\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\r\n * `count` resubscriptions rather than propagating the `error` call.\r\n *\r\n * ![](retry.png)\r\n *\r\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\r\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\r\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\r\n *\r\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\r\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\r\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\r\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\r\n *\r\n * const source = interval(1000);\r\n * const result = source.pipe(\r\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\r\n *   retry(2) // retry 2 times on error\r\n * );\r\n *\r\n * result.subscribe({\r\n *   next: value => console.log(value),\r\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\r\n * });\r\n *\r\n * // Output:\r\n * // 0..1..2..3..4..5..\r\n * // 0..1..2..3..4..5..\r\n * // 0..1..2..3..4..5..\r\n * // 'Error!: Retried 2 times then quit!'\r\n * ```\r\n *\r\n * @see {@link retryWhen}\r\n *\r\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\r\n * @return A function that returns an Observable that will resubscribe to the\r\n * source stream when the source stream errors, at most `count` times.\r\n */\r\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\r\n  let config: RetryConfig;\r\n  if (configOrCount && typeof configOrCount === 'object') {\r\n    config = configOrCount;\r\n  } else {\r\n    config = {\r\n      count: configOrCount as number,\r\n    };\r\n  }\r\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\r\n\r\n  return count <= 0\r\n    ? identity\r\n    : operate((source, subscriber) => {\r\n        let soFar = 0;\r\n        let innerSub: Subscription | null;\r\n        const subscribeForRetry = () => {\r\n          let syncUnsub = false;\r\n          innerSub = source.subscribe(\r\n            createOperatorSubscriber(\r\n              subscriber,\r\n              (value) => {\r\n                // If we're resetting on success\r\n                if (resetOnSuccess) {\r\n                  soFar = 0;\r\n                }\r\n                subscriber.next(value);\r\n              },\r\n              // Completions are passed through to consumer.\r\n              undefined,\r\n              (err) => {\r\n                if (soFar++ < count) {\r\n                  // We are still under our retry count\r\n                  const resub = () => {\r\n                    if (innerSub) {\r\n                      innerSub.unsubscribe();\r\n                      innerSub = null;\r\n                      subscribeForRetry();\r\n                    } else {\r\n                      syncUnsub = true;\r\n                    }\r\n                  };\r\n\r\n                  if (delay != null) {\r\n                    // The user specified a retry delay.\r\n                    // They gave us a number, use a timer, otherwise, it's a function,\r\n                    // and we're going to call it to get a notifier.\r\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\r\n                    const notifierSubscriber = createOperatorSubscriber(\r\n                      subscriber,\r\n                      () => {\r\n                        // After we get the first notification, we\r\n                        // unsubscribe from the notifier, because we don't want anymore\r\n                        // and we resubscribe to the source.\r\n                        notifierSubscriber.unsubscribe();\r\n                        resub();\r\n                      },\r\n                      () => {\r\n                        // The notifier completed without emitting.\r\n                        // The author is telling us they want to complete.\r\n                        subscriber.complete();\r\n                      }\r\n                    );\r\n                    notifier.subscribe(notifierSubscriber);\r\n                  } else {\r\n                    // There was no notifier given. Just resub immediately.\r\n                    resub();\r\n                  }\r\n                } else {\r\n                  // We're past our maximum number of retries.\r\n                  // Just send along the error.\r\n                  subscriber.error(err);\r\n                }\r\n              }\r\n            )\r\n          );\r\n          if (syncUnsub) {\r\n            innerSub.unsubscribe();\r\n            innerSub = null;\r\n            subscribeForRetry();\r\n          }\r\n        };\r\n        subscribeForRetry();\r\n      });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { Subject } from '../Subject';\r\nimport { Subscription } from '../Subscription';\r\n\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\r\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\r\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\r\n * subscription. Otherwise this method will resubscribe to the source Observable.\r\n *\r\n * ![](retryWhen.png)\r\n *\r\n * Retry an observable sequence on error based on custom criteria.\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\r\n *\r\n * const source = interval(1000);\r\n * const result = source.pipe(\r\n *   map(value => {\r\n *     if (value > 5) {\r\n *       // error will be picked up by retryWhen\r\n *       throw value;\r\n *     }\r\n *     return value;\r\n *   }),\r\n *   retryWhen(errors =>\r\n *     errors.pipe(\r\n *       // log error message\r\n *       tap(value => console.log(`Value ${ value } was too high!`)),\r\n *       // restart in 5 seconds\r\n *       delayWhen(value => timer(value * 1000))\r\n *     )\r\n *   )\r\n * );\r\n *\r\n * result.subscribe(value => console.log(value));\r\n *\r\n * // results:\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // 4\r\n * // 5\r\n * // 'Value 6 was too high!'\r\n * // - Wait 5 seconds then repeat\r\n * ```\r\n *\r\n * @see {@link retry}\r\n *\r\n * @param notifier Function that receives an Observable of notifications with which a\r\n * user can `complete` or `error`, aborting the retry.\r\n * @return A function that returns an `ObservableInput` that mirrors the source\r\n * Observable with the exception of an `error`.\r\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\r\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\r\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\r\n */\r\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let innerSub: Subscription | null;\r\n    let syncResub = false;\r\n    let errors$: Subject<any>;\r\n\r\n    const subscribeForRetryWhen = () => {\r\n      innerSub = source.subscribe(\r\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\r\n          if (!errors$) {\r\n            errors$ = new Subject();\r\n            innerFrom(notifier(errors$)).subscribe(\r\n              createOperatorSubscriber(subscriber, () =>\r\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\r\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\r\n                // call hasn't even returned yet. We've arrived here synchronously.\r\n                // So we flag that we want to resub, such that we can ensure finalization\r\n                // happens before we resubscribe.\r\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\r\n              )\r\n            );\r\n          }\r\n          if (errors$) {\r\n            // We have set up the notifier without error.\r\n            errors$.next(err);\r\n          }\r\n        })\r\n      );\r\n\r\n      if (syncResub) {\r\n        // Ensure that the inner subscription is torn down before\r\n        // moving on to the next subscription in the synchronous case.\r\n        // If we don't do this here, all inner subscriptions will not be\r\n        // torn down until the entire observable is done.\r\n        innerSub.unsubscribe();\r\n        innerSub = null;\r\n        // We may need to do this multiple times, so reset the flag.\r\n        syncResub = false;\r\n        // Resubscribe\r\n        subscribeForRetryWhen();\r\n      }\r\n    };\r\n\r\n    // Start the subscription\r\n    subscribeForRetryWhen();\r\n  });\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { noop } from '../util/noop';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits the most recently emitted value from the source Observable whenever\r\n * another Observable, the `notifier`, emits.\r\n *\r\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\r\n * the `notifier` `ObservableInput` emits something.</span>\r\n *\r\n * ![](sample.png)\r\n *\r\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\r\n * looks at the source Observable and emits whichever value it has most recently\r\n * emitted since the previous sampling, unless the source has not emitted\r\n * anything since the previous sampling. The `notifier` is subscribed to as soon\r\n * as the output Observable is subscribed.\r\n *\r\n * ## Example\r\n *\r\n * On every click, sample the most recent `seconds` timer\r\n *\r\n * ```ts\r\n * import { fromEvent, interval, sample } from 'rxjs';\r\n *\r\n * const seconds = interval(1000);\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = seconds.pipe(sample(clicks));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounce}\r\n * @see {@link sampleTime}\r\n * @see {@link throttle}\r\n *\r\n * @param notifier The `ObservableInput` to use for sampling the\r\n * source Observable.\r\n * @return A function that returns an Observable that emits the results of\r\n * sampling the values emitted by the source Observable whenever the notifier\r\n * Observable emits value or completes.\r\n */\r\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    let lastValue: T | null = null;\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        hasValue = true;\r\n        lastValue = value;\r\n      })\r\n    );\r\n    innerFrom(notifier).subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        () => {\r\n          if (hasValue) {\r\n            hasValue = false;\r\n            const value = lastValue!;\r\n            lastValue = null;\r\n            subscriber.next(value);\r\n          }\r\n        },\r\n        noop\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { sample } from './sample';\r\nimport { interval } from '../observable/interval';\r\n\r\n/**\r\n * Emits the most recently emitted value from the source Observable within\r\n * periodic time intervals.\r\n *\r\n * <span class=\"informal\">Samples the source Observable at periodic time\r\n * intervals, emitting what it samples.</span>\r\n *\r\n * ![](sampleTime.png)\r\n *\r\n * `sampleTime` periodically looks at the source Observable and emits whichever\r\n * value it has most recently emitted since the previous sampling, unless the\r\n * source has not emitted anything since the previous sampling. The sampling\r\n * happens periodically in time every `period` milliseconds (or the time unit\r\n * defined by the optional `scheduler` argument). The sampling starts as soon as\r\n * the output Observable is subscribed.\r\n *\r\n * ## Example\r\n *\r\n * Every second, emit the most recent click at most once\r\n *\r\n * ```ts\r\n * import { fromEvent, sampleTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(sampleTime(1000));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sample}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {number} period The sampling period expressed in milliseconds or the\r\n * time unit determined internally by the optional `scheduler`.\r\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\r\n * managing the timers that handle the sampling.\r\n * @return A function that returns an Observable that emits the results of\r\n * sampling the values emitted by the source Observable at the specified time\r\n * interval.\r\n */\r\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\r\n  return sample(interval(period, scheduler));\r\n}\r\n", "import { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { scanInternals } from './scanInternals';\r\n\r\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\r\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\r\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\r\n\r\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\r\n\r\n/**\r\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\r\n * to each value from the source after an initial state is established -- either via\r\n * a `seed` value (second argument), or from the first value from the source.\r\n *\r\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\r\n * accumulation state after each update</span>\r\n *\r\n * ![](scan.png)\r\n *\r\n * This operator maintains an internal state and emits it after processing each value as follows:\r\n *\r\n * 1. First value arrives\r\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\r\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\r\n * 2. Let `state = accumulator(state, value)`.\r\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\r\n * 3. Emit `state`.\r\n * 4. Next value arrives, let `value = nextValue`, go to 2.\r\n *\r\n * ## Examples\r\n *\r\n * An average of previous numbers. This example shows how\r\n * not providing a `seed` can prime the stream with the\r\n * first value from the source.\r\n *\r\n * ```ts\r\n * import { of, scan, map } from 'rxjs';\r\n *\r\n * const numbers$ = of(1, 2, 3);\r\n *\r\n * numbers$\r\n *   .pipe(\r\n *     // Get the sum of the numbers coming in.\r\n *     scan((total, n) => total + n),\r\n *     // Get the average by dividing the sum by the total number\r\n *     // received so far (which is 1 more than the zero-based index).\r\n *     map((sum, index) => sum / (index + 1))\r\n *   )\r\n *   .subscribe(console.log);\r\n * ```\r\n *\r\n * The Fibonacci sequence. This example shows how you can use\r\n * a seed to prime accumulation process. Also... you know... Fibonacci.\r\n * So important to like, computers and stuff that its whiteboarded\r\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\r\n *\r\n * ```ts\r\n * import { interval, scan, map, startWith } from 'rxjs';\r\n *\r\n * const firstTwoFibs = [0, 1];\r\n * // An endless stream of Fibonacci numbers.\r\n * const fibonacci$ = interval(1000).pipe(\r\n *   // Scan to get the fibonacci numbers (after 0, 1)\r\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\r\n *   // Get the second number in the tuple, it's the one you calculated\r\n *   map(([, n]) => n),\r\n *   // Start with our first two digits :)\r\n *   startWith(...firstTwoFibs)\r\n * );\r\n *\r\n * fibonacci$.subscribe(console.log);\r\n * ```\r\n *\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link reduce}\r\n * @see {@link switchScan}\r\n *\r\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\r\n * acquired.\r\n * @param seed The initial state. If this is not provided, the first value from the source will\r\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\r\n * will be processed by the accumulator function. If this is provided, all values will go through\r\n * the accumulator function.\r\n * @return A function that returns an Observable of the accumulated values.\r\n */\r\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\r\n  // providing a seed of `undefined` *should* be valid and trigger\r\n  // hasSeed! so don't use `seed !== undefined` checks!\r\n  // For this reason, we have to check it here at the original call site\r\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\r\n  // means they didn't provide anything or if they literally provided `undefined`\r\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\r\n}\r\n", "import { OperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Compares all values of two observables in sequence using an optional comparator function\r\n * and returns an observable of a single boolean value representing whether or not the two sequences\r\n * are equal.\r\n *\r\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\r\n *\r\n * ![](sequenceEqual.png)\r\n *\r\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\r\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\r\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\r\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\r\n * observables completes, the operator will wait for the other observable to complete; If the other\r\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\r\n * completes or emits after the other completes, the returned observable will never complete.\r\n *\r\n * ## Example\r\n *\r\n * Figure out if the Konami code matches\r\n *\r\n * ```ts\r\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\r\n *\r\n * const codes = from([\r\n *   'ArrowUp',\r\n *   'ArrowUp',\r\n *   'ArrowDown',\r\n *   'ArrowDown',\r\n *   'ArrowLeft',\r\n *   'ArrowRight',\r\n *   'ArrowLeft',\r\n *   'ArrowRight',\r\n *   'KeyB',\r\n *   'KeyA',\r\n *   'Enter', // no start key, clearly.\r\n * ]);\r\n *\r\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\r\n * const matches = keys.pipe(\r\n *   bufferCount(11, 1),\r\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\r\n * );\r\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\r\n * ```\r\n *\r\n * @see {@link combineLatest}\r\n * @see {@link zip}\r\n * @see {@link withLatestFrom}\r\n *\r\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\r\n * @param comparator An optional function to compare each value pair.\r\n *\r\n * @return A function that returns an Observable that emits a single boolean\r\n * value representing whether or not the values emitted by the source\r\n * Observable and provided `ObservableInput` were equal in sequence.\r\n */\r\nexport function sequenceEqual<T>(\r\n  compareTo: ObservableInput<T>,\r\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\r\n): OperatorFunction<T, boolean> {\r\n  return operate((source, subscriber) => {\r\n    // The state for the source observable\r\n    const aState = createState<T>();\r\n    // The state for the compareTo observable;\r\n    const bState = createState<T>();\r\n\r\n    /** A utility to emit and complete */\r\n    const emit = (isEqual: boolean) => {\r\n      subscriber.next(isEqual);\r\n      subscriber.complete();\r\n    };\r\n\r\n    /**\r\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\r\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\r\n     * is used for both streams.\r\n     */\r\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\r\n      const sequenceEqualSubscriber = createOperatorSubscriber(\r\n        subscriber,\r\n        (a: T) => {\r\n          const { buffer, complete } = otherState;\r\n          if (buffer.length === 0) {\r\n            // If there's no values in the other buffer\r\n            // and the other stream is complete, we know\r\n            // this isn't a match, because we got one more value.\r\n            // Otherwise, we push onto our buffer, so when the other\r\n            // stream emits, it can pull this value off our buffer and check it\r\n            // at the appropriate time.\r\n            complete ? emit(false) : selfState.buffer.push(a);\r\n          } else {\r\n            // If the other stream *does* have values in its buffer,\r\n            // pull the oldest one off so we can compare it to what we\r\n            // just got. If it wasn't a match, emit `false` and complete.\r\n            !comparator(a, buffer.shift()!) && emit(false);\r\n          }\r\n        },\r\n        () => {\r\n          // Or observable completed\r\n          selfState.complete = true;\r\n          const { complete, buffer } = otherState;\r\n          // If the other observable is also complete, and there's\r\n          // still stuff left in their buffer, it doesn't match, if their\r\n          // buffer is empty, then it does match. This is because we can't\r\n          // possibly get more values here anymore.\r\n          complete && emit(buffer.length === 0);\r\n          // Be sure to clean up our stream as soon as possible if we can.\r\n          sequenceEqualSubscriber?.unsubscribe();\r\n        }\r\n      );\r\n\r\n      return sequenceEqualSubscriber;\r\n    };\r\n\r\n    // Subscribe to each source.\r\n    source.subscribe(createSubscriber(aState, bState));\r\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\r\n  });\r\n}\r\n\r\n/**\r\n * A simple structure for the data used to test each sequence\r\n */\r\ninterface SequenceState<T> {\r\n  /** A temporary store for arrived values before they are checked */\r\n  buffer: T[];\r\n  /** Whether or not the sequence source has completed. */\r\n  complete: boolean;\r\n}\r\n\r\n/**\r\n * Creates a simple structure that is used to represent\r\n * data used to test each sequence.\r\n */\r\nfunction createState<T>(): SequenceState<T> {\r\n  return {\r\n    buffer: [],\r\n    complete: false,\r\n  };\r\n}\r\n", "import { innerFrom } from '../observable/innerFrom';\r\nimport { Subject } from '../Subject';\r\nimport { SafeSubscriber } from '../Subscriber';\r\nimport { Subscription } from '../Subscription';\r\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\nexport interface ShareConfig<T> {\r\n  /**\r\n   * The factory used to create the subject that will connect the source observable to\r\n   * multicast consumers.\r\n   */\r\n  connector?: () => SubjectLike<T>;\r\n  /**\r\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\r\n   * allows the resulting observable to be \"retried\" in the event of an error.\r\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\r\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\r\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\r\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\r\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\r\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\r\n   */\r\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\r\n  /**\r\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\r\n   * allows the resulting observable to be \"repeated\" after it is done.\r\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\r\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\r\n   * or resubscriptions will resubscribe to that same subject.\r\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\r\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\r\n   */\r\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\r\n  /**\r\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\r\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\r\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\r\n   * again.\r\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\r\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\r\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\r\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\r\n   */\r\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\r\n}\r\n\r\nexport function share<T>(): MonoTypeOperatorFunction<T>;\r\n\r\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\r\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\r\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\r\n * This is an alias for `multicast(() => new Subject()), refCount()`.\r\n *\r\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\r\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\r\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\r\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\r\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\r\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\r\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\r\n *\r\n * ![](share.png)\r\n *\r\n * ## Example\r\n *\r\n * Generate new multicast Observable from the `source` Observable value\r\n *\r\n * ```ts\r\n * import { interval, tap, map, take, share } from 'rxjs';\r\n *\r\n * const source = interval(1000).pipe(\r\n *   tap(x => console.log('Processing: ', x)),\r\n *   map(x => x * x),\r\n *   take(6),\r\n *   share()\r\n * );\r\n *\r\n * source.subscribe(x => console.log('subscription 1: ', x));\r\n * source.subscribe(x => console.log('subscription 2: ', x));\r\n *\r\n * // Logs:\r\n * // Processing: 0\r\n * // subscription 1: 0\r\n * // subscription 2: 0\r\n * // Processing: 1\r\n * // subscription 1: 1\r\n * // subscription 2: 1\r\n * // Processing: 2\r\n * // subscription 1: 4\r\n * // subscription 2: 4\r\n * // Processing: 3\r\n * // subscription 1: 9\r\n * // subscription 2: 9\r\n * // Processing: 4\r\n * // subscription 1: 16\r\n * // subscription 2: 16\r\n * // Processing: 5\r\n * // subscription 1: 25\r\n * // subscription 2: 25\r\n * ```\r\n *\r\n * ## Example with notifier factory: Delayed reset\r\n *\r\n * ```ts\r\n * import { interval, take, share, timer } from 'rxjs';\r\n *\r\n * const source = interval(1000).pipe(\r\n *   take(3),\r\n *   share({\r\n *     resetOnRefCountZero: () => timer(1000)\r\n *   })\r\n * );\r\n *\r\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\r\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\r\n *\r\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\r\n *\r\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\r\n *\r\n * // Logs:\r\n * // subscription 1:  0\r\n * // (subscription 1 unsubscribes here)\r\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\r\n * // subscription 2:  1\r\n * // subscription 2:  2\r\n * // (subscription 2 unsubscribes here)\r\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\r\n * // subscription 3:  0\r\n * // subscription 3:  1\r\n * // subscription 3:  2\r\n * ```\r\n *\r\n * @see {@link shareReplay}\r\n *\r\n * @return A function that returns an Observable that mirrors the source.\r\n */\r\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\r\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\r\n  // It's necessary to use a wrapper here, as the _operator_ must be\r\n  // referentially transparent. Otherwise, it cannot be used in calls to the\r\n  // static `pipe` function - to create a partial pipeline.\r\n  //\r\n  // The _operator function_ - the function returned by the _operator_ - will\r\n  // not be referentially transparent - as it shares its source - but the\r\n  // _operator function_ is called when the complete pipeline is composed via a\r\n  // call to a source observable's `pipe` method - not when the static `pipe`\r\n  // function is called.\r\n  return (wrapperSource) => {\r\n    let connection: SafeSubscriber<T> | undefined;\r\n    let resetConnection: Subscription | undefined;\r\n    let subject: SubjectLike<T> | undefined;\r\n    let refCount = 0;\r\n    let hasCompleted = false;\r\n    let hasErrored = false;\r\n\r\n    const cancelReset = () => {\r\n      resetConnection?.unsubscribe();\r\n      resetConnection = undefined;\r\n    };\r\n    // Used to reset the internal state to a \"cold\"\r\n    // state, as though it had never been subscribed to.\r\n    const reset = () => {\r\n      cancelReset();\r\n      connection = subject = undefined;\r\n      hasCompleted = hasErrored = false;\r\n    };\r\n    const resetAndUnsubscribe = () => {\r\n      // We need to capture the connection before\r\n      // we reset (if we need to reset).\r\n      const conn = connection;\r\n      reset();\r\n      conn?.unsubscribe();\r\n    };\r\n\r\n    return operate<T, T>((source, subscriber) => {\r\n      refCount++;\r\n      if (!hasErrored && !hasCompleted) {\r\n        cancelReset();\r\n      }\r\n\r\n      // Create the subject if we don't have one yet. Grab a local reference to\r\n      // it as well, which avoids non-null assertions when using it and, if we\r\n      // connect to it now, then error/complete need a reference after it was\r\n      // reset.\r\n      const dest = (subject = subject ?? connector());\r\n\r\n      // Add the finalization directly to the subscriber - instead of returning it -\r\n      // so that the handling of the subscriber's unsubscription will be wired\r\n      // up _before_ the subscription to the source occurs. This is done so that\r\n      // the assignment to the source connection's `closed` property will be seen\r\n      // by synchronous firehose sources.\r\n      subscriber.add(() => {\r\n        refCount--;\r\n\r\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\r\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\r\n        // configuration.\r\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\r\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\r\n        }\r\n      });\r\n\r\n      // The following line adds the subscription to the subscriber passed.\r\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\r\n      dest.subscribe(subscriber);\r\n\r\n      if (\r\n        !connection &&\r\n        // Check this shareReplay is still activate - it can be reset to 0\r\n        // and be \"unsubscribed\" _before_ it actually subscribes.\r\n        // If we were to subscribe then, it'd leak and get stuck.\r\n        refCount > 0\r\n      ) {\r\n        // We need to create a subscriber here - rather than pass an observer and\r\n        // assign the returned subscription to connection - because it's possible\r\n        // for reentrant subscriptions to the shared observable to occur and in\r\n        // those situations we want connection to be already-assigned so that we\r\n        // don't create another connection to the source.\r\n        connection = new SafeSubscriber({\r\n          next: (value) => dest.next(value),\r\n          error: (err) => {\r\n            hasErrored = true;\r\n            cancelReset();\r\n            resetConnection = handleReset(reset, resetOnError, err);\r\n            dest.error(err);\r\n          },\r\n          complete: () => {\r\n            hasCompleted = true;\r\n            cancelReset();\r\n            resetConnection = handleReset(reset, resetOnComplete);\r\n            dest.complete();\r\n          },\r\n        });\r\n        innerFrom(source).subscribe(connection);\r\n      }\r\n    })(wrapperSource);\r\n  };\r\n}\r\n\r\nfunction handleReset<T extends unknown[] = never[]>(\r\n  reset: () => void,\r\n  on: boolean | ((...args: T) => ObservableInput<any>),\r\n  ...args: T\r\n): Subscription | undefined {\r\n  if (on === true) {\r\n    reset();\r\n    return;\r\n  }\r\n\r\n  if (on === false) {\r\n    return;\r\n  }\r\n\r\n  const onSubscriber = new SafeSubscriber({\r\n    next: () => {\r\n      onSubscriber.unsubscribe();\r\n      reset();\r\n    },\r\n  });\r\n\r\n  return innerFrom(on(...args)).subscribe(onSubscriber);\r\n}\r\n", "import { ReplaySubject } from '../ReplaySubject';\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { share } from './share';\r\n\r\nexport interface ShareReplayConfig {\r\n  bufferSize?: number;\r\n  windowTime?: number;\r\n  refCount: boolean;\r\n  scheduler?: SchedulerLike;\r\n}\r\n\r\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\r\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Share source and replay specified number of emissions on subscription.\r\n *\r\n * This operator is a specialization of `replay` that connects to a source observable\r\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\r\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\r\n * but an errored source can be retried.\r\n *\r\n * ## Why use `shareReplay`?\r\n *\r\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\r\n * that you do not wish to be executed amongst multiple subscribers.\r\n * It may also be valuable in situations where you know you will have late subscribers to\r\n * a stream that need access to previously emitted values.\r\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\r\n *\r\n * ## Reference counting\r\n *\r\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\r\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\r\n * (and potentially run for ever).\r\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\r\n * observables which we want to keep running instead of having to do the expensive setup again.\r\n *\r\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\r\n * happens when the operators internal reference counter drops to zero.\r\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\r\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\r\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\r\n *\r\n * ## Examples\r\n *\r\n * Example with a third subscriber coming late to the party\r\n *\r\n * ```ts\r\n * import { interval, take, shareReplay } from 'rxjs';\r\n *\r\n * const shared$ = interval(2000).pipe(\r\n *   take(6),\r\n *   shareReplay(3)\r\n * );\r\n *\r\n * shared$.subscribe(x => console.log('sub A: ', x));\r\n * shared$.subscribe(y => console.log('sub B: ', y));\r\n *\r\n * setTimeout(() => {\r\n *   shared$.subscribe(y => console.log('sub C: ', y));\r\n * }, 11000);\r\n *\r\n * // Logs:\r\n * // (after ~2000 ms)\r\n * // sub A: 0\r\n * // sub B: 0\r\n * // (after ~4000 ms)\r\n * // sub A: 1\r\n * // sub B: 1\r\n * // (after ~6000 ms)\r\n * // sub A: 2\r\n * // sub B: 2\r\n * // (after ~8000 ms)\r\n * // sub A: 3\r\n * // sub B: 3\r\n * // (after ~10000 ms)\r\n * // sub A: 4\r\n * // sub B: 4\r\n * // (after ~11000 ms, sub C gets the last 3 values)\r\n * // sub C: 2\r\n * // sub C: 3\r\n * // sub C: 4\r\n * // (after ~12000 ms)\r\n * // sub A: 5\r\n * // sub B: 5\r\n * // sub C: 5\r\n * ```\r\n *\r\n * Example for `refCount` usage\r\n *\r\n * ```ts\r\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\r\n *\r\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\r\n *   tap({\r\n *     subscribe: () => console.log(`${ name }: subscribed`),\r\n *     next: value => console.log(`${ name }: ${ value }`),\r\n *     complete: () => console.log(`${ name }: completed`),\r\n *     finalize: () => console.log(`${ name }: unsubscribed`)\r\n *   })\r\n * );\r\n *\r\n * const obs$ = log('source', interval(1000));\r\n *\r\n * const shared$ = log('shared', obs$.pipe(\r\n *   shareReplay({ bufferSize: 1, refCount: true }),\r\n *   take(2)\r\n * ));\r\n *\r\n * shared$.subscribe(x => console.log('sub A: ', x));\r\n * shared$.subscribe(y => console.log('sub B: ', y));\r\n *\r\n * // PRINTS:\r\n * // shared: subscribed <-- reference count = 1\r\n * // source: subscribed\r\n * // shared: subscribed <-- reference count = 2\r\n * // source: 0\r\n * // shared: 0\r\n * // sub A: 0\r\n * // shared: 0\r\n * // sub B: 0\r\n * // source: 1\r\n * // shared: 1\r\n * // sub A: 1\r\n * // shared: completed <-- take(2) completes the subscription for sub A\r\n * // shared: unsubscribed <-- reference count = 1\r\n * // shared: 1\r\n * // sub B: 1\r\n * // shared: completed <-- take(2) completes the subscription for sub B\r\n * // shared: unsubscribed <-- reference count = 0\r\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\r\n *\r\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\r\n * // are listening.\r\n * // source: 2\r\n * // source: 3\r\n * // source: 4\r\n * // ...\r\n * ```\r\n *\r\n * @see {@link publish}\r\n * @see {@link share}\r\n * @see {@link publishReplay}\r\n *\r\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\r\n * object.\r\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\r\n * @param scheduler Scheduler where connected observers within the selector function\r\n * will be invoked on.\r\n * @return A function that returns an Observable sequence that contains the\r\n * elements of a sequence produced by multicasting the source sequence within a\r\n * selector function.\r\n */\r\nexport function shareReplay<T>(\r\n  configOrBufferSize?: ShareReplayConfig | number,\r\n  windowTime?: number,\r\n  scheduler?: SchedulerLike\r\n): MonoTypeOperatorFunction<T> {\r\n  let bufferSize: number;\r\n  let refCount = false;\r\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\r\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\r\n  } else {\r\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\r\n  }\r\n  return share<T>({\r\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\r\n    resetOnError: true,\r\n    resetOnComplete: false,\r\n    resetOnRefCountZero: refCount,\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { EmptyError } from '../util/EmptyError';\r\n\r\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\r\nimport { SequenceError } from '../util/SequenceError';\r\nimport { NotFoundError } from '../util/NotFoundError';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns an observable that asserts that only one value is\r\n * emitted from the observable that matches the predicate. If no\r\n * predicate is provided, then it will assert that the observable\r\n * only emits one value.\r\n *\r\n * In the event that the observable is empty, it will throw an\r\n * {@link EmptyError}.\r\n *\r\n * In the event that two values are found that match the predicate,\r\n * or when there are two values emitted and no predicate, it will\r\n * throw a {@link SequenceError}\r\n *\r\n * In the event that no values match the predicate, if one is provided,\r\n * it will throw a {@link NotFoundError}\r\n *\r\n * ## Example\r\n *\r\n * Expect only `name` beginning with `'B'`\r\n *\r\n * ```ts\r\n * import { of, single } from 'rxjs';\r\n *\r\n * const source1 = of(\r\n *  { name: 'Ben' },\r\n *  { name: 'Tracy' },\r\n *  { name: 'Laney' },\r\n *  { name: 'Lily' }\r\n * );\r\n *\r\n * source1\r\n *   .pipe(single(x => x.name.startsWith('B')))\r\n *   .subscribe(x => console.log(x));\r\n * // Emits 'Ben'\r\n *\r\n *\r\n * const source2 = of(\r\n *  { name: 'Ben' },\r\n *  { name: 'Tracy' },\r\n *  { name: 'Bradley' },\r\n *  { name: 'Lincoln' }\r\n * );\r\n *\r\n * source2\r\n *   .pipe(single(x => x.name.startsWith('B')))\r\n *   .subscribe({ error: err => console.error(err) });\r\n * // Error emitted: SequenceError('Too many values match')\r\n *\r\n *\r\n * const source3 = of(\r\n *  { name: 'Laney' },\r\n *  { name: 'Tracy' },\r\n *  { name: 'Lily' },\r\n *  { name: 'Lincoln' }\r\n * );\r\n *\r\n * source3\r\n *   .pipe(single(x => x.name.startsWith('B')))\r\n *   .subscribe({ error: err => console.error(err) });\r\n * // Error emitted: NotFoundError('No values match')\r\n * ```\r\n *\r\n * @see {@link first}\r\n * @see {@link find}\r\n * @see {@link findIndex}\r\n * @see {@link elementAt}\r\n *\r\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\r\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\r\n * than one value comes from the source\r\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\r\n * @return A function that returns an Observable that emits the single item\r\n * emitted by the source Observable that matches the predicate.\r\n */\r\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let hasValue = false;\r\n    let singleValue: T;\r\n    let seenValue = false;\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          seenValue = true;\r\n          if (!predicate || predicate(value, index++, source)) {\r\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\r\n            hasValue = true;\r\n            singleValue = value;\r\n          }\r\n        },\r\n        () => {\r\n          if (hasValue) {\r\n            subscriber.next(singleValue);\r\n            subscriber.complete();\r\n          } else {\r\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\r\n          }\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction } from '../types';\r\nimport { filter } from './filter';\r\n\r\n/**\r\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\r\n *\r\n * ![](skip.png)\r\n *\r\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\r\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\r\n *\r\n * ## Example\r\n *\r\n * Skip the values before the emission\r\n *\r\n * ```ts\r\n * import { interval, skip } from 'rxjs';\r\n *\r\n * // emit every half second\r\n * const source = interval(500);\r\n * // skip the first 10 emitted values\r\n * const result = source.pipe(skip(10));\r\n *\r\n * result.subscribe(value => console.log(value));\r\n * // output: 10...11...12...13...\r\n * ```\r\n *\r\n * @see {@link last}\r\n * @see {@link skipWhile}\r\n * @see {@link skipUntil}\r\n * @see {@link skipLast}\r\n *\r\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\r\n * @return A function that returns an Observable that skips the first `count`\r\n * values emitted by the source Observable.\r\n */\r\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\r\n  return filter((_, index) => count <= index);\r\n}\r\n", "import { MonoTypeOperatorFunction } from '../types';\r\nimport { identity } from '../util/identity';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Skip a specified number of values before the completion of an observable.\r\n *\r\n * ![](skipLast.png)\r\n *\r\n * Returns an observable that will emit values as soon as it can, given a number of\r\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\r\n * emits its fourth value, the first value the source emitted will finally be emitted\r\n * from the returned observable, as it is no longer part of what needs to be skipped.\r\n *\r\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\r\n * as each value is held in a buffer until enough values have been emitted that that\r\n * the buffered value may finally be sent to the consumer.\r\n *\r\n * After subscribing, unsubscribing will not result in the emission of the buffered\r\n * skipped values.\r\n *\r\n * ## Example\r\n *\r\n * Skip the last 2 values of an observable with many values\r\n *\r\n * ```ts\r\n * import { of, skipLast } from 'rxjs';\r\n *\r\n * const numbers = of(1, 2, 3, 4, 5);\r\n * const skipLastTwo = numbers.pipe(skipLast(2));\r\n * skipLastTwo.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // 1 2 3\r\n * // (4 and 5 are skipped)\r\n * ```\r\n *\r\n * @see {@link skip}\r\n * @see {@link skipUntil}\r\n * @see {@link skipWhile}\r\n * @see {@link take}\r\n *\r\n * @param skipCount Number of elements to skip from the end of the source Observable.\r\n * @return A function that returns an Observable that skips the last `count`\r\n * values emitted by the source Observable.\r\n */\r\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\r\n  return skipCount <= 0\r\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\r\n      identity\r\n    : operate((source, subscriber) => {\r\n        // A ring buffer to hold the values while we wait to see\r\n        // if we can emit it or it's part of the \"skipped\" last values.\r\n        // Note that it is the _same size_ as the skip count.\r\n        let ring: T[] = new Array(skipCount);\r\n        // The number of values seen so far. This is used to get\r\n        // the index of the current value when it arrives.\r\n        let seen = 0;\r\n        source.subscribe(\r\n          createOperatorSubscriber(subscriber, (value) => {\r\n            // Get the index of the value we have right now\r\n            // relative to all other values we've seen, then\r\n            // increment `seen`. This ensures we've moved to\r\n            // the next slot in our ring buffer.\r\n            const valueIndex = seen++;\r\n            if (valueIndex < skipCount) {\r\n              // If we haven't seen enough values to fill our buffer yet,\r\n              // Then we aren't to a number of seen values where we can\r\n              // emit anything, so let's just start by filling the ring buffer.\r\n              ring[valueIndex] = value;\r\n            } else {\r\n              // We are traversing over the ring array in such\r\n              // a way that when we get to the end, we loop back\r\n              // and go to the start.\r\n              const index = valueIndex % skipCount;\r\n              // Pull the oldest value out so we can emit it,\r\n              // and stuff the new value in it's place.\r\n              const oldValue = ring[index];\r\n              ring[index] = value;\r\n              // Emit the old value. It is important that this happens\r\n              // after we swap the value in the buffer, if it happens\r\n              // before we swap the value in the buffer, then a synchronous\r\n              // source can get the buffer out of whack.\r\n              subscriber.next(oldValue);\r\n            }\r\n          })\r\n        );\r\n\r\n        return () => {\r\n          // Release our values in memory\r\n          ring = null!;\r\n        };\r\n      });\r\n}\r\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\r\n *\r\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\r\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\r\n * requests or waiting for specific times to pass by.\r\n *\r\n * ![](skipUntil.png)\r\n *\r\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\r\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\r\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\r\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\r\n * emitting a value before.\r\n *\r\n * ## Example\r\n *\r\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\r\n * within the page\r\n *\r\n * ```ts\r\n * import { interval, fromEvent, skipUntil } from 'rxjs';\r\n *\r\n * const intervalObservable = interval(1000);\r\n * const click = fromEvent(document, 'click');\r\n *\r\n * const emitAfterClick = intervalObservable.pipe(\r\n *   skipUntil(click)\r\n * );\r\n * // clicked at 4.6s. output: 5...6...7...8........ or\r\n * // clicked at 7.3s. output: 8...9...10..11.......\r\n * emitAfterClick.subscribe(value => console.log(value));\r\n * ```\r\n *\r\n * @see {@link last}\r\n * @see {@link skip}\r\n * @see {@link skipWhile}\r\n * @see {@link skipLast}\r\n *\r\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\r\n * be mirrored by the resulting Observable.\r\n * @return A function that returns an Observable that skips items from the\r\n * source Observable until the `notifier` Observable emits an item, then emits the\r\n * remaining items.\r\n */\r\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let taking = false;\r\n\r\n    const skipSubscriber = createOperatorSubscriber(\r\n      subscriber,\r\n      () => {\r\n        skipSubscriber?.unsubscribe();\r\n        taking = true;\r\n      },\r\n      noop\r\n    );\r\n\r\n    innerFrom(notifier).subscribe(skipSubscriber);\r\n\r\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\r\n  });\r\n}\r\n", "import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\r\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\r\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\r\n * true, but emits all further source items as soon as the condition becomes false.\r\n *\r\n * ![](skipWhile.png)\r\n *\r\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\r\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\r\n *\r\n * ## Example\r\n *\r\n * Skip some super heroes\r\n *\r\n * ```ts\r\n * import { from, skipWhile } from 'rxjs';\r\n *\r\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\r\n * // Skip the heroes until SuperGirl\r\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\r\n * // output: SuperGirl, Black Canary\r\n * example.subscribe(femaleHero => console.log(femaleHero));\r\n * ```\r\n *\r\n * Skip values from the array until index 5\r\n *\r\n * ```ts\r\n * import { from, skipWhile } from 'rxjs';\r\n *\r\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\r\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\r\n * // output: 6, 7, 9, 10\r\n * example.subscribe(value => console.log(value));\r\n * ```\r\n *\r\n * @see {@link last}\r\n * @see {@link skip}\r\n * @see {@link skipUntil}\r\n * @see {@link skipLast}\r\n *\r\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\r\n * @return A function that returns an Observable that begins emitting items\r\n * emitted by the source Observable when the specified predicate becomes false.\r\n */\r\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let taking = false;\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\r\n    );\r\n  });\r\n}\r\n", "import { concat } from '../observable/concat';\r\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\r\nimport { popScheduler } from '../util/args';\r\nimport { operate } from '../util/lift';\r\n\r\n// Devs are more likely to pass null or undefined than they are a scheduler\r\n// without accompanying values. To make things easier for (naughty) devs who\r\n// use the `strictNullChecks: false` TypeScript compiler option, these\r\n// overloads with explicit null and undefined values are included.\r\n\r\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\r\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\r\n\r\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\r\nexport function startWith<T, A extends readonly unknown[] = T[]>(\r\n  ...valuesAndScheduler: [...A, SchedulerLike]\r\n): OperatorFunction<T, T | ValueFromArray<A>>;\r\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\r\n\r\n/**\r\n * Returns an observable that, at the moment of subscription, will synchronously emit all\r\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\r\n * to subscribers.\r\n *\r\n * This is a useful way to know when subscription has occurred on an existing observable.\r\n *\r\n * <span class=\"informal\">First emits its arguments in order, and then any\r\n * emissions from the source.</span>\r\n *\r\n * ![](startWith.png)\r\n *\r\n * ## Examples\r\n *\r\n * Emit a value when a timer starts.\r\n *\r\n * ```ts\r\n * import { timer, map, startWith } from 'rxjs';\r\n *\r\n * timer(1000)\r\n *   .pipe(\r\n *     map(() => 'timer emit'),\r\n *     startWith('timer start')\r\n *   )\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // results:\r\n * // 'timer start'\r\n * // 'timer emit'\r\n * ```\r\n *\r\n * @param values Items you want the modified Observable to emit first.\r\n * @return A function that returns an Observable that synchronously emits\r\n * provided values before subscribing to the source Observable.\r\n *\r\n * @see {@link endWith}\r\n * @see {@link finalize}\r\n * @see {@link concat}\r\n */\r\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\r\n  const scheduler = popScheduler(values);\r\n  return operate((source, subscriber) => {\r\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\r\n    // code inside of `concat` would be confused by the `undefined`, and treat it\r\n    // like an invalid observable. So we have to split it two different ways.\r\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\r\n  });\r\n}\r\n", "import { Subscriber } from '../Subscriber';\r\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function switchMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function switchMap<T, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: undefined\r\n): OperatorFunction<T, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function switchMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to an Observable which is merged in the output\r\n * Observable, emitting values only from the most recently projected Observable.\r\n *\r\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\r\n * these inner Observables using {@link switchAll}.</span>\r\n *\r\n * ![](switchMap.png)\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\r\n * inner Observables, the output Observable begins emitting the items emitted by\r\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\r\n * stops emitting items from the earlier-emitted inner Observable and begins\r\n * emitting items from the new one. It continues to behave like this for\r\n * subsequent inner Observables.\r\n *\r\n * ## Example\r\n *\r\n * Generate new Observable according to source Observable values\r\n *\r\n * ```ts\r\n * import { of, switchMap } from 'rxjs';\r\n *\r\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\r\n * switched.subscribe(x => console.log(x));\r\n * // outputs\r\n * // 1\r\n * // 1\r\n * // 1\r\n * // 2\r\n * // 4\r\n * // 8\r\n * // 3\r\n * // 9\r\n * // 27\r\n * ```\r\n *\r\n * Restart an interval Observable on every click event\r\n *\r\n * ```ts\r\n * import { fromEvent, switchMap, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(switchMap(() => interval(1000)));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link concatMap}\r\n * @see {@link exhaustMap}\r\n * @see {@link mergeMap}\r\n * @see {@link switchAll}\r\n * @see {@link switchMapTo}\r\n *\r\n * @param {function(value: T, index: number): ObservableInput} project A function\r\n * that, when applied to an item emitted by the source Observable, returns an\r\n * Observable.\r\n * @return A function that returns an Observable that emits the result of\r\n * applying the projection function (and the optional deprecated\r\n * `resultSelector`) to each item emitted by the source Observable and taking\r\n * only the values from the most recently projected inner Observable.\r\n */\r\nexport function switchMap<T, R, O extends ObservableInput<any>>(\r\n  project: (value: T, index: number) => O,\r\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  return operate((source, subscriber) => {\r\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\r\n    let index = 0;\r\n    // Whether or not the source subscription has completed\r\n    let isComplete = false;\r\n\r\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\r\n    // This is called both when the source completes and when the inners complete.\r\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          // Cancel the previous inner subscription if there was one\r\n          innerSubscriber?.unsubscribe();\r\n          let innerIndex = 0;\r\n          const outerIndex = index++;\r\n          // Start the next inner subscription\r\n          innerFrom(project(value, outerIndex)).subscribe(\r\n            (innerSubscriber = createOperatorSubscriber(\r\n              subscriber,\r\n              // When we get a new inner value, next it through. Note that this is\r\n              // handling the deprecate result selector here. This is because with this architecture\r\n              // it ends up being smaller than using the map operator.\r\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\r\n              () => {\r\n                // The inner has completed. Null out the inner subscriber to\r\n                // free up memory and to signal that we have no inner subscription\r\n                // currently.\r\n                innerSubscriber = null!;\r\n                checkComplete();\r\n              }\r\n            ))\r\n          );\r\n        },\r\n        () => {\r\n          isComplete = true;\r\n          checkComplete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\r\nimport { switchMap } from './switchMap';\r\nimport { identity } from '../util/identity';\r\n\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable\r\n * producing values only from the most recent observable sequence\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\r\n *\r\n * ![](switchAll.png)\r\n *\r\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\r\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\r\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\r\n * to inner observable, such that only the most recent inner observable may be subscribed to at\r\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\r\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\r\n * if there are any.\r\n *\r\n * ## Examples\r\n *\r\n * Spawn a new interval observable for each click event, but for every new\r\n * click, cancel the previous interval and subscribe to the new one\r\n *\r\n * ```ts\r\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\r\n * const source = clicks.pipe(map(() => interval(1000)));\r\n *\r\n * source\r\n *   .pipe(switchAll())\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // Output\r\n * // click\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // 3\r\n * // ...\r\n * // click\r\n * // 0\r\n * // 1\r\n * // 2\r\n * // ...\r\n * // click\r\n * // ...\r\n * ```\r\n *\r\n * @see {@link combineLatestAll}\r\n * @see {@link concatAll}\r\n * @see {@link exhaustAll}\r\n * @see {@link switchMap}\r\n * @see {@link switchMapTo}\r\n * @see {@link mergeAll}\r\n *\r\n * @return A function that returns an Observable that converts a higher-order\r\n * Observable into a first-order Observable producing values only from the most\r\n * recent Observable sequence.\r\n */\r\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\r\n  return switchMap(identity);\r\n}\r\n", "import { switchMap } from './switchMap';\r\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\n\r\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\r\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function switchMapTo<O extends ObservableInput<unknown>>(\r\n  observable: O,\r\n  resultSelector: undefined\r\n): OperatorFunction<unknown, ObservedValueOf<O>>;\r\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\r\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  observable: O,\r\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, R>;\r\n\r\n/**\r\n * Projects each source value to the same Observable which is flattened multiple\r\n * times with {@link switchMap} in the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\r\n * always to the same inner Observable.</span>\r\n *\r\n * ![](switchMapTo.png)\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then flattens those resulting Observables into one\r\n * single Observable, which is the output Observable. The output Observables\r\n * emits values only from the most recently emitted instance of\r\n * `innerObservable`.\r\n *\r\n * ## Example\r\n *\r\n * Restart an interval Observable on every click event\r\n *\r\n * ```ts\r\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(switchMapTo(interval(1000)));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link concatMapTo}\r\n * @see {@link switchAll}\r\n * @see {@link switchMap}\r\n * @see {@link mergeMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @return A function that returns an Observable that emits items from the\r\n * given `innerObservable` (and optionally transformed through the deprecated\r\n * `resultSelector`) every time a value is emitted on the source Observable,\r\n * and taking only the values from the most recently projected inner\r\n * Observable.\r\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\r\n */\r\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\r\n  innerObservable: O,\r\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, ObservedValueOf<O> | R> {\r\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\r\n}\r\n", "import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\r\nimport { switchMap } from './switchMap';\r\nimport { operate } from '../util/lift';\r\n\r\n// TODO: Generate a marble diagram for these docs.\r\n\r\n/**\r\n * Applies an accumulator function over the source Observable where the\r\n * accumulator function itself returns an Observable, emitting values\r\n * only from the most recently returned Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\r\n * Observable returned by the accumulator is merged into the outer Observable.</span>\r\n *\r\n * @see {@link scan}\r\n * @see {@link mergeScan}\r\n * @see {@link switchMap}\r\n *\r\n * @param accumulator\r\n * The accumulator function called on each source value.\r\n * @param seed The initial accumulation value.\r\n * @return A function that returns an observable of the accumulated values.\r\n */\r\nexport function switchScan<T, R, O extends ObservableInput<any>>(\r\n  accumulator: (acc: R, value: T, index: number) => O,\r\n  seed: R\r\n): OperatorFunction<T, ObservedValueOf<O>> {\r\n  return operate((source, subscriber) => {\r\n    // The state we will keep up to date to pass into our\r\n    // accumulator function at each new value from the source.\r\n    let state = seed;\r\n\r\n    // Use `switchMap` on our `source` to do the work of creating\r\n    // this operator. Note the backwards order here of `switchMap()(source)`\r\n    // to avoid needing to use `pipe` unnecessarily\r\n    switchMap(\r\n      // On each value from the source, call the accumulator with\r\n      // our previous state, the value and the index.\r\n      (value: T, index) => accumulator(state, value, index),\r\n      // Using the deprecated result selector here as a dirty trick\r\n      // to update our state with the flattened value.\r\n      (_, innerValue) => ((state = innerValue), innerValue)\r\n    )(source).subscribe(subscriber);\r\n\r\n    return () => {\r\n      // Release state on finalization\r\n      state = null!;\r\n    };\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { noop } from '../util/noop';\r\n\r\n/**\r\n * Emits the values emitted by the source Observable until a `notifier`\r\n * Observable emits a value.\r\n *\r\n * <span class=\"informal\">Lets values pass until a second Observable,\r\n * `notifier`, emits a value. Then, it completes.</span>\r\n *\r\n * ![](takeUntil.png)\r\n *\r\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\r\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\r\n * emits a value, the output Observable stops mirroring the source Observable\r\n * and completes. If the `notifier` doesn't emit any value and completes\r\n * then `takeUntil` will pass all values.\r\n *\r\n * ## Example\r\n *\r\n * Tick every second until the first click happens\r\n *\r\n * ```ts\r\n * import { interval, fromEvent, takeUntil } from 'rxjs';\r\n *\r\n * const source = interval(1000);\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = source.pipe(takeUntil(clicks));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n * @see {@link takeWhile}\r\n * @see {@link skip}\r\n *\r\n * @param {Observable} notifier The Observable whose first emitted value will\r\n * cause the output Observable of `takeUntil` to stop emitting values from the\r\n * source Observable.\r\n * @return A function that returns an Observable that emits the values from the\r\n * source Observable until `notifier` emits its first value.\r\n */\r\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\r\n    !subscriber.closed && source.subscribe(subscriber);\r\n  });\r\n}\r\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\r\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\r\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\r\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Emits values emitted by the source Observable so long as each value satisfies\r\n * the given `predicate`, and then completes as soon as this `predicate` is not\r\n * satisfied.\r\n *\r\n * <span class=\"informal\">Takes values from the source only while they pass the\r\n * condition given. When the first value does not satisfy, it completes.</span>\r\n *\r\n * ![](takeWhile.png)\r\n *\r\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\r\n * emitted on the source is given to the `predicate` function which returns a\r\n * boolean, representing a condition to be satisfied by the source values. The\r\n * output Observable emits the source values until such time as the `predicate`\r\n * returns false, at which point `takeWhile` stops mirroring the source\r\n * Observable and completes the output Observable.\r\n *\r\n * ## Example\r\n *\r\n * Emit click events only while the clientX property is greater than 200\r\n *\r\n * ```ts\r\n * import { fromEvent, takeWhile } from 'rxjs';\r\n *\r\n * const clicks = fromEvent<PointerEvent>(document, 'click');\r\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link skip}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates a value emitted by the source Observable and returns a boolean.\r\n * Also takes the (zero-based) index as the second argument.\r\n * @param {boolean} inclusive When set to `true` the value that caused\r\n * `predicate` to return `false` will also be emitted.\r\n * @return A function that returns an Observable that emits values from the\r\n * source Observable so long as each value satisfies the condition defined by\r\n * the `predicate`, then completes.\r\n */\r\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        const result = predicate(value, index++);\r\n        (result || inclusive) && subscriber.next(value);\r\n        !result && subscriber.complete();\r\n      })\r\n    );\r\n  });\r\n}\r\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\r\nimport { isFunction } from '../util/isFunction';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { identity } from '../util/identity';\r\n\r\n/**\r\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\r\n *\r\n * It provides a useful set of callbacks a user can register to do side-effects in\r\n * cases other than what the usual {@link Observer} callbacks are\r\n * ({@link guide/glossary-and-semantics#next next},\r\n * {@link guide/glossary-and-semantics#error error} and/or\r\n * {@link guide/glossary-and-semantics#complete complete}).\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\r\n *\r\n * const source$ = fromEvent(document, 'click');\r\n * const result$ = source$.pipe(\r\n *   switchMap((_, i) => i % 2 === 0\r\n *     ? fromEvent(document, 'mousemove').pipe(\r\n *         tap({\r\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\r\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\r\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\r\n *         })\r\n *       )\r\n *     : interval(1_000).pipe(\r\n *         take(5),\r\n *         tap({\r\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\r\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\r\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\r\n *         })\r\n *       )\r\n *   )\r\n * );\r\n *\r\n * const subscription = result$.subscribe({\r\n *   next: console.log\r\n * });\r\n *\r\n * setTimeout(() => {\r\n *   console.log('Unsubscribe after 60 seconds');\r\n *   subscription.unsubscribe();\r\n * }, 60_000);\r\n * ```\r\n */\r\nexport interface TapObserver<T> extends Observer<T> {\r\n  /**\r\n   * The callback that `tap` operator invokes at the moment when the source Observable\r\n   * gets subscribed to.\r\n   */\r\n  subscribe: () => void;\r\n  /**\r\n   * The callback that `tap` operator invokes when an explicit\r\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\r\n   * `error` or `complete` events.\r\n   */\r\n  unsubscribe: () => void;\r\n  /**\r\n   * The callback that `tap` operator invokes when any kind of\r\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\r\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\r\n   * by the user. There is no difference in using this callback or the {@link finalize}\r\n   * operator, but if you're already using `tap` operator, you can use this callback\r\n   * instead. You'd get the same result in either case.\r\n   */\r\n  finalize: () => void;\r\n}\r\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\r\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\r\nexport function tap<T>(\r\n  next?: ((value: T) => void) | null,\r\n  error?: ((error: any) => void) | null,\r\n  complete?: (() => void) | null\r\n): MonoTypeOperatorFunction<T>;\r\n\r\n/**\r\n * Used to perform side-effects for notifications from the source observable\r\n *\r\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\r\n *\r\n * ![](tap.png)\r\n *\r\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\r\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\r\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\r\n * help you remove side-effects from other operations.\r\n *\r\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\r\n * reference, or a partial observer, then pass that notification down the stream.\r\n *\r\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\r\n * provided to `tap` will be emitted as an error from the returned observable.\r\n *\r\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\r\n *\r\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\r\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\r\n * operation.\r\n *\r\n * ## Examples\r\n *\r\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\r\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\r\n * was, so we have added a `tap(console.log)`.\r\n *\r\n * ```ts\r\n * import { of, tap, map } from 'rxjs';\r\n *\r\n * of(Math.random()).pipe(\r\n *   tap(console.log),\r\n *   map(n => n > 0.5 ? 'big' : 'small')\r\n * ).subscribe(console.log);\r\n * ```\r\n *\r\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\r\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\r\n * using `tap`.\r\n *\r\n * ```ts\r\n * import { of, tap } from 'rxjs';\r\n *\r\n * const source = of(1, 2, 3, 4, 5);\r\n *\r\n * source.pipe(\r\n *   tap(n => {\r\n *     if (n > 3) {\r\n *       throw new TypeError(`Value ${ n } is greater than 3`);\r\n *     }\r\n *   })\r\n * )\r\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\r\n * ```\r\n *\r\n * We want to know when an observable completes before moving on to the next observable. The system\r\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\r\n * only way we know when one observable completes and moves to the next one, in this case, is because\r\n * we have added a `tap` with the side effect of logging to console.\r\n *\r\n * ```ts\r\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\r\n *\r\n * of(1, 2, 3).pipe(\r\n *   concatMap(n => interval(1000).pipe(\r\n *     take(Math.round(Math.random() * 10)),\r\n *     map(() => 'X'),\r\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\r\n *   ))\r\n * )\r\n * .subscribe(console.log);\r\n * ```\r\n *\r\n * @see {@link finalize}\r\n * @see {@link TapObserver}\r\n *\r\n * @param observerOrNext A next handler or partial observer\r\n * @param error An error handler\r\n * @param complete A completion handler\r\n * @return A function that returns an Observable identical to the source, but\r\n * runs the specified Observer or callback(s) for each item.\r\n */\r\nexport function tap<T>(\r\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\r\n  error?: ((e: any) => void) | null,\r\n  complete?: (() => void) | null\r\n): MonoTypeOperatorFunction<T> {\r\n  // We have to check to see not only if next is a function,\r\n  // but if error or complete were passed. This is because someone\r\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\r\n  const tapObserver =\r\n    isFunction(observerOrNext) || error || complete\r\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\r\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\r\n      : observerOrNext;\r\n\r\n  return tapObserver\r\n    ? operate((source, subscriber) => {\r\n        tapObserver.subscribe?.();\r\n        let isUnsub = true;\r\n        source.subscribe(\r\n          createOperatorSubscriber(\r\n            subscriber,\r\n            (value) => {\r\n              tapObserver.next?.(value);\r\n              subscriber.next(value);\r\n            },\r\n            () => {\r\n              isUnsub = false;\r\n              tapObserver.complete?.();\r\n              subscriber.complete();\r\n            },\r\n            (err) => {\r\n              isUnsub = false;\r\n              tapObserver.error?.(err);\r\n              subscriber.error(err);\r\n            },\r\n            () => {\r\n              if (isUnsub) {\r\n                tapObserver.unsubscribe?.();\r\n              }\r\n              tapObserver.finalize?.();\r\n            }\r\n          )\r\n        );\r\n      })\r\n    : // Tap was called with no valid tap observer or handler\r\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\r\n      // so we're going to just mirror the source.\r\n      identity;\r\n}\r\n", "import { Subscription } from '../Subscription';\r\n\r\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\r\n * configuration options of these operators.\r\n *\r\n * @see {@link throttle}\r\n * @see {@link throttleTime}\r\n */\r\nexport interface ThrottleConfig {\r\n  /**\r\n   * If `true`, the resulting Observable will emit the first value from the source\r\n   * Observable at the **start** of the \"throttling\" process (when starting an\r\n   * internal timer that prevents other emissions from the source to pass through).\r\n   * If `false`, it will not emit the first value from the source Observable at the\r\n   * start of the \"throttling\" process.\r\n   *\r\n   * If not provided, defaults to: `true`.\r\n   */\r\n  leading?: boolean;\r\n  /**\r\n   * If `true`, the resulting Observable will emit the last value from the source\r\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\r\n   * timer that prevents other emissions from the source to pass through).\r\n   * If `false`, it will not emit the last value from the source Observable at the\r\n   * end of the \"throttling\" process.\r\n   *\r\n   * If not provided, defaults to: `false`.\r\n   */\r\n  trailing?: boolean;\r\n}\r\n\r\n/**\r\n * Emits a value from the source Observable, then ignores subsequent source\r\n * values for a duration determined by another Observable, then repeats this\r\n * process.\r\n *\r\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\r\n * duration is determined by a second Observable.</span>\r\n *\r\n * ![](throttle.svg)\r\n *\r\n * `throttle` emits the source Observable values on the output Observable\r\n * when its internal timer is disabled, and ignores source values when the timer\r\n * is enabled. Initially, the timer is disabled. As soon as the first source\r\n * value arrives, it is forwarded to the output Observable, and then the timer\r\n * is enabled by calling the `durationSelector` function with the source value,\r\n * which returns the \"duration\" Observable. When the duration Observable emits a\r\n * value, the timer is disabled, and this process repeats for the\r\n * next source value.\r\n *\r\n * ## Example\r\n *\r\n * Emit clicks at a rate of at most one click per second\r\n *\r\n * ```ts\r\n * import { fromEvent, throttle, interval } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(throttle(() => interval(1000)));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounce}\r\n * @see {@link delayWhen}\r\n * @see {@link sample}\r\n * @see {@link throttleTime}\r\n *\r\n * @param durationSelector A function that receives a value from the source\r\n * Observable, for computing the silencing duration for each source value,\r\n * returned as an `ObservableInput`.\r\n * @param config A configuration object to define `leading` and `trailing`\r\n * behavior. Defaults to `{ leading: true, trailing: false }`.\r\n * @return A function that returns an Observable that performs the throttle\r\n * operation to limit the rate of emissions from the source.\r\n */\r\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\r\n  return operate((source, subscriber) => {\r\n    const { leading = true, trailing = false } = config ?? {};\r\n    let hasValue = false;\r\n    let sendValue: T | null = null;\r\n    let throttled: Subscription | null = null;\r\n    let isComplete = false;\r\n\r\n    const endThrottling = () => {\r\n      throttled?.unsubscribe();\r\n      throttled = null;\r\n      if (trailing) {\r\n        send();\r\n        isComplete && subscriber.complete();\r\n      }\r\n    };\r\n\r\n    const cleanupThrottling = () => {\r\n      throttled = null;\r\n      isComplete && subscriber.complete();\r\n    };\r\n\r\n    const startThrottle = (value: T) =>\r\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\r\n\r\n    const send = () => {\r\n      if (hasValue) {\r\n        // Ensure we clear out our value and hasValue flag\r\n        // before we emit, otherwise reentrant code can cause\r\n        // issues here.\r\n        hasValue = false;\r\n        const value = sendValue!;\r\n        sendValue = null;\r\n        // Emit the value.\r\n        subscriber.next(value);\r\n        !isComplete && startThrottle(value);\r\n      }\r\n    };\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        // Regarding the presence of throttled.closed in the following\r\n        // conditions, if a synchronous duration selector is specified - weird,\r\n        // but legal - an already-closed subscription will be assigned to\r\n        // throttled, so the subscription's closed property needs to be checked,\r\n        // too.\r\n        (value) => {\r\n          hasValue = true;\r\n          sendValue = value;\r\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\r\n        },\r\n        () => {\r\n          isComplete = true;\r\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { throttle, ThrottleConfig } from './throttle';\r\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\r\nimport { timer } from '../observable/timer';\r\n\r\n/**\r\n * Emits a value from the source Observable, then ignores subsequent source\r\n * values for `duration` milliseconds, then repeats this process.\r\n *\r\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\r\n * next `duration` milliseconds.</span>\r\n *\r\n * ![](throttleTime.png)\r\n *\r\n * `throttleTime` emits the source Observable values on the output Observable\r\n * when its internal timer is disabled, and ignores source values when the timer\r\n * is enabled. Initially, the timer is disabled. As soon as the first source\r\n * value arrives, it is forwarded to the output Observable, and then the timer\r\n * is enabled. After `duration` milliseconds (or the time unit determined\r\n * internally by the optional `scheduler`) has passed, the timer is disabled,\r\n * and this process repeats for the next source value. Optionally takes a\r\n * {@link SchedulerLike} for managing timers.\r\n *\r\n * ## Examples\r\n *\r\n * ### Limit click rate\r\n *\r\n * Emit clicks at a rate of at most one click per second\r\n *\r\n * ```ts\r\n * import { fromEvent, throttleTime } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(throttleTime(1000));\r\n *\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sampleTime}\r\n * @see {@link throttle}\r\n *\r\n * @param duration Time to wait before emitting another value after\r\n * emitting the last value, measured in milliseconds or the time unit determined\r\n * internally by the optional `scheduler`.\r\n * @param scheduler The {@link SchedulerLike} to use for\r\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\r\n * @param config A configuration object to define `leading` and\r\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\r\n * @return A function that returns an Observable that performs the throttle\r\n * operation to limit the rate of emissions from the source.\r\n */\r\nexport function throttleTime<T>(\r\n  duration: number,\r\n  scheduler: SchedulerLike = asyncScheduler,\r\n  config?: ThrottleConfig\r\n): MonoTypeOperatorFunction<T> {\r\n  const duration$ = timer(duration, scheduler);\r\n  return throttle(() => duration$, config);\r\n}\r\n", "import { asyncScheduler } from '../scheduler/async';\r\nimport { SchedulerLike, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits an object containing the current value, and the time that has\r\n * passed between emitting the current value and the previous value, which is\r\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\r\n * the current time at each emission, then calculating the difference. The `scheduler`\r\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\r\n * milliseconds.\r\n *\r\n * <span class=\"informal\">Convert an Observable that emits items into one that\r\n * emits indications of the amount of time elapsed between those emissions.</span>\r\n *\r\n * ![](timeInterval.png)\r\n *\r\n * ## Example\r\n *\r\n * Emit interval between current value with the last value\r\n *\r\n * ```ts\r\n * import { interval, timeInterval } from 'rxjs';\r\n *\r\n * const seconds = interval(1000);\r\n *\r\n * seconds\r\n *   .pipe(timeInterval())\r\n *   .subscribe(value => console.log(value));\r\n *\r\n * // NOTE: The values will never be this precise,\r\n * // intervals created with `interval` or `setInterval`\r\n * // are non-deterministic.\r\n *\r\n * // { value: 0, interval: 1000 }\r\n * // { value: 1, interval: 1000 }\r\n * // { value: 2, interval: 1000 }\r\n * ```\r\n *\r\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\r\n * @return A function that returns an Observable that emits information about\r\n * value and interval.\r\n */\r\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\r\n  return operate((source, subscriber) => {\r\n    let last = scheduler.now();\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        const now = scheduler.now();\r\n        const interval = now - last;\r\n        last = now;\r\n        subscriber.next(new TimeInterval(value, interval));\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\r\n// there's no reason users should be manually creating this type.\r\n\r\nexport class TimeInterval<T> {\r\n  /**\r\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\r\n   */\r\n  constructor(public value: T, public interval: number) {}\r\n}\r\n", "import { async } from '../scheduler/async';\r\nimport { isValidDate } from '../util/isDate';\r\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\r\nimport { timeout } from './timeout';\r\n\r\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\r\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\r\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\r\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\r\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\r\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\r\n\r\n/**\r\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\r\n * and switch the subscription to another observable.\r\n *\r\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\r\n *\r\n * Useful in cases where:\r\n *\r\n * - You want to switch to a different source that may be faster.\r\n * - You want to notify a user that the data stream is slow.\r\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\r\n *   by the default usage of {@link timeout}.\r\n *\r\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\r\n * it will unsubscribe from the source and switch the subscription to another observable.\r\n *\r\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\r\n *\r\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\r\n * the `first` configuration to get the same effect.\r\n *\r\n * ## Examples\r\n *\r\n * Fallback to a faster observable\r\n *\r\n * ```ts\r\n * import { interval, timeoutWith } from 'rxjs';\r\n *\r\n * const slow$ = interval(1000);\r\n * const faster$ = interval(500);\r\n *\r\n * slow$\r\n *   .pipe(timeoutWith(900, faster$))\r\n *   .subscribe(console.log);\r\n * ```\r\n *\r\n * Emit your own custom timeout error\r\n *\r\n * ```ts\r\n * import { interval, timeoutWith, throwError } from 'rxjs';\r\n *\r\n * class CustomTimeoutError extends Error {\r\n *   constructor() {\r\n *     super('It was too slow');\r\n *     this.name = 'CustomTimeoutError';\r\n *   }\r\n * }\r\n *\r\n * const slow$ = interval(1000);\r\n *\r\n * slow$\r\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\r\n *   .subscribe({\r\n *     error: err => console.error(err.message)\r\n *   });\r\n * ```\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\r\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\r\n * @param withObservable The observable to switch to when timeout occurs.\r\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\r\n * @return A function that returns an Observable that mirrors behaviour of the\r\n * source Observable, unless timeout happens when it starts emitting values\r\n * from the `ObservableInput` passed as a second parameter.\r\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\r\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\r\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\r\n */\r\nexport function timeoutWith<T, R>(\r\n  due: number | Date,\r\n  withObservable: ObservableInput<R>,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, T | R> {\r\n  let first: number | Date | undefined;\r\n  let each: number | undefined;\r\n  let _with: () => ObservableInput<R>;\r\n  scheduler = scheduler ?? async;\r\n\r\n  if (isValidDate(due)) {\r\n    first = due;\r\n  } else if (typeof due === 'number') {\r\n    each = due;\r\n  }\r\n\r\n  if (withObservable) {\r\n    _with = () => withObservable;\r\n  } else {\r\n    throw new TypeError('No observable provided to switch to');\r\n  }\r\n\r\n  if (first == null && each == null) {\r\n    // Ensure timeout was provided at runtime.\r\n    throw new TypeError('No timeout provided.');\r\n  }\r\n\r\n  return timeout<T, ObservableInput<R>>({\r\n    first,\r\n    each,\r\n    scheduler,\r\n    with: _with,\r\n  });\r\n}\r\n", "import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\r\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\r\nimport { map } from './map';\r\n\r\n/**\r\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\r\n *\r\n * The `timestamp` operator maps the *source* observable stream to an object of type\r\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\r\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\r\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\r\n * 00:00:00:000) and therefore is of type `number`.\r\n *\r\n * ![](timestamp.png)\r\n *\r\n * ## Example\r\n *\r\n * In this example there is a timestamp attached to the document's click events\r\n *\r\n * ```ts\r\n * import { fromEvent, timestamp } from 'rxjs';\r\n *\r\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\r\n *   timestamp()\r\n * );\r\n *\r\n * // Emits data of type { value: PointerEvent, timestamp: number }\r\n * clickWithTimestamp.subscribe(data => {\r\n *   console.log(data);\r\n * });\r\n * ```\r\n *\r\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\r\n * @return A function that returns an Observable that attaches a timestamp to\r\n * each item emitted by the source Observable indicating when it was emitted.\r\n */\r\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\r\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { OperatorFunction, ObservableInput } from '../types';\r\nimport { Subject } from '../Subject';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Branch out the source Observable values as a nested Observable whenever\r\n * `windowBoundaries` emits.\r\n *\r\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\r\n * instead of an array.</span>\r\n *\r\n * ![](window.png)\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits connected, non-overlapping\r\n * windows. It emits the current window and opens a new one whenever the\r\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\r\n * `ObservableInput` accepts. It internally gets converted to an Observable.\r\n * Because each window is an Observable, the output is a higher-order Observable.\r\n *\r\n * ## Example\r\n *\r\n * In every window of 1 second each, emit at most 2 click events\r\n *\r\n * ```ts\r\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const sec = interval(1000);\r\n * const result = clicks.pipe(\r\n *   window(sec),\r\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\r\n *   mergeAll()                     // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link buffer}\r\n *\r\n * @param windowBoundaries An `ObservableInput` that completes the\r\n * previous window and starts a new window.\r\n * @return A function that returns an Observable of windows, which are\r\n * Observables emitting values of the source Observable.\r\n */\r\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\r\n  return operate((source, subscriber) => {\r\n    let windowSubject: Subject<T> = new Subject<T>();\r\n\r\n    subscriber.next(windowSubject.asObservable());\r\n\r\n    const errorHandler = (err: any) => {\r\n      windowSubject.error(err);\r\n      subscriber.error(err);\r\n    };\r\n\r\n    // Subscribe to our source\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => windowSubject?.next(value),\r\n        () => {\r\n          windowSubject.complete();\r\n          subscriber.complete();\r\n        },\r\n        errorHandler\r\n      )\r\n    );\r\n\r\n    // Subscribe to the window boundaries.\r\n    innerFrom(windowBoundaries).subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        () => {\r\n          windowSubject.complete();\r\n          subscriber.next((windowSubject = new Subject()));\r\n        },\r\n        noop,\r\n        errorHandler\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      // Unsubscribing the subject ensures that anyone who has captured\r\n      // a reference to this window that tries to use it after it can\r\n      // no longer get values from the source will get an ObjectUnsubscribedError.\r\n      windowSubject?.unsubscribe();\r\n      windowSubject = null!;\r\n    };\r\n  });\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subject } from '../Subject';\r\nimport { OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Branch out the source Observable values as a nested Observable with each\r\n * nested Observable emitting at most `windowSize` values.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * ![](windowCount.png)\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits windows every `startWindowEvery`\r\n * items, each containing no more than `windowSize` items. When the source\r\n * Observable completes or encounters an error, the output Observable emits\r\n * the current window and propagates the notification from the source\r\n * Observable. If `startWindowEvery` is not provided, then new windows are\r\n * started immediately at the start of the source and when each window completes\r\n * with size `windowSize`.\r\n *\r\n * ## Examples\r\n *\r\n * Ignore every 3rd click event, starting from the first one\r\n *\r\n * ```ts\r\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   windowCount(3),\r\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\r\n *   mergeAll()                     // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Ignore every 3rd click event, starting from the third one\r\n *\r\n * ```ts\r\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   windowCount(2, 3),\r\n *   mergeAll() // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link window}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link bufferCount}\r\n *\r\n * @param {number} windowSize The maximum number of values emitted by each\r\n * window.\r\n * @param {number} [startWindowEvery] Interval at which to start a new window.\r\n * For example if `startWindowEvery` is `2`, then a new window will be started\r\n * on every other value from the source. A new window is started at the\r\n * beginning of the source by default.\r\n * @return A function that returns an Observable of windows, which in turn are\r\n * Observable of values.\r\n */\r\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\r\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\r\n\r\n  return operate((source, subscriber) => {\r\n    let windows = [new Subject<T>()];\r\n    let starts: number[] = [];\r\n    let count = 0;\r\n\r\n    // Open the first window.\r\n    subscriber.next(windows[0].asObservable());\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          // Emit the value through all current windows.\r\n          // We don't need to create a new window yet, we\r\n          // do that as soon as we close one.\r\n          for (const window of windows) {\r\n            window.next(value);\r\n          }\r\n          // Here we're using the size of the window array to figure\r\n          // out if the oldest window has emitted enough values. We can do this\r\n          // because the size of the window array is a function of the values\r\n          // seen by the subscription. If it's time to close it, we complete\r\n          // it and remove it.\r\n          const c = count - windowSize + 1;\r\n          if (c >= 0 && c % startEvery === 0) {\r\n            windows.shift()!.complete();\r\n          }\r\n\r\n          // Look to see if the next count tells us it's time to open a new window.\r\n          // TODO: We need to figure out if this really makes sense. We're technically\r\n          // emitting windows *before* we have a value to emit them for. It's probably\r\n          // more expected that we should be emitting the window when the start\r\n          // count is reached -- not before.\r\n          if (++count % startEvery === 0) {\r\n            const window = new Subject<T>();\r\n            windows.push(window);\r\n            subscriber.next(window.asObservable());\r\n          }\r\n        },\r\n        () => {\r\n          while (windows.length > 0) {\r\n            windows.shift()!.complete();\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        (err) => {\r\n          while (windows.length > 0) {\r\n            windows.shift()!.error(err);\r\n          }\r\n          subscriber.error(err);\r\n        },\r\n        () => {\r\n          starts = null!;\r\n          windows = null!;\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { Subject } from '../Subject';\r\nimport { asyncScheduler } from '../scheduler/async';\r\nimport { Observable } from '../Observable';\r\nimport { Subscription } from '../Subscription';\r\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { arrRemove } from '../util/arrRemove';\r\nimport { popScheduler } from '../util/args';\r\nimport { executeSchedule } from '../util/executeSchedule';\r\n\r\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\r\nexport function windowTime<T>(\r\n  windowTimeSpan: number,\r\n  windowCreationInterval: number,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, Observable<T>>;\r\nexport function windowTime<T>(\r\n  windowTimeSpan: number,\r\n  windowCreationInterval: number | null | void,\r\n  maxWindowSize: number,\r\n  scheduler?: SchedulerLike\r\n): OperatorFunction<T, Observable<T>>;\r\n\r\n/**\r\n * Branch out the source Observable values as a nested Observable periodically\r\n * in time.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * ![](windowTime.png)\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable starts a new window periodically, as\r\n * determined by the `windowCreationInterval` argument. It emits each window\r\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\r\n * source Observable completes or encounters an error, the output Observable\r\n * emits the current window and propagates the notification from the source\r\n * Observable. If `windowCreationInterval` is not provided, the output\r\n * Observable starts a new window when the previous window of duration\r\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\r\n * will emit at most fixed number of values. Window will complete immediately\r\n * after emitting last value and next one still will open as specified by\r\n * `windowTimeSpan` and `windowCreationInterval` arguments.\r\n *\r\n * ## Examples\r\n *\r\n * In every window of 1 second each, emit at most 2 click events\r\n *\r\n * ```ts\r\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   windowTime(1000),\r\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\r\n *   mergeAll()                     // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\r\n *\r\n * ```ts\r\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   windowTime(1000, 5000),\r\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\r\n *   mergeAll()                     // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Same as example above but with `maxWindowCount` instead of `take`\r\n *\r\n * ```ts\r\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\r\n *   mergeAll()                 // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link window}\r\n * @see {@link windowCount}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link bufferTime}\r\n *\r\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\r\n * @param windowCreationInterval The interval at which to start new\r\n * windows.\r\n * @param maxWindowSize Max number of\r\n * values each window can emit before completion.\r\n * @param scheduler The scheduler on which to schedule the\r\n * intervals that determine window boundaries.\r\n * @return A function that returns an Observable of windows, which in turn are\r\n * Observables.\r\n */\r\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\r\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\r\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\r\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\r\n\r\n  return operate((source, subscriber) => {\r\n    // The active windows, their related subscriptions, and removal functions.\r\n    let windowRecords: WindowRecord<T>[] | null = [];\r\n    // If true, it means that every time we close a window, we want to start a new window.\r\n    // This is only really used for when *just* the time span is passed.\r\n    let restartOnClose = false;\r\n\r\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\r\n      const { window, subs } = record;\r\n      window.complete();\r\n      subs.unsubscribe();\r\n      arrRemove(windowRecords, record);\r\n      restartOnClose && startWindow();\r\n    };\r\n\r\n    /**\r\n     * Called every time we start a new window. This also does\r\n     * the work of scheduling the job to close the window.\r\n     */\r\n    const startWindow = () => {\r\n      if (windowRecords) {\r\n        const subs = new Subscription();\r\n        subscriber.add(subs);\r\n        const window = new Subject<T>();\r\n        const record = {\r\n          window,\r\n          subs,\r\n          seen: 0,\r\n        };\r\n        windowRecords.push(record);\r\n        subscriber.next(window.asObservable());\r\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\r\n      }\r\n    };\r\n\r\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\r\n      // The user passed both a windowTimeSpan (required), and a creation interval\r\n      // That means we need to start new window on the interval, and those windows need\r\n      // to wait the required time span before completing.\r\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\r\n    } else {\r\n      restartOnClose = true;\r\n    }\r\n\r\n    startWindow();\r\n\r\n    /**\r\n     * We need to loop over a copy of the window records several times in this operator.\r\n     * This is to save bytes over the wire more than anything.\r\n     * The reason we copy the array is that reentrant code could mutate the array while\r\n     * we are iterating over it.\r\n     */\r\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\r\n\r\n    /**\r\n     * Used to notify all of the windows and the subscriber in the same way\r\n     * in the error and complete handlers.\r\n     */\r\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\r\n      loop(({ window }) => cb(window));\r\n      cb(subscriber);\r\n      subscriber.unsubscribe();\r\n    };\r\n\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          // Notify all windows of the value.\r\n          loop((record) => {\r\n            record.window.next(value);\r\n            // If the window is over the max size, we need to close it.\r\n            maxWindowSize <= ++record.seen && closeWindow(record);\r\n          });\r\n        },\r\n        // Complete the windows and the downstream subscriber and clean up.\r\n        () => terminate((consumer) => consumer.complete()),\r\n        // Notify the windows and the downstream subscriber of the error and clean up.\r\n        (err) => terminate((consumer) => consumer.error(err))\r\n      )\r\n    );\r\n\r\n    // Additional finalization. This will be called when the\r\n    // destination tears down. Other finalizations are registered implicitly\r\n    // above via subscription.\r\n    return () => {\r\n      // Ensure that the buffer is released.\r\n      windowRecords = null!;\r\n    };\r\n  });\r\n}\r\n\r\ninterface WindowRecord<T> {\r\n  seen: number;\r\n  window: Subject<T>;\r\n  subs: Subscription;\r\n}\r\n", "import { Observable } from '../Observable';\r\nimport { Subject } from '../Subject';\r\nimport { Subscription } from '../Subscription';\r\nimport { ObservableInput, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { noop } from '../util/noop';\r\nimport { arrRemove } from '../util/arrRemove';\r\n\r\n/**\r\n * Branch out the source Observable values as a nested Observable starting from\r\n * an emission from `openings` and ending when the output of `closingSelector`\r\n * emits.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * ![](windowToggle.png)\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits windows that contain those items\r\n * emitted by the source Observable between the time when the `openings`\r\n * Observable emits an item and when the Observable returned by\r\n * `closingSelector` emits an item.\r\n *\r\n * ## Example\r\n *\r\n * Every other second, emit the click events from the next 500ms\r\n *\r\n * ```ts\r\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const openings = interval(1000);\r\n * const result = clicks.pipe(\r\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\r\n *   mergeAll()\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link window}\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowWhen}\r\n * @see {@link bufferToggle}\r\n *\r\n * @param {Observable<O>} openings An observable of notifications to start new\r\n * windows.\r\n * @param {function(value: O): Observable} closingSelector A function that takes\r\n * the value emitted by the `openings` observable and returns an Observable,\r\n * which, when it emits a next notification, signals that the\r\n * associated window should complete.\r\n * @return A function that returns an Observable of windows, which in turn are\r\n * Observables.\r\n */\r\nexport function windowToggle<T, O>(\r\n  openings: ObservableInput<O>,\r\n  closingSelector: (openValue: O) => ObservableInput<any>\r\n): OperatorFunction<T, Observable<T>> {\r\n  return operate((source, subscriber) => {\r\n    const windows: Subject<T>[] = [];\r\n\r\n    const handleError = (err: any) => {\r\n      while (0 < windows.length) {\r\n        windows.shift()!.error(err);\r\n      }\r\n      subscriber.error(err);\r\n    };\r\n\r\n    innerFrom(openings).subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (openValue) => {\r\n          const window = new Subject<T>();\r\n          windows.push(window);\r\n          const closingSubscription = new Subscription();\r\n          const closeWindow = () => {\r\n            arrRemove(windows, window);\r\n            window.complete();\r\n            closingSubscription.unsubscribe();\r\n          };\r\n\r\n          let closingNotifier: Observable<any>;\r\n          try {\r\n            closingNotifier = innerFrom(closingSelector(openValue));\r\n          } catch (err) {\r\n            handleError(err);\r\n            return;\r\n          }\r\n\r\n          subscriber.next(window.asObservable());\r\n\r\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\r\n        },\r\n        noop\r\n      )\r\n    );\r\n\r\n    // Subscribe to the source to get things started.\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value: T) => {\r\n          // Copy the windows array before we emit to\r\n          // make sure we don't have issues with reentrant code.\r\n          const windowsCopy = windows.slice();\r\n          for (const window of windowsCopy) {\r\n            window.next(value);\r\n          }\r\n        },\r\n        () => {\r\n          // Complete all of our windows before we complete.\r\n          while (0 < windows.length) {\r\n            windows.shift()!.complete();\r\n          }\r\n          subscriber.complete();\r\n        },\r\n        handleError,\r\n        () => {\r\n          // Add this finalization so that all window subjects are\r\n          // disposed of. This way, if a user tries to subscribe\r\n          // to a window *after* the outer subscription has been unsubscribed,\r\n          // they will get an error, instead of waiting forever to\r\n          // see if a value arrives.\r\n          while (0 < windows.length) {\r\n            windows.shift()!.unsubscribe();\r\n          }\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { Subscriber } from '../Subscriber';\r\nimport { Observable } from '../Observable';\r\nimport { Subject } from '../Subject';\r\nimport { ObservableInput, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\n\r\n/**\r\n * Branch out the source Observable values as a nested Observable using a\r\n * factory function of closing Observables to determine when to start a new\r\n * window.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * ![](windowWhen.png)\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits connected, non-overlapping windows.\r\n * It emits the current window and opens a new one whenever the Observable\r\n * produced by the specified `closingSelector` function emits an item. The first\r\n * window is opened immediately when subscribing to the output Observable.\r\n *\r\n * ## Example\r\n *\r\n * Emit only the first two clicks events in every window of [1-5] random seconds\r\n *\r\n * ```ts\r\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(\r\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\r\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\r\n *   mergeAll()                     // flatten the Observable-of-Observables\r\n * );\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link window}\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link bufferWhen}\r\n *\r\n * @param {function(): Observable} closingSelector A function that takes no\r\n * arguments and returns an Observable that signals (on either `next` or\r\n * `complete`) when to close the previous window and start a new one.\r\n * @return A function that returns an Observable of windows, which in turn are\r\n * Observables.\r\n */\r\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\r\n  return operate((source, subscriber) => {\r\n    let window: Subject<T> | null;\r\n    let closingSubscriber: Subscriber<any> | undefined;\r\n\r\n    /**\r\n     * When we get an error, we have to notify both the\r\n     * destination subscriber and the window.\r\n     */\r\n    const handleError = (err: any) => {\r\n      window!.error(err);\r\n      subscriber.error(err);\r\n    };\r\n\r\n    /**\r\n     * Called every time we need to open a window.\r\n     * Recursive, as it will start the closing notifier, which\r\n     * inevitably *should* call openWindow -- but may not if\r\n     * it is a \"never\" observable.\r\n     */\r\n    const openWindow = () => {\r\n      // We need to clean up our closing subscription,\r\n      // we only cared about the first next or complete notification.\r\n      closingSubscriber?.unsubscribe();\r\n\r\n      // Close our window before starting a new one.\r\n      window?.complete();\r\n\r\n      // Start the new window.\r\n      window = new Subject<T>();\r\n      subscriber.next(window.asObservable());\r\n\r\n      // Get our closing notifier.\r\n      let closingNotifier: Observable<any>;\r\n      try {\r\n        closingNotifier = innerFrom(closingSelector());\r\n      } catch (err) {\r\n        handleError(err);\r\n        return;\r\n      }\r\n\r\n      // Subscribe to the closing notifier, be sure\r\n      // to capture the subscriber (aka Subscription)\r\n      // so we can clean it up when we close the window\r\n      // and open a new one.\r\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\r\n    };\r\n\r\n    // Start the first window.\r\n    openWindow();\r\n\r\n    // Subscribe to the source\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => window!.next(value),\r\n        () => {\r\n          // The source completed, close the window and complete.\r\n          window!.complete();\r\n          subscriber.complete();\r\n        },\r\n        handleError,\r\n        () => {\r\n          // Be sure to clean up our closing subscription\r\n          // when this tears down.\r\n          closingSubscriber?.unsubscribe();\r\n          window = null!;\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\nimport { innerFrom } from '../observable/innerFrom';\r\nimport { identity } from '../util/identity';\r\nimport { noop } from '../util/noop';\r\nimport { popResultSelector } from '../util/args';\r\n\r\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\r\n\r\nexport function withLatestFrom<T, O extends unknown[], R>(\r\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\r\n): OperatorFunction<T, R>;\r\n\r\n/**\r\n * Combines the source Observable with other Observables to create an Observable\r\n * whose values are calculated from the latest values of each, only when the\r\n * source emits.\r\n *\r\n * <span class=\"informal\">Whenever the source Observable emits a value, it\r\n * computes a formula using that value plus the latest values from other input\r\n * Observables, then emits the output of that formula.</span>\r\n *\r\n * ![](withLatestFrom.png)\r\n *\r\n * `withLatestFrom` combines each value from the source Observable (the\r\n * instance) with the latest values from the other input Observables only when\r\n * the source emits a value, optionally using a `project` function to determine\r\n * the value to be emitted on the output Observable. All input Observables must\r\n * emit at least one value before the output Observable will emit a value.\r\n *\r\n * ## Example\r\n *\r\n * On every click event, emit an array with the latest timer event plus the click event\r\n *\r\n * ```ts\r\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const timer = interval(1000);\r\n * const result = clicks.pipe(withLatestFrom(timer));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link combineLatest}\r\n *\r\n * @param {ObservableInput} other An input Observable to combine with the source\r\n * Observable. More than one input Observables may be given as argument.\r\n * @param {Function} [project] Projection function for combining values\r\n * together. Receives all values in order of the Observables passed, where the\r\n * first parameter is a value from the source Observable. (e.g.\r\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\r\n * passed, arrays will be emitted on the output Observable.\r\n * @return A function that returns an Observable of projected values from the\r\n * most recent values from each input Observable, or an array of the most\r\n * recent values from each input Observable.\r\n */\r\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\r\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\r\n\r\n  return operate((source, subscriber) => {\r\n    const len = inputs.length;\r\n    const otherValues = new Array(len);\r\n    // An array of whether or not the other sources have emitted. Matched with them by index.\r\n    // TODO: At somepoint, we should investigate the performance implications here, and look\r\n    // into using a `Set()` and checking the `size` to see if we're ready.\r\n    let hasValue = inputs.map(() => false);\r\n    // Flipped true when we have at least one value from all other sources and\r\n    // we are ready to start emitting values.\r\n    let ready = false;\r\n\r\n    // Other sources. Note that here we are not checking `subscriber.closed`,\r\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\r\n    // from them. This is an important distinction because subscription constitutes\r\n    // a side-effect.\r\n    for (let i = 0; i < len; i++) {\r\n      innerFrom(inputs[i]).subscribe(\r\n        createOperatorSubscriber(\r\n          subscriber,\r\n          (value) => {\r\n            otherValues[i] = value;\r\n            if (!ready && !hasValue[i]) {\r\n              // If we're not ready yet, flag to show this observable has emitted.\r\n              hasValue[i] = true;\r\n              // Intentionally terse code.\r\n              // If all of our other observables have emitted, set `ready` to `true`,\r\n              // so we know we can start emitting values, then clean up the `hasValue` array,\r\n              // because we don't need it anymore.\r\n              (ready = hasValue.every(identity)) && (hasValue = null!);\r\n            }\r\n          },\r\n          // Completing one of the other sources has\r\n          // no bearing on the completion of our result.\r\n          noop\r\n        )\r\n      );\r\n    }\r\n\r\n    // Source subscription\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        if (ready) {\r\n          // We have at least one value from the other sources. Go ahead and emit.\r\n          const values = [value, ...otherValues];\r\n          subscriber.next(project ? project(...values) : values);\r\n        }\r\n      })\r\n    );\r\n  });\r\n}\r\n", "import { OperatorFunction, ObservableInput } from '../types';\r\nimport { zip } from '../observable/zip';\r\nimport { joinAllInternals } from './joinAllInternals';\r\n\r\n/**\r\n * Collects all observable inner sources from the source, once the source completes,\r\n * it will subscribe to all inner sources, combining their values by index and emitting\r\n * them.\r\n *\r\n * @see {@link zipWith}\r\n * @see {@link zip}\r\n */\r\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\r\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\r\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\r\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\r\n\r\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\r\n  return joinAllInternals(zip, project);\r\n}\r\n", "import { zip as zipStatic } from '../observable/zip';\r\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[], R>(\r\n  otherInputsAndProject: [...ObservableInputTuple<A>],\r\n  project: (...values: Cons<T, A>) => R\r\n): OperatorFunction<T, R>;\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[], R>(\r\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\r\n): OperatorFunction<T, R>;\r\n\r\n/**\r\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\r\n */\r\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\r\n  return operate((source, subscriber) => {\r\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\r\n  });\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\r\nimport { zip } from './zip';\r\n\r\n/**\r\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\r\n *\r\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\r\n * then the second value from each will be combined into a single array and emitted, then the third value\r\n * from each will be combined into a single array and emitted, and so on.\r\n *\r\n * This will continue until it is no longer able to combine values of the same index into an array.\r\n *\r\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\r\n * as there is no way to continue \"zipping\" values together by index.\r\n *\r\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\r\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\r\n * at a similar pace, or finite streams of known length.\r\n *\r\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\r\n *\r\n * @param otherInputs other observable inputs to collate values from.\r\n * @return A function that returns an Observable that emits items by index\r\n * combined from the source Observable and provided Observables, in form of an\r\n * array.\r\n */\r\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\r\n  return zip(...otherInputs);\r\n}\r\n", "//////////////////////////////////////////////////////////\r\n// Here we need to reference our other deep imports\r\n// so VS code will figure out where they are\r\n// see conversation here:\r\n// https://github.com/microsoft/TypeScript/issues/43034\r\n//////////////////////////////////////////////////////////\r\n\r\n// tslint:disable: no-reference\r\n// It's tempting to add references to all of the deep-import locations, but\r\n// adding references to those that require DOM types breaks Node projects.\r\n/// <reference path=\"./operators/index.ts\" />\r\n/// <reference path=\"./testing/index.ts\" />\r\n// tslint:enable: no-reference\r\n\r\n/* Observable */\r\nexport { Observable } from './internal/Observable';\r\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\r\nexport { GroupedObservable } from './internal/operators/groupBy';\r\nexport { Operator } from './internal/Operator';\r\nexport { observable } from './internal/symbol/observable';\r\nexport { animationFrames } from './internal/observable/dom/animationFrames';\r\n\r\n/* Subjects */\r\nexport { Subject } from './internal/Subject';\r\nexport { BehaviorSubject } from './internal/BehaviorSubject';\r\nexport { ReplaySubject } from './internal/ReplaySubject';\r\nexport { AsyncSubject } from './internal/AsyncSubject';\r\n\r\n/* Schedulers */\r\nexport { asap, asapScheduler } from './internal/scheduler/asap';\r\nexport { async, asyncScheduler } from './internal/scheduler/async';\r\nexport { queue, queueScheduler } from './internal/scheduler/queue';\r\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\r\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\r\nexport { Scheduler } from './internal/Scheduler';\r\n\r\n/* Subscription */\r\nexport { Subscription } from './internal/Subscription';\r\nexport { Subscriber } from './internal/Subscriber';\r\n\r\n/* Notification */\r\nexport { Notification, NotificationKind } from './internal/Notification';\r\n\r\n/* Utils */\r\nexport { pipe } from './internal/util/pipe';\r\nexport { noop } from './internal/util/noop';\r\nexport { identity } from './internal/util/identity';\r\nexport { isObservable } from './internal/util/isObservable';\r\n\r\n/* Promise Conversion */\r\nexport { lastValueFrom } from './internal/lastValueFrom';\r\nexport { firstValueFrom } from './internal/firstValueFrom';\r\n\r\n/* Error types */\r\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\r\nexport { EmptyError } from './internal/util/EmptyError';\r\nexport { NotFoundError } from './internal/util/NotFoundError';\r\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\r\nexport { SequenceError } from './internal/util/SequenceError';\r\nexport { TimeoutError } from './internal/operators/timeout';\r\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\r\n\r\n/* Static observable creation exports */\r\nexport { bindCallback } from './internal/observable/bindCallback';\r\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\r\nexport { combineLatest } from './internal/observable/combineLatest';\r\nexport { concat } from './internal/observable/concat';\r\nexport { connectable } from './internal/observable/connectable';\r\nexport { defer } from './internal/observable/defer';\r\nexport { empty } from './internal/observable/empty';\r\nexport { forkJoin } from './internal/observable/forkJoin';\r\nexport { from } from './internal/observable/from';\r\nexport { fromEvent } from './internal/observable/fromEvent';\r\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\r\nexport { generate } from './internal/observable/generate';\r\nexport { iif } from './internal/observable/iif';\r\nexport { interval } from './internal/observable/interval';\r\nexport { merge } from './internal/observable/merge';\r\nexport { never } from './internal/observable/never';\r\nexport { of } from './internal/observable/of';\r\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\r\nexport { pairs } from './internal/observable/pairs';\r\nexport { partition } from './internal/observable/partition';\r\nexport { race } from './internal/observable/race';\r\nexport { range } from './internal/observable/range';\r\nexport { throwError } from './internal/observable/throwError';\r\nexport { timer } from './internal/observable/timer';\r\nexport { using } from './internal/observable/using';\r\nexport { zip } from './internal/observable/zip';\r\nexport { scheduled } from './internal/scheduled/scheduled';\r\n\r\n/* Constants */\r\nexport { EMPTY } from './internal/observable/empty';\r\nexport { NEVER } from './internal/observable/never';\r\n\r\n/* Types */\r\nexport * from './internal/types';\r\n\r\n/* Config */\r\nexport { config, GlobalConfig } from './internal/config';\r\n\r\n/* Operators */\r\nexport { audit } from './internal/operators/audit';\r\nexport { auditTime } from './internal/operators/auditTime';\r\nexport { buffer } from './internal/operators/buffer';\r\nexport { bufferCount } from './internal/operators/bufferCount';\r\nexport { bufferTime } from './internal/operators/bufferTime';\r\nexport { bufferToggle } from './internal/operators/bufferToggle';\r\nexport { bufferWhen } from './internal/operators/bufferWhen';\r\nexport { catchError } from './internal/operators/catchError';\r\nexport { combineAll } from './internal/operators/combineAll';\r\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\r\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\r\nexport { concatAll } from './internal/operators/concatAll';\r\nexport { concatMap } from './internal/operators/concatMap';\r\nexport { concatMapTo } from './internal/operators/concatMapTo';\r\nexport { concatWith } from './internal/operators/concatWith';\r\nexport { connect, ConnectConfig } from './internal/operators/connect';\r\nexport { count } from './internal/operators/count';\r\nexport { debounce } from './internal/operators/debounce';\r\nexport { debounceTime } from './internal/operators/debounceTime';\r\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\r\nexport { delay } from './internal/operators/delay';\r\nexport { delayWhen } from './internal/operators/delayWhen';\r\nexport { dematerialize } from './internal/operators/dematerialize';\r\nexport { distinct } from './internal/operators/distinct';\r\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\r\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\r\nexport { elementAt } from './internal/operators/elementAt';\r\nexport { endWith } from './internal/operators/endWith';\r\nexport { every } from './internal/operators/every';\r\nexport { exhaust } from './internal/operators/exhaust';\r\nexport { exhaustAll } from './internal/operators/exhaustAll';\r\nexport { exhaustMap } from './internal/operators/exhaustMap';\r\nexport { expand } from './internal/operators/expand';\r\nexport { filter } from './internal/operators/filter';\r\nexport { finalize } from './internal/operators/finalize';\r\nexport { find } from './internal/operators/find';\r\nexport { findIndex } from './internal/operators/findIndex';\r\nexport { first } from './internal/operators/first';\r\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\r\nexport { ignoreElements } from './internal/operators/ignoreElements';\r\nexport { isEmpty } from './internal/operators/isEmpty';\r\nexport { last } from './internal/operators/last';\r\nexport { map } from './internal/operators/map';\r\nexport { mapTo } from './internal/operators/mapTo';\r\nexport { materialize } from './internal/operators/materialize';\r\nexport { max } from './internal/operators/max';\r\nexport { mergeAll } from './internal/operators/mergeAll';\r\nexport { flatMap } from './internal/operators/flatMap';\r\nexport { mergeMap } from './internal/operators/mergeMap';\r\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\r\nexport { mergeScan } from './internal/operators/mergeScan';\r\nexport { mergeWith } from './internal/operators/mergeWith';\r\nexport { min } from './internal/operators/min';\r\nexport { multicast } from './internal/operators/multicast';\r\nexport { observeOn } from './internal/operators/observeOn';\r\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\r\nexport { pairwise } from './internal/operators/pairwise';\r\nexport { pluck } from './internal/operators/pluck';\r\nexport { publish } from './internal/operators/publish';\r\nexport { publishBehavior } from './internal/operators/publishBehavior';\r\nexport { publishLast } from './internal/operators/publishLast';\r\nexport { publishReplay } from './internal/operators/publishReplay';\r\nexport { raceWith } from './internal/operators/raceWith';\r\nexport { reduce } from './internal/operators/reduce';\r\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\r\nexport { repeatWhen } from './internal/operators/repeatWhen';\r\nexport { retry, RetryConfig } from './internal/operators/retry';\r\nexport { retryWhen } from './internal/operators/retryWhen';\r\nexport { refCount } from './internal/operators/refCount';\r\nexport { sample } from './internal/operators/sample';\r\nexport { sampleTime } from './internal/operators/sampleTime';\r\nexport { scan } from './internal/operators/scan';\r\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\r\nexport { share, ShareConfig } from './internal/operators/share';\r\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\r\nexport { single } from './internal/operators/single';\r\nexport { skip } from './internal/operators/skip';\r\nexport { skipLast } from './internal/operators/skipLast';\r\nexport { skipUntil } from './internal/operators/skipUntil';\r\nexport { skipWhile } from './internal/operators/skipWhile';\r\nexport { startWith } from './internal/operators/startWith';\r\nexport { subscribeOn } from './internal/operators/subscribeOn';\r\nexport { switchAll } from './internal/operators/switchAll';\r\nexport { switchMap } from './internal/operators/switchMap';\r\nexport { switchMapTo } from './internal/operators/switchMapTo';\r\nexport { switchScan } from './internal/operators/switchScan';\r\nexport { take } from './internal/operators/take';\r\nexport { takeLast } from './internal/operators/takeLast';\r\nexport { takeUntil } from './internal/operators/takeUntil';\r\nexport { takeWhile } from './internal/operators/takeWhile';\r\nexport { tap, TapObserver } from './internal/operators/tap';\r\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\r\nexport { throttleTime } from './internal/operators/throttleTime';\r\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\r\nexport { timeInterval } from './internal/operators/timeInterval';\r\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\r\nexport { timeoutWith } from './internal/operators/timeoutWith';\r\nexport { timestamp } from './internal/operators/timestamp';\r\nexport { toArray } from './internal/operators/toArray';\r\nexport { window } from './internal/operators/window';\r\nexport { windowCount } from './internal/operators/windowCount';\r\nexport { windowTime } from './internal/operators/windowTime';\r\nexport { windowToggle } from './internal/operators/windowToggle';\r\nexport { windowWhen } from './internal/operators/windowWhen';\r\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\r\nexport { zipAll } from './internal/operators/zipAll';\r\nexport { zipWith } from './internal/operators/zipWith';\r\n", "import { not } from '../util/not';\r\nimport { filter } from './filter';\r\nimport { Observable } from '../Observable';\r\nimport { UnaryFunction } from '../types';\r\n\r\n/**\r\n * Splits the source Observable into two, one with values that satisfy a\r\n * predicate, and another with values that don't satisfy the predicate.\r\n *\r\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\r\n * one like the output of {@link filter}, and the other with values that did not\r\n * pass the condition.</span>\r\n *\r\n * ![](partition.png)\r\n *\r\n * `partition` outputs an array with two Observables that partition the values\r\n * from the source Observable through the given `predicate` function. The first\r\n * Observable in that array emits source values for which the predicate argument\r\n * returns true. The second Observable emits source values for which the\r\n * predicate returns false. The first behaves like {@link filter} and the second\r\n * behaves like {@link filter} with the predicate negated.\r\n *\r\n * ## Example\r\n *\r\n * Partition click events into those on DIV elements and those elsewhere\r\n *\r\n * ```ts\r\n * import { fromEvent } from 'rxjs';\r\n * import { partition } from 'rxjs/operators';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const [clicksOnDivs, clicksElsewhere] = clicks.pipe(partition(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n *\r\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\r\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\r\n * ```\r\n *\r\n * @see {@link filter}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted on the first Observable in the returned array, if\r\n * `false` the value is emitted on the second Observable in the array. The\r\n * `index` parameter is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return A function that returns an array with two Observables: one with\r\n * values that passed the predicate, and another with values that did not pass\r\n * the predicate.\r\n * @deprecated Replaced with the `partition` static creation function. Will be removed in v8.\r\n */\r\nexport function partition<T>(\r\n  predicate: (value: T, index: number) => boolean,\r\n  thisArg?: any\r\n): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\r\n  return (source: Observable<T>) =>\r\n    [filter(predicate, thisArg)(source), filter(not(predicate, thisArg))(source)] as [Observable<T>, Observable<T>];\r\n}\r\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { raceWith } from './raceWith';\r\n\r\n/** @deprecated Replaced with {@link raceWith}. Will be removed in v8. */\r\nexport function race<T, A extends readonly unknown[]>(otherSources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\r\n/** @deprecated Replaced with {@link raceWith}. Will be removed in v8. */\r\nexport function race<T, A extends readonly unknown[]>(...otherSources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\r\n\r\n/**\r\n * Returns an Observable that mirrors the first source Observable to emit a next,\r\n * error or complete notification from the combination of this Observable and supplied Observables.\r\n * @param args Sources used to race for which Observable emits first.\r\n * @return A function that returns an Observable that mirrors the output of the\r\n * first Observable to emit an item.\r\n * @deprecated Replaced with {@link raceWith}. Will be removed in v8.\r\n */\r\nexport function race<T>(...args: any[]): OperatorFunction<T, unknown> {\r\n  return raceWith(...argsOrArgArray(args));\r\n}\r\n", "/* Operator exports */\r\nexport { audit } from '../internal/operators/audit';\r\nexport { auditTime } from '../internal/operators/auditTime';\r\nexport { buffer } from '../internal/operators/buffer';\r\nexport { bufferCount } from '../internal/operators/bufferCount';\r\nexport { bufferTime } from '../internal/operators/bufferTime';\r\nexport { bufferToggle } from '../internal/operators/bufferToggle';\r\nexport { bufferWhen } from '../internal/operators/bufferWhen';\r\nexport { catchError } from '../internal/operators/catchError';\r\nexport { combineAll } from '../internal/operators/combineAll';\r\nexport { combineLatestAll } from '../internal/operators/combineLatestAll';\r\nexport { combineLatest } from '../internal/operators/combineLatest';\r\nexport { combineLatestWith } from '../internal/operators/combineLatestWith';\r\nexport { concat } from '../internal/operators/concat';\r\nexport { concatAll } from '../internal/operators/concatAll';\r\nexport { concatMap } from '../internal/operators/concatMap';\r\nexport { concatMapTo } from '../internal/operators/concatMapTo';\r\nexport { concatWith } from '../internal/operators/concatWith';\r\nexport { connect, ConnectConfig } from '../internal/operators/connect';\r\nexport { count } from '../internal/operators/count';\r\nexport { debounce } from '../internal/operators/debounce';\r\nexport { debounceTime } from '../internal/operators/debounceTime';\r\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\r\nexport { delay } from '../internal/operators/delay';\r\nexport { delayWhen } from '../internal/operators/delayWhen';\r\nexport { dematerialize } from '../internal/operators/dematerialize';\r\nexport { distinct } from '../internal/operators/distinct';\r\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\r\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\r\nexport { elementAt } from '../internal/operators/elementAt';\r\nexport { endWith } from '../internal/operators/endWith';\r\nexport { every } from '../internal/operators/every';\r\nexport { exhaust } from '../internal/operators/exhaust';\r\nexport { exhaustAll } from '../internal/operators/exhaustAll';\r\nexport { exhaustMap } from '../internal/operators/exhaustMap';\r\nexport { expand } from '../internal/operators/expand';\r\nexport { filter } from '../internal/operators/filter';\r\nexport { finalize } from '../internal/operators/finalize';\r\nexport { find } from '../internal/operators/find';\r\nexport { findIndex } from '../internal/operators/findIndex';\r\nexport { first } from '../internal/operators/first';\r\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from '../internal/operators/groupBy';\r\nexport { ignoreElements } from '../internal/operators/ignoreElements';\r\nexport { isEmpty } from '../internal/operators/isEmpty';\r\nexport { last } from '../internal/operators/last';\r\nexport { map } from '../internal/operators/map';\r\nexport { mapTo } from '../internal/operators/mapTo';\r\nexport { materialize } from '../internal/operators/materialize';\r\nexport { max } from '../internal/operators/max';\r\nexport { merge } from '../internal/operators/merge';\r\nexport { mergeAll } from '../internal/operators/mergeAll';\r\nexport { flatMap } from '../internal/operators/flatMap';\r\nexport { mergeMap } from '../internal/operators/mergeMap';\r\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\r\nexport { mergeScan } from '../internal/operators/mergeScan';\r\nexport { mergeWith } from '../internal/operators/mergeWith';\r\nexport { min } from '../internal/operators/min';\r\nexport { multicast } from '../internal/operators/multicast';\r\nexport { observeOn } from '../internal/operators/observeOn';\r\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNextWith';\r\nexport { pairwise } from '../internal/operators/pairwise';\r\nexport { partition } from '../internal/operators/partition';\r\nexport { pluck } from '../internal/operators/pluck';\r\nexport { publish } from '../internal/operators/publish';\r\nexport { publishBehavior } from '../internal/operators/publishBehavior';\r\nexport { publishLast } from '../internal/operators/publishLast';\r\nexport { publishReplay } from '../internal/operators/publishReplay';\r\nexport { race } from '../internal/operators/race';\r\nexport { raceWith } from '../internal/operators/raceWith';\r\nexport { reduce } from '../internal/operators/reduce';\r\nexport { repeat, RepeatConfig } from '../internal/operators/repeat';\r\nexport { repeatWhen } from '../internal/operators/repeatWhen';\r\nexport { retry, RetryConfig } from '../internal/operators/retry';\r\nexport { retryWhen } from '../internal/operators/retryWhen';\r\nexport { refCount } from '../internal/operators/refCount';\r\nexport { sample } from '../internal/operators/sample';\r\nexport { sampleTime } from '../internal/operators/sampleTime';\r\nexport { scan } from '../internal/operators/scan';\r\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\r\nexport { share, ShareConfig } from '../internal/operators/share';\r\nexport { shareReplay, ShareReplayConfig } from '../internal/operators/shareReplay';\r\nexport { single } from '../internal/operators/single';\r\nexport { skip } from '../internal/operators/skip';\r\nexport { skipLast } from '../internal/operators/skipLast';\r\nexport { skipUntil } from '../internal/operators/skipUntil';\r\nexport { skipWhile } from '../internal/operators/skipWhile';\r\nexport { startWith } from '../internal/operators/startWith';\r\nexport { subscribeOn } from '../internal/operators/subscribeOn';\r\nexport { switchAll } from '../internal/operators/switchAll';\r\nexport { switchMap } from '../internal/operators/switchMap';\r\nexport { switchMapTo } from '../internal/operators/switchMapTo';\r\nexport { switchScan } from '../internal/operators/switchScan';\r\nexport { take } from '../internal/operators/take';\r\nexport { takeLast } from '../internal/operators/takeLast';\r\nexport { takeUntil } from '../internal/operators/takeUntil';\r\nexport { takeWhile } from '../internal/operators/takeWhile';\r\nexport { tap, TapObserver } from '../internal/operators/tap';\r\nexport { throttle, ThrottleConfig } from '../internal/operators/throttle';\r\nexport { throttleTime } from '../internal/operators/throttleTime';\r\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\r\nexport { timeInterval } from '../internal/operators/timeInterval';\r\nexport { timeout, TimeoutConfig, TimeoutInfo } from '../internal/operators/timeout';\r\nexport { timeoutWith } from '../internal/operators/timeoutWith';\r\nexport { timestamp } from '../internal/operators/timestamp';\r\nexport { toArray } from '../internal/operators/toArray';\r\nexport { window } from '../internal/operators/window';\r\nexport { windowCount } from '../internal/operators/windowCount';\r\nexport { windowTime } from '../internal/operators/windowTime';\r\nexport { windowToggle } from '../internal/operators/windowToggle';\r\nexport { windowWhen } from '../internal/operators/windowWhen';\r\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\r\nexport { zip } from '../internal/operators/zip';\r\nexport { zipAll } from '../internal/operators/zipAll';\r\nexport { zipWith } from '../internal/operators/zipWith';\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-disable-next-line no-unused-vars */\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar States = {\r\n    READY: 0,\r\n    STREAMING: 1,\r\n    COMPLETED: 2\r\n};\r\n/**\r\n * The reactive result interface.\r\n */\r\nvar RxResult = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\r\n     * @param {number} state - The streaming state\r\n     */\r\n    function RxResult(result, state) {\r\n        var replayedResult = result.pipe((0, operators_1.publishReplay)(1), (0, operators_1.refCount)());\r\n        this._result = replayedResult;\r\n        this._keys = replayedResult.pipe((0, operators_1.mergeMap)(function (r) { return (0, rxjs_1.from)(r.keys()); }), (0, operators_1.publishReplay)(1), (0, operators_1.refCount)());\r\n        this._records = undefined;\r\n        this._controls = new StreamControl();\r\n        this._summary = new rxjs_1.ReplaySubject();\r\n        this._state = state || States.READY;\r\n    }\r\n    /**\r\n     * Returns an observable that exposes a single item containing field names\r\n     * returned by the executing query.\r\n     *\r\n     * Errors raised by actual query execution can surface on the returned\r\n     * observable stream.\r\n     *\r\n     * @public\r\n     * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\r\n     */\r\n    RxResult.prototype.keys = function () {\r\n        return this._keys;\r\n    };\r\n    /**\r\n     * Returns an observable that exposes each record returned by the executing query.\r\n     *\r\n     * Errors raised during the streaming phase can surface on the returned observable stream.\r\n     *\r\n     * @public\r\n     * @returns {Observable<Record>} - An observable stream of records.\r\n     */\r\n    RxResult.prototype.records = function () {\r\n        var _this = this;\r\n        var result = this._result.pipe((0, operators_1.mergeMap)(function (result) {\r\n            return new rxjs_1.Observable(function (recordsObserver) {\r\n                return _this._startStreaming({ result: result, recordsObserver: recordsObserver });\r\n            });\r\n        }));\r\n        result.push = function () { return _this._push(); };\r\n        return result;\r\n    };\r\n    /**\r\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\r\n     * the server after the streaming of the executing query is completed.\r\n     *\r\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\r\n     *\r\n     * @public\r\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\r\n     */\r\n    RxResult.prototype.consume = function () {\r\n        var _this = this;\r\n        return this._result.pipe((0, operators_1.mergeMap)(function (result) {\r\n            return new rxjs_1.Observable(function (summaryObserver) {\r\n                return _this._startStreaming({ result: result, summaryObserver: summaryObserver });\r\n            });\r\n        }));\r\n    };\r\n    /**\r\n     * Pauses the automatic streaming of records.\r\n     *\r\n     * This method provides a way of control the flow of records\r\n     *\r\n     * @experimental\r\n     */\r\n    RxResult.prototype.pause = function () {\r\n        this._controls.pause();\r\n    };\r\n    /**\r\n     * Resumes the automatic streaming of records.\r\n     *\r\n     * This method won't need to be called in normal stream operation. It only applies to the case when the stream is paused.\r\n     *\r\n     * This method is method won't start the consuming records if the {@link records} stream didn't get subscribed.\r\n     * @experimental\r\n     * @returns {Promise<void>} - A promise that resolves when the stream is resumed.\r\n     */\r\n    RxResult.prototype.resume = function () {\r\n        return this._controls.resume();\r\n    };\r\n    /**\r\n     * Pushes the next record to the stream.\r\n     *\r\n     * This method automatic pause the auto-streaming of records and then push next record to the stream.\r\n     *\r\n     * For returning the automatic streaming of records, use {@link resume} method.\r\n     *\r\n     * @experimental\r\n     * @returns {Promise<void>} - A promise that resolves when the push is completed.\r\n     */\r\n    RxResult.prototype.push = function () {\r\n        return this._controls.push();\r\n    };\r\n    RxResult.prototype._startStreaming = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, result = _b.result, _c = _b.recordsObserver, recordsObserver = _c === void 0 ? null : _c, _d = _b.summaryObserver, summaryObserver = _d === void 0 ? null : _d;\r\n        var subscriptions = [];\r\n        if (summaryObserver) {\r\n            subscriptions.push(this._summary.subscribe(summaryObserver));\r\n        }\r\n        if (this._state < States.STREAMING) {\r\n            this._state = States.STREAMING;\r\n            this._setupRecordsStream(result);\r\n            if (recordsObserver) {\r\n                subscriptions.push(this._records.subscribe(recordsObserver));\r\n            }\r\n            else {\r\n                result._cancel();\r\n            }\r\n            subscriptions.push({\r\n                unsubscribe: function () {\r\n                    if (result._cancel) {\r\n                        result._cancel();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else if (recordsObserver) {\r\n            recordsObserver.error((0, neo4j_driver_core_1.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\r\n        }\r\n        return function () {\r\n            subscriptions.forEach(function (s) { return s.unsubscribe(); });\r\n        };\r\n    };\r\n    /**\r\n     * Create a {@link Observable} for the current {@link RxResult}\r\n     *\r\n     *\r\n     * @package\r\n     * @experimental\r\n     * @since 5.0\r\n     * @return {Observable<RxResult>}\r\n     */\r\n    RxResult.prototype._toObservable = function () {\r\n        var _this = this;\r\n        function wrap(result) {\r\n            return new rxjs_1.Observable(function (observer) {\r\n                observer.next(result);\r\n                observer.complete();\r\n            });\r\n        }\r\n        return new rxjs_1.Observable(function (observer) {\r\n            _this._result.subscribe({\r\n                complete: function () { return observer.complete(); },\r\n                next: function (result) { return observer.next(new RxResult(wrap(result)), _this._state); },\r\n                error: function (e) { return observer.error(e); }\r\n            });\r\n        });\r\n    };\r\n    RxResult.prototype._setupRecordsStream = function (result) {\r\n        var _this = this;\r\n        if (this._records) {\r\n            return this._records;\r\n        }\r\n        this._records = createFullyControlledSubject(result[Symbol.asyncIterator](), {\r\n            complete: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var _a, _b;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            this._state = States.COMPLETED;\r\n                            _b = (_a = this._summary).next;\r\n                            return [4 /*yield*/, result.summary()];\r\n                        case 1:\r\n                            _b.apply(_a, [_c.sent()]);\r\n                            this._summary.complete();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            error: function (error) {\r\n                _this._state = States.COMPLETED;\r\n                _this._summary.error(error);\r\n            }\r\n        }, this._controls);\r\n        return this._records;\r\n    };\r\n    return RxResult;\r\n}());\r\nexports.default = RxResult;\r\nfunction createFullyControlledSubject(iterator, completeObserver, streamControl) {\r\n    var _this = this;\r\n    if (streamControl === void 0) { streamControl = new StreamControl(); }\r\n    var subject = new rxjs_1.Subject();\r\n    var pushNextValue = function (result) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _a, done, value, error_1;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    _b.trys.push([0, 2, 3, 4]);\r\n                    streamControl.pushing = true;\r\n                    return [4 /*yield*/, result];\r\n                case 1:\r\n                    _a = _b.sent(), done = _a.done, value = _a.value;\r\n                    if (done) {\r\n                        subject.complete();\r\n                        completeObserver.complete();\r\n                    }\r\n                    else {\r\n                        subject.next(value);\r\n                        if (!streamControl.paused) {\r\n                            pushNextValue(iterator.next())\r\n                                .catch(function () { });\r\n                        }\r\n                    }\r\n                    return [3 /*break*/, 4];\r\n                case 2:\r\n                    error_1 = _b.sent();\r\n                    subject.error(error_1);\r\n                    completeObserver.error(error_1);\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    streamControl.pushing = false;\r\n                    return [7 /*endfinally*/];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    function push(value) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, pushNextValue(iterator.next(value))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    streamControl.pusher = push;\r\n    push();\r\n    return subject;\r\n}\r\nvar StreamControl = /** @class */ (function () {\r\n    function StreamControl(push) {\r\n        if (push === void 0) { push = function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n            return [2 /*return*/];\r\n        }); }); }; }\r\n        var _this = this;\r\n        this._paused = false;\r\n        this._pushing = false;\r\n        this._push = push;\r\n    }\r\n    StreamControl.prototype.pause = function () {\r\n        this._paused = true;\r\n    };\r\n    Object.defineProperty(StreamControl.prototype, \"paused\", {\r\n        get: function () {\r\n            return this._paused;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StreamControl.prototype, \"pushing\", {\r\n        get: function () {\r\n            return this._pushing;\r\n        },\r\n        set: function (pushing) {\r\n            this._pushing = pushing;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StreamControl.prototype.resume = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var wasPaused;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        wasPaused = this._paused;\r\n                        this._paused = false;\r\n                        if (!(wasPaused && !this._pushing)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._push()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StreamControl.prototype.push = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.pause();\r\n                        return [4 /*yield*/, this._push()];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(StreamControl.prototype, \"pusher\", {\r\n        get: function () {\r\n            return this._push;\r\n        },\r\n        set: function (push) {\r\n            this._push = push;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return StreamControl;\r\n}());", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar result_rx_1 = __importDefault(require(\"./result-rx\"));\r\n// eslint-disable-next-line no-unused-vars\r\nvar neo4j_driver_core_1 = __importDefault(require(\"neo4j-driver-core\"));\r\n/**\r\n * A reactive transaction, which provides the same functionality as {@link Transaction} but through a Reactive API.\r\n */\r\nvar RxTransaction = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @protected\r\n     * @param {Transaction} txc - The underlying transaction instance to relay requests\r\n     */\r\n    function RxTransaction(txc) {\r\n        this._txc = txc;\r\n    }\r\n    /**\r\n     * Creates a reactive result that will execute the query in this transaction, with the provided parameters.\r\n     *\r\n     * @public\r\n     * @param {string} query - Query to be executed.\r\n     * @param {Object} parameters - Parameter values to use in query execution.\r\n     * @returns {RxResult} - A reactive result\r\n     */\r\n    RxTransaction.prototype.run = function (query, parameters) {\r\n        var _this = this;\r\n        return new result_rx_1.default(new rxjs_1.Observable(function (observer) {\r\n            try {\r\n                observer.next(_this._txc.run(query, parameters));\r\n                observer.complete();\r\n            }\r\n            catch (err) {\r\n                observer.error(err);\r\n            }\r\n            return function () { };\r\n        }));\r\n    };\r\n    /**\r\n     *  Commits the transaction.\r\n     *\r\n     * @public\r\n     * @returns {Observable} - An empty observable\r\n     */\r\n    RxTransaction.prototype.commit = function () {\r\n        var _this = this;\r\n        return new rxjs_1.Observable(function (observer) {\r\n            _this._txc\r\n                .commit()\r\n                .then(function () {\r\n                observer.complete();\r\n            })\r\n                .catch(function (err) { return observer.error(err); });\r\n        });\r\n    };\r\n    /**\r\n     *  Rolls back the transaction.\r\n     *\r\n     * @public\r\n     * @returns {Observable} - An empty observable\r\n     */\r\n    RxTransaction.prototype.rollback = function () {\r\n        var _this = this;\r\n        return new rxjs_1.Observable(function (observer) {\r\n            _this._txc\r\n                .rollback()\r\n                .then(function () {\r\n                observer.complete();\r\n            })\r\n                .catch(function (err) { return observer.error(err); });\r\n        });\r\n    };\r\n    /**\r\n     * Check if this transaction is active, which means commit and rollback did not happen.\r\n     * @return {boolean} `true` when not committed and not rolled back, `false` otherwise.\r\n     */\r\n    RxTransaction.prototype.isOpen = function () {\r\n        return this._txc.isOpen();\r\n    };\r\n    /**\r\n     * Closes the transaction\r\n     *\r\n     * This method will roll back the transaction if it is not already committed or rolled back.\r\n     *\r\n     * @returns {Observable} - An empty observable\r\n     */\r\n    RxTransaction.prototype.close = function () {\r\n        var _this = this;\r\n        return new rxjs_1.Observable(function (observer) {\r\n            _this._txc\r\n                .close()\r\n                .then(function () {\r\n                observer.complete();\r\n            })\r\n                .catch(function (err) { return observer.error(err); });\r\n        });\r\n    };\r\n    return RxTransaction;\r\n}());\r\nexports.default = RxTransaction;", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nvar result_rx_1 = __importDefault(require(\"./result-rx\"));\r\n// eslint-disable-next-line no-unused-vars\r\nvar transaction_rx_1 = __importDefault(require(\"./transaction-rx\"));\r\n/**\r\n * Represents a rx transaction that is managed by the transaction executor.\r\n *\r\n * @public\r\n */\r\nvar RxManagedTransaction = /** @class */ (function () {\r\n    /**\r\n     * @private\r\n     */\r\n    function RxManagedTransaction(_a) {\r\n        var run = _a.run;\r\n        this._run = run;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {RxTransaction} txc - The transaction to be wrapped\r\n     * @returns {RxManagedTransaction} The managed transaction\r\n     */\r\n    RxManagedTransaction.fromTransaction = function (txc) {\r\n        return new RxManagedTransaction({\r\n            run: txc.run.bind(txc)\r\n        });\r\n    };\r\n    /**\r\n     * Creates a reactive result that will execute the query in this transaction, with the provided parameters.\r\n     *\r\n     * @public\r\n     * @param {string} query - Query to be executed.\r\n     * @param {Object} parameters - Parameter values to use in query execution.\r\n     * @returns {RxResult} - A reactive result\r\n     */\r\n    RxManagedTransaction.prototype.run = function (query, parameters) {\r\n        return this._run(query, parameters);\r\n    };\r\n    return RxManagedTransaction;\r\n}());\r\nexports.default = RxManagedTransaction;", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\n// eslint-disable-next-line no-unused-vars\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar \r\n// eslint-disable-next-line no-unused-vars\r\nLogger = neo4j_driver_core_1.internal.logger.Logger;\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\r\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\r\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\r\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\r\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\r\nvar RxRetryLogic = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {Object} args\r\n     * @param {Logger} args.logger\r\n     */\r\n    function RxRetryLogic(_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.maxRetryTimeout, maxRetryTimeout = _c === void 0 ? DEFAULT_MAX_RETRY_TIME_MS : _c, _d = _b.initialDelay, initialDelay = _d === void 0 ? DEFAULT_INITIAL_RETRY_DELAY_MS : _d, _e = _b.delayMultiplier, delayMultiplier = _e === void 0 ? DEFAULT_RETRY_DELAY_MULTIPLIER : _e, _f = _b.delayJitter, delayJitter = _f === void 0 ? DEFAULT_RETRY_DELAY_JITTER_FACTOR : _f, _g = _b.logger, logger = _g === void 0 ? null : _g;\r\n        this._maxRetryTimeout = valueOrDefault(maxRetryTimeout, DEFAULT_MAX_RETRY_TIME_MS);\r\n        this._initialDelay = valueOrDefault(initialDelay, DEFAULT_INITIAL_RETRY_DELAY_MS);\r\n        this._delayMultiplier = valueOrDefault(delayMultiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\r\n        this._delayJitter = valueOrDefault(delayJitter, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     *\r\n     * @param {Observable<Any>} work\r\n     */\r\n    RxRetryLogic.prototype.retry = function (work) {\r\n        var _this = this;\r\n        return work.pipe((0, operators_1.retryWhen)(function (failedWork) {\r\n            var handledExceptions = [];\r\n            var startTime = Date.now();\r\n            var retryCount = 1;\r\n            var delayDuration = _this._initialDelay;\r\n            return failedWork.pipe((0, operators_1.mergeMap)(function (err) {\r\n                if (!(0, neo4j_driver_core_1.isRetriableError)(err)) {\r\n                    return (0, rxjs_1.throwError)(function () { return err; });\r\n                }\r\n                handledExceptions.push(err);\r\n                if (retryCount >= 2 &&\r\n                    Date.now() - startTime >= _this._maxRetryTimeout) {\r\n                    var error_1 = (0, neo4j_driver_core_1.newError)(\"Failed after retried for \".concat(retryCount, \" times in \").concat(_this._maxRetryTimeout, \" ms. Make sure that your database is online and retry again.\"), SERVICE_UNAVAILABLE);\r\n                    error_1.seenErrors = handledExceptions;\r\n                    return (0, rxjs_1.throwError)(function () { return error_1; });\r\n                }\r\n                var nextDelayDuration = _this._computeNextDelay(delayDuration);\r\n                delayDuration = delayDuration * _this._delayMultiplier;\r\n                retryCount++;\r\n                if (_this._logger) {\r\n                    _this._logger.warn(\"Transaction failed and will be retried in \".concat(nextDelayDuration));\r\n                }\r\n                return (0, rxjs_1.of)(1).pipe((0, operators_1.delay)(nextDelayDuration));\r\n            }));\r\n        }));\r\n    };\r\n    RxRetryLogic.prototype._computeNextDelay = function (delay) {\r\n        var jitter = delay * this._delayJitter;\r\n        return delay - jitter + 2 * jitter * Math.random();\r\n    };\r\n    return RxRetryLogic;\r\n}());\r\nexports.default = RxRetryLogic;\r\nfunction valueOrDefault(value, defaultValue) {\r\n    if (value || value === 0) {\r\n        return value;\r\n    }\r\n    return defaultValue;\r\n}", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar result_rx_1 = __importDefault(require(\"./result-rx\"));\r\n// eslint-disable-next-line no-unused-vars\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar transaction_rx_1 = __importDefault(require(\"./transaction-rx\"));\r\nvar transaction_managed_rx_1 = __importDefault(require(\"./transaction-managed-rx\"));\r\nvar retry_logic_rx_1 = __importDefault(require(\"./internal/retry-logic-rx\"));\r\nvar _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_READ = _a.ACCESS_MODE_READ, ACCESS_MODE_WRITE = _a.ACCESS_MODE_WRITE, TELEMETRY_APIS = _a.TELEMETRY_APIS, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\r\n/**\r\n * A Reactive session, which provides the same functionality as {@link Session} but through a Reactive API.\r\n */\r\nvar RxSession = /** @class */ (function () {\r\n    /**\r\n     * Constructs a reactive session with given default session instance and provided driver configuration.\r\n     *\r\n     * @protected\r\n     * @param {Object} param - Object parameter\r\n     * @param {Session} param.session - The underlying session instance to relay requests\r\n     */\r\n    function RxSession(_a) {\r\n        var _b = _a === void 0 ? {} : _a, session = _b.session, config = _b.config, log = _b.log;\r\n        this._session = session;\r\n        this._retryLogic = _createRetryLogic(config);\r\n        this._log = log;\r\n    }\r\n    /**\r\n     * Creates a reactive result that will execute the  query with the provided parameters and the provided\r\n     * transaction configuration that applies to the underlying auto-commit transaction.\r\n     *\r\n     * @public\r\n     * @param {string} query - Query to be executed.\r\n     * @param {Object} parameters - Parameter values to use in query execution.\r\n     * @param {TransactionConfig} transactionConfig - Configuration for the new auto-commit transaction.\r\n     * @returns {RxResult} - A reactive result\r\n     */\r\n    RxSession.prototype.run = function (query, parameters, transactionConfig) {\r\n        var _this = this;\r\n        return new result_rx_1.default(new rxjs_1.Observable(function (observer) {\r\n            try {\r\n                observer.next(_this._session.run(query, parameters, transactionConfig));\r\n                observer.complete();\r\n            }\r\n            catch (err) {\r\n                observer.error(err);\r\n            }\r\n            return function () { };\r\n        }));\r\n    };\r\n    /**\r\n     * Starts a new explicit transaction with the provided transaction configuration.\r\n     *\r\n     * @public\r\n     * @param {TransactionConfig} transactionConfig - Configuration for the new transaction.\r\n     * @returns {Observable<RxTransaction>} - A reactive stream that will generate at most **one** RxTransaction instance.\r\n     */\r\n    RxSession.prototype.beginTransaction = function (transactionConfig) {\r\n        return this._beginTransaction(this._session._mode, transactionConfig, { api: TELEMETRY_APIS.UNMANAGED_TRANSACTION });\r\n    };\r\n    /**\r\n     * Executes the provided unit of work in a {@link READ} reactive transaction which is created with the provided\r\n     * transaction configuration.\r\n     * @public\r\n     * @deprecated This method will be removed in version 6.0. Please, use {@link RxSession#executeRead} instead.\r\n     * @param {function(txc: RxTransaction): Observable} work - A unit of work to be executed.\r\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\r\n     * @returns {Observable} - A reactive stream returned by the unit of work.\r\n     */\r\n    RxSession.prototype.readTransaction = function (work, transactionConfig) {\r\n        return this._runTransaction(ACCESS_MODE_READ, work, transactionConfig);\r\n    };\r\n    /**\r\n     * Executes the provided unit of work in a {@link WRITE} reactive transaction which is created with the provided\r\n     * transaction configuration.\r\n     * @public\r\n     * @deprecated This method will be removed in version 6.0. Please, use {@link RxSession#executeWrite} instead.\r\n     * @param {function(txc: RxTransaction): Observable} work - A unit of work to be executed.\r\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\r\n     * @returns {Observable} - A reactive stream returned by the unit of work.\r\n     */\r\n    RxSession.prototype.writeTransaction = function (work, transactionConfig) {\r\n        return this._runTransaction(ACCESS_MODE_WRITE, work, transactionConfig);\r\n    };\r\n    /**\r\n     * Executes the provided unit of work in a {@link READ} reactive transaction which is created with the provided\r\n     * transaction configuration.\r\n     * @public\r\n     * @param {function(txc: RxManagedTransaction): Observable} work - A unit of work to be executed.\r\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\r\n     * @returns {Observable} - A reactive stream returned by the unit of work.\r\n     */\r\n    RxSession.prototype.executeRead = function (work, transactionConfig) {\r\n        return this._executeInTransaction(ACCESS_MODE_READ, work, transactionConfig);\r\n    };\r\n    /**\r\n     * Executes the provided unit of work in a {@link WRITE} reactive transaction which is created with the provided\r\n     * transaction configuration.\r\n     * @public\r\n     * @param {function(txc: RxManagedTransaction): Observable} work - A unit of work to be executed.\r\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\r\n     * @returns {Observable} - A reactive stream returned by the unit of work.\r\n     */\r\n    RxSession.prototype.executeWrite = function (work, transactionConfig) {\r\n        return this._executeInTransaction(ACCESS_MODE_WRITE, work, transactionConfig);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {function(txc: RxManagedTransaction): Observable} work\r\n     * @param {TransactionConfig} transactionConfig\r\n     * @returns {Observable}\r\n     */\r\n    RxSession.prototype._executeInTransaction = function (accessMode, work, transactionConfig) {\r\n        var wrapper = function (txc) { return new transaction_managed_rx_1.default({\r\n            run: txc.run.bind(txc)\r\n        }); };\r\n        return this._runTransaction(accessMode, work, transactionConfig, wrapper);\r\n    };\r\n    /**\r\n     * Closes this reactive session.\r\n     *\r\n     * @public\r\n     * @returns {Observable} - An empty reactive stream\r\n     */\r\n    RxSession.prototype.close = function () {\r\n        var _this = this;\r\n        return new rxjs_1.Observable(function (observer) {\r\n            _this._session\r\n                .close()\r\n                .then(function () {\r\n                observer.complete();\r\n            })\r\n                .catch(function (err) { return observer.error(err); });\r\n        });\r\n    };\r\n    RxSession.prototype[Symbol.asyncDispose] = function () {\r\n        return this.close();\r\n    };\r\n    /**\r\n     * Returns the bookmarks received following the last successfully completed query, which is executed\r\n     * either in an {@link RxTransaction} obtained from this session instance or directly through one of\r\n     * the {@link RxSession#run} method of this session instance.\r\n     *\r\n     * If no bookmarks were received or if this transaction was rolled back, the bookmarks value will not be\r\n     * changed.\r\n     *\r\n     * @deprecated This method will be removed in 6.0 version. Please, use {@link RxSession#lastBookmarks} instead.\r\n     *\r\n     * @public\r\n     * @returns {string[]}\r\n     */\r\n    RxSession.prototype.lastBookmark = function () {\r\n        return this.lastBookmarks();\r\n    };\r\n    /**\r\n     * Returns the bookmarks received following the last successfully completed query, which is executed\r\n     * either in an {@link RxTransaction} obtained from this session instance or directly through one of\r\n     * the {@link RxSession#run} method of this session instance.\r\n     *\r\n     * If no bookmarks were received or if this transaction was rolled back, the bookmarks value will not be\r\n     * changed.\r\n     *\r\n     * @public\r\n     * @returns {string[]}\r\n     */\r\n    RxSession.prototype.lastBookmarks = function () {\r\n        return this._session.lastBookmarks();\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    RxSession.prototype._beginTransaction = function (accessMode, transactionConfig, apiTelemetryConfig) {\r\n        var _this = this;\r\n        var txConfig = TxConfig.empty();\r\n        if (transactionConfig) {\r\n            txConfig = new TxConfig(transactionConfig, this._log);\r\n        }\r\n        return new rxjs_1.Observable(function (observer) {\r\n            try {\r\n                _this._session._beginTransaction(accessMode, txConfig, apiTelemetryConfig)\r\n                    .then(function (tx) {\r\n                    observer.next(new transaction_rx_1.default(tx));\r\n                    observer.complete();\r\n                })\r\n                    .catch(function (err) { return observer.error(err); });\r\n            }\r\n            catch (err) {\r\n                observer.error(err);\r\n            }\r\n            return function () { };\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    RxSession.prototype._runTransaction = function (accessMode, work, transactionConfig, transactionWrapper) {\r\n        var _this = this;\r\n        if (transactionWrapper === void 0) { transactionWrapper = function (tx) { return tx; }; }\r\n        var txConfig = TxConfig.empty();\r\n        if (transactionConfig) {\r\n            txConfig = new TxConfig(transactionConfig);\r\n        }\r\n        var context = {\r\n            apiTelemetryConfig: {\r\n                api: TELEMETRY_APIS.MANAGED_TRANSACTION,\r\n                onTelemetrySuccess: function () {\r\n                    context.apiTelemetryConfig = undefined;\r\n                }\r\n            }\r\n        };\r\n        return this._retryLogic.retry((0, rxjs_1.of)(1).pipe((0, operators_1.mergeMap)(function () { return _this._beginTransaction(accessMode, txConfig, context.apiTelemetryConfig); }), (0, operators_1.mergeMap)(function (txc) {\r\n            return (0, rxjs_1.defer)(function () {\r\n                try {\r\n                    return work(transactionWrapper(txc));\r\n                }\r\n                catch (err) {\r\n                    return (0, rxjs_1.throwError)(function () { return err; });\r\n                }\r\n            }).pipe((0, operators_1.catchError)(function (err) { return txc.rollback().pipe((0, operators_1.concatWith)((0, rxjs_1.throwError)(function () { return err; }))); }), (0, operators_1.concatWith)(txc.commit()));\r\n        })));\r\n    };\r\n    return RxSession;\r\n}());\r\nexports.default = RxSession;\r\nfunction _createRetryLogic(config) {\r\n    var maxRetryTimeout = config && config.maxTransactionRetryTime\r\n        ? config.maxTransactionRetryTime\r\n        : null;\r\n    return new retry_logic_rx_1.default({ maxRetryTimeout: maxRetryTimeout });\r\n}", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WRITE = exports.READ = exports.Driver = void 0;\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar session_rx_1 = __importDefault(require(\"./session-rx\"));\r\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\r\nvar READ = neo4j_driver_core_1.driver.READ, WRITE = neo4j_driver_core_1.driver.WRITE;\r\nexports.READ = READ;\r\nexports.WRITE = WRITE;\r\n/**\r\n * A driver maintains one or more {@link Session}s with a remote\r\n * Neo4j instance. Through the {@link Session}s you can send queries\r\n * and retrieve results from the database.\r\n *\r\n * Drivers are reasonably expensive to create - you should strive to keep one\r\n * driver instance around per Neo4j Instance you connect to.\r\n *\r\n * @access public\r\n */\r\nvar Driver = /** @class */ (function (_super) {\r\n    __extends(Driver, _super);\r\n    function Driver() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Acquire a reactive session to communicate with the database. The session will\r\n     * borrow connections from the underlying connection pool as required and\r\n     * should be considered lightweight and disposable.\r\n     *\r\n     * This comes with some responsibility - make sure you always call\r\n     * {@link close} when you are done using a session, and likewise,\r\n     * make sure you don't close your session before you are done using it. Once\r\n     * it is closed, the underlying connection will be released to the connection\r\n     * pool and made available for others to use.\r\n     *\r\n     * @public\r\n     * @param {SessionConfig} config\r\n     * @returns {RxSession} new reactive session.\r\n     */\r\n    Driver.prototype.rxSession = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultAccessMode, defaultAccessMode = _c === void 0 ? WRITE : _c, bookmarks = _b.bookmarks, _d = _b.database, database = _d === void 0 ? '' : _d, fetchSize = _b.fetchSize, impersonatedUser = _b.impersonatedUser, bookmarkManager = _b.bookmarkManager, notificationFilter = _b.notificationFilter, auth = _b.auth;\r\n        return new session_rx_1.default({\r\n            session: this._newSession({\r\n                defaultAccessMode: defaultAccessMode,\r\n                bookmarkOrBookmarks: bookmarks,\r\n                database: database,\r\n                impersonatedUser: impersonatedUser,\r\n                auth: auth,\r\n                reactive: false,\r\n                fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\r\n                bookmarkManager: bookmarkManager,\r\n                notificationFilter: notificationFilter,\r\n                log: this._log\r\n            }),\r\n            config: this._config,\r\n            log: this._log\r\n        });\r\n    };\r\n    return Driver;\r\n}(neo4j_driver_core_1.Driver));\r\nexports.Driver = Driver;\r\n/**\r\n * @private\r\n */\r\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\r\n    var fetchSize = parseInt(rawValue, 10);\r\n    if (fetchSize > 0 || fetchSize === FETCH_ALL) {\r\n        return fetchSize;\r\n    }\r\n    else if (fetchSize === 0 || fetchSize < 0) {\r\n        throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\r\n    }\r\n    else {\r\n        return defaultWhenAbsent;\r\n    }\r\n}\r\nexports.default = Driver;", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// DO NOT CHANGE THE VERSION BELOW HERE\r\n// This is set by the build system at release time, using\r\n//\r\n// gulp set --x <releaseversion>\r\n//\r\n// This is set up this way to keep the version in the code in\r\n// sync with the npm package version, and to allow the build\r\n// system to control version names at packaging time.\r\nexports.default = '5.27.0';", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A facility to select most appropriate reader or writer among the given addresses for request processing.\r\n */\r\nvar LoadBalancingStrategy = /** @class */ (function () {\r\n    function LoadBalancingStrategy() {\r\n    }\r\n    /**\r\n     * Select next most appropriate reader from the list of given readers.\r\n     * @param {string[]} knownReaders an array of currently known readers to select from.\r\n     * @return {string} most appropriate reader or `null` if given array is empty.\r\n     */\r\n    LoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\r\n        throw new Error('Abstract function');\r\n    };\r\n    /**\r\n     * Select next most appropriate writer from the list of given writers.\r\n     * @param {string[]} knownWriters an array of currently known writers to select from.\r\n     * @return {string} most appropriate writer or `null` if given array is empty.\r\n     */\r\n    LoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\r\n        throw new Error('Abstract function');\r\n    };\r\n    return LoadBalancingStrategy;\r\n}());\r\nexports.default = LoadBalancingStrategy;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar RoundRobinArrayIndex = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {number} [initialOffset=0] the initial offset for round robin.\r\n     */\r\n    function RoundRobinArrayIndex(initialOffset) {\r\n        this._offset = initialOffset || 0;\r\n    }\r\n    /**\r\n     * Get next index for an array with given length.\r\n     * @param {number} arrayLength the array length.\r\n     * @return {number} index in the array.\r\n     */\r\n    RoundRobinArrayIndex.prototype.next = function (arrayLength) {\r\n        if (arrayLength === 0) {\r\n            return -1;\r\n        }\r\n        var nextOffset = this._offset;\r\n        this._offset += 1;\r\n        if (this._offset === Number.MAX_SAFE_INTEGER) {\r\n            this._offset = 0;\r\n        }\r\n        return nextOffset % arrayLength;\r\n    };\r\n    return RoundRobinArrayIndex;\r\n}());\r\nexports.default = RoundRobinArrayIndex;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar round_robin_array_index_1 = __importDefault(require(\"./round-robin-array-index\"));\r\nvar load_balancing_strategy_1 = __importDefault(require(\"./load-balancing-strategy\"));\r\nvar LeastConnectedLoadBalancingStrategy = /** @class */ (function (_super) {\r\n    __extends(LeastConnectedLoadBalancingStrategy, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {Pool} connectionPool the connection pool of this driver.\r\n     */\r\n    function LeastConnectedLoadBalancingStrategy(connectionPool) {\r\n        var _this = _super.call(this) || this;\r\n        _this._readersIndex = new round_robin_array_index_1.default();\r\n        _this._writersIndex = new round_robin_array_index_1.default();\r\n        _this._connectionPool = connectionPool;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeastConnectedLoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\r\n        return this._select(knownReaders, this._readersIndex);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeastConnectedLoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\r\n        return this._select(knownWriters, this._writersIndex);\r\n    };\r\n    LeastConnectedLoadBalancingStrategy.prototype._select = function (addresses, roundRobinIndex) {\r\n        var length = addresses.length;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        // choose start index for iteration in round-robin fashion\r\n        var startIndex = roundRobinIndex.next(length);\r\n        var index = startIndex;\r\n        var leastConnectedAddress = null;\r\n        var leastActiveConnections = Number.MAX_SAFE_INTEGER;\r\n        // iterate over the array to find least connected address\r\n        do {\r\n            var address = addresses[index];\r\n            var activeConnections = this._connectionPool.activeResourceCount(address);\r\n            if (activeConnections < leastActiveConnections) {\r\n                leastConnectedAddress = address;\r\n                leastActiveConnections = activeConnections;\r\n            }\r\n            // loop over to the start of the array when end is reached\r\n            if (index === length - 1) {\r\n                index = 0;\r\n            }\r\n            else {\r\n                index++;\r\n            }\r\n        } while (index !== startIndex);\r\n        return leastConnectedAddress;\r\n    };\r\n    return LeastConnectedLoadBalancingStrategy;\r\n}(load_balancing_strategy_1.default));\r\nexports.default = LeastConnectedLoadBalancingStrategy;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LeastConnectedLoadBalancingStrategy = exports.LoadBalancingStrategy = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar load_balancing_strategy_1 = __importDefault(require(\"./load-balancing-strategy\"));\r\nexports.LoadBalancingStrategy = load_balancing_strategy_1.default;\r\nvar least_connected_load_balancing_strategy_1 = __importDefault(require(\"./least-connected-load-balancing-strategy\"));\r\nexports.LeastConnectedLoadBalancingStrategy = least_connected_load_balancing_strategy_1.default;\r\nexports.default = least_connected_load_balancing_strategy_1.default;\r\n", "'use strict'\r\n\r\nexports.byteLength = byteLength\r\nexports.toByteArray = toByteArray\r\nexports.fromByteArray = fromByteArray\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\n\r\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nfor (var i = 0, len = code.length; i < len; ++i) {\r\n  lookup[i] = code[i]\r\n  revLookup[code.charCodeAt(i)] = i\r\n}\r\n\r\n// Support decoding URL-safe base64 strings, as Node.js does.\r\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\r\nrevLookup['-'.charCodeAt(0)] = 62\r\nrevLookup['_'.charCodeAt(0)] = 63\r\n\r\nfunction getLens (b64) {\r\n  var len = b64.length\r\n\r\n  if (len % 4 > 0) {\r\n    throw new Error('Invalid string. Length must be a multiple of 4')\r\n  }\r\n\r\n  // Trim off extra bytes after placeholder bytes are found\r\n  // See: https://github.com/beatgammit/base64-js/issues/42\r\n  var validLen = b64.indexOf('=')\r\n  if (validLen === -1) validLen = len\r\n\r\n  var placeHoldersLen = validLen === len\r\n    ? 0\r\n    : 4 - (validLen % 4)\r\n\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\n// base64 is 4/3 + up to two characters of the original data\r\nfunction byteLength (b64) {\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction _byteLength (b64, validLen, placeHoldersLen) {\r\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\r\n}\r\n\r\nfunction toByteArray (b64) {\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0\r\n    ? validLen - 4\r\n    : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 18) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n      revLookup[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xFF\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 2) |\r\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (revLookup[b64.charCodeAt(i)] << 10) |\r\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xFF\r\n    arr[curByte++] = tmp & 0xFF\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64 (num) {\r\n  return lookup[num >> 18 & 0x3F] +\r\n    lookup[num >> 12 & 0x3F] +\r\n    lookup[num >> 6 & 0x3F] +\r\n    lookup[num & 0x3F]\r\n}\r\n\r\nfunction encodeChunk (uint8, start, end) {\r\n  var tmp\r\n  var output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xFF0000) +\r\n      ((uint8[i + 1] << 8) & 0xFF00) +\r\n      (uint8[i + 2] & 0xFF)\r\n    output.push(tripletToBase64(tmp))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray (uint8) {\r\n  var tmp\r\n  var len = uint8.length\r\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  var parts = []\r\n  var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 2] +\r\n      lookup[(tmp << 4) & 0x3F] +\r\n      '=='\r\n    )\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      lookup[tmp >> 10] +\r\n      lookup[(tmp >> 4) & 0x3F] +\r\n      lookup[(tmp << 2) & 0x3F] +\r\n      '='\r\n    )\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var nBits = -7\r\n  var i = isLE ? (nBytes - 1) : 0\r\n  var d = isLE ? -1 : 1\r\n  var s = buffer[offset + i]\r\n\r\n  i += d\r\n\r\n  e = s & ((1 << (-nBits)) - 1)\r\n  s >>= (-nBits)\r\n  nBits += eLen\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1)\r\n  e >>= (-nBits)\r\n  nBits += mLen\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen)\r\n    e = e - eBias\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c\r\n  var eLen = (nBytes * 8) - mLen - 1\r\n  var eMax = (1 << eLen) - 1\r\n  var eBias = eMax >> 1\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n  var i = isLE ? 0 : (nBytes - 1)\r\n  var d = isLE ? 1 : -1\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n  value = Math.abs(value)\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0\r\n    e = eMax\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2)\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--\r\n      c *= 2\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias)\r\n    }\r\n    if (value * c >= 2) {\r\n      e++\r\n      c /= 2\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0\r\n      e = eMax\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen)\r\n      e = e + eBias\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n      e = 0\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m\r\n  eLen += mLen\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128\r\n}\r\n", "/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\n'use strict'\r\n\r\nconst base64 = require('base64-js')\r\nconst ieee754 = require('ieee754')\r\nconst customInspectSymbol =\r\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\r\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\r\n    : null\r\n\r\nexports.Buffer = Buffer\r\nexports.SlowBuffer = SlowBuffer\r\nexports.INSPECT_MAX_BYTES = 50\r\n\r\nconst K_MAX_LENGTH = 0x7fffffff\r\nexports.kMaxLength = K_MAX_LENGTH\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\r\n *               implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * We report that the browser does not support typed arrays if the are not subclassable\r\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\r\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\r\n * for __proto__ and has a buggy typed array implementation.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\r\n\r\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\r\n    typeof console.error === 'function') {\r\n  console.error(\r\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\r\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\r\n  )\r\n}\r\n\r\nfunction typedArraySupport () {\r\n  // Can typed array instances can be augmented?\r\n  try {\r\n    const arr = new Uint8Array(1)\r\n    const proto = { foo: function () { return 42 } }\r\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\r\n    Object.setPrototypeOf(arr, proto)\r\n    return arr.foo() === 42\r\n  } catch (e) {\r\n    return false\r\n  }\r\n}\r\n\r\nObject.defineProperty(Buffer.prototype, 'parent', {\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!Buffer.isBuffer(this)) return undefined\r\n    return this.buffer\r\n  }\r\n})\r\n\r\nObject.defineProperty(Buffer.prototype, 'offset', {\r\n  enumerable: true,\r\n  get: function () {\r\n    if (!Buffer.isBuffer(this)) return undefined\r\n    return this.byteOffset\r\n  }\r\n})\r\n\r\nfunction createBuffer (length) {\r\n  if (length > K_MAX_LENGTH) {\r\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\r\n  }\r\n  // Return an augmented `Uint8Array` instance\r\n  const buf = new Uint8Array(length)\r\n  Object.setPrototypeOf(buf, Buffer.prototype)\r\n  return buf\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nfunction Buffer (arg, encodingOrOffset, length) {\r\n  // Common case.\r\n  if (typeof arg === 'number') {\r\n    if (typeof encodingOrOffset === 'string') {\r\n      throw new TypeError(\r\n        'The \"string\" argument must be of type string. Received type number'\r\n      )\r\n    }\r\n    return allocUnsafe(arg)\r\n  }\r\n  return from(arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\nfunction from (value, encodingOrOffset, length) {\r\n  if (typeof value === 'string') {\r\n    return fromString(value, encodingOrOffset)\r\n  }\r\n\r\n  if (ArrayBuffer.isView(value)) {\r\n    return fromArrayView(value)\r\n  }\r\n\r\n  if (value == null) {\r\n    throw new TypeError(\r\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\r\n      'or Array-like Object. Received type ' + (typeof value)\r\n    )\r\n  }\r\n\r\n  if (isInstance(value, ArrayBuffer) ||\r\n      (value && isInstance(value.buffer, ArrayBuffer))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof SharedArrayBuffer !== 'undefined' &&\r\n      (isInstance(value, SharedArrayBuffer) ||\r\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\r\n    return fromArrayBuffer(value, encodingOrOffset, length)\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    throw new TypeError(\r\n      'The \"value\" argument must not be of type number. Received type number'\r\n    )\r\n  }\r\n\r\n  const valueOf = value.valueOf && value.valueOf()\r\n  if (valueOf != null && valueOf !== value) {\r\n    return Buffer.from(valueOf, encodingOrOffset, length)\r\n  }\r\n\r\n  const b = fromObject(value)\r\n  if (b) return b\r\n\r\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\r\n      typeof value[Symbol.toPrimitive] === 'function') {\r\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\r\n  }\r\n\r\n  throw new TypeError(\r\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\r\n    'or Array-like Object. Received type ' + (typeof value)\r\n  )\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function (value, encodingOrOffset, length) {\r\n  return from(value, encodingOrOffset, length)\r\n}\r\n\r\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\r\n// https://github.com/feross/buffer/pull/148\r\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\r\nObject.setPrototypeOf(Buffer, Uint8Array)\r\n\r\nfunction assertSize (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('\"size\" argument must be of type number')\r\n  } else if (size < 0) {\r\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\r\n  }\r\n}\r\n\r\nfunction alloc (size, fill, encoding) {\r\n  assertSize(size)\r\n  if (size <= 0) {\r\n    return createBuffer(size)\r\n  }\r\n  if (fill !== undefined) {\r\n    // Only pay attention to encoding if it's a string. This\r\n    // prevents accidentally sending in a number that would\r\n    // be interpreted as a start offset.\r\n    return typeof encoding === 'string'\r\n      ? createBuffer(size).fill(fill, encoding)\r\n      : createBuffer(size).fill(fill)\r\n  }\r\n  return createBuffer(size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function (size, fill, encoding) {\r\n  return alloc(size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe (size) {\r\n  assertSize(size)\r\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function (size) {\r\n  return allocUnsafe(size)\r\n}\r\n\r\nfunction fromString (string, encoding) {\r\n  if (typeof encoding !== 'string' || encoding === '') {\r\n    encoding = 'utf8'\r\n  }\r\n\r\n  if (!Buffer.isEncoding(encoding)) {\r\n    throw new TypeError('Unknown encoding: ' + encoding)\r\n  }\r\n\r\n  const length = byteLength(string, encoding) | 0\r\n  let buf = createBuffer(length)\r\n\r\n  const actual = buf.write(string, encoding)\r\n\r\n  if (actual !== length) {\r\n    // Writing a hex string, for example, that contains invalid characters will\r\n    // cause everything after the first invalid character to be ignored. (e.g.\r\n    // 'abxxcd' will be treated as 'ab')\r\n    buf = buf.slice(0, actual)\r\n  }\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromArrayLike (array) {\r\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\r\n  const buf = createBuffer(length)\r\n  for (let i = 0; i < length; i += 1) {\r\n    buf[i] = array[i] & 255\r\n  }\r\n  return buf\r\n}\r\n\r\nfunction fromArrayView (arrayView) {\r\n  if (isInstance(arrayView, Uint8Array)) {\r\n    const copy = new Uint8Array(arrayView)\r\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\r\n  }\r\n  return fromArrayLike(arrayView)\r\n}\r\n\r\nfunction fromArrayBuffer (array, byteOffset, length) {\r\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n    throw new RangeError('\"offset\" is outside of buffer bounds')\r\n  }\r\n\r\n  if (array.byteLength < byteOffset + (length || 0)) {\r\n    throw new RangeError('\"length\" is outside of buffer bounds')\r\n  }\r\n\r\n  let buf\r\n  if (byteOffset === undefined && length === undefined) {\r\n    buf = new Uint8Array(array)\r\n  } else if (length === undefined) {\r\n    buf = new Uint8Array(array, byteOffset)\r\n  } else {\r\n    buf = new Uint8Array(array, byteOffset, length)\r\n  }\r\n\r\n  // Return an augmented `Uint8Array` instance\r\n  Object.setPrototypeOf(buf, Buffer.prototype)\r\n\r\n  return buf\r\n}\r\n\r\nfunction fromObject (obj) {\r\n  if (Buffer.isBuffer(obj)) {\r\n    const len = checked(obj.length) | 0\r\n    const buf = createBuffer(len)\r\n\r\n    if (buf.length === 0) {\r\n      return buf\r\n    }\r\n\r\n    obj.copy(buf, 0, 0, len)\r\n    return buf\r\n  }\r\n\r\n  if (obj.length !== undefined) {\r\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\r\n      return createBuffer(0)\r\n    }\r\n    return fromArrayLike(obj)\r\n  }\r\n\r\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n    return fromArrayLike(obj.data)\r\n  }\r\n}\r\n\r\nfunction checked (length) {\r\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\r\n  // length is NaN (which is otherwise coerced to zero.)\r\n  if (length >= K_MAX_LENGTH) {\r\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\r\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\r\n  }\r\n  return length | 0\r\n}\r\n\r\nfunction SlowBuffer (length) {\r\n  if (+length != length) { // eslint-disable-line eqeqeq\r\n    length = 0\r\n  }\r\n  return Buffer.alloc(+length)\r\n}\r\n\r\nBuffer.isBuffer = function isBuffer (b) {\r\n  return b != null && b._isBuffer === true &&\r\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\r\n}\r\n\r\nBuffer.compare = function compare (a, b) {\r\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\r\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\r\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\r\n    throw new TypeError(\r\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\r\n    )\r\n  }\r\n\r\n  if (a === b) return 0\r\n\r\n  let x = a.length\r\n  let y = b.length\r\n\r\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      x = a[i]\r\n      y = b[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding (encoding) {\r\n  switch (String(encoding).toLowerCase()) {\r\n    case 'hex':\r\n    case 'utf8':\r\n    case 'utf-8':\r\n    case 'ascii':\r\n    case 'latin1':\r\n    case 'binary':\r\n    case 'base64':\r\n    case 'ucs2':\r\n    case 'ucs-2':\r\n    case 'utf16le':\r\n    case 'utf-16le':\r\n      return true\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\nBuffer.concat = function concat (list, length) {\r\n  if (!Array.isArray(list)) {\r\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n  }\r\n\r\n  if (list.length === 0) {\r\n    return Buffer.alloc(0)\r\n  }\r\n\r\n  let i\r\n  if (length === undefined) {\r\n    length = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n      length += list[i].length\r\n    }\r\n  }\r\n\r\n  const buffer = Buffer.allocUnsafe(length)\r\n  let pos = 0\r\n  for (i = 0; i < list.length; ++i) {\r\n    let buf = list[i]\r\n    if (isInstance(buf, Uint8Array)) {\r\n      if (pos + buf.length > buffer.length) {\r\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\r\n        buf.copy(buffer, pos)\r\n      } else {\r\n        Uint8Array.prototype.set.call(\r\n          buffer,\r\n          buf,\r\n          pos\r\n        )\r\n      }\r\n    } else if (!Buffer.isBuffer(buf)) {\r\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    } else {\r\n      buf.copy(buffer, pos)\r\n    }\r\n    pos += buf.length\r\n  }\r\n  return buffer\r\n}\r\n\r\nfunction byteLength (string, encoding) {\r\n  if (Buffer.isBuffer(string)) {\r\n    return string.length\r\n  }\r\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\r\n    return string.byteLength\r\n  }\r\n  if (typeof string !== 'string') {\r\n    throw new TypeError(\r\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\r\n      'Received type ' + typeof string\r\n    )\r\n  }\r\n\r\n  const len = string.length\r\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\r\n  if (!mustMatch && len === 0) return 0\r\n\r\n  // Use a for loop to avoid recursion\r\n  let loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return len\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8ToBytes(string).length\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return len * 2\r\n      case 'hex':\r\n        return len >>> 1\r\n      case 'base64':\r\n        return base64ToBytes(string).length\r\n      default:\r\n        if (loweredCase) {\r\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\r\n        }\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString (encoding, start, end) {\r\n  let loweredCase = false\r\n\r\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n  // property of a typed array.\r\n\r\n  // This behaves neither like String nor Uint8Array in that we set start/end\r\n  // to their upper/lower bounds if the value passed is out of range.\r\n  // undefined is handled specially as per ECMA-262 6th Edition,\r\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n  if (start === undefined || start < 0) {\r\n    start = 0\r\n  }\r\n  // Return early if start > this.length. Done here to prevent potential uint32\r\n  // coercion fail below.\r\n  if (start > this.length) {\r\n    return ''\r\n  }\r\n\r\n  if (end === undefined || end > this.length) {\r\n    end = this.length\r\n  }\r\n\r\n  if (end <= 0) {\r\n    return ''\r\n  }\r\n\r\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\r\n  end >>>= 0\r\n  start >>>= 0\r\n\r\n  if (end <= start) {\r\n    return ''\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  while (true) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexSlice(this, start, end)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Slice(this, start, end)\r\n\r\n      case 'ascii':\r\n        return asciiSlice(this, start, end)\r\n\r\n      case 'latin1':\r\n      case 'binary':\r\n        return latin1Slice(this, start, end)\r\n\r\n      case 'base64':\r\n        return base64Slice(this, start, end)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return utf16leSlice(this, start, end)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = (encoding + '').toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\r\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\r\n// reliably in a browserify context because there could be multiple different\r\n// copies of the 'buffer' package in use. This method works even for Buffer\r\n// instances that were created from another copy of the `buffer` package.\r\n// See: https://github.com/feross/buffer/issues/154\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap (b, n, m) {\r\n  const i = b[n]\r\n  b[n] = b[m]\r\n  b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16 () {\r\n  const len = this.length\r\n  if (len % 2 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n  }\r\n  for (let i = 0; i < len; i += 2) {\r\n    swap(this, i, i + 1)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32 () {\r\n  const len = this.length\r\n  if (len % 4 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n  }\r\n  for (let i = 0; i < len; i += 4) {\r\n    swap(this, i, i + 3)\r\n    swap(this, i + 1, i + 2)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64 () {\r\n  const len = this.length\r\n  if (len % 8 !== 0) {\r\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n  }\r\n  for (let i = 0; i < len; i += 8) {\r\n    swap(this, i, i + 7)\r\n    swap(this, i + 1, i + 6)\r\n    swap(this, i + 2, i + 5)\r\n    swap(this, i + 3, i + 4)\r\n  }\r\n  return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString () {\r\n  const length = this.length\r\n  if (length === 0) return ''\r\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n  return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\r\n\r\nBuffer.prototype.equals = function equals (b) {\r\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n  if (this === b) return true\r\n  return Buffer.compare(this, b) === 0\r\n}\r\n\r\nBuffer.prototype.inspect = function inspect () {\r\n  let str = ''\r\n  const max = exports.INSPECT_MAX_BYTES\r\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\r\n  if (this.length > max) str += ' ... '\r\n  return '<Buffer ' + str + '>'\r\n}\r\nif (customInspectSymbol) {\r\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\r\n}\r\n\r\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\r\n  if (isInstance(target, Uint8Array)) {\r\n    target = Buffer.from(target, target.offset, target.byteLength)\r\n  }\r\n  if (!Buffer.isBuffer(target)) {\r\n    throw new TypeError(\r\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\r\n      'Received type ' + (typeof target)\r\n    )\r\n  }\r\n\r\n  if (start === undefined) {\r\n    start = 0\r\n  }\r\n  if (end === undefined) {\r\n    end = target ? target.length : 0\r\n  }\r\n  if (thisStart === undefined) {\r\n    thisStart = 0\r\n  }\r\n  if (thisEnd === undefined) {\r\n    thisEnd = this.length\r\n  }\r\n\r\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\r\n    throw new RangeError('out of range index')\r\n  }\r\n\r\n  if (thisStart >= thisEnd && start >= end) {\r\n    return 0\r\n  }\r\n  if (thisStart >= thisEnd) {\r\n    return -1\r\n  }\r\n  if (start >= end) {\r\n    return 1\r\n  }\r\n\r\n  start >>>= 0\r\n  end >>>= 0\r\n  thisStart >>>= 0\r\n  thisEnd >>>= 0\r\n\r\n  if (this === target) return 0\r\n\r\n  let x = thisEnd - thisStart\r\n  let y = end - start\r\n  const len = Math.min(x, y)\r\n\r\n  const thisCopy = this.slice(thisStart, thisEnd)\r\n  const targetCopy = target.slice(start, end)\r\n\r\n  for (let i = 0; i < len; ++i) {\r\n    if (thisCopy[i] !== targetCopy[i]) {\r\n      x = thisCopy[i]\r\n      y = targetCopy[i]\r\n      break\r\n    }\r\n  }\r\n\r\n  if (x < y) return -1\r\n  if (y < x) return 1\r\n  return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\r\n  // Empty buffer means no match\r\n  if (buffer.length === 0) return -1\r\n\r\n  // Normalize byteOffset\r\n  if (typeof byteOffset === 'string') {\r\n    encoding = byteOffset\r\n    byteOffset = 0\r\n  } else if (byteOffset > 0x7fffffff) {\r\n    byteOffset = 0x7fffffff\r\n  } else if (byteOffset < -0x80000000) {\r\n    byteOffset = -0x80000000\r\n  }\r\n  byteOffset = +byteOffset // Coerce to Number.\r\n  if (numberIsNaN(byteOffset)) {\r\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n    byteOffset = dir ? 0 : (buffer.length - 1)\r\n  }\r\n\r\n  // Normalize byteOffset: negative offsets start from the end of the buffer\r\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n  if (byteOffset >= buffer.length) {\r\n    if (dir) return -1\r\n    else byteOffset = buffer.length - 1\r\n  } else if (byteOffset < 0) {\r\n    if (dir) byteOffset = 0\r\n    else return -1\r\n  }\r\n\r\n  // Normalize val\r\n  if (typeof val === 'string') {\r\n    val = Buffer.from(val, encoding)\r\n  }\r\n\r\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n  if (Buffer.isBuffer(val)) {\r\n    // Special case: looking for empty string/buffer always fails\r\n    if (val.length === 0) {\r\n      return -1\r\n    }\r\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n  } else if (typeof val === 'number') {\r\n    val = val & 0xFF // Search for a byte value [0-255]\r\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\r\n      if (dir) {\r\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\r\n      } else {\r\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\r\n      }\r\n    }\r\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\r\n  }\r\n\r\n  throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\r\n  let indexSize = 1\r\n  let arrLength = arr.length\r\n  let valLength = val.length\r\n\r\n  if (encoding !== undefined) {\r\n    encoding = String(encoding).toLowerCase()\r\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\r\n        encoding === 'utf16le' || encoding === 'utf-16le') {\r\n      if (arr.length < 2 || val.length < 2) {\r\n        return -1\r\n      }\r\n      indexSize = 2\r\n      arrLength /= 2\r\n      valLength /= 2\r\n      byteOffset /= 2\r\n    }\r\n  }\r\n\r\n  function read (buf, i) {\r\n    if (indexSize === 1) {\r\n      return buf[i]\r\n    } else {\r\n      return buf.readUInt16BE(i * indexSize)\r\n    }\r\n  }\r\n\r\n  let i\r\n  if (dir) {\r\n    let foundIndex = -1\r\n    for (i = byteOffset; i < arrLength; i++) {\r\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\r\n        if (foundIndex === -1) foundIndex = i\r\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\r\n      } else {\r\n        if (foundIndex !== -1) i -= i - foundIndex\r\n        foundIndex = -1\r\n      }\r\n    }\r\n  } else {\r\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\r\n    for (i = byteOffset; i >= 0; i--) {\r\n      let found = true\r\n      for (let j = 0; j < valLength; j++) {\r\n        if (read(arr, i + j) !== read(val, j)) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) return i\r\n    }\r\n  }\r\n\r\n  return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\r\n  return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\r\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite (buf, string, offset, length) {\r\n  offset = Number(offset) || 0\r\n  const remaining = buf.length - offset\r\n  if (!length) {\r\n    length = remaining\r\n  } else {\r\n    length = Number(length)\r\n    if (length > remaining) {\r\n      length = remaining\r\n    }\r\n  }\r\n\r\n  const strLen = string.length\r\n\r\n  if (length > strLen / 2) {\r\n    length = strLen / 2\r\n  }\r\n  let i\r\n  for (i = 0; i < length; ++i) {\r\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\r\n    if (numberIsNaN(parsed)) return i\r\n    buf[offset + i] = parsed\r\n  }\r\n  return i\r\n}\r\n\r\nfunction utf8Write (buf, string, offset, length) {\r\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nfunction asciiWrite (buf, string, offset, length) {\r\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction base64Write (buf, string, offset, length) {\r\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write (buf, string, offset, length) {\r\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\r\n}\r\n\r\nBuffer.prototype.write = function write (string, offset, length, encoding) {\r\n  // Buffer#write(string)\r\n  if (offset === undefined) {\r\n    encoding = 'utf8'\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, encoding)\r\n  } else if (length === undefined && typeof offset === 'string') {\r\n    encoding = offset\r\n    length = this.length\r\n    offset = 0\r\n  // Buffer#write(string, offset[, length][, encoding])\r\n  } else if (isFinite(offset)) {\r\n    offset = offset >>> 0\r\n    if (isFinite(length)) {\r\n      length = length >>> 0\r\n      if (encoding === undefined) encoding = 'utf8'\r\n    } else {\r\n      encoding = length\r\n      length = undefined\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\r\n    )\r\n  }\r\n\r\n  const remaining = this.length - offset\r\n  if (length === undefined || length > remaining) length = remaining\r\n\r\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\r\n    throw new RangeError('Attempt to write outside buffer bounds')\r\n  }\r\n\r\n  if (!encoding) encoding = 'utf8'\r\n\r\n  let loweredCase = false\r\n  for (;;) {\r\n    switch (encoding) {\r\n      case 'hex':\r\n        return hexWrite(this, string, offset, length)\r\n\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return utf8Write(this, string, offset, length)\r\n\r\n      case 'ascii':\r\n      case 'latin1':\r\n      case 'binary':\r\n        return asciiWrite(this, string, offset, length)\r\n\r\n      case 'base64':\r\n        // Warning: maxLength not taken into account in base64Write\r\n        return base64Write(this, string, offset, length)\r\n\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return ucs2Write(this, string, offset, length)\r\n\r\n      default:\r\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\r\n        encoding = ('' + encoding).toLowerCase()\r\n        loweredCase = true\r\n    }\r\n  }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON () {\r\n  return {\r\n    type: 'Buffer',\r\n    data: Array.prototype.slice.call(this._arr || this, 0)\r\n  }\r\n}\r\n\r\nfunction base64Slice (buf, start, end) {\r\n  if (start === 0 && end === buf.length) {\r\n    return base64.fromByteArray(buf)\r\n  } else {\r\n    return base64.fromByteArray(buf.slice(start, end))\r\n  }\r\n}\r\n\r\nfunction utf8Slice (buf, start, end) {\r\n  end = Math.min(buf.length, end)\r\n  const res = []\r\n\r\n  let i = start\r\n  while (i < end) {\r\n    const firstByte = buf[i]\r\n    let codePoint = null\r\n    let bytesPerSequence = (firstByte > 0xEF)\r\n      ? 4\r\n      : (firstByte > 0xDF)\r\n          ? 3\r\n          : (firstByte > 0xBF)\r\n              ? 2\r\n              : 1\r\n\r\n    if (i + bytesPerSequence <= end) {\r\n      let secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n      switch (bytesPerSequence) {\r\n        case 1:\r\n          if (firstByte < 0x80) {\r\n            codePoint = firstByte\r\n          }\r\n          break\r\n        case 2:\r\n          secondByte = buf[i + 1]\r\n          if ((secondByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\r\n            if (tempCodePoint > 0x7F) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 3:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\r\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n          break\r\n        case 4:\r\n          secondByte = buf[i + 1]\r\n          thirdByte = buf[i + 2]\r\n          fourthByte = buf[i + 3]\r\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\r\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\r\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\r\n              codePoint = tempCodePoint\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    if (codePoint === null) {\r\n      // we did not generate a valid codePoint so insert a\r\n      // replacement char (U+FFFD) and advance only 1 byte\r\n      codePoint = 0xFFFD\r\n      bytesPerSequence = 1\r\n    } else if (codePoint > 0xFFFF) {\r\n      // encode to utf16 (surrogate pair dance)\r\n      codePoint -= 0x10000\r\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\r\n      codePoint = 0xDC00 | codePoint & 0x3FF\r\n    }\r\n\r\n    res.push(codePoint)\r\n    i += bytesPerSequence\r\n  }\r\n\r\n  return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nconst MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray (codePoints) {\r\n  const len = codePoints.length\r\n  if (len <= MAX_ARGUMENTS_LENGTH) {\r\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n  }\r\n\r\n  // Decode in chunks to avoid \"call stack size exceeded\".\r\n  let res = ''\r\n  let i = 0\r\n  while (i < len) {\r\n    res += String.fromCharCode.apply(\r\n      String,\r\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\r\n    )\r\n  }\r\n  return res\r\n}\r\n\r\nfunction asciiSlice (buf, start, end) {\r\n  let ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (let i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i] & 0x7F)\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction latin1Slice (buf, start, end) {\r\n  let ret = ''\r\n  end = Math.min(buf.length, end)\r\n\r\n  for (let i = start; i < end; ++i) {\r\n    ret += String.fromCharCode(buf[i])\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction hexSlice (buf, start, end) {\r\n  const len = buf.length\r\n\r\n  if (!start || start < 0) start = 0\r\n  if (!end || end < 0 || end > len) end = len\r\n\r\n  let out = ''\r\n  for (let i = start; i < end; ++i) {\r\n    out += hexSliceLookupTable[buf[i]]\r\n  }\r\n  return out\r\n}\r\n\r\nfunction utf16leSlice (buf, start, end) {\r\n  const bytes = buf.slice(start, end)\r\n  let res = ''\r\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\r\n  for (let i = 0; i < bytes.length - 1; i += 2) {\r\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\r\n  }\r\n  return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice (start, end) {\r\n  const len = this.length\r\n  start = ~~start\r\n  end = end === undefined ? len : ~~end\r\n\r\n  if (start < 0) {\r\n    start += len\r\n    if (start < 0) start = 0\r\n  } else if (start > len) {\r\n    start = len\r\n  }\r\n\r\n  if (end < 0) {\r\n    end += len\r\n    if (end < 0) end = 0\r\n  } else if (end > len) {\r\n    end = len\r\n  }\r\n\r\n  if (end < start) end = start\r\n\r\n  const newBuf = this.subarray(start, end)\r\n  // Return an augmented `Uint8Array` instance\r\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\r\n\r\n  return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset (offset, ext, length) {\r\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\r\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUintLE =\r\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  let val = this[offset]\r\n  let mul = 1\r\n  let i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUintBE =\r\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    checkOffset(offset, byteLength, this.length)\r\n  }\r\n\r\n  let val = this[offset + --byteLength]\r\n  let mul = 1\r\n  while (byteLength > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --byteLength] * mul\r\n  }\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readUint8 =\r\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUint16LE =\r\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUint16BE =\r\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUint32LE =\r\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return ((this[offset]) |\r\n      (this[offset + 1] << 8) |\r\n      (this[offset + 2] << 16)) +\r\n      (this[offset + 3] * 0x1000000)\r\n}\r\n\r\nBuffer.prototype.readUint32BE =\r\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] * 0x1000000) +\r\n    ((this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\r\n  offset = offset >>> 0\r\n  validateNumber(offset, 'offset')\r\n  const first = this[offset]\r\n  const last = this[offset + 7]\r\n  if (first === undefined || last === undefined) {\r\n    boundsError(offset, this.length - 8)\r\n  }\r\n\r\n  const lo = first +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 24\r\n\r\n  const hi = this[++offset] +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    last * 2 ** 24\r\n\r\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\r\n})\r\n\r\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\r\n  offset = offset >>> 0\r\n  validateNumber(offset, 'offset')\r\n  const first = this[offset]\r\n  const last = this[offset + 7]\r\n  if (first === undefined || last === undefined) {\r\n    boundsError(offset, this.length - 8)\r\n  }\r\n\r\n  const hi = first * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset]\r\n\r\n  const lo = this[++offset] * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    last\r\n\r\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\r\n})\r\n\r\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  let val = this[offset]\r\n  let mul = 1\r\n  let i = 0\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    val += this[offset + i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n  let i = byteLength\r\n  let mul = 1\r\n  let val = this[offset + --i]\r\n  while (i > 0 && (mul *= 0x100)) {\r\n    val += this[offset + --i] * mul\r\n  }\r\n  mul *= 0x80\r\n\r\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n  return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 1, this.length)\r\n  if (!(this[offset] & 0x80)) return (this[offset])\r\n  return ((0xff - this[offset] + 1) * -1)\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  const val = this[offset] | (this[offset + 1] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 2, this.length)\r\n  const val = this[offset + 1] | (this[offset] << 8)\r\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset]) |\r\n    (this[offset + 1] << 8) |\r\n    (this[offset + 2] << 16) |\r\n    (this[offset + 3] << 24)\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n  return (this[offset] << 24) |\r\n    (this[offset + 1] << 16) |\r\n    (this[offset + 2] << 8) |\r\n    (this[offset + 3])\r\n}\r\n\r\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\r\n  offset = offset >>> 0\r\n  validateNumber(offset, 'offset')\r\n  const first = this[offset]\r\n  const last = this[offset + 7]\r\n  if (first === undefined || last === undefined) {\r\n    boundsError(offset, this.length - 8)\r\n  }\r\n\r\n  const val = this[offset + 4] +\r\n    this[offset + 5] * 2 ** 8 +\r\n    this[offset + 6] * 2 ** 16 +\r\n    (last << 24) // Overflow\r\n\r\n  return (BigInt(val) << BigInt(32)) +\r\n    BigInt(first +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 24)\r\n})\r\n\r\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\r\n  offset = offset >>> 0\r\n  validateNumber(offset, 'offset')\r\n  const first = this[offset]\r\n  const last = this[offset + 7]\r\n  if (first === undefined || last === undefined) {\r\n    boundsError(offset, this.length - 8)\r\n  }\r\n\r\n  const val = (first << 24) + // Overflow\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    this[++offset]\r\n\r\n  return (BigInt(val) << BigInt(32)) +\r\n    BigInt(this[++offset] * 2 ** 24 +\r\n    this[++offset] * 2 ** 16 +\r\n    this[++offset] * 2 ** 8 +\r\n    last)\r\n})\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 4, this.length)\r\n  return ieee754.read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkOffset(offset, 8, this.length)\r\n  return ieee754.read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt (buf, value, offset, ext, max, min) {\r\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUintLE =\r\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  let mul = 1\r\n  let i = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUintBE =\r\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  byteLength = byteLength >>> 0\r\n  if (!noAssert) {\r\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n  }\r\n\r\n  let i = byteLength - 1\r\n  let mul = 1\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    this[offset + i] = (value / mul) & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUint8 =\r\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeUint16LE =\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUint16BE =\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUint32LE =\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset + 3] = (value >>> 24)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUint32BE =\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\r\n  checkIntBI(value, min, max, buf, offset, 7)\r\n\r\n  let lo = Number(value & BigInt(0xffffffff))\r\n  buf[offset++] = lo\r\n  lo = lo >> 8\r\n  buf[offset++] = lo\r\n  lo = lo >> 8\r\n  buf[offset++] = lo\r\n  lo = lo >> 8\r\n  buf[offset++] = lo\r\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\r\n  buf[offset++] = hi\r\n  hi = hi >> 8\r\n  buf[offset++] = hi\r\n  hi = hi >> 8\r\n  buf[offset++] = hi\r\n  hi = hi >> 8\r\n  buf[offset++] = hi\r\n  return offset\r\n}\r\n\r\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\r\n  checkIntBI(value, min, max, buf, offset, 7)\r\n\r\n  let lo = Number(value & BigInt(0xffffffff))\r\n  buf[offset + 7] = lo\r\n  lo = lo >> 8\r\n  buf[offset + 6] = lo\r\n  lo = lo >> 8\r\n  buf[offset + 5] = lo\r\n  lo = lo >> 8\r\n  buf[offset + 4] = lo\r\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\r\n  buf[offset + 3] = hi\r\n  hi = hi >> 8\r\n  buf[offset + 2] = hi\r\n  hi = hi >> 8\r\n  buf[offset + 1] = hi\r\n  hi = hi >> 8\r\n  buf[offset] = hi\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\r\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\r\n})\r\n\r\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\r\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\r\n})\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    const limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  let i = 0\r\n  let mul = 1\r\n  let sub = 0\r\n  this[offset] = value & 0xFF\r\n  while (++i < byteLength && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    const limit = Math.pow(2, (8 * byteLength) - 1)\r\n\r\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n  }\r\n\r\n  let i = byteLength - 1\r\n  let mul = 1\r\n  let sub = 0\r\n  this[offset + i] = value & 0xFF\r\n  while (--i >= 0 && (mul *= 0x100)) {\r\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n      sub = 1\r\n    }\r\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\r\n  }\r\n\r\n  return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n  if (value < 0) value = 0xff + value + 1\r\n  this[offset] = (value & 0xff)\r\n  return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n  this[offset] = (value >>> 8)\r\n  this[offset + 1] = (value & 0xff)\r\n  return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  this[offset] = (value & 0xff)\r\n  this[offset + 1] = (value >>> 8)\r\n  this[offset + 2] = (value >>> 16)\r\n  this[offset + 3] = (value >>> 24)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n  if (value < 0) value = 0xffffffff + value + 1\r\n  this[offset] = (value >>> 24)\r\n  this[offset + 1] = (value >>> 16)\r\n  this[offset + 2] = (value >>> 8)\r\n  this[offset + 3] = (value & 0xff)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\r\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\r\n})\r\n\r\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\r\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\r\n})\r\n\r\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\r\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n  if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\r\n  return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\r\n  return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\r\n  value = +value\r\n  offset = offset >>> 0\r\n  if (!noAssert) {\r\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\r\n  }\r\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\r\n  return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\r\n  return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\r\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\r\n  if (!start) start = 0\r\n  if (!end && end !== 0) end = this.length\r\n  if (targetStart >= target.length) targetStart = target.length\r\n  if (!targetStart) targetStart = 0\r\n  if (end > 0 && end < start) end = start\r\n\r\n  // Copy 0 bytes; we're done\r\n  if (end === start) return 0\r\n  if (target.length === 0 || this.length === 0) return 0\r\n\r\n  // Fatal error conditions\r\n  if (targetStart < 0) {\r\n    throw new RangeError('targetStart out of bounds')\r\n  }\r\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\r\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n  // Are we oob?\r\n  if (end > this.length) end = this.length\r\n  if (target.length - targetStart < end - start) {\r\n    end = target.length - targetStart + start\r\n  }\r\n\r\n  const len = end - start\r\n\r\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\r\n    // Use built-in when available, missing from IE11\r\n    this.copyWithin(targetStart, start, end)\r\n  } else {\r\n    Uint8Array.prototype.set.call(\r\n      target,\r\n      this.subarray(start, end),\r\n      targetStart\r\n    )\r\n  }\r\n\r\n  return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\r\n  // Handle string cases:\r\n  if (typeof val === 'string') {\r\n    if (typeof start === 'string') {\r\n      encoding = start\r\n      start = 0\r\n      end = this.length\r\n    } else if (typeof end === 'string') {\r\n      encoding = end\r\n      end = this.length\r\n    }\r\n    if (encoding !== undefined && typeof encoding !== 'string') {\r\n      throw new TypeError('encoding must be a string')\r\n    }\r\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n      throw new TypeError('Unknown encoding: ' + encoding)\r\n    }\r\n    if (val.length === 1) {\r\n      const code = val.charCodeAt(0)\r\n      if ((encoding === 'utf8' && code < 128) ||\r\n          encoding === 'latin1') {\r\n        // Fast path: If `val` fits into a single byte, use that numeric value.\r\n        val = code\r\n      }\r\n    }\r\n  } else if (typeof val === 'number') {\r\n    val = val & 255\r\n  } else if (typeof val === 'boolean') {\r\n    val = Number(val)\r\n  }\r\n\r\n  // Invalid ranges are not set to a default, so can range check early.\r\n  if (start < 0 || this.length < start || this.length < end) {\r\n    throw new RangeError('Out of range index')\r\n  }\r\n\r\n  if (end <= start) {\r\n    return this\r\n  }\r\n\r\n  start = start >>> 0\r\n  end = end === undefined ? this.length : end >>> 0\r\n\r\n  if (!val) val = 0\r\n\r\n  let i\r\n  if (typeof val === 'number') {\r\n    for (i = start; i < end; ++i) {\r\n      this[i] = val\r\n    }\r\n  } else {\r\n    const bytes = Buffer.isBuffer(val)\r\n      ? val\r\n      : Buffer.from(val, encoding)\r\n    const len = bytes.length\r\n    if (len === 0) {\r\n      throw new TypeError('The value \"' + val +\r\n        '\" is invalid for argument \"value\"')\r\n    }\r\n    for (i = 0; i < end - start; ++i) {\r\n      this[i + start] = bytes[i % len]\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// CUSTOM ERRORS\r\n// =============\r\n\r\n// Simplified versions from Node, changed for Buffer-only usage\r\nconst errors = {}\r\nfunction E (sym, getMessage, Base) {\r\n  errors[sym] = class NodeError extends Base {\r\n    constructor () {\r\n      super()\r\n\r\n      Object.defineProperty(this, 'message', {\r\n        value: getMessage.apply(this, arguments),\r\n        writable: true,\r\n        configurable: true\r\n      })\r\n\r\n      // Add the error code to the name to include it in the stack trace.\r\n      this.name = `${this.name} [${sym}]`\r\n      // Access the stack to generate the error message including the error code\r\n      // from the name.\r\n      this.stack // eslint-disable-line no-unused-expressions\r\n      // Reset the name to the actual name.\r\n      delete this.name\r\n    }\r\n\r\n    get code () {\r\n      return sym\r\n    }\r\n\r\n    set code (value) {\r\n      Object.defineProperty(this, 'code', {\r\n        configurable: true,\r\n        enumerable: true,\r\n        value,\r\n        writable: true\r\n      })\r\n    }\r\n\r\n    toString () {\r\n      return `${this.name} [${sym}]: ${this.message}`\r\n    }\r\n  }\r\n}\r\n\r\nE('ERR_BUFFER_OUT_OF_BOUNDS',\r\n  function (name) {\r\n    if (name) {\r\n      return `${name} is outside of buffer bounds`\r\n    }\r\n\r\n    return 'Attempt to access memory outside buffer bounds'\r\n  }, RangeError)\r\nE('ERR_INVALID_ARG_TYPE',\r\n  function (name, actual) {\r\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\r\n  }, TypeError)\r\nE('ERR_OUT_OF_RANGE',\r\n  function (str, range, input) {\r\n    let msg = `The value of \"${str}\" is out of range.`\r\n    let received = input\r\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\r\n      received = addNumericalSeparator(String(input))\r\n    } else if (typeof input === 'bigint') {\r\n      received = String(input)\r\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\r\n        received = addNumericalSeparator(received)\r\n      }\r\n      received += 'n'\r\n    }\r\n    msg += ` It must be ${range}. Received ${received}`\r\n    return msg\r\n  }, RangeError)\r\n\r\nfunction addNumericalSeparator (val) {\r\n  let res = ''\r\n  let i = val.length\r\n  const start = val[0] === '-' ? 1 : 0\r\n  for (; i >= start + 4; i -= 3) {\r\n    res = `_${val.slice(i - 3, i)}${res}`\r\n  }\r\n  return `${val.slice(0, i)}${res}`\r\n}\r\n\r\n// CHECK FUNCTIONS\r\n// ===============\r\n\r\nfunction checkBounds (buf, offset, byteLength) {\r\n  validateNumber(offset, 'offset')\r\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\r\n    boundsError(offset, buf.length - (byteLength + 1))\r\n  }\r\n}\r\n\r\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\r\n  if (value > max || value < min) {\r\n    const n = typeof min === 'bigint' ? 'n' : ''\r\n    let range\r\n    if (byteLength > 3) {\r\n      if (min === 0 || min === BigInt(0)) {\r\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\r\n      } else {\r\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\r\n                `${(byteLength + 1) * 8 - 1}${n}`\r\n      }\r\n    } else {\r\n      range = `>= ${min}${n} and <= ${max}${n}`\r\n    }\r\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\r\n  }\r\n  checkBounds(buf, offset, byteLength)\r\n}\r\n\r\nfunction validateNumber (value, name) {\r\n  if (typeof value !== 'number') {\r\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\r\n  }\r\n}\r\n\r\nfunction boundsError (value, length, type) {\r\n  if (Math.floor(value) !== value) {\r\n    validateNumber(value, type)\r\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\r\n  }\r\n\r\n  if (length < 0) {\r\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\r\n  }\r\n\r\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\r\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\r\n                                    value)\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean (str) {\r\n  // Node takes equal signs as end of the Base64 encoding\r\n  str = str.split('=')[0]\r\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n  str = str.trim().replace(INVALID_BASE64_RE, '')\r\n  // Node converts strings with length < 2 to ''\r\n  if (str.length < 2) return ''\r\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n  while (str.length % 4 !== 0) {\r\n    str = str + '='\r\n  }\r\n  return str\r\n}\r\n\r\nfunction utf8ToBytes (string, units) {\r\n  units = units || Infinity\r\n  let codePoint\r\n  const length = string.length\r\n  let leadSurrogate = null\r\n  const bytes = []\r\n\r\n  for (let i = 0; i < length; ++i) {\r\n    codePoint = string.charCodeAt(i)\r\n\r\n    // is surrogate component\r\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\r\n      // last char was a lead\r\n      if (!leadSurrogate) {\r\n        // no lead yet\r\n        if (codePoint > 0xDBFF) {\r\n          // unexpected trail\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        } else if (i + 1 === length) {\r\n          // unpaired lead\r\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n          continue\r\n        }\r\n\r\n        // valid lead\r\n        leadSurrogate = codePoint\r\n\r\n        continue\r\n      }\r\n\r\n      // 2 leads in a row\r\n      if (codePoint < 0xDC00) {\r\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n        leadSurrogate = codePoint\r\n        continue\r\n      }\r\n\r\n      // valid surrogate pair\r\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\r\n    } else if (leadSurrogate) {\r\n      // valid bmp char, but last char was a lead\r\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\r\n    }\r\n\r\n    leadSurrogate = null\r\n\r\n    // encode utf8\r\n    if (codePoint < 0x80) {\r\n      if ((units -= 1) < 0) break\r\n      bytes.push(codePoint)\r\n    } else if (codePoint < 0x800) {\r\n      if ((units -= 2) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x6 | 0xC0,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x10000) {\r\n      if ((units -= 3) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0xC | 0xE0,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else if (codePoint < 0x110000) {\r\n      if ((units -= 4) < 0) break\r\n      bytes.push(\r\n        codePoint >> 0x12 | 0xF0,\r\n        codePoint >> 0xC & 0x3F | 0x80,\r\n        codePoint >> 0x6 & 0x3F | 0x80,\r\n        codePoint & 0x3F | 0x80\r\n      )\r\n    } else {\r\n      throw new Error('Invalid code point')\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n\r\nfunction asciiToBytes (str) {\r\n  const byteArray = []\r\n  for (let i = 0; i < str.length; ++i) {\r\n    // Node's code seems to be doing this and not & 0x7F..\r\n    byteArray.push(str.charCodeAt(i) & 0xFF)\r\n  }\r\n  return byteArray\r\n}\r\n\r\nfunction utf16leToBytes (str, units) {\r\n  let c, hi, lo\r\n  const byteArray = []\r\n  for (let i = 0; i < str.length; ++i) {\r\n    if ((units -= 2) < 0) break\r\n\r\n    c = str.charCodeAt(i)\r\n    hi = c >> 8\r\n    lo = c % 256\r\n    byteArray.push(lo)\r\n    byteArray.push(hi)\r\n  }\r\n\r\n  return byteArray\r\n}\r\n\r\nfunction base64ToBytes (str) {\r\n  return base64.toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer (src, dst, offset, length) {\r\n  let i\r\n  for (i = 0; i < length; ++i) {\r\n    if ((i + offset >= dst.length) || (i >= src.length)) break\r\n    dst[i + offset] = src[i]\r\n  }\r\n  return i\r\n}\r\n\r\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\r\n// the `instanceof` check but they should be treated as of that type.\r\n// See: https://github.com/feross/buffer/issues/166\r\nfunction isInstance (obj, type) {\r\n  return obj instanceof type ||\r\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\r\n      obj.constructor.name === type.name)\r\n}\r\nfunction numberIsNaN (obj) {\r\n  // For IE11 support\r\n  return obj !== obj // eslint-disable-line no-self-compare\r\n}\r\n\r\n// Create lookup table for `toString('hex')`\r\n// See: https://github.com/feross/buffer/issues/219\r\nconst hexSliceLookupTable = (function () {\r\n  const alphabet = '0123456789abcdef'\r\n  const table = new Array(256)\r\n  for (let i = 0; i < 16; ++i) {\r\n    const i16 = i * 16\r\n    for (let j = 0; j < 16; ++j) {\r\n      table[i16 + j] = alphabet[i] + alphabet[j]\r\n    }\r\n  }\r\n  return table\r\n})()\r\n\r\n// Return not function with Error if BigInt not supported\r\nfunction defineBigIntMethod (fn) {\r\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\r\n}\r\n\r\nfunction BufferBigIntNotDefined () {\r\n  throw new Error('BigInt not supported')\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Common base with default implementation for most buffer methods.\r\n * Buffers are stateful - they track a current \"position\", this helps greatly\r\n * when reading and writing from them incrementally. You can also ignore the\r\n * stateful read/write methods.\r\n * readXXX and writeXXX-methods move the inner position of the buffer.\r\n * putXXX and getXXX-methods do not.\r\n * @access private\r\n */\r\nvar BaseBuffer = /** @class */ (function () {\r\n    /**\r\n     * Create a instance with the injected size.\r\n     * @constructor\r\n     * @param {Integer} size\r\n     */\r\n    function BaseBuffer(size) {\r\n        this.position = 0;\r\n        this.length = size;\r\n    }\r\n    BaseBuffer.prototype.getUInt8 = function (position) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.getInt8 = function (position) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.getFloat64 = function (position) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.putUInt8 = function (position, val) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.putInt8 = function (position, val) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    BaseBuffer.prototype.putFloat64 = function (position, val) {\r\n        throw new Error('Not implemented');\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getInt16 = function (p) {\r\n        return (this.getInt8(p) << 8) | this.getUInt8(p + 1);\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getUInt16 = function (p) {\r\n        return (this.getUInt8(p) << 8) | this.getUInt8(p + 1);\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getInt32 = function (p) {\r\n        return ((this.getInt8(p) << 24) |\r\n            (this.getUInt8(p + 1) << 16) |\r\n            (this.getUInt8(p + 2) << 8) |\r\n            this.getUInt8(p + 3));\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getUInt32 = function (p) {\r\n        return ((this.getUInt8(p) << 24) |\r\n            (this.getUInt8(p + 1) << 16) |\r\n            (this.getUInt8(p + 2) << 8) |\r\n            this.getUInt8(p + 3));\r\n    };\r\n    /**\r\n     * @param p\r\n     */\r\n    BaseBuffer.prototype.getInt64 = function (p) {\r\n        return ((this.getInt8(p) << 56) |\r\n            (this.getUInt8(p + 1) << 48) |\r\n            (this.getUInt8(p + 2) << 40) |\r\n            (this.getUInt8(p + 3) << 32) |\r\n            (this.getUInt8(p + 4) << 24) |\r\n            (this.getUInt8(p + 5) << 16) |\r\n            (this.getUInt8(p + 6) << 8) |\r\n            this.getUInt8(p + 7));\r\n    };\r\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param start\r\n     * @param length\r\n     */\r\n    BaseBuffer.prototype.getSlice = function (start, length) {\r\n        return new SliceBuffer(start, length, this);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putInt16 = function (p, val) {\r\n        this.putInt8(p, val >> 8);\r\n        this.putUInt8(p + 1, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putUInt16 = function (p, val) {\r\n        this.putUInt8(p, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 1, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putInt32 = function (p, val) {\r\n        this.putInt8(p, val >> 24);\r\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\r\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 3, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putUInt32 = function (p, val) {\r\n        this.putUInt8(p, (val >> 24) & 0xff);\r\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\r\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 3, val & 0xff);\r\n    };\r\n    /**\r\n     * @param p\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.putInt64 = function (p, val) {\r\n        this.putInt8(p, val >> 48);\r\n        this.putUInt8(p + 1, (val >> 42) & 0xff);\r\n        this.putUInt8(p + 2, (val >> 36) & 0xff);\r\n        this.putUInt8(p + 3, (val >> 30) & 0xff);\r\n        this.putUInt8(p + 4, (val >> 24) & 0xff);\r\n        this.putUInt8(p + 5, (val >> 16) & 0xff);\r\n        this.putUInt8(p + 6, (val >> 8) & 0xff);\r\n        this.putUInt8(p + 7, val & 0xff);\r\n    };\r\n    /**\r\n     * @param position\r\n     * @param other\r\n     */\r\n    BaseBuffer.prototype.putBytes = function (position, other) {\r\n        for (var i = 0, end = other.remaining(); i < end; i++) {\r\n            this.putUInt8(position + i, other.readUInt8());\r\n        }\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readUInt8 = function () {\r\n        return this.getUInt8(this._updatePos(1));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt8 = function () {\r\n        return this.getInt8(this._updatePos(1));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readUInt16 = function () {\r\n        return this.getUInt16(this._updatePos(2));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readUInt32 = function () {\r\n        return this.getUInt32(this._updatePos(4));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt16 = function () {\r\n        return this.getInt16(this._updatePos(2));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt32 = function () {\r\n        return this.getInt32(this._updatePos(4));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readInt64 = function () {\r\n        return this.getInt32(this._updatePos(8));\r\n    };\r\n    /**\r\n     * Read from state position.\r\n     */\r\n    BaseBuffer.prototype.readFloat64 = function () {\r\n        return this.getFloat64(this._updatePos(8));\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeUInt8 = function (val) {\r\n        this.putUInt8(this._updatePos(1), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt8 = function (val) {\r\n        this.putInt8(this._updatePos(1), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt16 = function (val) {\r\n        this.putInt16(this._updatePos(2), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt32 = function (val) {\r\n        this.putInt32(this._updatePos(4), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeUInt32 = function (val) {\r\n        this.putUInt32(this._updatePos(4), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeInt64 = function (val) {\r\n        this.putInt64(this._updatePos(8), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeFloat64 = function (val) {\r\n        this.putFloat64(this._updatePos(8), val);\r\n    };\r\n    /**\r\n     * Write to state position.\r\n     * @param val\r\n     */\r\n    BaseBuffer.prototype.writeBytes = function (val) {\r\n        this.putBytes(this._updatePos(val.remaining()), val);\r\n    };\r\n    /**\r\n     * Get a slice of this buffer. This method does not copy any data,\r\n     * but simply provides a slice view of this buffer\r\n     * @param length\r\n     */\r\n    BaseBuffer.prototype.readSlice = function (length) {\r\n        return this.getSlice(this._updatePos(length), length);\r\n    };\r\n    BaseBuffer.prototype._updatePos = function (length) {\r\n        var p = this.position;\r\n        this.position += length;\r\n        return p;\r\n    };\r\n    /**\r\n     * Get remaining\r\n     */\r\n    BaseBuffer.prototype.remaining = function () {\r\n        return this.length - this.position;\r\n    };\r\n    /**\r\n     * Has remaining\r\n     */\r\n    BaseBuffer.prototype.hasRemaining = function () {\r\n        return this.remaining() > 0;\r\n    };\r\n    /**\r\n     * Reset position state\r\n     */\r\n    BaseBuffer.prototype.reset = function () {\r\n        this.position = 0;\r\n    };\r\n    /**\r\n     * Get string representation of buffer and it's state.\r\n     * @return {string} Buffer as a string\r\n     */\r\n    BaseBuffer.prototype.toString = function () {\r\n        return (this.constructor.name +\r\n            '( position=' +\r\n            this.position +\r\n            ' )\\n  ' +\r\n            this.toHex());\r\n    };\r\n    /**\r\n     * Get string representation of buffer.\r\n     * @return {string} Buffer as a string\r\n     */\r\n    BaseBuffer.prototype.toHex = function () {\r\n        var out = '';\r\n        for (var i = 0; i < this.length; i++) {\r\n            var hexByte = this.getUInt8(i).toString(16);\r\n            if (hexByte.length === 1) {\r\n                hexByte = '0' + hexByte;\r\n            }\r\n            out += hexByte;\r\n            if (i !== this.length - 1) {\r\n                out += ' ';\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    return BaseBuffer;\r\n}());\r\nexports.default = BaseBuffer;\r\n/**\r\n * Represents a view as slice of another buffer.\r\n * @access private\r\n */\r\nvar SliceBuffer = /** @class */ (function (_super) {\r\n    __extends(SliceBuffer, _super);\r\n    function SliceBuffer(start, length, inner) {\r\n        var _this = _super.call(this, length) || this;\r\n        _this._start = start;\r\n        _this._inner = inner;\r\n        return _this;\r\n    }\r\n    SliceBuffer.prototype.putUInt8 = function (position, val) {\r\n        this._inner.putUInt8(this._start + position, val);\r\n    };\r\n    SliceBuffer.prototype.getUInt8 = function (position) {\r\n        return this._inner.getUInt8(this._start + position);\r\n    };\r\n    SliceBuffer.prototype.putInt8 = function (position, val) {\r\n        this._inner.putInt8(this._start + position, val);\r\n    };\r\n    SliceBuffer.prototype.putFloat64 = function (position, val) {\r\n        this._inner.putFloat64(this._start + position, val);\r\n    };\r\n    SliceBuffer.prototype.getInt8 = function (position) {\r\n        return this._inner.getInt8(this._start + position);\r\n    };\r\n    SliceBuffer.prototype.getFloat64 = function (position) {\r\n        return this._inner.getFloat64(this._start + position);\r\n    };\r\n    return SliceBuffer;\r\n}(BaseBuffer));\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BaseBuffer = void 0;\r\nvar base_buf_1 = __importDefault(require(\"./base-buf\"));\r\nexports.BaseBuffer = base_buf_1.default;\r\nexports.default = base_buf_1.default;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.alloc = void 0;\r\nvar buffer_1 = __importDefault(require(\"buffer\"));\r\nvar buf_1 = __importDefault(require(\"../buf\"));\r\nvar ChannelBuffer = /** @class */ (function (_super) {\r\n    __extends(ChannelBuffer, _super);\r\n    function ChannelBuffer(arg) {\r\n        var _this = this;\r\n        var buffer = newChannelJSBuffer(arg);\r\n        _this = _super.call(this, buffer.length) || this;\r\n        _this._buffer = buffer;\r\n        return _this;\r\n    }\r\n    ChannelBuffer.prototype.getUInt8 = function (position) {\r\n        return this._buffer.readUInt8(position);\r\n    };\r\n    ChannelBuffer.prototype.getInt8 = function (position) {\r\n        return this._buffer.readInt8(position);\r\n    };\r\n    ChannelBuffer.prototype.getFloat64 = function (position) {\r\n        return this._buffer.readDoubleBE(position);\r\n    };\r\n    ChannelBuffer.prototype.putUInt8 = function (position, val) {\r\n        this._buffer.writeUInt8(val, position);\r\n    };\r\n    ChannelBuffer.prototype.putInt8 = function (position, val) {\r\n        this._buffer.writeInt8(val, position);\r\n    };\r\n    ChannelBuffer.prototype.putFloat64 = function (position, val) {\r\n        this._buffer.writeDoubleBE(val, position);\r\n    };\r\n    ChannelBuffer.prototype.putBytes = function (position, val) {\r\n        if (val instanceof ChannelBuffer) {\r\n            var bytesToCopy = Math.min(val.length - val.position, this.length - position);\r\n            val._buffer.copy(this._buffer, position, val.position, val.position + bytesToCopy);\r\n            val.position += bytesToCopy;\r\n        }\r\n        else {\r\n            _super.prototype.putBytes.call(this, position, val);\r\n        }\r\n    };\r\n    ChannelBuffer.prototype.getSlice = function (start, length) {\r\n        return new ChannelBuffer(this._buffer.slice(start, start + length));\r\n    };\r\n    return ChannelBuffer;\r\n}(buf_1.default));\r\nexports.default = ChannelBuffer;\r\n/**\r\n * Allocate a buffer\r\n *\r\n * @param {number} size The buffer sizzer\r\n * @returns {BaseBuffer} The buffer\r\n */\r\nfunction alloc(size) {\r\n    return new ChannelBuffer(size);\r\n}\r\nexports.alloc = alloc;\r\nfunction newChannelJSBuffer(arg) {\r\n    if (arg instanceof buffer_1.default.Buffer) {\r\n        return arg;\r\n    }\r\n    else if (typeof arg === 'number' &&\r\n        typeof buffer_1.default.Buffer.alloc === 'function') {\r\n        // use static factory function present in newer NodeJS versions to allocate new buffer with specified size\r\n        return buffer_1.default.Buffer.alloc(arg);\r\n    }\r\n    else {\r\n        // fallback to the old, potentially deprecated constructor\r\n        // eslint-disable-next-line n/no-deprecated-api\r\n        return new buffer_1.default.Buffer(arg);\r\n    }\r\n}\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-env browser */\r\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\r\n// Just to be sure that these values are with us even after WebSocket is injected\r\n// for tests.\r\n// eslint-disable-next-line no-unused-vars\r\nvar WS_CONNECTING = 0;\r\nvar WS_OPEN = 1;\r\n// eslint-disable-next-line no-unused-vars\r\nvar WS_CLOSING = 2;\r\nvar WS_CLOSED = 3;\r\n/**\r\n * Create a new WebSocketChannel to be used in web browsers.\r\n * @access private\r\n */\r\nvar WebSocketChannel = /** @class */ (function () {\r\n    /**\r\n     * Create new instance\r\n     * @param {ChannelConfig} config - configuration for this channel.\r\n     * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\r\n     */\r\n    function WebSocketChannel(config, protocolSupplier, socketFactory) {\r\n        if (protocolSupplier === void 0) { protocolSupplier = detectWebPageProtocol; }\r\n        if (socketFactory === void 0) { socketFactory = function (url) { return new WebSocket(url); }; }\r\n        var _this = this;\r\n        this._open = true;\r\n        this._pending = [];\r\n        this._error = null;\r\n        this._handleConnectionError = this._handleConnectionError.bind(this);\r\n        this._config = config;\r\n        this._receiveTimeout = null;\r\n        this._receiveTimeoutStarted = false;\r\n        this._receiveTimeoutId = null;\r\n        this._closingPromise = null;\r\n        var _a = determineWebSocketScheme(config, protocolSupplier), scheme = _a.scheme, error = _a.error;\r\n        if (error) {\r\n            this._error = error;\r\n            return;\r\n        }\r\n        this._ws = createWebSocket(scheme, config.address, socketFactory);\r\n        this._ws.binaryType = 'arraybuffer';\r\n        var self = this;\r\n        // All connection errors are not sent to the error handler\r\n        // we must also check for dirty close calls\r\n        this._ws.onclose = function (e) {\r\n            if (e && !e.wasClean) {\r\n                self._handleConnectionError();\r\n            }\r\n            self._open = false;\r\n        };\r\n        this._ws.onopen = function () {\r\n            // Connected! Cancel the connection timeout\r\n            self._clearConnectionTimeout();\r\n            // Drain all pending messages\r\n            var pending = self._pending;\r\n            self._pending = null;\r\n            for (var i = 0; i < pending.length; i++) {\r\n                self.write(pending[i]);\r\n            }\r\n        };\r\n        this._ws.onmessage = function (event) {\r\n            _this._resetTimeout();\r\n            if (self.onmessage) {\r\n                var b = new channel_buf_1.default(event.data);\r\n                self.onmessage(b);\r\n            }\r\n        };\r\n        this._ws.onerror = this._handleConnectionError;\r\n        this._connectionTimeoutFired = false;\r\n        this._connectionTimeoutId = this._setupConnectionTimeout();\r\n    }\r\n    WebSocketChannel.prototype._handleConnectionError = function () {\r\n        if (this._connectionTimeoutFired) {\r\n            // timeout fired - not connected within configured time\r\n            this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \".concat(this._config.connectionTimeout, \"ms\"), this._config.connectionErrorCode);\r\n            if (this.onerror) {\r\n                this.onerror(this._error);\r\n            }\r\n            return;\r\n        }\r\n        // onerror triggers on websocket close as well.. don't get me started.\r\n        if (this._open && !this._timedout) {\r\n            // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\r\n            this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' +\r\n                'constraints in your web browser, the reason for the failure is not available ' +\r\n                'to this Neo4j Driver. Please use your browsers development console to determine ' +\r\n                'the root cause of the failure. Common reasons include the database being ' +\r\n                'unavailable, using the wrong connection URL or temporary network problems. ' +\r\n                'If you have enabled encryption, ensure your browser is configured to trust the ' +\r\n                'certificate Neo4j is configured to use. WebSocket `readyState` is: ' +\r\n                this._ws.readyState, this._config.connectionErrorCode);\r\n            if (this.onerror) {\r\n                this.onerror(this._error);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Write the passed in buffer to connection\r\n     * @param {ChannelBuffer} buffer - Buffer to write\r\n     */\r\n    WebSocketChannel.prototype.write = function (buffer) {\r\n        // If there is a pending queue, push this on that queue. This means\r\n        // we are not yet connected, so we queue things locally.\r\n        if (this._pending !== null) {\r\n            this._pending.push(buffer);\r\n        }\r\n        else if (buffer instanceof channel_buf_1.default) {\r\n            try {\r\n                this._ws.send(buffer._buffer);\r\n            }\r\n            catch (error) {\r\n                if (this._ws.readyState !== WS_OPEN) {\r\n                    // Websocket has been closed\r\n                    this._handleConnectionError();\r\n                }\r\n                else {\r\n                    // Some other error occured\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\r\n        }\r\n    };\r\n    /**\r\n     * Close the connection\r\n     * @returns {Promise} A promise that will be resolved after channel is closed\r\n     */\r\n    WebSocketChannel.prototype.close = function () {\r\n        var _this = this;\r\n        if (this._closingPromise === null) {\r\n            this._closingPromise = new Promise(function (resolve, reject) {\r\n                _this._clearConnectionTimeout();\r\n                if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\r\n                    _this._open = false;\r\n                    _this.stopReceiveTimeout();\r\n                    _this._ws.onclose = function () {\r\n                        resolve();\r\n                    };\r\n                    _this._ws.close();\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            });\r\n        }\r\n        return this._closingPromise;\r\n    };\r\n    /**\r\n     * Setup the receive timeout for the channel.\r\n     *\r\n     * Not supported for the browser channel.\r\n     *\r\n     * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\r\n     * @returns {void}\r\n     */\r\n    WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) {\r\n        this._receiveTimeout = receiveTimeout;\r\n    };\r\n    /**\r\n     * Stops the receive timeout for the channel.\r\n     */\r\n    WebSocketChannel.prototype.stopReceiveTimeout = function () {\r\n        if (this._receiveTimeout !== null && this._receiveTimeoutStarted) {\r\n            this._receiveTimeoutStarted = false;\r\n            if (this._receiveTimeoutId != null) {\r\n                clearTimeout(this._receiveTimeoutId);\r\n            }\r\n            this._receiveTimeoutId = null;\r\n        }\r\n    };\r\n    /**\r\n     * Start the receive timeout for the channel.\r\n     */\r\n    WebSocketChannel.prototype.startReceiveTimeout = function () {\r\n        if (this._open && this._receiveTimeout !== null && !this._receiveTimeoutStarted) {\r\n            this._receiveTimeoutStarted = true;\r\n            this._resetTimeout();\r\n        }\r\n    };\r\n    WebSocketChannel.prototype._resetTimeout = function () {\r\n        var _this = this;\r\n        if (!this._receiveTimeoutStarted) {\r\n            return;\r\n        }\r\n        if (this._receiveTimeoutId !== null) {\r\n            clearTimeout(this._receiveTimeoutId);\r\n        }\r\n        this._receiveTimeoutId = setTimeout(function () {\r\n            _this._receiveTimeoutId = null;\r\n            _this._timedout = true;\r\n            _this.stopReceiveTimeout();\r\n            _this._error = (0, neo4j_driver_core_1.newError)(\"Connection lost. Server didn't respond in \".concat(_this._receiveTimeout, \"ms\"), _this._config.connectionErrorCode);\r\n            _this.close();\r\n            if (_this.onerror) {\r\n                _this.onerror(_this._error);\r\n            }\r\n        }, this._receiveTimeout);\r\n    };\r\n    /**\r\n     * Set connection timeout on the given WebSocket, if configured.\r\n     * @return {number} the timeout id or null.\r\n     * @private\r\n     */\r\n    WebSocketChannel.prototype._setupConnectionTimeout = function () {\r\n        var _this = this;\r\n        var timeout = this._config.connectionTimeout;\r\n        if (timeout) {\r\n            var webSocket_1 = this._ws;\r\n            return setTimeout(function () {\r\n                if (webSocket_1.readyState !== WS_OPEN) {\r\n                    _this._connectionTimeoutFired = true;\r\n                    webSocket_1.close();\r\n                }\r\n            }, timeout);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove active connection timeout, if any.\r\n     * @private\r\n     */\r\n    WebSocketChannel.prototype._clearConnectionTimeout = function () {\r\n        var timeoutId = this._connectionTimeoutId;\r\n        if (timeoutId || timeoutId === 0) {\r\n            this._connectionTimeoutFired = false;\r\n            this._connectionTimeoutId = null;\r\n            clearTimeout(timeoutId);\r\n        }\r\n    };\r\n    return WebSocketChannel;\r\n}());\r\nexports.default = WebSocketChannel;\r\nfunction createWebSocket(scheme, address, socketFactory) {\r\n    var url = scheme + '://' + address.asHostPort();\r\n    try {\r\n        return socketFactory(url);\r\n    }\r\n    catch (error) {\r\n        if (isIPv6AddressIssueOnWindows(error, address)) {\r\n            // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\r\n            // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\r\n            // and Windows requires IPv6 to be changes in the following way:\r\n            //   1) replace all ':' with '-'\r\n            //   2) replace '%' with 's' for link-local address\r\n            //   3) append '.ipv6-literal.net' suffix\r\n            // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\r\n            // For more details see:\r\n            //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\r\n            //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\r\n            // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\r\n            // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\r\n            var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\r\n            return socketFactory(windowsFriendlyUrl);\r\n        }\r\n        else {\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nfunction isIPv6AddressIssueOnWindows(error, address) {\r\n    return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\r\n}\r\nfunction isIPv6Address(hostAndPort) {\r\n    return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\r\n}\r\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\r\n    // replace all ':' with '-'\r\n    var hostWithoutColons = address.host().replace(/:/g, '-');\r\n    // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\r\n    var hostWithoutPercent = hostWithoutColons.replace('%', 's');\r\n    // append magic '.ipv6-literal.net' suffix\r\n    var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\r\n    return \"\".concat(scheme, \"://\").concat(ipv6Host, \":\").concat(address.port());\r\n}\r\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\r\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\r\n */\r\nfunction determineWebSocketScheme(config, protocolSupplier) {\r\n    var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\r\n    var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\r\n    var trust = config.trust;\r\n    var secureProtocol = isProtocolSecure(protocolSupplier);\r\n    verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\r\n    if (encryptionOff) {\r\n        // encryption explicitly turned off in the config\r\n        return { scheme: 'ws', error: null };\r\n    }\r\n    if (secureProtocol) {\r\n        // driver is used in a secure https web page, use 'wss'\r\n        return { scheme: 'wss', error: null };\r\n    }\r\n    if (encryptionOn) {\r\n        // encryption explicitly requested in the config\r\n        if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\r\n            // trust strategy not specified or the only supported strategy is specified\r\n            return { scheme: 'wss', error: null };\r\n        }\r\n        else {\r\n            var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' +\r\n                \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" +\r\n                trust +\r\n                ' is not supported. Please ' +\r\n                'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' +\r\n                '`encrypted:\"' +\r\n                ENCRYPTION_OFF +\r\n                '\"` in the driver configuration.');\r\n            return { scheme: null, error: error };\r\n        }\r\n    }\r\n    // default to unencrypted web socket\r\n    return { scheme: 'ws', error: null };\r\n}\r\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\r\n */\r\nfunction isEncryptionExplicitlyTurnedOn(config) {\r\n    return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\r\n}\r\n/**\r\n * @param {ChannelConfig} config - configuration for the channel.\r\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\r\n */\r\nfunction isEncryptionExplicitlyTurnedOff(config) {\r\n    return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\r\n}\r\n/**\r\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\r\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\r\n */\r\nfunction isProtocolSecure(protocolSupplier) {\r\n    var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\r\n    return protocol && protocol.toLowerCase().indexOf('https') >= 0;\r\n}\r\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\r\n    if (secureProtocol === null) {\r\n        // do nothing sice the protocol could not be identified\r\n    }\r\n    else if (encryptionOn && !secureProtocol) {\r\n        // encryption explicitly turned on for a driver used on a HTTP web page\r\n        console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' +\r\n            'WebSockets might not work in a mixed content environment. ' +\r\n            'Please consider configuring driver to not use encryption.');\r\n    }\r\n    else if (encryptionOff && secureProtocol) {\r\n        // encryption explicitly turned off for a driver used on a HTTPS web page\r\n        console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' +\r\n            'WebSockets might not work in a mixed content environment. ' +\r\n            'Please consider configuring driver to use encryption.');\r\n    }\r\n}\r\nfunction detectWebPageProtocol() {\r\n    return typeof window !== 'undefined' && window.location\r\n        ? window.location.protocol\r\n        : null;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BaseHostNameResolver = neo4j_driver_core_1.internal.resolver.BaseHostNameResolver;\r\nvar BrowserHostNameResolver = /** @class */ (function (_super) {\r\n    __extends(BrowserHostNameResolver, _super);\r\n    function BrowserHostNameResolver() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BrowserHostNameResolver.prototype.resolve = function (address) {\r\n        return this._resolveToItself(address);\r\n    };\r\n    return BrowserHostNameResolver;\r\n}(BaseHostNameResolver));\r\nexports.default = BrowserHostNameResolver;\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nexports.default = {\r\n    load: function (clientCertificate) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, clientCertificate];\r\n            });\r\n        });\r\n    }\r\n};\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ClientCertificatesLoader = exports.HostNameResolver = exports.Channel = void 0;\r\nvar browser_channel_1 = __importDefault(require(\"./browser-channel\"));\r\nvar browser_host_name_resolver_1 = __importDefault(require(\"./browser-host-name-resolver\"));\r\nvar browser_client_certificates_loader_1 = __importDefault(require(\"./browser-client-certificates-loader\"));\r\n/*\r\n\r\nThis module exports a set of components to be used in browser environment.\r\nThey are not compatible with NodeJS environment.\r\nAll files import/require APIs from `node/index.js` by default.\r\nSuch imports are replaced at build time with `browser/index.js` when building a browser bundle.\r\n\r\nNOTE: exports in this module should have exactly the same names/structure as exports in `node/index.js`.\r\n\r\n */\r\nexports.Channel = browser_channel_1.default;\r\nexports.HostNameResolver = browser_host_name_resolver_1.default;\r\nexports.ClientCertificatesLoader = browser_client_certificates_loader_1.default;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar buf_1 = require(\"../buf\");\r\nvar channel_buf_1 = require(\"./channel-buf\");\r\n/**\r\n * Buffer that combines multiple buffers, exposing them as one single buffer.\r\n */\r\nvar CombinedBuffer = /** @class */ (function (_super) {\r\n    __extends(CombinedBuffer, _super);\r\n    function CombinedBuffer(buffers) {\r\n        var _this = this;\r\n        var length = 0;\r\n        for (var i = 0; i < buffers.length; i++) {\r\n            length += buffers[i].length;\r\n        }\r\n        _this = _super.call(this, length) || this;\r\n        _this._buffers = buffers;\r\n        return _this;\r\n    }\r\n    CombinedBuffer.prototype.getUInt8 = function (position) {\r\n        // Surely there's a faster way to do this.. some sort of lookup table thing?\r\n        for (var i = 0; i < this._buffers.length; i++) {\r\n            var buffer = this._buffers[i];\r\n            // If the position is not in the current buffer, skip the current buffer\r\n            if (position >= buffer.length) {\r\n                position -= buffer.length;\r\n            }\r\n            else {\r\n                return buffer.getUInt8(position);\r\n            }\r\n        }\r\n    };\r\n    CombinedBuffer.prototype.getInt8 = function (position) {\r\n        // Surely there's a faster way to do this.. some sort of lookup table thing?\r\n        for (var i = 0; i < this._buffers.length; i++) {\r\n            var buffer = this._buffers[i];\r\n            // If the position is not in the current buffer, skip the current buffer\r\n            if (position >= buffer.length) {\r\n                position -= buffer.length;\r\n            }\r\n            else {\r\n                return buffer.getInt8(position);\r\n            }\r\n        }\r\n    };\r\n    CombinedBuffer.prototype.getFloat64 = function (position) {\r\n        // At some point, a more efficient impl. For now, we copy the 8 bytes\r\n        // we want to read and depend on the platform impl of IEEE 754.\r\n        var b = (0, channel_buf_1.alloc)(8);\r\n        for (var i = 0; i < 8; i++) {\r\n            b.putUInt8(i, this.getUInt8(position + i));\r\n        }\r\n        return b.getFloat64(0);\r\n    };\r\n    return CombinedBuffer;\r\n}(buf_1.BaseBuffer));\r\nexports.default = CombinedBuffer;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Dechunker = exports.Chunker = void 0;\r\nvar base_buf_1 = __importDefault(require(\"../buf/base-buf\"));\r\nvar channel_buf_1 = require(\"./channel-buf\");\r\nvar combined_buf_1 = __importDefault(require(\"./combined-buf\"));\r\nvar _CHUNK_HEADER_SIZE = 2;\r\nvar _MESSAGE_BOUNDARY = 0x00;\r\nvar _DEFAULT_BUFFER_SIZE = 1400; // http://stackoverflow.com/questions/2613734/maximum-packet-size-for-a-tcp-connection\r\n/**\r\n * Looks like a writable buffer, chunks output transparently into a channel below.\r\n * @access private\r\n */\r\nvar Chunker = /** @class */ (function (_super) {\r\n    __extends(Chunker, _super);\r\n    function Chunker(channel, bufferSize) {\r\n        var _this = _super.call(this, 0) || this;\r\n        _this._bufferSize = bufferSize || _DEFAULT_BUFFER_SIZE;\r\n        _this._ch = channel;\r\n        _this._buffer = (0, channel_buf_1.alloc)(_this._bufferSize);\r\n        _this._currentChunkStart = 0;\r\n        _this._chunkOpen = false;\r\n        return _this;\r\n    }\r\n    Chunker.prototype.putUInt8 = function (position, val) {\r\n        this._ensure(1);\r\n        this._buffer.writeUInt8(val);\r\n    };\r\n    Chunker.prototype.putInt8 = function (position, val) {\r\n        this._ensure(1);\r\n        this._buffer.writeInt8(val);\r\n    };\r\n    Chunker.prototype.putFloat64 = function (position, val) {\r\n        this._ensure(8);\r\n        this._buffer.writeFloat64(val);\r\n    };\r\n    Chunker.prototype.putBytes = function (position, data) {\r\n        // TODO: If data is larger than our chunk size or so, we're very likely better off just passing this buffer on\r\n        // rather than doing the copy here TODO: *however* note that we need some way to find out when the data has been\r\n        // written (and thus the buffer can be re-used) if we take that approach\r\n        while (data.remaining() > 0) {\r\n            // Ensure there is an open chunk, and that it has at least one byte of space left\r\n            this._ensure(1);\r\n            if (this._buffer.remaining() > data.remaining()) {\r\n                this._buffer.writeBytes(data);\r\n            }\r\n            else {\r\n                this._buffer.writeBytes(data.readSlice(this._buffer.remaining()));\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Chunker.prototype.flush = function () {\r\n        if (this._buffer.position > 0) {\r\n            this._closeChunkIfOpen();\r\n            // Local copy and clear the buffer field. This ensures that the buffer is not re-released if the flush call fails\r\n            var out = this._buffer;\r\n            this._buffer = null;\r\n            this._ch.write(out.getSlice(0, out.position));\r\n            // Alloc a new output buffer. We assume we're using NodeJS's buffer pooling under the hood here!\r\n            this._buffer = (0, channel_buf_1.alloc)(this._bufferSize);\r\n            this._chunkOpen = false;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Bolt messages are encoded in one or more chunks, and the boundary between two messages\r\n     * is encoded as a 0-length chunk, `00 00`. This inserts such a message boundary, closing\r\n     * any currently open chunk as needed\r\n     */\r\n    Chunker.prototype.messageBoundary = function () {\r\n        this._closeChunkIfOpen();\r\n        if (this._buffer.remaining() < _CHUNK_HEADER_SIZE) {\r\n            this.flush();\r\n        }\r\n        // Write message boundary\r\n        this._buffer.writeInt16(_MESSAGE_BOUNDARY);\r\n    };\r\n    /** Ensure at least the given size is available for writing */\r\n    Chunker.prototype._ensure = function (size) {\r\n        var toWriteSize = this._chunkOpen ? size : size + _CHUNK_HEADER_SIZE;\r\n        if (this._buffer.remaining() < toWriteSize) {\r\n            this.flush();\r\n        }\r\n        if (!this._chunkOpen) {\r\n            this._currentChunkStart = this._buffer.position;\r\n            this._buffer.position = this._buffer.position + _CHUNK_HEADER_SIZE;\r\n            this._chunkOpen = true;\r\n        }\r\n    };\r\n    Chunker.prototype._closeChunkIfOpen = function () {\r\n        if (this._chunkOpen) {\r\n            var chunkSize = this._buffer.position - (this._currentChunkStart + _CHUNK_HEADER_SIZE);\r\n            this._buffer.putUInt16(this._currentChunkStart, chunkSize);\r\n            this._chunkOpen = false;\r\n        }\r\n    };\r\n    return Chunker;\r\n}(base_buf_1.default));\r\nexports.Chunker = Chunker;\r\n/**\r\n * Combines chunks until a complete message is gathered up, and then forwards that\r\n * message to an 'onmessage' listener.\r\n * @access private\r\n */\r\nvar Dechunker = /** @class */ (function () {\r\n    function Dechunker() {\r\n        this._currentMessage = [];\r\n        this._partialChunkHeader = 0;\r\n        this._state = this.AWAITING_CHUNK;\r\n    }\r\n    Dechunker.prototype.AWAITING_CHUNK = function (buf) {\r\n        if (buf.remaining() >= 2) {\r\n            // Whole header available, read that\r\n            return this._onHeader(buf.readUInt16());\r\n        }\r\n        else {\r\n            // Only one byte available, read that and wait for the second byte\r\n            this._partialChunkHeader = buf.readUInt8() << 8;\r\n            return this.IN_HEADER;\r\n        }\r\n    };\r\n    Dechunker.prototype.IN_HEADER = function (buf) {\r\n        // First header byte read, now we read the next one\r\n        return this._onHeader((this._partialChunkHeader | buf.readUInt8()) & 0xffff);\r\n    };\r\n    Dechunker.prototype.IN_CHUNK = function (buf) {\r\n        if (this._chunkSize <= buf.remaining()) {\r\n            // Current packet is larger than current chunk, or same size:\r\n            this._currentMessage.push(buf.readSlice(this._chunkSize));\r\n            return this.AWAITING_CHUNK;\r\n        }\r\n        else {\r\n            // Current packet is smaller than the chunk we're reading, split the current chunk itself up\r\n            this._chunkSize -= buf.remaining();\r\n            this._currentMessage.push(buf.readSlice(buf.remaining()));\r\n            return this.IN_CHUNK;\r\n        }\r\n    };\r\n    Dechunker.prototype.CLOSED = function (buf) {\r\n        // no-op\r\n    };\r\n    /** Called when a complete chunk header has been received */\r\n    Dechunker.prototype._onHeader = function (header) {\r\n        if (header === 0) {\r\n            // Message boundary\r\n            var message = void 0;\r\n            switch (this._currentMessage.length) {\r\n                case 0:\r\n                    // Keep alive chunk, sent by server to keep network alive.\r\n                    return this.AWAITING_CHUNK;\r\n                case 1:\r\n                    // All data in one chunk, this signals the end of that chunk.\r\n                    message = this._currentMessage[0];\r\n                    break;\r\n                default:\r\n                    // A large chunk of data received, this signals that the last chunk has been received.\r\n                    message = new combined_buf_1.default(this._currentMessage);\r\n                    break;\r\n            }\r\n            this._currentMessage = [];\r\n            this.onmessage(message);\r\n            return this.AWAITING_CHUNK;\r\n        }\r\n        else {\r\n            this._chunkSize = header;\r\n            return this.IN_CHUNK;\r\n        }\r\n    };\r\n    Dechunker.prototype.write = function (buf) {\r\n        while (buf.hasRemaining()) {\r\n            this._state = this._state(buf);\r\n        }\r\n    };\r\n    return Dechunker;\r\n}());\r\nexports.Dechunker = Dechunker;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\r\nvar ALLOWED_VALUES_ENCRYPTED = [\r\n    null,\r\n    undefined,\r\n    true,\r\n    false,\r\n    ENCRYPTION_ON,\r\n    ENCRYPTION_OFF\r\n];\r\nvar ALLOWED_VALUES_TRUST = [\r\n    null,\r\n    undefined,\r\n    'TRUST_ALL_CERTIFICATES',\r\n    'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES',\r\n    'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'\r\n];\r\nvar ChannelConfig = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {ServerAddress} address the address for the channel to connect to.\r\n     * @param {Object} driverConfig the driver config provided by the user when driver is created.\r\n     * @param {string} connectionErrorCode the default error code to use on connection errors.\r\n     * @param {object} clientCertificate the client certificate\r\n     */\r\n    function ChannelConfig(address, driverConfig, connectionErrorCode, clientCertificate) {\r\n        this.address = address;\r\n        this.encrypted = extractEncrypted(driverConfig);\r\n        this.trust = extractTrust(driverConfig);\r\n        this.trustedCertificates = extractTrustedCertificates(driverConfig);\r\n        this.knownHostsPath = extractKnownHostsPath(driverConfig);\r\n        this.connectionErrorCode = connectionErrorCode || SERVICE_UNAVAILABLE;\r\n        this.connectionTimeout = driverConfig.connectionTimeout;\r\n        this.clientCertificate = clientCertificate;\r\n    }\r\n    return ChannelConfig;\r\n}());\r\nexports.default = ChannelConfig;\r\nfunction extractEncrypted(driverConfig) {\r\n    var value = driverConfig.encrypted;\r\n    if (ALLOWED_VALUES_ENCRYPTED.indexOf(value) === -1) {\r\n        throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the encrypted setting \".concat(value, \". Expected one of \").concat(ALLOWED_VALUES_ENCRYPTED));\r\n    }\r\n    return value;\r\n}\r\nfunction extractTrust(driverConfig) {\r\n    var value = driverConfig.trust;\r\n    if (ALLOWED_VALUES_TRUST.indexOf(value) === -1) {\r\n        throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the trust setting \".concat(value, \". Expected one of \").concat(ALLOWED_VALUES_TRUST));\r\n    }\r\n    return value;\r\n}\r\nfunction extractTrustedCertificates(driverConfig) {\r\n    return driverConfig.trustedCertificates || [];\r\n}\r\nfunction extractKnownHostsPath(driverConfig) {\r\n    return driverConfig.knownHosts || null;\r\n}\r\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\n/* eslint-disable node/no-deprecated-api */\r\nvar buffer = require('buffer')\r\nvar Buffer = buffer.Buffer\r\n\r\n// alternative to using Object.keys for old browsers\r\nfunction copyProps (src, dst) {\r\n  for (var key in src) {\r\n    dst[key] = src[key]\r\n  }\r\n}\r\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\r\n  module.exports = buffer\r\n} else {\r\n  // Copy properties from require('buffer')\r\n  copyProps(buffer, exports)\r\n  exports.Buffer = SafeBuffer\r\n}\r\n\r\nfunction SafeBuffer (arg, encodingOrOffset, length) {\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.prototype = Object.create(Buffer.prototype)\r\n\r\n// Copy static methods from Buffer\r\ncopyProps(Buffer, SafeBuffer)\r\n\r\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\r\n  if (typeof arg === 'number') {\r\n    throw new TypeError('Argument must not be a number')\r\n  }\r\n  return Buffer(arg, encodingOrOffset, length)\r\n}\r\n\r\nSafeBuffer.alloc = function (size, fill, encoding) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  var buf = Buffer(size)\r\n  if (fill !== undefined) {\r\n    if (typeof encoding === 'string') {\r\n      buf.fill(fill, encoding)\r\n    } else {\r\n      buf.fill(fill)\r\n    }\r\n  } else {\r\n    buf.fill(0)\r\n  }\r\n  return buf\r\n}\r\n\r\nSafeBuffer.allocUnsafe = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return Buffer(size)\r\n}\r\n\r\nSafeBuffer.allocUnsafeSlow = function (size) {\r\n  if (typeof size !== 'number') {\r\n    throw new TypeError('Argument must be a number')\r\n  }\r\n  return buffer.SlowBuffer(size)\r\n}\r\n", "// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n'use strict';\r\n\r\n/*<replacement>*/\r\n\r\nvar Buffer = require('safe-buffer').Buffer;\r\n/*</replacement>*/\r\n\r\nvar isEncoding = Buffer.isEncoding || function (encoding) {\r\n  encoding = '' + encoding;\r\n  switch (encoding && encoding.toLowerCase()) {\r\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nfunction _normalizeEncoding(enc) {\r\n  if (!enc) return 'utf8';\r\n  var retried;\r\n  while (true) {\r\n    switch (enc) {\r\n      case 'utf8':\r\n      case 'utf-8':\r\n        return 'utf8';\r\n      case 'ucs2':\r\n      case 'ucs-2':\r\n      case 'utf16le':\r\n      case 'utf-16le':\r\n        return 'utf16le';\r\n      case 'latin1':\r\n      case 'binary':\r\n        return 'latin1';\r\n      case 'base64':\r\n      case 'ascii':\r\n      case 'hex':\r\n        return enc;\r\n      default:\r\n        if (retried) return; // undefined\r\n        enc = ('' + enc).toLowerCase();\r\n        retried = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\r\n// modules monkey-patch it to support additional encodings\r\nfunction normalizeEncoding(enc) {\r\n  var nenc = _normalizeEncoding(enc);\r\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\r\n  return nenc || enc;\r\n}\r\n\r\n// StringDecoder provides an interface for efficiently splitting a series of\r\n// buffers into a series of JS strings without breaking apart multi-byte\r\n// characters.\r\nexports.StringDecoder = StringDecoder;\r\nfunction StringDecoder(encoding) {\r\n  this.encoding = normalizeEncoding(encoding);\r\n  var nb;\r\n  switch (this.encoding) {\r\n    case 'utf16le':\r\n      this.text = utf16Text;\r\n      this.end = utf16End;\r\n      nb = 4;\r\n      break;\r\n    case 'utf8':\r\n      this.fillLast = utf8FillLast;\r\n      nb = 4;\r\n      break;\r\n    case 'base64':\r\n      this.text = base64Text;\r\n      this.end = base64End;\r\n      nb = 3;\r\n      break;\r\n    default:\r\n      this.write = simpleWrite;\r\n      this.end = simpleEnd;\r\n      return;\r\n  }\r\n  this.lastNeed = 0;\r\n  this.lastTotal = 0;\r\n  this.lastChar = Buffer.allocUnsafe(nb);\r\n}\r\n\r\nStringDecoder.prototype.write = function (buf) {\r\n  if (buf.length === 0) return '';\r\n  var r;\r\n  var i;\r\n  if (this.lastNeed) {\r\n    r = this.fillLast(buf);\r\n    if (r === undefined) return '';\r\n    i = this.lastNeed;\r\n    this.lastNeed = 0;\r\n  } else {\r\n    i = 0;\r\n  }\r\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\r\n  return r || '';\r\n};\r\n\r\nStringDecoder.prototype.end = utf8End;\r\n\r\n// Returns only complete characters in a Buffer\r\nStringDecoder.prototype.text = utf8Text;\r\n\r\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\r\nStringDecoder.prototype.fillLast = function (buf) {\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n};\r\n\r\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\r\n// continuation byte. If an invalid byte is detected, -2 is returned.\r\nfunction utf8CheckByte(byte) {\r\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\r\n  return byte >> 6 === 0x02 ? -1 : -2;\r\n}\r\n\r\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\r\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\r\n// needed to complete the UTF-8 character (if applicable) are returned.\r\nfunction utf8CheckIncomplete(self, buf, i) {\r\n  var j = buf.length - 1;\r\n  if (j < i) return 0;\r\n  var nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 1;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) self.lastNeed = nb - 2;\r\n    return nb;\r\n  }\r\n  if (--j < i || nb === -2) return 0;\r\n  nb = utf8CheckByte(buf[j]);\r\n  if (nb >= 0) {\r\n    if (nb > 0) {\r\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\r\n    }\r\n    return nb;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\r\n// needed or are available. If we see a non-continuation byte where we expect\r\n// one, we \"replace\" the validated continuation bytes we've seen so far with\r\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\r\n// behavior. The continuation byte check is included three times in the case\r\n// where all of the continuation bytes for a character exist in the same buffer.\r\n// It is also done this way as a slight performance increase instead of using a\r\n// loop.\r\nfunction utf8CheckExtraBytes(self, buf, p) {\r\n  if ((buf[0] & 0xC0) !== 0x80) {\r\n    self.lastNeed = 0;\r\n    return '\\ufffd';\r\n  }\r\n  if (self.lastNeed > 1 && buf.length > 1) {\r\n    if ((buf[1] & 0xC0) !== 0x80) {\r\n      self.lastNeed = 1;\r\n      return '\\ufffd';\r\n    }\r\n    if (self.lastNeed > 2 && buf.length > 2) {\r\n      if ((buf[2] & 0xC0) !== 0x80) {\r\n        self.lastNeed = 2;\r\n        return '\\ufffd';\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\r\nfunction utf8FillLast(buf) {\r\n  var p = this.lastTotal - this.lastNeed;\r\n  var r = utf8CheckExtraBytes(this, buf, p);\r\n  if (r !== undefined) return r;\r\n  if (this.lastNeed <= buf.length) {\r\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\r\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\r\n  }\r\n  buf.copy(this.lastChar, p, 0, buf.length);\r\n  this.lastNeed -= buf.length;\r\n}\r\n\r\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\r\n// partial character, the character's bytes are buffered until the required\r\n// number of bytes are available.\r\nfunction utf8Text(buf, i) {\r\n  var total = utf8CheckIncomplete(this, buf, i);\r\n  if (!this.lastNeed) return buf.toString('utf8', i);\r\n  this.lastTotal = total;\r\n  var end = buf.length - (total - this.lastNeed);\r\n  buf.copy(this.lastChar, 0, end);\r\n  return buf.toString('utf8', i, end);\r\n}\r\n\r\n// For UTF-8, a replacement character is added when ending on a partial\r\n// character.\r\nfunction utf8End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + '\\ufffd';\r\n  return r;\r\n}\r\n\r\n// UTF-16LE typically needs two bytes per character, but even if we have an even\r\n// number of bytes available, we need to check if we end on a leading/high\r\n// surrogate. In that case, we need to wait for the next two bytes in order to\r\n// decode the last character properly.\r\nfunction utf16Text(buf, i) {\r\n  if ((buf.length - i) % 2 === 0) {\r\n    var r = buf.toString('utf16le', i);\r\n    if (r) {\r\n      var c = r.charCodeAt(r.length - 1);\r\n      if (c >= 0xD800 && c <= 0xDBFF) {\r\n        this.lastNeed = 2;\r\n        this.lastTotal = 4;\r\n        this.lastChar[0] = buf[buf.length - 2];\r\n        this.lastChar[1] = buf[buf.length - 1];\r\n        return r.slice(0, -1);\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n  this.lastNeed = 1;\r\n  this.lastTotal = 2;\r\n  this.lastChar[0] = buf[buf.length - 1];\r\n  return buf.toString('utf16le', i, buf.length - 1);\r\n}\r\n\r\n// For UTF-16LE we do not explicitly append special replacement characters if we\r\n// end on a partial character, we simply let v8 handle that.\r\nfunction utf16End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) {\r\n    var end = this.lastTotal - this.lastNeed;\r\n    return r + this.lastChar.toString('utf16le', 0, end);\r\n  }\r\n  return r;\r\n}\r\n\r\nfunction base64Text(buf, i) {\r\n  var n = (buf.length - i) % 3;\r\n  if (n === 0) return buf.toString('base64', i);\r\n  this.lastNeed = 3 - n;\r\n  this.lastTotal = 3;\r\n  if (n === 1) {\r\n    this.lastChar[0] = buf[buf.length - 1];\r\n  } else {\r\n    this.lastChar[0] = buf[buf.length - 2];\r\n    this.lastChar[1] = buf[buf.length - 1];\r\n  }\r\n  return buf.toString('base64', i, buf.length - n);\r\n}\r\n\r\nfunction base64End(buf) {\r\n  var r = buf && buf.length ? this.write(buf) : '';\r\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\r\n  return r;\r\n}\r\n\r\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\r\nfunction simpleWrite(buf) {\r\n  return buf.toString(this.encoding);\r\n}\r\n\r\nfunction simpleEnd(buf) {\r\n  return buf && buf.length ? this.write(buf) : '';\r\n}", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar channel_buf_1 = __importDefault(require(\"./channel-buf\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar buffer_1 = __importDefault(require(\"buffer\"));\r\nvar string_decoder_1 = require(\"string_decoder\");\r\nvar decoder = new string_decoder_1.StringDecoder('utf8');\r\nfunction encode(str) {\r\n    return new channel_buf_1.default(newBuffer(str));\r\n}\r\nfunction decode(buffer, length) {\r\n    if (Object.prototype.hasOwnProperty.call(buffer, '_buffer')) {\r\n        return decodeChannelBuffer(buffer, length);\r\n    }\r\n    else if (Object.prototype.hasOwnProperty.call(buffer, '_buffers')) {\r\n        return decodeCombinedBuffer(buffer, length);\r\n    }\r\n    else {\r\n        throw (0, neo4j_driver_core_1.newError)(\"Don't know how to decode strings from '\".concat(buffer, \"'\"));\r\n    }\r\n}\r\nfunction decodeChannelBuffer(buffer, length) {\r\n    var start = buffer.position;\r\n    var end = start + length;\r\n    buffer.position = Math.min(end, buffer.length);\r\n    return buffer._buffer.toString('utf8', start, end);\r\n}\r\nfunction decodeCombinedBuffer(buffer, length) {\r\n    return streamDecodeCombinedBuffer(buffer, length, function (partBuffer) { return decoder.write(partBuffer._buffer); }, function () { return decoder.end(); });\r\n}\r\nfunction streamDecodeCombinedBuffer(combinedBuffers, length, decodeFn, endFn) {\r\n    var remainingBytesToRead = length;\r\n    var position = combinedBuffers.position;\r\n    combinedBuffers._updatePos(Math.min(length, combinedBuffers.length - position));\r\n    // Reduce CombinedBuffers to a decoded string\r\n    var out = combinedBuffers._buffers.reduce(function (last, partBuffer) {\r\n        if (remainingBytesToRead <= 0) {\r\n            return last;\r\n        }\r\n        else if (position >= partBuffer.length) {\r\n            position -= partBuffer.length;\r\n            return '';\r\n        }\r\n        else {\r\n            partBuffer._updatePos(position - partBuffer.position);\r\n            var bytesToRead = Math.min(partBuffer.length - position, remainingBytesToRead);\r\n            var lastSlice = partBuffer.readSlice(bytesToRead);\r\n            partBuffer._updatePos(bytesToRead);\r\n            remainingBytesToRead = Math.max(remainingBytesToRead - lastSlice.length, 0);\r\n            position = 0;\r\n            return last + decodeFn(lastSlice);\r\n        }\r\n    }, '');\r\n    return out + endFn();\r\n}\r\nfunction newBuffer(str) {\r\n    // use static factory function present in newer NodeJS versions to create a buffer containing the given string\r\n    // or fallback to the old, potentially deprecated constructor\r\n    if (typeof buffer_1.default.Buffer.from === 'function') {\r\n        return buffer_1.default.Buffer.from(str, 'utf8');\r\n    }\r\n    else {\r\n        // eslint-disable-next-line n/no-deprecated-api\r\n        return new buffer_1.default.Buffer(str, 'utf8');\r\n    }\r\n}\r\nexports.default = {\r\n    encode: encode,\r\n    decode: decode\r\n};\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.utf8 = exports.alloc = exports.ChannelConfig = void 0;\r\n__exportStar(require(\"./node\"), exports);\r\n__exportStar(require(\"./chunking\"), exports);\r\nvar channel_config_1 = require(\"./channel-config\");\r\nObject.defineProperty(exports, \"ChannelConfig\", { enumerable: true, get: function () { return __importDefault(channel_config_1).default; } });\r\nvar channel_buf_1 = require(\"./channel-buf\");\r\nObject.defineProperty(exports, \"alloc\", { enumerable: true, get: function () { return channel_buf_1.alloc; } });\r\nvar utf8_1 = require(\"./utf8\");\r\nObject.defineProperty(exports, \"utf8\", { enumerable: true, get: function () { return __importDefault(utf8_1).default; } });\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar channel_1 = require(\"../channel\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_MAGIC_PREAMBLE = 0x6060b017;\r\nfunction version(major, minor) {\r\n    return {\r\n        major: major,\r\n        minor: minor\r\n    };\r\n}\r\nfunction createHandshakeMessage(versions) {\r\n    if (versions.length > 4) {\r\n        throw (0, neo4j_driver_core_1.newError)('It should not have more than 4 versions of the protocol');\r\n    }\r\n    var handshakeBuffer = (0, channel_1.alloc)(5 * 4);\r\n    handshakeBuffer.writeInt32(BOLT_MAGIC_PREAMBLE);\r\n    versions.forEach(function (version) {\r\n        if (version instanceof Array) {\r\n            var _a = version[0], major = _a.major, minor = _a.minor;\r\n            var minMinor = version[1].minor;\r\n            var range = minor - minMinor;\r\n            handshakeBuffer.writeInt32((range << 16) | (minor << 8) | major);\r\n        }\r\n        else {\r\n            var major = version.major, minor = version.minor;\r\n            handshakeBuffer.writeInt32((minor << 8) | major);\r\n        }\r\n    });\r\n    handshakeBuffer.reset();\r\n    return handshakeBuffer;\r\n}\r\nfunction parseNegotiatedResponse(buffer, log) {\r\n    var h = [\r\n        buffer.readUInt8(),\r\n        buffer.readUInt8(),\r\n        buffer.readUInt8(),\r\n        buffer.readUInt8()\r\n    ];\r\n    if (h[0] === 0x48 && h[1] === 0x54 && h[2] === 0x54 && h[3] === 0x50) {\r\n        log.error('Handshake failed since server responded with HTTP.');\r\n        throw (0, neo4j_driver_core_1.newError)('Server responded HTTP. Make sure you are not trying to connect to the http endpoint ' +\r\n            '(HTTP defaults to port 7474 whereas BOLT defaults to port 7687)');\r\n    }\r\n    return Number(h[3] + '.' + h[2]);\r\n}\r\n/**\r\n * @return {BaseBuffer}\r\n * @private\r\n */\r\nfunction newHandshakeBuffer() {\r\n    return createHandshakeMessage([\r\n        [version(5, 7), version(5, 0)],\r\n        [version(4, 4), version(4, 2)],\r\n        version(4, 1),\r\n        version(3, 0)\r\n    ]);\r\n}\r\n/**\r\n * This callback is displayed as a global member.\r\n * @callback BufferConsumerCallback\r\n * @param {buffer} buffer the remaining buffer\r\n */\r\n/**\r\n * @typedef HandshakeResult\r\n * @property {number} protocolVersion The protocol version negotiated in the handshake\r\n * @property {function(BufferConsumerCallback)} consumeRemainingBuffer A function to consume the remaining buffer if it exists\r\n */\r\n/**\r\n * Shake hands using the channel and return the protocol version\r\n *\r\n * @param {Channel} channel the channel use to shake hands\r\n * @param {Logger} log the log object\r\n * @returns {Promise<HandshakeResult>} Promise of protocol version and consumeRemainingBuffer\r\n */\r\nfunction handshake(channel, log) {\r\n    var _this = this;\r\n    return new Promise(function (resolve, reject) {\r\n        var handshakeErrorHandler = function (error) {\r\n            reject(error);\r\n        };\r\n        channel.onerror = handshakeErrorHandler.bind(_this);\r\n        if (channel._error) {\r\n            handshakeErrorHandler(channel._error);\r\n        }\r\n        channel.onmessage = function (buffer) {\r\n            try {\r\n                // read the response buffer and initialize the protocol\r\n                var protocolVersion = parseNegotiatedResponse(buffer, log);\r\n                resolve({\r\n                    protocolVersion: protocolVersion,\r\n                    consumeRemainingBuffer: function (consumer) {\r\n                        if (buffer.hasRemaining()) {\r\n                            consumer(buffer.readSlice(buffer.remaining()));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        };\r\n        channel.write(newHandshakeBuffer());\r\n    });\r\n}\r\nexports.default = handshake;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nvar neo4j_driver_core_1 = __importDefault(require(\"neo4j-driver-core\"));\r\n/**\r\n * Represente the raw version of the routing table\r\n */\r\nvar RawRoutingTable = /** @class */ (function () {\r\n    function RawRoutingTable() {\r\n    }\r\n    /**\r\n     * Constructs the raw routing table for Record based result\r\n     * @param {Record} record The record which will be used get the raw routing table\r\n     * @returns {RawRoutingTable} The raw routing table\r\n     */\r\n    RawRoutingTable.ofRecord = function (record) {\r\n        if (record === null) {\r\n            return RawRoutingTable.ofNull();\r\n        }\r\n        return new RecordRawRoutingTable(record);\r\n    };\r\n    /**\r\n     * Constructs the raw routing table for Success result for a Routing Message\r\n     * @param {object} response The result\r\n     * @returns {RawRoutingTable} The raw routing table\r\n     */\r\n    RawRoutingTable.ofMessageResponse = function (response) {\r\n        if (response === null) {\r\n            return RawRoutingTable.ofNull();\r\n        }\r\n        return new ResponseRawRoutingTable(response);\r\n    };\r\n    /**\r\n     * Construct the raw routing table of a null response\r\n     *\r\n     * @returns {RawRoutingTable} the raw routing table\r\n     */\r\n    RawRoutingTable.ofNull = function () {\r\n        return new NullRawRoutingTable();\r\n    };\r\n    Object.defineProperty(RawRoutingTable.prototype, \"ttl\", {\r\n        /**\r\n         * Get raw ttl\r\n         *\r\n         * @returns {number|string} ttl Time to live\r\n         */\r\n        get: function () {\r\n            throw new Error('Not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RawRoutingTable.prototype, \"db\", {\r\n        /**\r\n         * Get raw db\r\n         *\r\n         * @returns {string?} The database name\r\n         */\r\n        get: function () {\r\n            throw new Error('Not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RawRoutingTable.prototype, \"servers\", {\r\n        /**\r\n         *\r\n         * @typedef {Object} ServerRole\r\n         * @property {string} role the role of the address on the cluster\r\n         * @property {string[]} addresses the address within the role\r\n         *\r\n         * @return {ServerRole[]} list of servers addresses\r\n         */\r\n        get: function () {\r\n            throw new Error('Not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RawRoutingTable.prototype, \"isNull\", {\r\n        /**\r\n         * Indicates the result is null\r\n         *\r\n         * @returns {boolean} Is null\r\n         */\r\n        get: function () {\r\n            throw new Error('Not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return RawRoutingTable;\r\n}());\r\nexports.default = RawRoutingTable;\r\n/**\r\n * Get the raw routing table information from route message response\r\n */\r\nvar ResponseRawRoutingTable = /** @class */ (function (_super) {\r\n    __extends(ResponseRawRoutingTable, _super);\r\n    function ResponseRawRoutingTable(response) {\r\n        var _this = _super.call(this) || this;\r\n        _this._response = response;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"ttl\", {\r\n        get: function () {\r\n            return this._response.rt.ttl;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"servers\", {\r\n        get: function () {\r\n            return this._response.rt.servers;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"db\", {\r\n        get: function () {\r\n            return this._response.rt.db;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"isNull\", {\r\n        get: function () {\r\n            return this._response === null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ResponseRawRoutingTable;\r\n}(RawRoutingTable));\r\n/**\r\n * Null routing table\r\n */\r\nvar NullRawRoutingTable = /** @class */ (function (_super) {\r\n    __extends(NullRawRoutingTable, _super);\r\n    function NullRawRoutingTable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NullRawRoutingTable.prototype, \"isNull\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return NullRawRoutingTable;\r\n}(RawRoutingTable));\r\n/**\r\n * Get the raw routing table information from the record\r\n */\r\nvar RecordRawRoutingTable = /** @class */ (function (_super) {\r\n    __extends(RecordRawRoutingTable, _super);\r\n    function RecordRawRoutingTable(record) {\r\n        var _this = _super.call(this) || this;\r\n        _this._record = record;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"ttl\", {\r\n        get: function () {\r\n            return this._record.get('ttl');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"servers\", {\r\n        get: function () {\r\n            return this._record.get('servers');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"db\", {\r\n        get: function () {\r\n            return this._record.has('db') ? this._record.get('db') : null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"isNull\", {\r\n        get: function () {\r\n            return this._record === null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return RecordRawRoutingTable;\r\n}(RawRoutingTable));\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.reuseOngoingRequest = exports.identity = void 0;\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\n/**\r\n * Identity function.\r\n *\r\n * Identity functions are function which returns the input as output.\r\n *\r\n * @param {any} x\r\n * @returns {any} the x\r\n */\r\nfunction identity(x) {\r\n    return x;\r\n}\r\nexports.identity = identity;\r\n/**\r\n * Makes the function able to share ongoing requests\r\n *\r\n * @param {function(...args): Promise} func The function to be decorated\r\n * @param {any} thisArg The `this` which should be used in the function call\r\n * @return {function(...args): Promise} The decorated function\r\n */\r\nfunction reuseOngoingRequest(func, thisArg) {\r\n    if (thisArg === void 0) { thisArg = null; }\r\n    var ongoingRequests = new Map();\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var key = neo4j_driver_core_1.json.stringify(args);\r\n        if (ongoingRequests.has(key)) {\r\n            return ongoingRequests.get(key);\r\n        }\r\n        var promise = func.apply(thisArg, args);\r\n        ongoingRequests.set(key, promise);\r\n        return promise.finally(function () {\r\n            ongoingRequests.delete(key);\r\n        });\r\n    };\r\n}\r\nexports.reuseOngoingRequest = reuseOngoingRequest;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.equals = void 0;\r\nfunction equals(a, b) {\r\n    var e_1, _a;\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a === null || b === null) {\r\n        return false;\r\n    }\r\n    if (typeof a === 'object' && typeof b === 'object') {\r\n        var keysA = Object.keys(a);\r\n        var keysB = Object.keys(b);\r\n        if (keysA.length !== keysB.length) {\r\n            return false;\r\n        }\r\n        try {\r\n            for (var keysA_1 = __values(keysA), keysA_1_1 = keysA_1.next(); !keysA_1_1.done; keysA_1_1 = keysA_1.next()) {\r\n                var key = keysA_1_1.value;\r\n                if (a[key] !== b[key]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (keysA_1_1 && !keysA_1_1.done && (_a = keysA_1.return)) _a.call(keysA_1);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.equals = equals;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.object = exports.functional = void 0;\r\nexports.functional = __importStar(require(\"./functional\"));\r\nexports.object = __importStar(require(\"./object\"));\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TelemetryObserver = exports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LogoffObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\r\nvar lang_1 = require(\"../lang\");\r\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\r\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\r\nvar StreamObserver = /** @class */ (function () {\r\n    function StreamObserver() {\r\n    }\r\n    StreamObserver.prototype.onNext = function (rawRecord) { };\r\n    StreamObserver.prototype.onError = function (_error) { };\r\n    StreamObserver.prototype.onCompleted = function (meta) { };\r\n    return StreamObserver;\r\n}());\r\nexports.StreamObserver = StreamObserver;\r\n/**\r\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\r\n * in a way that a user-provided observer can see these as a clean Stream\r\n * of records.\r\n * This class will queue up incoming messages until a user-provided observer\r\n * for the incoming stream is registered. Thus, we keep fields around\r\n * for tracking head/records/tail. These are only used if there is no\r\n * observer registered.\r\n * @access private\r\n */\r\nvar ResultStreamObserver = /** @class */ (function (_super) {\r\n    __extends(ResultStreamObserver, _super);\r\n    /**\r\n     *\r\n     * @param {Object} param\r\n     * @param {Object} param.server\r\n     * @param {boolean} param.reactive\r\n     * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\r\n     * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\r\n     * @param {number|Integer} param.fetchSize -\r\n     * @param {function(err: Error): Promise|void} param.beforeError -\r\n     * @param {function(err: Error): Promise|void} param.afterError -\r\n     * @param {function(keys: string[]): Promise|void} param.beforeKeys -\r\n     * @param {function(keys: string[]): Promise|void} param.afterKeys -\r\n     * @param {function(metadata: Object): Promise|void} param.beforeComplete -\r\n     * @param {function(metadata: Object): Promise|void} param.afterComplete -\r\n     * @param {function(metadata: Object): Promise|void} param.enrichMetadata -\r\n     */\r\n    function ResultStreamObserver(_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.reactive, reactive = _c === void 0 ? false : _c, moreFunction = _b.moreFunction, discardFunction = _b.discardFunction, _d = _b.fetchSize, fetchSize = _d === void 0 ? FETCH_ALL : _d, beforeError = _b.beforeError, afterError = _b.afterError, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, server = _b.server, _e = _b.highRecordWatermark, highRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e, _f = _b.lowRecordWatermark, lowRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, enrichMetadata = _b.enrichMetadata;\r\n        var _this = _super.call(this) || this;\r\n        _this._fieldKeys = null;\r\n        _this._fieldLookup = null;\r\n        _this._head = null;\r\n        _this._queuedRecords = [];\r\n        _this._tail = null;\r\n        _this._error = null;\r\n        _this._observers = [];\r\n        _this._meta = {};\r\n        _this._server = server;\r\n        _this._beforeError = beforeError;\r\n        _this._afterError = afterError;\r\n        _this._beforeKeys = beforeKeys;\r\n        _this._afterKeys = afterKeys;\r\n        _this._beforeComplete = beforeComplete;\r\n        _this._afterComplete = afterComplete;\r\n        _this._enrichMetadata = enrichMetadata || lang_1.functional.identity;\r\n        _this._queryId = null;\r\n        _this._moreFunction = moreFunction;\r\n        _this._discardFunction = discardFunction;\r\n        _this._discard = false;\r\n        _this._fetchSize = fetchSize;\r\n        _this._lowRecordWatermark = lowRecordWatermark;\r\n        _this._highRecordWatermark = highRecordWatermark;\r\n        _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\r\n        _this._setupAutoPull();\r\n        _this._paused = false;\r\n        _this._pulled = !reactive;\r\n        _this._haveRecordStreamed = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Pause the record consuming\r\n     *\r\n     * This function will supend the record consuming. It will not cancel the stream and the already\r\n     * requested records will be sent to the subscriber.\r\n     */\r\n    ResultStreamObserver.prototype.pause = function () {\r\n        this._paused = true;\r\n    };\r\n    /**\r\n     * Resume the record consuming\r\n     *\r\n     * This function will resume the record consuming fetching more records from the server.\r\n     */\r\n    ResultStreamObserver.prototype.resume = function () {\r\n        this._paused = false;\r\n        this._setupAutoPull(true);\r\n        this._state.pull(this);\r\n    };\r\n    /**\r\n     * Will be called on every record that comes in and transform a raw record\r\n     * to a Object. If user-provided observer is present, pass transformed record\r\n     * to it's onNext method, otherwise, push to record que.\r\n     * @param {Array} rawRecord - An array with the raw record\r\n     */\r\n    ResultStreamObserver.prototype.onNext = function (rawRecord) {\r\n        this._haveRecordStreamed = true;\r\n        var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\r\n        if (this._observers.some(function (o) { return o.onNext; })) {\r\n            this._observers.forEach(function (o) {\r\n                if (o.onNext) {\r\n                    o.onNext(record);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this._queuedRecords.push(record);\r\n            if (this._queuedRecords.length > this._highRecordWatermark) {\r\n                this._autoPull = false;\r\n            }\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype.onCompleted = function (meta) {\r\n        this._state.onSuccess(this, meta);\r\n    };\r\n    /**\r\n     * Will be called on errors.\r\n     * If user-provided observer is present, pass the error\r\n     * to it's onError method, otherwise set instance variable _error.\r\n     * @param {Object} error - An error object\r\n     */\r\n    ResultStreamObserver.prototype.onError = function (error) {\r\n        this._state.onError(this, error);\r\n    };\r\n    /**\r\n     * Cancel pending record stream\r\n     */\r\n    ResultStreamObserver.prototype.cancel = function () {\r\n        this._discard = true;\r\n    };\r\n    /**\r\n     * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\r\n     * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\r\n     *\r\n     * However, some operations can be represented as a single message which receives full metadata in a single response.\r\n     * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\r\n     * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\r\n     *\r\n     * This function prepares the observer to only handle a single response message.\r\n     */\r\n    ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\r\n        this._head = [];\r\n        this._fieldKeys = [];\r\n        this._setState(_states.STREAMING);\r\n    };\r\n    /**\r\n     * Mark this observer as if it has completed with no metadata.\r\n     */\r\n    ResultStreamObserver.prototype.markCompleted = function () {\r\n        this._head = [];\r\n        this._fieldKeys = [];\r\n        this._tail = {};\r\n        this._setState(_states.SUCCEEDED);\r\n    };\r\n    /**\r\n     * Subscribe to events with provided observer.\r\n     * @param {Object} observer - Observer object\r\n     * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\r\n     * @param {function(record: Object)} observer.onNext - Handle records, one by one.\r\n     * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\r\n     * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\r\n     */\r\n    ResultStreamObserver.prototype.subscribe = function (observer) {\r\n        if (this._head && observer.onKeys) {\r\n            observer.onKeys(this._head);\r\n        }\r\n        if (this._queuedRecords.length > 0 && observer.onNext) {\r\n            for (var i = 0; i < this._queuedRecords.length; i++) {\r\n                observer.onNext(this._queuedRecords[i]);\r\n                if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\r\n                    this._autoPull = true;\r\n                    if (this._state === _states.READY) {\r\n                        this._handleStreaming();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._tail && observer.onCompleted) {\r\n            observer.onCompleted(this._tail);\r\n        }\r\n        if (this._error) {\r\n            observer.onError(this._error);\r\n        }\r\n        this._observers.push(observer);\r\n        if (this._state === _states.READY) {\r\n            this._handleStreaming();\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype._handleHasMore = function (meta) {\r\n        // We've consumed current batch and server notified us that there're more\r\n        // records to stream. Let's invoke more or discard function based on whether\r\n        // the user wants to discard streaming or not\r\n        this._setState(_states.READY); // we've done streaming\r\n        this._handleStreaming();\r\n        delete meta.has_more;\r\n    };\r\n    ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\r\n        var _this = this;\r\n        var completionMetadata = this._enrichMetadata(Object.assign(this._server ? { server: this._server } : {}, this._meta, {\r\n            stream_summary: {\r\n                have_records_streamed: this._haveRecordStreamed,\r\n                pulled: this._pulled,\r\n                has_keys: this._fieldKeys.length > 0\r\n            }\r\n        }, meta));\r\n        if (![undefined, null, 'r', 'w', 'rw', 's'].includes(completionMetadata.type)) {\r\n            this.onError((0, neo4j_driver_core_1.newError)(\"Server returned invalid query type. Expected one of [undefined, null, \\\"r\\\", \\\"w\\\", \\\"rw\\\", \\\"s\\\"] but got '\".concat(completionMetadata.type, \"'\"), PROTOCOL_ERROR));\r\n            return;\r\n        }\r\n        this._setState(_states.SUCCEEDED);\r\n        var beforeHandlerResult = null;\r\n        if (this._beforeComplete) {\r\n            beforeHandlerResult = this._beforeComplete(completionMetadata);\r\n        }\r\n        var continuation = function () {\r\n            // End of stream\r\n            _this._tail = completionMetadata;\r\n            if (_this._observers.some(function (o) { return o.onCompleted; })) {\r\n                _this._observers.forEach(function (o) {\r\n                    if (o.onCompleted) {\r\n                        o.onCompleted(completionMetadata);\r\n                    }\r\n                });\r\n            }\r\n            if (_this._afterComplete) {\r\n                _this._afterComplete(completionMetadata);\r\n            }\r\n        };\r\n        if (beforeHandlerResult) {\r\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\r\n        }\r\n        else {\r\n            continuation();\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\r\n        var _this = this;\r\n        if (this._fieldKeys === null) {\r\n            // Stream header, build a name->index field lookup table\r\n            // to be used by records. This is an optimization to make it\r\n            // faster to look up fields in a record by name, rather than by index.\r\n            // Since the records we get back via Bolt are just arrays of values.\r\n            this._fieldKeys = [];\r\n            this._fieldLookup = {};\r\n            if (meta.fields && meta.fields.length > 0) {\r\n                this._fieldKeys = meta.fields;\r\n                for (var i = 0; i < meta.fields.length; i++) {\r\n                    this._fieldLookup[meta.fields[i]] = i;\r\n                }\r\n            }\r\n            if (meta.fields != null) {\r\n                // remove fields key from metadata object\r\n                delete meta.fields;\r\n            }\r\n            // Extract server generated query id for use in requestMore and discard\r\n            // functions\r\n            if (meta.qid !== null && meta.qid !== undefined) {\r\n                this._queryId = meta.qid;\r\n                // remove qid from metadata object\r\n                delete meta.qid;\r\n            }\r\n            this._storeMetadataForCompletion(meta);\r\n            var beforeHandlerResult = null;\r\n            if (this._beforeKeys) {\r\n                beforeHandlerResult = this._beforeKeys(this._fieldKeys);\r\n            }\r\n            var continuation_1 = function () {\r\n                _this._head = _this._fieldKeys;\r\n                if (_this._observers.some(function (o) { return o.onKeys; })) {\r\n                    _this._observers.forEach(function (o) {\r\n                        if (o.onKeys) {\r\n                            o.onKeys(_this._fieldKeys);\r\n                        }\r\n                    });\r\n                }\r\n                if (_this._afterKeys) {\r\n                    _this._afterKeys(_this._fieldKeys);\r\n                }\r\n                afterSuccess();\r\n            };\r\n            if (beforeHandlerResult) {\r\n                Promise.resolve(beforeHandlerResult).then(function () { return continuation_1(); });\r\n            }\r\n            else {\r\n                continuation_1();\r\n            }\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype._handleError = function (error) {\r\n        var _this = this;\r\n        this._setState(_states.FAILED);\r\n        this._error = error;\r\n        var beforeHandlerResult = null;\r\n        if (this._beforeError) {\r\n            beforeHandlerResult = this._beforeError(error);\r\n        }\r\n        var continuation = function () {\r\n            if (_this._observers.some(function (o) { return o.onError; })) {\r\n                _this._observers.forEach(function (o) {\r\n                    if (o.onError) {\r\n                        o.onError(error);\r\n                    }\r\n                });\r\n            }\r\n            if (_this._afterError) {\r\n                _this._afterError(error);\r\n            }\r\n        };\r\n        if (beforeHandlerResult) {\r\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\r\n        }\r\n        else {\r\n            continuation();\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype._handleStreaming = function () {\r\n        if (this._head && this._observers.some(function (o) { return o.onNext || o.onCompleted; })) {\r\n            if (!this._paused && (this._discard || this._autoPull)) {\r\n                this._more();\r\n            }\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype._more = function () {\r\n        if (this._discard) {\r\n            this._discardFunction(this._queryId, this);\r\n        }\r\n        else {\r\n            this._pulled = true;\r\n            this._moreFunction(this._queryId, this._fetchSize, this);\r\n        }\r\n        this._setState(_states.STREAMING);\r\n    };\r\n    ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\r\n        var keys = Object.keys(meta);\r\n        var index = keys.length;\r\n        var key = '';\r\n        while (index--) {\r\n            key = keys[index];\r\n            this._meta[key] = meta[key];\r\n        }\r\n    };\r\n    ResultStreamObserver.prototype._setState = function (state) {\r\n        this._state = state;\r\n    };\r\n    ResultStreamObserver.prototype._setupAutoPull = function () {\r\n        this._autoPull = true;\r\n    };\r\n    return ResultStreamObserver;\r\n}(StreamObserver));\r\nexports.ResultStreamObserver = ResultStreamObserver;\r\nvar LoginObserver = /** @class */ (function (_super) {\r\n    __extends(LoginObserver, _super);\r\n    /**\r\n     *\r\n     * @param {Object} param -\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(metadata)} param.onCompleted\r\n     */\r\n    function LoginObserver(_a) {\r\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\r\n        var _this = _super.call(this) || this;\r\n        _this._onError = onError;\r\n        _this._onCompleted = onCompleted;\r\n        return _this;\r\n    }\r\n    LoginObserver.prototype.onNext = function (record) {\r\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\r\n    };\r\n    LoginObserver.prototype.onError = function (error) {\r\n        if (this._onError) {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    LoginObserver.prototype.onCompleted = function (metadata) {\r\n        if (this._onCompleted) {\r\n            this._onCompleted(metadata);\r\n        }\r\n    };\r\n    return LoginObserver;\r\n}(StreamObserver));\r\nexports.LoginObserver = LoginObserver;\r\nvar LogoffObserver = /** @class */ (function (_super) {\r\n    __extends(LogoffObserver, _super);\r\n    /**\r\n     *\r\n     * @param {Object} param -\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(metadata)} param.onCompleted\r\n     */\r\n    function LogoffObserver(_a) {\r\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\r\n        var _this = _super.call(this) || this;\r\n        _this._onError = onError;\r\n        _this._onCompleted = onCompleted;\r\n        return _this;\r\n    }\r\n    LogoffObserver.prototype.onNext = function (record) {\r\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when logging off ' + neo4j_driver_core_1.json.stringify(record)));\r\n    };\r\n    LogoffObserver.prototype.onError = function (error) {\r\n        if (this._onError) {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    LogoffObserver.prototype.onCompleted = function (metadata) {\r\n        if (this._onCompleted) {\r\n            this._onCompleted(metadata);\r\n        }\r\n    };\r\n    return LogoffObserver;\r\n}(StreamObserver));\r\nexports.LogoffObserver = LogoffObserver;\r\nvar ResetObserver = /** @class */ (function (_super) {\r\n    __extends(ResetObserver, _super);\r\n    /**\r\n     *\r\n     * @param {Object} param -\r\n     * @param {function(err: String)} param.onProtocolError\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(metadata)} param.onComplete\r\n     */\r\n    function ResetObserver(_a) {\r\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onComplete = _b.onComplete;\r\n        var _this = _super.call(this) || this;\r\n        _this._onProtocolError = onProtocolError;\r\n        _this._onError = onError;\r\n        _this._onComplete = onComplete;\r\n        return _this;\r\n    }\r\n    ResetObserver.prototype.onNext = function (record) {\r\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\r\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\r\n    };\r\n    ResetObserver.prototype.onError = function (error) {\r\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\r\n            this._onProtocolError(error.message);\r\n        }\r\n        if (this._onError) {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    ResetObserver.prototype.onCompleted = function (metadata) {\r\n        if (this._onComplete) {\r\n            this._onComplete(metadata);\r\n        }\r\n    };\r\n    return ResetObserver;\r\n}(StreamObserver));\r\nexports.ResetObserver = ResetObserver;\r\nvar TelemetryObserver = /** @class */ (function (_super) {\r\n    __extends(TelemetryObserver, _super);\r\n    /**\r\n     *\r\n     * @param {Object} param -\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(metadata)} param.onCompleted\r\n     */\r\n    function TelemetryObserver(_a) {\r\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\r\n        var _this = _super.call(this) || this;\r\n        _this._onError = onError;\r\n        _this._onCompleted = onCompleted;\r\n        return _this;\r\n    }\r\n    TelemetryObserver.prototype.onNext = function (record) {\r\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when sending telemetry ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\r\n    };\r\n    TelemetryObserver.prototype.onError = function (error) {\r\n        if (this._onError) {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    TelemetryObserver.prototype.onCompleted = function (metadata) {\r\n        if (this._onCompleted) {\r\n            this._onCompleted(metadata);\r\n        }\r\n    };\r\n    return TelemetryObserver;\r\n}(ResultStreamObserver));\r\nexports.TelemetryObserver = TelemetryObserver;\r\nvar FailedObserver = /** @class */ (function (_super) {\r\n    __extends(FailedObserver, _super);\r\n    function FailedObserver(_a) {\r\n        var error = _a.error, onError = _a.onError;\r\n        var _this = _super.call(this, { beforeError: onError }) || this;\r\n        _this.onError(error);\r\n        return _this;\r\n    }\r\n    return FailedObserver;\r\n}(ResultStreamObserver));\r\nexports.FailedObserver = FailedObserver;\r\nvar CompletedObserver = /** @class */ (function (_super) {\r\n    __extends(CompletedObserver, _super);\r\n    function CompletedObserver() {\r\n        var _this = _super.call(this) || this;\r\n        _super.prototype.markCompleted.call(_this);\r\n        return _this;\r\n    }\r\n    return CompletedObserver;\r\n}(ResultStreamObserver));\r\nexports.CompletedObserver = CompletedObserver;\r\nvar ProcedureRouteObserver = /** @class */ (function (_super) {\r\n    __extends(ProcedureRouteObserver, _super);\r\n    function ProcedureRouteObserver(_a) {\r\n        var resultObserver = _a.resultObserver, onProtocolError = _a.onProtocolError, onError = _a.onError, onCompleted = _a.onCompleted;\r\n        var _this = _super.call(this) || this;\r\n        _this._resultObserver = resultObserver;\r\n        _this._onError = onError;\r\n        _this._onCompleted = onCompleted;\r\n        _this._records = [];\r\n        _this._onProtocolError = onProtocolError;\r\n        resultObserver.subscribe(_this);\r\n        return _this;\r\n    }\r\n    ProcedureRouteObserver.prototype.onNext = function (record) {\r\n        this._records.push(record);\r\n    };\r\n    ProcedureRouteObserver.prototype.onError = function (error) {\r\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\r\n            this._onProtocolError(error.message);\r\n        }\r\n        if (this._onError) {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    ProcedureRouteObserver.prototype.onCompleted = function () {\r\n        if (this._records !== null && this._records.length !== 1) {\r\n            this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' +\r\n                this._records.length +\r\n                ' records but expected only one.\\n' +\r\n                neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\r\n            return;\r\n        }\r\n        if (this._onCompleted) {\r\n            this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\r\n        }\r\n    };\r\n    return ProcedureRouteObserver;\r\n}(StreamObserver));\r\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\r\nvar RouteObserver = /** @class */ (function (_super) {\r\n    __extends(RouteObserver, _super);\r\n    /**\r\n     *\r\n     * @param {Object} param -\r\n     * @param {function(err: String)} param.onProtocolError\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(RawRoutingTable)} param.onCompleted\r\n     */\r\n    function RouteObserver(_a) {\r\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onCompleted = _b.onCompleted;\r\n        var _this = _super.call(this) || this;\r\n        _this._onProtocolError = onProtocolError;\r\n        _this._onError = onError;\r\n        _this._onCompleted = onCompleted;\r\n        return _this;\r\n    }\r\n    RouteObserver.prototype.onNext = function (record) {\r\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\r\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\r\n    };\r\n    RouteObserver.prototype.onError = function (error) {\r\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\r\n            this._onProtocolError(error.message);\r\n        }\r\n        if (this._onError) {\r\n            this._onError(error);\r\n        }\r\n    };\r\n    RouteObserver.prototype.onCompleted = function (metadata) {\r\n        if (this._onCompleted) {\r\n            this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\r\n        }\r\n    };\r\n    return RouteObserver;\r\n}(StreamObserver));\r\nexports.RouteObserver = RouteObserver;\r\nvar _states = {\r\n    READY_STREAMING: {\r\n        // async start state\r\n        onSuccess: function (streamObserver, meta) {\r\n            streamObserver._handleRunSuccess(meta, function () {\r\n                streamObserver._setState(_states.STREAMING);\r\n            } // after run succeeded, async directly move to streaming\r\n            // state\r\n            );\r\n        },\r\n        onError: function (streamObserver, error) {\r\n            streamObserver._handleError(error);\r\n        },\r\n        name: function () {\r\n            return 'READY_STREAMING';\r\n        },\r\n        pull: function () { }\r\n    },\r\n    READY: {\r\n        // reactive start state\r\n        onSuccess: function (streamObserver, meta) {\r\n            streamObserver._handleRunSuccess(meta, function () { return streamObserver._handleStreaming(); } // after run succeeded received, reactive shall start pulling\r\n            );\r\n        },\r\n        onError: function (streamObserver, error) {\r\n            streamObserver._handleError(error);\r\n        },\r\n        name: function () {\r\n            return 'READY';\r\n        },\r\n        pull: function (streamObserver) { return streamObserver._more(); }\r\n    },\r\n    STREAMING: {\r\n        onSuccess: function (streamObserver, meta) {\r\n            if (meta.has_more) {\r\n                streamObserver._handleHasMore(meta);\r\n            }\r\n            else {\r\n                streamObserver._handlePullSuccess(meta);\r\n            }\r\n        },\r\n        onError: function (streamObserver, error) {\r\n            streamObserver._handleError(error);\r\n        },\r\n        name: function () {\r\n            return 'STREAMING';\r\n        },\r\n        pull: function () { }\r\n    },\r\n    FAILED: {\r\n        onError: function (_error) {\r\n            // more errors are ignored\r\n        },\r\n        name: function () {\r\n            return 'FAILED';\r\n        },\r\n        pull: function () { }\r\n    },\r\n    SUCCEEDED: {\r\n        name: function () {\r\n            return 'SUCCEEDED';\r\n        },\r\n        pull: function () { }\r\n    }\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.assertNotificationFilterIsEmpty = exports.assertImpersonatedUserIsEmpty = exports.assertTxConfigIsEmpty = exports.assertDatabaseIsEmpty = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\n// eslint-disable-next-line no-unused-vars\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\n/**\r\n * @param {TxConfig} txConfig the auto-commit transaction configuration.\r\n * @param {function(error: string)} onProtocolError called when the txConfig is not empty.\r\n * @param {ResultStreamObserver} observer the response observer.\r\n */\r\nfunction assertTxConfigIsEmpty(txConfig, onProtocolError, observer) {\r\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\r\n    if (txConfig && !txConfig.isEmpty()) {\r\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to the database that does not support transaction configuration. ' +\r\n            'Please upgrade to neo4j 3.5.0 or later in order to use this functionality');\r\n        // unsupported API was used, consider this a fatal error for the current connection\r\n        onProtocolError(error.message);\r\n        observer.onError(error);\r\n        throw error;\r\n    }\r\n}\r\nexports.assertTxConfigIsEmpty = assertTxConfigIsEmpty;\r\n/**\r\n * Asserts that the passed-in database name is empty.\r\n * @param {string} database\r\n * @param {fuction(err: String)} onProtocolError Called when it doesn't have database set\r\n */\r\nfunction assertDatabaseIsEmpty(database, onProtocolError, observer) {\r\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\r\n    if (database) {\r\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to the database that does not support multiple databases. ' +\r\n            'Please upgrade to neo4j 4.0.0 or later in order to use this functionality');\r\n        // unsupported API was used, consider this a fatal error for the current connection\r\n        onProtocolError(error.message);\r\n        observer.onError(error);\r\n        throw error;\r\n    }\r\n}\r\nexports.assertDatabaseIsEmpty = assertDatabaseIsEmpty;\r\n/**\r\n * Asserts that the passed-in impersonated user is empty\r\n * @param {string} impersonatedUser\r\n * @param {function (err:Error)} onProtocolError Called when it does have impersonated user set\r\n * @param {any} observer\r\n */\r\nfunction assertImpersonatedUserIsEmpty(impersonatedUser, onProtocolError, observer) {\r\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\r\n    if (impersonatedUser) {\r\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to the database that does not support user impersonation. ' +\r\n            'Please upgrade to neo4j 4.4.0 or later in order to use this functionality. ' +\r\n            \"Trying to impersonate \".concat(impersonatedUser, \".\"));\r\n        // unsupported API was used, consider this a fatal error for the current connection\r\n        onProtocolError(error.message);\r\n        observer.onError(error);\r\n        throw error;\r\n    }\r\n}\r\nexports.assertImpersonatedUserIsEmpty = assertImpersonatedUserIsEmpty;\r\n/**\r\n * Asserts that the passed-in notificationFilter is empty\r\n * @param {NotificationFilter} notificationFilter\r\n * @param {function (err:Error)} onProtocolError Called when it does have notificationFilter user set\r\n * @param {any} observer\r\n */\r\nfunction assertNotificationFilterIsEmpty(notificationFilter, onProtocolError, observer) {\r\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\r\n    if (notificationFilter !== undefined) {\r\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support user notification filters. ' +\r\n            'Please upgrade to Neo4j 5.7.0 or later in order to use this functionality. ' +\r\n            \"Trying to set notifications to \".concat(neo4j_driver_core_1.json.stringify(notificationFilter), \".\"));\r\n        // unsupported API was used, consider this a fatal error for the current connection\r\n        onProtocolError(error.message);\r\n        observer.onError(error);\r\n        throw error;\r\n    }\r\n}\r\nexports.assertNotificationFilterIsEmpty = assertNotificationFilterIsEmpty;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.verifyStructSize = exports.Structure = void 0;\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\r\n/**\r\n * A Structure have a signature and fields.\r\n */\r\nvar Structure = /** @class */ (function () {\r\n    /**\r\n     * Create new instance\r\n     */\r\n    function Structure(signature, fields) {\r\n        this.signature = signature;\r\n        this.fields = fields;\r\n    }\r\n    Object.defineProperty(Structure.prototype, \"size\", {\r\n        get: function () {\r\n            return this.fields.length;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Structure.prototype.toString = function () {\r\n        var fieldStr = '';\r\n        for (var i = 0; i < this.fields.length; i++) {\r\n            if (i > 0) {\r\n                fieldStr += ', ';\r\n            }\r\n            fieldStr += this.fields[i];\r\n        }\r\n        return 'Structure(' + this.signature + ', [' + fieldStr + '])';\r\n    };\r\n    return Structure;\r\n}());\r\nexports.Structure = Structure;\r\nfunction verifyStructSize(structName, expectedSize, actualSize) {\r\n    if (expectedSize !== actualSize) {\r\n        throw (0, neo4j_driver_core_1.newError)(\"Wrong struct size for \".concat(structName, \", expected \").concat(expectedSize, \" but was \").concat(actualSize), PROTOCOL_ERROR);\r\n    }\r\n}\r\nexports.verifyStructSize = verifyStructSize;\r\nexports.default = Structure;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Unpacker = exports.Packer = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar channel_1 = require(\"../channel\");\r\nvar lang_1 = require(\"../lang\");\r\nvar structure_1 = require(\"./structure\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\r\nvar TINY_STRING = 0x80;\r\nvar TINY_LIST = 0x90;\r\nvar TINY_MAP = 0xa0;\r\nvar TINY_STRUCT = 0xb0;\r\nvar NULL = 0xc0;\r\nvar FLOAT_64 = 0xc1;\r\nvar FALSE = 0xc2;\r\nvar TRUE = 0xc3;\r\nvar INT_8 = 0xc8;\r\nvar INT_16 = 0xc9;\r\nvar INT_32 = 0xca;\r\nvar INT_64 = 0xcb;\r\nvar STRING_8 = 0xd0;\r\nvar STRING_16 = 0xd1;\r\nvar STRING_32 = 0xd2;\r\nvar LIST_8 = 0xd4;\r\nvar LIST_16 = 0xd5;\r\nvar LIST_32 = 0xd6;\r\nvar BYTES_8 = 0xcc;\r\nvar BYTES_16 = 0xcd;\r\nvar BYTES_32 = 0xce;\r\nvar MAP_8 = 0xd8;\r\nvar MAP_16 = 0xd9;\r\nvar MAP_32 = 0xda;\r\nvar STRUCT_8 = 0xdc;\r\nvar STRUCT_16 = 0xdd;\r\n/**\r\n * Class to pack\r\n * @access private\r\n */\r\nvar Packer = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {Chunker} channel the chunker backed by a network channel.\r\n     */\r\n    function Packer(channel) {\r\n        this._ch = channel;\r\n        this._byteArraysSupported = true;\r\n    }\r\n    /**\r\n     * Creates a packable function out of the provided value\r\n     * @param x the value to pack\r\n     * @returns Function\r\n     */\r\n    Packer.prototype.packable = function (x, dehydrateStruct) {\r\n        var _this = this;\r\n        if (dehydrateStruct === void 0) { dehydrateStruct = lang_1.functional.identity; }\r\n        try {\r\n            x = dehydrateStruct(x);\r\n        }\r\n        catch (ex) {\r\n            return function () { throw ex; };\r\n        }\r\n        if (x === null) {\r\n            return function () { return _this._ch.writeUInt8(NULL); };\r\n        }\r\n        else if (x === true) {\r\n            return function () { return _this._ch.writeUInt8(TRUE); };\r\n        }\r\n        else if (x === false) {\r\n            return function () { return _this._ch.writeUInt8(FALSE); };\r\n        }\r\n        else if (typeof x === 'number') {\r\n            return function () { return _this.packFloat(x); };\r\n        }\r\n        else if (typeof x === 'string') {\r\n            return function () { return _this.packString(x); };\r\n        }\r\n        else if (typeof x === 'bigint') {\r\n            return function () { return _this.packInteger((0, neo4j_driver_core_1.int)(x)); };\r\n        }\r\n        else if ((0, neo4j_driver_core_1.isInt)(x)) {\r\n            return function () { return _this.packInteger(x); };\r\n        }\r\n        else if (x instanceof Int8Array) {\r\n            return function () { return _this.packBytes(x); };\r\n        }\r\n        else if (x instanceof Array) {\r\n            return function () {\r\n                _this.packListHeader(x.length);\r\n                for (var i = 0; i < x.length; i++) {\r\n                    _this.packable(x[i] === undefined ? null : x[i], dehydrateStruct)();\r\n                }\r\n            };\r\n        }\r\n        else if (isIterable(x)) {\r\n            return this.packableIterable(x, dehydrateStruct);\r\n        }\r\n        else if (x instanceof structure_1.Structure) {\r\n            var packableFields_1 = [];\r\n            for (var i = 0; i < x.fields.length; i++) {\r\n                packableFields_1[i] = this.packable(x.fields[i], dehydrateStruct);\r\n            }\r\n            return function () { return _this.packStruct(x.signature, packableFields_1); };\r\n        }\r\n        else if (typeof x === 'object') {\r\n            return function () {\r\n                var keys = Object.keys(x);\r\n                var count = 0;\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    if (x[keys[i]] !== undefined) {\r\n                        count++;\r\n                    }\r\n                }\r\n                _this.packMapHeader(count);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    var key = keys[i];\r\n                    if (x[key] !== undefined) {\r\n                        _this.packString(key);\r\n                        _this.packable(x[key], dehydrateStruct)();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return this._nonPackableValue(\"Unable to pack the given value: \".concat(x));\r\n        }\r\n    };\r\n    Packer.prototype.packableIterable = function (iterable, dehydrateStruct) {\r\n        try {\r\n            var array = Array.from(iterable);\r\n            return this.packable(array, dehydrateStruct);\r\n        }\r\n        catch (e) {\r\n            // handle errors from iterable to array conversion\r\n            throw (0, neo4j_driver_core_1.newError)(\"Cannot pack given iterable, \".concat(e.message, \": \").concat(iterable));\r\n        }\r\n    };\r\n    /**\r\n     * Packs a struct\r\n     * @param signature the signature of the struct\r\n     * @param packableFields the fields of the struct, make sure you call `packable on all fields`\r\n     */\r\n    Packer.prototype.packStruct = function (signature, packableFields) {\r\n        packableFields = packableFields || [];\r\n        this.packStructHeader(packableFields.length, signature);\r\n        for (var i = 0; i < packableFields.length; i++) {\r\n            packableFields[i]();\r\n        }\r\n    };\r\n    Packer.prototype.packInteger = function (x) {\r\n        var high = x.high;\r\n        var low = x.low;\r\n        if (x.greaterThanOrEqual(-0x10) && x.lessThan(0x80)) {\r\n            this._ch.writeInt8(low);\r\n        }\r\n        else if (x.greaterThanOrEqual(-0x80) && x.lessThan(-0x10)) {\r\n            this._ch.writeUInt8(INT_8);\r\n            this._ch.writeInt8(low);\r\n        }\r\n        else if (x.greaterThanOrEqual(-0x8000) && x.lessThan(0x8000)) {\r\n            this._ch.writeUInt8(INT_16);\r\n            this._ch.writeInt16(low);\r\n        }\r\n        else if (x.greaterThanOrEqual(-0x80000000) && x.lessThan(0x80000000)) {\r\n            this._ch.writeUInt8(INT_32);\r\n            this._ch.writeInt32(low);\r\n        }\r\n        else {\r\n            this._ch.writeUInt8(INT_64);\r\n            this._ch.writeInt32(high);\r\n            this._ch.writeInt32(low);\r\n        }\r\n    };\r\n    Packer.prototype.packFloat = function (x) {\r\n        this._ch.writeUInt8(FLOAT_64);\r\n        this._ch.writeFloat64(x);\r\n    };\r\n    Packer.prototype.packString = function (x) {\r\n        var bytes = channel_1.utf8.encode(x);\r\n        var size = bytes.length;\r\n        if (size < 0x10) {\r\n            this._ch.writeUInt8(TINY_STRING | size);\r\n            this._ch.writeBytes(bytes);\r\n        }\r\n        else if (size < 0x100) {\r\n            this._ch.writeUInt8(STRING_8);\r\n            this._ch.writeUInt8(size);\r\n            this._ch.writeBytes(bytes);\r\n        }\r\n        else if (size < 0x10000) {\r\n            this._ch.writeUInt8(STRING_16);\r\n            this._ch.writeUInt8((size / 256) >> 0);\r\n            this._ch.writeUInt8(size % 256);\r\n            this._ch.writeBytes(bytes);\r\n        }\r\n        else if (size < 0x100000000) {\r\n            this._ch.writeUInt8(STRING_32);\r\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\r\n            this._ch.writeUInt8(size % 256);\r\n            this._ch.writeBytes(bytes);\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)('UTF-8 strings of size ' + size + ' are not supported');\r\n        }\r\n    };\r\n    Packer.prototype.packListHeader = function (size) {\r\n        if (size < 0x10) {\r\n            this._ch.writeUInt8(TINY_LIST | size);\r\n        }\r\n        else if (size < 0x100) {\r\n            this._ch.writeUInt8(LIST_8);\r\n            this._ch.writeUInt8(size);\r\n        }\r\n        else if (size < 0x10000) {\r\n            this._ch.writeUInt8(LIST_16);\r\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else if (size < 0x100000000) {\r\n            this._ch.writeUInt8(LIST_32);\r\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)('Lists of size ' + size + ' are not supported');\r\n        }\r\n    };\r\n    Packer.prototype.packBytes = function (array) {\r\n        if (this._byteArraysSupported) {\r\n            this.packBytesHeader(array.length);\r\n            for (var i = 0; i < array.length; i++) {\r\n                this._ch.writeInt8(array[i]);\r\n            }\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)('Byte arrays are not supported by the database this driver is connected to');\r\n        }\r\n    };\r\n    Packer.prototype.packBytesHeader = function (size) {\r\n        if (size < 0x100) {\r\n            this._ch.writeUInt8(BYTES_8);\r\n            this._ch.writeUInt8(size);\r\n        }\r\n        else if (size < 0x10000) {\r\n            this._ch.writeUInt8(BYTES_16);\r\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else if (size < 0x100000000) {\r\n            this._ch.writeUInt8(BYTES_32);\r\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)('Byte arrays of size ' + size + ' are not supported');\r\n        }\r\n    };\r\n    Packer.prototype.packMapHeader = function (size) {\r\n        if (size < 0x10) {\r\n            this._ch.writeUInt8(TINY_MAP | size);\r\n        }\r\n        else if (size < 0x100) {\r\n            this._ch.writeUInt8(MAP_8);\r\n            this._ch.writeUInt8(size);\r\n        }\r\n        else if (size < 0x10000) {\r\n            this._ch.writeUInt8(MAP_16);\r\n            this._ch.writeUInt8((size / 256) >> 0);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else if (size < 0x100000000) {\r\n            this._ch.writeUInt8(MAP_32);\r\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\r\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)('Maps of size ' + size + ' are not supported');\r\n        }\r\n    };\r\n    Packer.prototype.packStructHeader = function (size, signature) {\r\n        if (size < 0x10) {\r\n            this._ch.writeUInt8(TINY_STRUCT | size);\r\n            this._ch.writeUInt8(signature);\r\n        }\r\n        else if (size < 0x100) {\r\n            this._ch.writeUInt8(STRUCT_8);\r\n            this._ch.writeUInt8(size);\r\n            this._ch.writeUInt8(signature);\r\n        }\r\n        else if (size < 0x10000) {\r\n            this._ch.writeUInt8(STRUCT_16);\r\n            this._ch.writeUInt8((size / 256) >> 0);\r\n            this._ch.writeUInt8(size % 256);\r\n        }\r\n        else {\r\n            throw (0, neo4j_driver_core_1.newError)('Structures of size ' + size + ' are not supported');\r\n        }\r\n    };\r\n    Packer.prototype.disableByteArrays = function () {\r\n        this._byteArraysSupported = false;\r\n    };\r\n    Packer.prototype._nonPackableValue = function (message) {\r\n        return function () {\r\n            throw (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\r\n        };\r\n    };\r\n    return Packer;\r\n}());\r\nexports.Packer = Packer;\r\n/**\r\n * Class to unpack\r\n * @access private\r\n */\r\nvar Unpacker = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {boolean} disableLosslessIntegers if this unpacker should convert all received integers to native JS numbers.\r\n     * @param {boolean} useBigInt if this unpacker should convert all received integers to Bigint\r\n     */\r\n    function Unpacker(disableLosslessIntegers, useBigInt) {\r\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\r\n        if (useBigInt === void 0) { useBigInt = false; }\r\n        this._disableLosslessIntegers = disableLosslessIntegers;\r\n        this._useBigInt = useBigInt;\r\n    }\r\n    Unpacker.prototype.unpack = function (buffer, hydrateStructure) {\r\n        if (hydrateStructure === void 0) { hydrateStructure = lang_1.functional.identity; }\r\n        var marker = buffer.readUInt8();\r\n        var markerHigh = marker & 0xf0;\r\n        var markerLow = marker & 0x0f;\r\n        if (marker === NULL) {\r\n            return null;\r\n        }\r\n        var boolean = this._unpackBoolean(marker);\r\n        if (boolean !== null) {\r\n            return boolean;\r\n        }\r\n        var numberOrInteger = this._unpackNumberOrInteger(marker, buffer);\r\n        if (numberOrInteger !== null) {\r\n            if ((0, neo4j_driver_core_1.isInt)(numberOrInteger)) {\r\n                if (this._useBigInt) {\r\n                    return numberOrInteger.toBigInt();\r\n                }\r\n                else if (this._disableLosslessIntegers) {\r\n                    return numberOrInteger.toNumberOrInfinity();\r\n                }\r\n            }\r\n            return numberOrInteger;\r\n        }\r\n        var string = this._unpackString(marker, markerHigh, markerLow, buffer);\r\n        if (string !== null) {\r\n            return string;\r\n        }\r\n        var list = this._unpackList(marker, markerHigh, markerLow, buffer, hydrateStructure);\r\n        if (list !== null) {\r\n            return list;\r\n        }\r\n        var byteArray = this._unpackByteArray(marker, buffer);\r\n        if (byteArray !== null) {\r\n            return byteArray;\r\n        }\r\n        var map = this._unpackMap(marker, markerHigh, markerLow, buffer, hydrateStructure);\r\n        if (map !== null) {\r\n            return map;\r\n        }\r\n        var struct = this._unpackStruct(marker, markerHigh, markerLow, buffer, hydrateStructure);\r\n        if (struct !== null) {\r\n            return struct;\r\n        }\r\n        throw (0, neo4j_driver_core_1.newError)('Unknown packed value with marker ' + marker.toString(16));\r\n    };\r\n    Unpacker.prototype.unpackInteger = function (buffer) {\r\n        var marker = buffer.readUInt8();\r\n        var result = this._unpackInteger(marker, buffer);\r\n        if (result == null) {\r\n            throw (0, neo4j_driver_core_1.newError)('Unable to unpack integer value with marker ' + marker.toString(16));\r\n        }\r\n        return result;\r\n    };\r\n    Unpacker.prototype._unpackBoolean = function (marker) {\r\n        if (marker === TRUE) {\r\n            return true;\r\n        }\r\n        else if (marker === FALSE) {\r\n            return false;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackNumberOrInteger = function (marker, buffer) {\r\n        if (marker === FLOAT_64) {\r\n            return buffer.readFloat64();\r\n        }\r\n        else {\r\n            return this._unpackInteger(marker, buffer);\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackInteger = function (marker, buffer) {\r\n        if (marker >= 0 && marker < 128) {\r\n            return (0, neo4j_driver_core_1.int)(marker);\r\n        }\r\n        else if (marker >= 240 && marker < 256) {\r\n            return (0, neo4j_driver_core_1.int)(marker - 256);\r\n        }\r\n        else if (marker === INT_8) {\r\n            return (0, neo4j_driver_core_1.int)(buffer.readInt8());\r\n        }\r\n        else if (marker === INT_16) {\r\n            return (0, neo4j_driver_core_1.int)(buffer.readInt16());\r\n        }\r\n        else if (marker === INT_32) {\r\n            var b = buffer.readInt32();\r\n            return (0, neo4j_driver_core_1.int)(b);\r\n        }\r\n        else if (marker === INT_64) {\r\n            var high = buffer.readInt32();\r\n            var low = buffer.readInt32();\r\n            return new neo4j_driver_core_1.Integer(low, high);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackString = function (marker, markerHigh, markerLow, buffer) {\r\n        if (markerHigh === TINY_STRING) {\r\n            return channel_1.utf8.decode(buffer, markerLow);\r\n        }\r\n        else if (marker === STRING_8) {\r\n            return channel_1.utf8.decode(buffer, buffer.readUInt8());\r\n        }\r\n        else if (marker === STRING_16) {\r\n            return channel_1.utf8.decode(buffer, buffer.readUInt16());\r\n        }\r\n        else if (marker === STRING_32) {\r\n            return channel_1.utf8.decode(buffer, buffer.readUInt32());\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackList = function (marker, markerHigh, markerLow, buffer, hydrateStructure) {\r\n        if (markerHigh === TINY_LIST) {\r\n            return this._unpackListWithSize(markerLow, buffer, hydrateStructure);\r\n        }\r\n        else if (marker === LIST_8) {\r\n            return this._unpackListWithSize(buffer.readUInt8(), buffer, hydrateStructure);\r\n        }\r\n        else if (marker === LIST_16) {\r\n            return this._unpackListWithSize(buffer.readUInt16(), buffer, hydrateStructure);\r\n        }\r\n        else if (marker === LIST_32) {\r\n            return this._unpackListWithSize(buffer.readUInt32(), buffer, hydrateStructure);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackListWithSize = function (size, buffer, hydrateStructure) {\r\n        var value = [];\r\n        for (var i = 0; i < size; i++) {\r\n            value.push(this.unpack(buffer, hydrateStructure));\r\n        }\r\n        return value;\r\n    };\r\n    Unpacker.prototype._unpackByteArray = function (marker, buffer) {\r\n        if (marker === BYTES_8) {\r\n            return this._unpackByteArrayWithSize(buffer.readUInt8(), buffer);\r\n        }\r\n        else if (marker === BYTES_16) {\r\n            return this._unpackByteArrayWithSize(buffer.readUInt16(), buffer);\r\n        }\r\n        else if (marker === BYTES_32) {\r\n            return this._unpackByteArrayWithSize(buffer.readUInt32(), buffer);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackByteArrayWithSize = function (size, buffer) {\r\n        var value = new Int8Array(size);\r\n        for (var i = 0; i < size; i++) {\r\n            value[i] = buffer.readInt8();\r\n        }\r\n        return value;\r\n    };\r\n    Unpacker.prototype._unpackMap = function (marker, markerHigh, markerLow, buffer, hydrateStructure) {\r\n        if (markerHigh === TINY_MAP) {\r\n            return this._unpackMapWithSize(markerLow, buffer, hydrateStructure);\r\n        }\r\n        else if (marker === MAP_8) {\r\n            return this._unpackMapWithSize(buffer.readUInt8(), buffer, hydrateStructure);\r\n        }\r\n        else if (marker === MAP_16) {\r\n            return this._unpackMapWithSize(buffer.readUInt16(), buffer, hydrateStructure);\r\n        }\r\n        else if (marker === MAP_32) {\r\n            return this._unpackMapWithSize(buffer.readUInt32(), buffer, hydrateStructure);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackMapWithSize = function (size, buffer, hydrateStructure) {\r\n        var value = {};\r\n        for (var i = 0; i < size; i++) {\r\n            var key = this.unpack(buffer, hydrateStructure);\r\n            value[key] = this.unpack(buffer, hydrateStructure);\r\n        }\r\n        return value;\r\n    };\r\n    Unpacker.prototype._unpackStruct = function (marker, markerHigh, markerLow, buffer, hydrateStructure) {\r\n        if (markerHigh === TINY_STRUCT) {\r\n            return this._unpackStructWithSize(markerLow, buffer, hydrateStructure);\r\n        }\r\n        else if (marker === STRUCT_8) {\r\n            return this._unpackStructWithSize(buffer.readUInt8(), buffer, hydrateStructure);\r\n        }\r\n        else if (marker === STRUCT_16) {\r\n            return this._unpackStructWithSize(buffer.readUInt16(), buffer, hydrateStructure);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Unpacker.prototype._unpackStructWithSize = function (structSize, buffer, hydrateStructure) {\r\n        var signature = buffer.readUInt8();\r\n        var structure = new structure_1.Structure(signature, []);\r\n        for (var i = 0; i < structSize; i++) {\r\n            structure.fields.push(this.unpack(buffer, hydrateStructure));\r\n        }\r\n        return hydrateStructure(structure);\r\n    };\r\n    return Unpacker;\r\n}());\r\nexports.Unpacker = Unpacker;\r\nfunction isIterable(obj) {\r\n    if (obj == null) {\r\n        return false;\r\n    }\r\n    return typeof obj[Symbol.iterator] === 'function';\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Unpacker = exports.Packer = void 0;\r\nvar v1 = __importStar(require(\"./packstream-v1\"));\r\nvar Packer = /** @class */ (function (_super) {\r\n    __extends(Packer, _super);\r\n    function Packer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Packer.prototype.disableByteArrays = function () {\r\n        throw new Error('Bolt V2 should always support byte arrays');\r\n    };\r\n    return Packer;\r\n}(v1.Packer));\r\nexports.Packer = Packer;\r\nvar Unpacker = /** @class */ (function (_super) {\r\n    __extends(Unpacker, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {boolean} disableLosslessIntegers if this unpacker should convert all received integers to native JS numbers.\r\n     * @param {boolean} useBigInt if this unpacker should convert all received integers to Bigint\r\n     */\r\n    function Unpacker(disableLosslessIntegers, useBigInt) {\r\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\r\n        if (useBigInt === void 0) { useBigInt = false; }\r\n        return _super.call(this, disableLosslessIntegers, useBigInt) || this;\r\n    }\r\n    return Unpacker;\r\n}(v1.Unpacker));\r\nexports.Unpacker = Unpacker;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.structure = exports.v2 = exports.v1 = void 0;\r\nvar v1 = __importStar(require(\"./packstream-v1\"));\r\nexports.v1 = v1;\r\nvar v2 = __importStar(require(\"./packstream-v2\"));\r\nexports.v2 = v2;\r\nvar structure = __importStar(require(\"./structure\"));\r\nexports.structure = structure;\r\nexports.default = v2;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SIGNATURES = void 0;\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_READ = _a.ACCESS_MODE_READ, FETCH_ALL = _a.FETCH_ALL, assertString = neo4j_driver_core_1.internal.util.assertString;\r\n/* eslint-disable no-unused-vars */\r\n// Signature bytes for each request message type\r\nvar INIT = 0x01; // 0000 0001 // INIT <user_agent> <authentication_token>\r\nvar ACK_FAILURE = 0x0e; // 0000 1110 // ACK_FAILURE - unused\r\nvar RESET = 0x0f; // 0000 1111 // RESET\r\nvar RUN = 0x10; // 0001 0000 // RUN <query> <parameters>\r\nvar DISCARD_ALL = 0x2f; // 0010 1111 // DISCARD_ALL - unused\r\nvar PULL_ALL = 0x3f; // 0011 1111 // PULL_ALL\r\nvar HELLO = 0x01; // 0000 0001 // HELLO <metadata>\r\nvar GOODBYE = 0x02; // 0000 0010 // GOODBYE\r\nvar BEGIN = 0x11; // 0001 0001 // BEGIN <metadata>\r\nvar COMMIT = 0x12; // 0001 0010 // COMMIT\r\nvar ROLLBACK = 0x13; // 0001 0011 // ROLLBACK\r\nvar TELEMETRY = 0x54; // 0101 0100 // TELEMETRY <api>\r\nvar ROUTE = 0x66; // 0110 0110 // ROUTE\r\nvar LOGON = 0x6A; // LOGON\r\nvar LOGOFF = 0x6B; // LOGOFF\r\nvar DISCARD = 0x2f; // 0010 1111 // DISCARD\r\nvar PULL = 0x3f; // 0011 1111 // PULL\r\nvar READ_MODE = 'r';\r\n/* eslint-enable no-unused-vars */\r\nvar NO_STATEMENT_ID = -1;\r\nvar SIGNATURES = Object.freeze({\r\n    INIT: INIT,\r\n    RESET: RESET,\r\n    RUN: RUN,\r\n    PULL_ALL: PULL_ALL,\r\n    HELLO: HELLO,\r\n    GOODBYE: GOODBYE,\r\n    BEGIN: BEGIN,\r\n    COMMIT: COMMIT,\r\n    ROLLBACK: ROLLBACK,\r\n    TELEMETRY: TELEMETRY,\r\n    ROUTE: ROUTE,\r\n    LOGON: LOGON,\r\n    LOGOFF: LOGOFF,\r\n    DISCARD: DISCARD,\r\n    PULL: PULL\r\n});\r\nexports.SIGNATURES = SIGNATURES;\r\nvar RequestMessage = /** @class */ (function () {\r\n    function RequestMessage(signature, fields, toString) {\r\n        this.signature = signature;\r\n        this.fields = fields;\r\n        this.toString = toString;\r\n    }\r\n    /**\r\n     * Create a new INIT message.\r\n     * @param {string} clientName the client name.\r\n     * @param {Object} authToken the authentication token.\r\n     * @return {RequestMessage} new INIT message.\r\n     */\r\n    RequestMessage.init = function (clientName, authToken) {\r\n        return new RequestMessage(INIT, [clientName, authToken], function () { return \"INIT \".concat(clientName, \" {...}\"); });\r\n    };\r\n    /**\r\n     * Create a new RUN message.\r\n     * @param {string} query the cypher query.\r\n     * @param {Object} parameters the query parameters.\r\n     * @return {RequestMessage} new RUN message.\r\n     */\r\n    RequestMessage.run = function (query, parameters) {\r\n        return new RequestMessage(RUN, [query, parameters], function () { return \"RUN \".concat(query, \" \").concat(neo4j_driver_core_1.json.stringify(parameters)); });\r\n    };\r\n    /**\r\n     * Get a PULL_ALL message.\r\n     * @return {RequestMessage} the PULL_ALL message.\r\n     */\r\n    RequestMessage.pullAll = function () {\r\n        return PULL_ALL_MESSAGE;\r\n    };\r\n    /**\r\n     * Get a RESET message.\r\n     * @return {RequestMessage} the RESET message.\r\n     */\r\n    RequestMessage.reset = function () {\r\n        return RESET_MESSAGE;\r\n    };\r\n    /**\r\n     * Create a new HELLO message.\r\n     * @param {string} userAgent the user agent.\r\n     * @param {Object} authToken the authentication token.\r\n     * @param {Object} optional server side routing, set to routing context to turn on server side routing (> 4.1)\r\n     * @return {RequestMessage} new HELLO message.\r\n     */\r\n    RequestMessage.hello = function (userAgent, authToken, routing, patchs) {\r\n        if (routing === void 0) { routing = null; }\r\n        if (patchs === void 0) { patchs = null; }\r\n        var metadata = Object.assign({ user_agent: userAgent }, authToken);\r\n        if (routing) {\r\n            metadata.routing = routing;\r\n        }\r\n        if (patchs) {\r\n            metadata.patch_bolt = patchs;\r\n        }\r\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO {user_agent: '\".concat(userAgent, \"', ...}\"); });\r\n    };\r\n    /**\r\n     * Create a new HELLO message.\r\n     * @param {string} userAgent the user agent.\r\n     * @param {Object} optional server side routing, set to routing context to turn on server side routing (> 4.1)\r\n     * @return {RequestMessage} new HELLO message.\r\n     */\r\n    RequestMessage.hello5x1 = function (userAgent, routing) {\r\n        if (routing === void 0) { routing = null; }\r\n        var metadata = { user_agent: userAgent };\r\n        if (routing) {\r\n            metadata.routing = routing;\r\n        }\r\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO {user_agent: '\".concat(userAgent, \"', ...}\"); });\r\n    };\r\n    /**\r\n     * Create a new HELLO message.\r\n     * @param {string} userAgent the user agent.\r\n     * @param {NotificationFilter} notificationFilter the notification filter configured\r\n     * @param {Object} routing server side routing, set to routing context to turn on server side routing (> 4.1)\r\n     * @return {RequestMessage} new HELLO message.\r\n     */\r\n    RequestMessage.hello5x2 = function (userAgent, notificationFilter, routing) {\r\n        if (notificationFilter === void 0) { notificationFilter = null; }\r\n        if (routing === void 0) { routing = null; }\r\n        var metadata = { user_agent: userAgent };\r\n        appendLegacyNotificationFilterToMetadata(metadata, notificationFilter);\r\n        if (routing) {\r\n            metadata.routing = routing;\r\n        }\r\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    /**\r\n     * Create a new HELLO message.\r\n     * @param {string} userAgent the user agent.\r\n     * @param {string} boltAgent the bolt agent.\r\n     * @param {NotificationFilter} notificationFilter the notification filter configured\r\n     * @param {Object} routing server side routing, set to routing context to turn on server side routing (> 4.1)\r\n     * @return {RequestMessage} new HELLO message.\r\n     */\r\n    RequestMessage.hello5x3 = function (userAgent, boltAgent, notificationFilter, routing) {\r\n        if (notificationFilter === void 0) { notificationFilter = null; }\r\n        if (routing === void 0) { routing = null; }\r\n        var metadata = {};\r\n        if (userAgent) {\r\n            metadata.user_agent = userAgent;\r\n        }\r\n        if (boltAgent) {\r\n            metadata.bolt_agent = {\r\n                product: boltAgent.product,\r\n                platform: boltAgent.platform,\r\n                language: boltAgent.language,\r\n                language_details: boltAgent.languageDetails\r\n            };\r\n        }\r\n        appendLegacyNotificationFilterToMetadata(metadata, notificationFilter);\r\n        if (routing) {\r\n            metadata.routing = routing;\r\n        }\r\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    /**\r\n     * Create a new HELLO message.\r\n     * @param {string} userAgent the user agent.\r\n     * @param {string} boltAgent the bolt agent.\r\n     * @param {NotificationFilter} notificationFilter the notification filter configured\r\n     * @param {Object} routing server side routing, set to routing context to turn on server side routing (> 4.1)\r\n     * @return {RequestMessage} new HELLO message.\r\n     */\r\n    RequestMessage.hello5x5 = function (userAgent, boltAgent, notificationFilter, routing) {\r\n        if (notificationFilter === void 0) { notificationFilter = null; }\r\n        if (routing === void 0) { routing = null; }\r\n        var metadata = {};\r\n        if (userAgent) {\r\n            metadata.user_agent = userAgent;\r\n        }\r\n        if (boltAgent) {\r\n            metadata.bolt_agent = {\r\n                product: boltAgent.product,\r\n                platform: boltAgent.platform,\r\n                language: boltAgent.language,\r\n                language_details: boltAgent.languageDetails\r\n            };\r\n        }\r\n        appendGqlNotificationFilterToMetadata(metadata, notificationFilter);\r\n        if (routing) {\r\n            metadata.routing = routing;\r\n        }\r\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    /**\r\n     * Create a new LOGON message.\r\n     *\r\n     * @param {object} authToken The auth token\r\n     * @returns {RequestMessage} new LOGON message\r\n     */\r\n    RequestMessage.logon = function (authToken) {\r\n        return new RequestMessage(LOGON, [authToken], function () { return 'LOGON { ... }'; });\r\n    };\r\n    /**\r\n     * Create a new LOGOFF message.\r\n     *\r\n     * @returns {RequestMessage} new LOGOFF message\r\n     */\r\n    RequestMessage.logoff = function () {\r\n        return new RequestMessage(LOGOFF, [], function () { return 'LOGOFF'; });\r\n    };\r\n    /**\r\n     * Create a new BEGIN message.\r\n     * @param {Bookmarks} bookmarks the bookmarks.\r\n     * @param {TxConfig} txConfig the configuration.\r\n     * @param {string} database the database name.\r\n     * @param {string} mode the access mode.\r\n     * @param {string} impersonatedUser the impersonated user.\r\n     * @param {NotificationFilter} notificationFilter the notification filter\r\n     * @return {RequestMessage} new BEGIN message.\r\n     */\r\n    RequestMessage.begin = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter;\r\n        var metadata = buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter);\r\n        return new RequestMessage(BEGIN, [metadata], function () { return \"BEGIN \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    /**\r\n     * Create a new BEGIN message.\r\n     * @param {Bookmarks} bookmarks the bookmarks.\r\n     * @param {TxConfig} txConfig the configuration.\r\n     * @param {string} database the database name.\r\n     * @param {string} mode the access mode.\r\n     * @param {string} impersonatedUser the impersonated user.\r\n     * @param {NotificationFilter} notificationFilter the notification filter\r\n     * @return {RequestMessage} new BEGIN message.\r\n     */\r\n    RequestMessage.begin5x5 = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter;\r\n        var metadata = buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter, {\r\n            appendNotificationFilter: appendGqlNotificationFilterToMetadata\r\n        });\r\n        return new RequestMessage(BEGIN, [metadata], function () { return \"BEGIN \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    /**\r\n     * Get a COMMIT message.\r\n     * @return {RequestMessage} the COMMIT message.\r\n     */\r\n    RequestMessage.commit = function () {\r\n        return COMMIT_MESSAGE;\r\n    };\r\n    /**\r\n     * Get a ROLLBACK message.\r\n     * @return {RequestMessage} the ROLLBACK message.\r\n     */\r\n    RequestMessage.rollback = function () {\r\n        return ROLLBACK_MESSAGE;\r\n    };\r\n    /**\r\n     * Create a new RUN message with additional metadata.\r\n     * @param {string} query the cypher query.\r\n     * @param {Object} parameters the query parameters.\r\n     * @param {Object} extra - extra params\r\n     * @param {Bookmarks} extra.bookmarks the bookmarks.\r\n     * @param {TxConfig} extra.txConfig the configuration.\r\n     * @param {string} extra.database the database name.\r\n     * @param {string} extra.mode the access mode.\r\n     * @param {string} extra.impersonatedUser the impersonated user.\r\n     * @param {notificationFilter} extra.notificationFilter the notification filter\r\n     * @return {RequestMessage} new RUN message with additional metadata.\r\n     */\r\n    RequestMessage.runWithMetadata = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter;\r\n        var metadata = buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter);\r\n        return new RequestMessage(RUN, [query, parameters, metadata], function () {\r\n            return \"RUN \".concat(query, \" \").concat(neo4j_driver_core_1.json.stringify(parameters), \" \").concat(neo4j_driver_core_1.json.stringify(metadata));\r\n        });\r\n    };\r\n    /**\r\n     * Create a new RUN message with additional metadata.\r\n     * @param {string} query the cypher query.\r\n     * @param {Object} parameters the query parameters.\r\n     * @param {Object} extra - extra params\r\n     * @param {Bookmarks} extra.bookmarks the bookmarks.\r\n     * @param {TxConfig} extra.txConfig the configuration.\r\n     * @param {string} extra.database the database name.\r\n     * @param {string} extra.mode the access mode.\r\n     * @param {string} extra.impersonatedUser the impersonated user.\r\n     * @param {notificationFilter} extra.notificationFilter the notification filter\r\n     * @return {RequestMessage} new RUN message with additional metadata.\r\n     */\r\n    RequestMessage.runWithMetadata5x5 = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter;\r\n        var metadata = buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter, {\r\n            appendNotificationFilter: appendGqlNotificationFilterToMetadata\r\n        });\r\n        return new RequestMessage(RUN, [query, parameters, metadata], function () {\r\n            return \"RUN \".concat(query, \" \").concat(neo4j_driver_core_1.json.stringify(parameters), \" \").concat(neo4j_driver_core_1.json.stringify(metadata));\r\n        });\r\n    };\r\n    /**\r\n     * Get a GOODBYE message.\r\n     * @return {RequestMessage} the GOODBYE message.\r\n     */\r\n    RequestMessage.goodbye = function () {\r\n        return GOODBYE_MESSAGE;\r\n    };\r\n    /**\r\n     * Generates a new PULL message with additional metadata.\r\n     * @param {Integer|number} stmtId\r\n     * @param {Integer|number} n\r\n     * @return {RequestMessage} the PULL message.\r\n     */\r\n    RequestMessage.pull = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.stmtId, stmtId = _c === void 0 ? NO_STATEMENT_ID : _c, _d = _b.n, n = _d === void 0 ? FETCH_ALL : _d;\r\n        var metadata = buildStreamMetadata(stmtId === null || stmtId === undefined ? NO_STATEMENT_ID : stmtId, n || FETCH_ALL);\r\n        return new RequestMessage(PULL, [metadata], function () { return \"PULL \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    /**\r\n     * Generates a new DISCARD message with additional metadata.\r\n     * @param {Integer|number} stmtId\r\n     * @param {Integer|number} n\r\n     * @return {RequestMessage} the PULL message.\r\n     */\r\n    RequestMessage.discard = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.stmtId, stmtId = _c === void 0 ? NO_STATEMENT_ID : _c, _d = _b.n, n = _d === void 0 ? FETCH_ALL : _d;\r\n        var metadata = buildStreamMetadata(stmtId === null || stmtId === undefined ? NO_STATEMENT_ID : stmtId, n || FETCH_ALL);\r\n        return new RequestMessage(DISCARD, [metadata], function () { return \"DISCARD \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\r\n    };\r\n    RequestMessage.telemetry = function (_a) {\r\n        var api = _a.api;\r\n        var parsedApi = (0, neo4j_driver_core_1.int)(api);\r\n        return new RequestMessage(TELEMETRY, [parsedApi], function () { return \"TELEMETRY \".concat(parsedApi.toString()); });\r\n    };\r\n    /**\r\n     * Generate the ROUTE message, this message is used to fetch the routing table from the server\r\n     *\r\n     * @param {object} routingContext The routing context used to define the routing table. Multi-datacenter deployments is one of its use cases\r\n     * @param {string[]} bookmarks The list of the bookmarks should be used\r\n     * @param {string} databaseName The name of the database to get the routing table for.\r\n     * @return {RequestMessage} the ROUTE message.\r\n     */\r\n    RequestMessage.route = function (routingContext, bookmarks, databaseName) {\r\n        if (routingContext === void 0) { routingContext = {}; }\r\n        if (bookmarks === void 0) { bookmarks = []; }\r\n        if (databaseName === void 0) { databaseName = null; }\r\n        return new RequestMessage(ROUTE, [routingContext, bookmarks, databaseName], function () {\r\n            return \"ROUTE \".concat(neo4j_driver_core_1.json.stringify(routingContext), \" \").concat(neo4j_driver_core_1.json.stringify(bookmarks), \" \").concat(databaseName);\r\n        });\r\n    };\r\n    /**\r\n     * Generate the ROUTE message, this message is used to fetch the routing table from the server\r\n     *\r\n     * @param {object} routingContext The routing context used to define the routing table. Multi-datacenter deployments is one of its use cases\r\n     * @param {string[]} bookmarks The list of the bookmarks should be used\r\n     * @param {object} databaseContext The context inforamtion of the database to get the routing table for.\r\n     * @param {string} databaseContext.databaseName The name of the database to get the routing table.\r\n     * @param {string} databaseContext.impersonatedUser The name of the user to impersonation when getting the routing table.\r\n     * @return {RequestMessage} the ROUTE message.\r\n     */\r\n    RequestMessage.routeV4x4 = function (routingContext, bookmarks, databaseContext) {\r\n        if (routingContext === void 0) { routingContext = {}; }\r\n        if (bookmarks === void 0) { bookmarks = []; }\r\n        if (databaseContext === void 0) { databaseContext = {}; }\r\n        var dbContext = {};\r\n        if (databaseContext.databaseName) {\r\n            dbContext.db = databaseContext.databaseName;\r\n        }\r\n        if (databaseContext.impersonatedUser) {\r\n            dbContext.imp_user = databaseContext.impersonatedUser;\r\n        }\r\n        return new RequestMessage(ROUTE, [routingContext, bookmarks, dbContext], function () {\r\n            return \"ROUTE \".concat(neo4j_driver_core_1.json.stringify(routingContext), \" \").concat(neo4j_driver_core_1.json.stringify(bookmarks), \" \").concat(neo4j_driver_core_1.json.stringify(dbContext));\r\n        });\r\n    };\r\n    return RequestMessage;\r\n}());\r\nexports.default = RequestMessage;\r\n/**\r\n * Create an object that represent transaction metadata.\r\n * @param {Bookmarks} bookmarks the bookmarks.\r\n * @param {TxConfig} txConfig the configuration.\r\n * @param {string} database the database name.\r\n * @param {string} mode the access mode.\r\n * @param {string} impersonatedUser the impersonated user mode.\r\n * @param {notificationFilter} notificationFilter the notification filter\r\n * @param {Object} functions Transformation functions applied to metadata\r\n * @param {function(metadata,notificationFilter):void} functions.appendNotificationFilter Changes metadata by appending the Notification Filter to it.\r\n * @return {Object} a metadata object.\r\n */\r\nfunction buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter, functions) {\r\n    var _a;\r\n    if (functions === void 0) { functions = {}; }\r\n    var metadata = {};\r\n    if (!bookmarks.isEmpty()) {\r\n        metadata.bookmarks = bookmarks.values();\r\n    }\r\n    if (txConfig.timeout !== null) {\r\n        metadata.tx_timeout = txConfig.timeout;\r\n    }\r\n    if (txConfig.metadata) {\r\n        metadata.tx_metadata = txConfig.metadata;\r\n    }\r\n    if (database) {\r\n        metadata.db = assertString(database, 'database');\r\n    }\r\n    if (impersonatedUser) {\r\n        metadata.imp_user = assertString(impersonatedUser, 'impersonatedUser');\r\n    }\r\n    if (mode === ACCESS_MODE_READ) {\r\n        metadata.mode = READ_MODE;\r\n    }\r\n    var appendNotificationFilter = (_a = functions.appendNotificationFilter) !== null && _a !== void 0 ? _a : appendLegacyNotificationFilterToMetadata;\r\n    appendNotificationFilter(metadata, notificationFilter);\r\n    return metadata;\r\n}\r\n/**\r\n * Create an object that represents streaming metadata.\r\n * @param {Integer|number} stmtId The query id to stream its results.\r\n * @param {Integer|number} n The number of records to stream.\r\n * @returns {Object} a metadata object.\r\n */\r\nfunction buildStreamMetadata(stmtId, n) {\r\n    var metadata = { n: (0, neo4j_driver_core_1.int)(n) };\r\n    if (stmtId !== NO_STATEMENT_ID) {\r\n        metadata.qid = (0, neo4j_driver_core_1.int)(stmtId);\r\n    }\r\n    return metadata;\r\n}\r\nfunction appendLegacyNotificationFilterToMetadata(metadata, notificationFilter) {\r\n    if (notificationFilter) {\r\n        if (notificationFilter.minimumSeverityLevel) {\r\n            metadata.notifications_minimum_severity = notificationFilter.minimumSeverityLevel;\r\n        }\r\n        if (notificationFilter.disabledCategories) {\r\n            metadata.notifications_disabled_categories = notificationFilter.disabledCategories;\r\n        }\r\n        if (notificationFilter.disabledClassifications) {\r\n            metadata.notifications_disabled_categories = notificationFilter.disabledClassifications;\r\n        }\r\n    }\r\n}\r\nfunction appendGqlNotificationFilterToMetadata(metadata, notificationFilter) {\r\n    if (notificationFilter) {\r\n        if (notificationFilter.minimumSeverityLevel) {\r\n            metadata.notifications_minimum_severity = notificationFilter.minimumSeverityLevel;\r\n        }\r\n        if (notificationFilter.disabledCategories) {\r\n            metadata.notifications_disabled_classifications = notificationFilter.disabledCategories;\r\n        }\r\n        if (notificationFilter.disabledClassifications) {\r\n            metadata.notifications_disabled_classifications = notificationFilter.disabledClassifications;\r\n        }\r\n    }\r\n}\r\n// constants for messages that never change\r\nvar PULL_ALL_MESSAGE = new RequestMessage(PULL_ALL, [], function () { return 'PULL_ALL'; });\r\nvar RESET_MESSAGE = new RequestMessage(RESET, [], function () { return 'RESET'; });\r\nvar COMMIT_MESSAGE = new RequestMessage(COMMIT, [], function () { return 'COMMIT'; });\r\nvar ROLLBACK_MESSAGE = new RequestMessage(ROLLBACK, [], function () { return 'ROLLBACK'; });\r\nvar GOODBYE_MESSAGE = new RequestMessage(GOODBYE, [], function () { return 'GOODBYE'; });\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypeTransformer = void 0;\r\nvar packstream_1 = require(\"../packstream\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar objectUtil = neo4j_driver_core_1.internal.objectUtil;\r\n/**\r\n * Class responsible for applying the expected {@link TypeTransformer} to\r\n * transform the driver types from and to {@link struct.Structure}\r\n */\r\nvar Transformer = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param {TypeTransformer[]} transformers The type transformers\r\n     */\r\n    function Transformer(transformers) {\r\n        this._transformers = transformers;\r\n        this._transformersPerSignature = new Map(transformers.map(function (typeTransformer) { return [typeTransformer.signature, typeTransformer]; }));\r\n        this.fromStructure = this.fromStructure.bind(this);\r\n        this.toStructure = this.toStructure.bind(this);\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * Transform from structure to specific object\r\n     *\r\n     * @param {struct.Structure} struct The structure\r\n     * @returns {<T>|structure.Structure} The driver object or the structure if the transformer was not found.\r\n     */\r\n    Transformer.prototype.fromStructure = function (struct) {\r\n        try {\r\n            if (struct instanceof packstream_1.structure.Structure && this._transformersPerSignature.has(struct.signature)) {\r\n                var fromStructure = this._transformersPerSignature.get(struct.signature).fromStructure;\r\n                return fromStructure(struct);\r\n            }\r\n            return struct;\r\n        }\r\n        catch (error) {\r\n            return objectUtil.createBrokenObject(error);\r\n        }\r\n    };\r\n    /**\r\n     * Transform from object to structure\r\n     * @param {<T>} type The object to be transoformed in structure\r\n     * @returns {<T>|structure.Structure} The structure or the object, if any transformer was found\r\n     */\r\n    Transformer.prototype.toStructure = function (type) {\r\n        var transformer = this._transformers.find(function (_a) {\r\n            var isTypeInstance = _a.isTypeInstance;\r\n            return isTypeInstance(type);\r\n        });\r\n        if (transformer !== undefined) {\r\n            return transformer.toStructure(type);\r\n        }\r\n        return type;\r\n    };\r\n    return Transformer;\r\n}());\r\nexports.default = Transformer;\r\n/**\r\n * @callback isTypeInstanceFunction\r\n * @param {any} object The object\r\n * @return {boolean} is instance of\r\n */\r\n/**\r\n * @callback toStructureFunction\r\n * @param {any} object The object\r\n * @return {structure.Structure} The structure\r\n */\r\n/**\r\n * @callback fromStructureFunction\r\n * @param {structure.Structure} struct The structure\r\n * @return {any} The object\r\n */\r\n/**\r\n * Class responsible for grouping the properties of a TypeTransformer\r\n */\r\nvar TypeTransformer = /** @class */ (function () {\r\n    /**\r\n     * @param {Object} param\r\n     * @param {number} param.signature The signature of the structure\r\n     * @param {isTypeInstanceFunction} param.isTypeInstance The function which checks if object is\r\n     *                instance of the type described by the TypeTransformer\r\n     * @param {toStructureFunction} param.toStructure The function which gets the object and converts to structure\r\n     * @param {fromStructureFunction} param.fromStructure The function which get the structure and covnverts to object\r\n     */\r\n    function TypeTransformer(_a) {\r\n        var signature = _a.signature, fromStructure = _a.fromStructure, toStructure = _a.toStructure, isTypeInstance = _a.isTypeInstance;\r\n        this.signature = signature;\r\n        this.isTypeInstance = isTypeInstance;\r\n        this.fromStructure = fromStructure;\r\n        this.toStructure = toStructure;\r\n        Object.freeze(this);\r\n    }\r\n    /**\r\n     * @param {Object} param\r\n     * @param {number} [param.signature] The signature of the structure\r\n     * @param {isTypeInstanceFunction} [param.isTypeInstance] The function which checks if object is\r\n     *                instance of the type described by the TypeTransformer\r\n     * @param {toStructureFunction} [param.toStructure] The function which gets the object and converts to structure\r\n     * @param {fromStructureFunction} pparam.fromStructure] The function which get the structure and covnverts to object\r\n     * @returns {TypeTransformer} A new type transform extends with new methods\r\n     */\r\n    TypeTransformer.prototype.extendsWith = function (_a) {\r\n        var signature = _a.signature, fromStructure = _a.fromStructure, toStructure = _a.toStructure, isTypeInstance = _a.isTypeInstance;\r\n        return new TypeTransformer({\r\n            signature: signature || this.signature,\r\n            fromStructure: fromStructure || this.fromStructure,\r\n            toStructure: toStructure || this.toStructure,\r\n            isTypeInstance: isTypeInstance || this.isTypeInstance\r\n        });\r\n    };\r\n    return TypeTransformer;\r\n}());\r\nexports.TypeTransformer = TypeTransformer;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar packstream_1 = require(\"../packstream\");\r\nvar transformer_1 = require(\"./transformer\");\r\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\r\nvar NODE = 0x4e;\r\nvar NODE_STRUCT_SIZE = 3;\r\nvar RELATIONSHIP = 0x52;\r\nvar RELATIONSHIP_STRUCT_SIZE = 5;\r\nvar UNBOUND_RELATIONSHIP = 0x72;\r\nvar UNBOUND_RELATIONSHIP_STRUCT_SIZE = 3;\r\nvar PATH = 0x50;\r\nvar PATH_STRUCT_SIZE = 3;\r\n/**\r\n * Creates the Node Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createNodeTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: NODE,\r\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.Node; },\r\n        toStructure: function (object) {\r\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass nodes in query parameters, given: \".concat(object), PROTOCOL_ERROR);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Node', NODE_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), identity = _a[0], labels = _a[1], properties = _a[2];\r\n            return new neo4j_driver_core_1.Node(identity, labels, properties);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Relationship Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createRelationshipTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: RELATIONSHIP,\r\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.Relationship; },\r\n        toStructure: function (object) {\r\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass relationships in query parameters, given: \".concat(object), PROTOCOL_ERROR);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Relationship', RELATIONSHIP_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 5), identity = _a[0], startNodeIdentity = _a[1], endNodeIdentity = _a[2], type = _a[3], properties = _a[4];\r\n            return new neo4j_driver_core_1.Relationship(identity, startNodeIdentity, endNodeIdentity, type, properties);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Unbound Relationship Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createUnboundRelationshipTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: UNBOUND_RELATIONSHIP,\r\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.UnboundRelationship; },\r\n        toStructure: function (object) {\r\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass unbound relationships in query parameters, given: \".concat(object), PROTOCOL_ERROR);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('UnboundRelationship', UNBOUND_RELATIONSHIP_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), identity = _a[0], type = _a[1], properties = _a[2];\r\n            return new neo4j_driver_core_1.UnboundRelationship(identity, type, properties);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Path Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createPathTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: PATH,\r\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.Path; },\r\n        toStructure: function (object) {\r\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass paths in query parameters, given: \".concat(object), PROTOCOL_ERROR);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Path', PATH_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), nodes = _a[0], rels = _a[1], sequence = _a[2];\r\n            var segments = [];\r\n            var prevNode = nodes[0];\r\n            for (var i = 0; i < sequence.length; i += 2) {\r\n                var nextNode = nodes[sequence[i + 1]];\r\n                var relIndex = (0, neo4j_driver_core_1.toNumber)(sequence[i]);\r\n                var rel = void 0;\r\n                if (relIndex > 0) {\r\n                    rel = rels[relIndex - 1];\r\n                    if (rel instanceof neo4j_driver_core_1.UnboundRelationship) {\r\n                        // To avoid duplication, relationships in a path do not contain\r\n                        // information about their start and end nodes, that's instead\r\n                        // inferred from the path sequence. This is us inferring (and,\r\n                        // for performance reasons remembering) the start/end of a rel.\r\n                        rels[relIndex - 1] = rel = rel.bindTo(prevNode, nextNode);\r\n                    }\r\n                }\r\n                else {\r\n                    rel = rels[-relIndex - 1];\r\n                    if (rel instanceof neo4j_driver_core_1.UnboundRelationship) {\r\n                        // See above\r\n                        rels[-relIndex - 1] = rel = rel.bindTo(nextNode, prevNode);\r\n                    }\r\n                }\r\n                // Done hydrating one path segment.\r\n                segments.push(new neo4j_driver_core_1.PathSegment(prevNode, rel, nextNode));\r\n                prevNode = nextNode;\r\n            }\r\n            return new neo4j_driver_core_1.Path(nodes[0], nodes[nodes.length - 1], segments);\r\n        }\r\n    });\r\n}\r\nexports.default = {\r\n    createNodeTransformer: createNodeTransformer,\r\n    createRelationshipTransformer: createRelationshipTransformer,\r\n    createUnboundRelationshipTransformer: createUnboundRelationshipTransformer,\r\n    createPathTransformer: createPathTransformer\r\n};\r\n", "\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\n// eslint-disable-next-line no-unused-vars\r\nvar channel_1 = require(\"../channel\");\r\nvar packstream_1 = require(\"../packstream\");\r\nvar request_message_1 = __importStar(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V1 = _a.BOLT_PROTOCOL_V1, Logger = neo4j_driver_core_1.internal.logger.Logger, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\r\nvar DEFAULT_DIAGNOSTIC_RECORD = Object.freeze({\r\n    OPERATION: '',\r\n    OPERATION_CODE: '0',\r\n    CURRENT_SCHEMA: '/'\r\n});\r\nvar BoltProtocol = /** @class */ (function () {\r\n    /**\r\n     * @callback CreateResponseHandler Creates the response handler\r\n     * @param {BoltProtocol} protocol The bolt protocol\r\n     * @returns {ResponseHandler} The response handler\r\n     */\r\n    /**\r\n     * @callback OnProtocolError Handles protocol error\r\n     * @param {string} error The description\r\n     */\r\n    /**\r\n     * @constructor\r\n     * @param {Object} server the server informatio.\r\n     * @param {Chunker} chunker the chunker.\r\n     * @param {Object} packstreamConfig Packstream configuration\r\n     * @param {boolean} packstreamConfig.disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\r\n     * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\r\n     * @param {CreateResponseHandler} createResponseHandler Function which creates the response handler\r\n     * @param {Logger} log the logger\r\n     * @param {OnProtocolError} onProtocolError handles protocol errors\r\n     */\r\n    function BoltProtocol(server, chunker, _a, createResponseHandler, log, onProtocolError) {\r\n        var _b = _a === void 0 ? {} : _a, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt;\r\n        if (createResponseHandler === void 0) { createResponseHandler = function () { return null; }; }\r\n        this._server = server || {};\r\n        this._chunker = chunker;\r\n        this._packer = this._createPacker(chunker);\r\n        this._unpacker = this._createUnpacker(disableLosslessIntegers, useBigInt);\r\n        this._responseHandler = createResponseHandler(this);\r\n        this._log = log;\r\n        this._onProtocolError = onProtocolError;\r\n        this._fatalError = null;\r\n        this._lastMessageSignature = null;\r\n        this._config = { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt };\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        /**\r\n         * Returns the numerical version identifier for this protocol\r\n         */\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\r\n        /**\r\n         * @property {boolean} supportsReAuth Either if the protocol version supports re-auth or not.\r\n         */\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"initialized\", {\r\n        /**\r\n         * @property {boolean} initialized Either if the protocol was initialized or not\r\n         */\r\n        get: function () {\r\n            return !!this._initialized;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"authToken\", {\r\n        /**\r\n         * @property {object} authToken The token used in the last login\r\n         */\r\n        get: function () {\r\n            return this._authToken;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get the packer.\r\n     * @return {Packer} the protocol's packer.\r\n     */\r\n    BoltProtocol.prototype.packer = function () {\r\n        return this._packer;\r\n    };\r\n    /**\r\n     * Creates a packable function out of the provided value\r\n     * @param x the value to pack\r\n     * @returns Function\r\n     */\r\n    BoltProtocol.prototype.packable = function (x) {\r\n        return this._packer.packable(x, this.transformer.toStructure);\r\n    };\r\n    /**\r\n     * Get the unpacker.\r\n     * @return {Unpacker} the protocol's unpacker.\r\n     */\r\n    BoltProtocol.prototype.unpacker = function () {\r\n        return this._unpacker;\r\n    };\r\n    /**\r\n     * Unpack a buffer\r\n     * @param {Buffer} buf\r\n     * @returns {any|null} The unpacked value\r\n     */\r\n    BoltProtocol.prototype.unpack = function (buf) {\r\n        return this._unpacker.unpack(buf, this.transformer.fromStructure);\r\n    };\r\n    /**\r\n     * Transform metadata received in SUCCESS message before it is passed to the handler.\r\n     * @param {Object} metadata the received metadata.\r\n     * @return {Object} transformed metadata.\r\n     */\r\n    BoltProtocol.prototype.transformMetadata = function (metadata) {\r\n        return metadata;\r\n    };\r\n    BoltProtocol.prototype.enrichErrorMetadata = function (metadata) {\r\n        return __assign(__assign({}, metadata), { diagnostic_record: metadata.diagnostic_record !== null ? __assign(__assign({}, DEFAULT_DIAGNOSTIC_RECORD), metadata.diagnostic_record) : null });\r\n    };\r\n    /**\r\n     * Perform initialization and authentication of the underlying connection.\r\n     * @param {Object} param\r\n     * @param {string} param.userAgent the user agent.\r\n     * @param {Object} param.authToken the authentication token.\r\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\r\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\r\n     * @param {function()} param.onComplete the callback to invoke on completion.\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, onComplete); }\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.init(userAgent, authToken), observer, true);\r\n        return observer;\r\n    };\r\n    /**\r\n     * Performs logoff of the underlying connection\r\n     *\r\n     * @param {Object} param\r\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\r\n     * @param {function()} param.onComplete the callback to invoke on completion.\r\n     * @param {boolean} param.flush whether to flush the buffered messages.\r\n     *\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.logoff = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\r\n        var observer = new stream_observers_1.LogoffObserver({\r\n            onCompleted: onComplete,\r\n            onError: onError\r\n        });\r\n        // TODO: Verify the Neo4j version in the message\r\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logoff. ' +\r\n            'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\r\n        // unsupported API was used, consider this a fatal error for the current connection\r\n        this._onProtocolError(error.message);\r\n        observer.onError(error);\r\n        throw error;\r\n    };\r\n    /**\r\n     * Performs login of the underlying connection\r\n     *\r\n     * @param {Object} args\r\n     * @param {Object} args.authToken the authentication token.\r\n     * @param {function(err: Error)} args.onError the callback to invoke on error.\r\n     * @param {function()} args.onComplete the callback to invoke on completion.\r\n     * @param {boolean} args.flush whether to flush the buffered messages.\r\n     *\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.logon = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, authToken = _b.authToken, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onCompleted: function () { return _this._onLoginCompleted({}, authToken, onComplete); },\r\n            onError: function (error) { return _this._onLoginError(error, onError); }\r\n        });\r\n        // TODO: Verify the Neo4j version in the message\r\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logon. ' +\r\n            'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\r\n        // unsupported API was used, consider this a fatal error for the current connection\r\n        this._onProtocolError(error.message);\r\n        observer.onError(error);\r\n        throw error;\r\n    };\r\n    /**\r\n     * Perform protocol related operations for closing this connection\r\n     */\r\n    BoltProtocol.prototype.prepareToClose = function () {\r\n        // no need to notify the database in this protocol version\r\n    };\r\n    /**\r\n     * Begin an explicit transaction.\r\n     * @param {Object} param\r\n     * @param {Bookmarks} param.bookmarks the bookmarks.\r\n     * @param {TxConfig} param.txConfig the configuration.\r\n     * @param {string} param.database the target database name.\r\n     * @param {string} param.mode the access mode.\r\n     * @param {string} param.impersonatedUser the impersonated user\r\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\r\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\r\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\r\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\r\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.beginTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        return this.run('BEGIN', bookmarks ? bookmarks.asBeginTransactionParameters() : {}, {\r\n            bookmarks: bookmarks,\r\n            txConfig: txConfig,\r\n            database: database,\r\n            mode: mode,\r\n            impersonatedUser: impersonatedUser,\r\n            notificationFilter: notificationFilter,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            flush: false\r\n        });\r\n    };\r\n    /**\r\n     * Commit the explicit transaction.\r\n     * @param {Object} param\r\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\r\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\r\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\r\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.commitTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        // WRITE access mode is used as a place holder here, it has\r\n        // no effect on behaviour for Bolt V1 & V2\r\n        return this.run('COMMIT', {}, {\r\n            bookmarks: Bookmarks.empty(),\r\n            txConfig: TxConfig.empty(),\r\n            mode: ACCESS_MODE_WRITE,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n    };\r\n    /**\r\n     * Rollback the explicit transaction.\r\n     * @param {Object} param\r\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\r\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\r\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\r\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.rollbackTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        // WRITE access mode is used as a place holder here, it has\r\n        // no effect on behaviour for Bolt V1 & V2\r\n        return this.run('ROLLBACK', {}, {\r\n            bookmarks: Bookmarks.empty(),\r\n            txConfig: TxConfig.empty(),\r\n            mode: ACCESS_MODE_WRITE,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n    };\r\n    /**\r\n     * Send a Cypher query through the underlying connection.\r\n     * @param {string} query the cypher query.\r\n     * @param {Object} parameters the query parameters.\r\n     * @param {Object} param\r\n     * @param {Bookmarks} param.bookmarks the bookmarks.\r\n     * @param {TxConfig} param.txConfig the transaction configuration.\r\n     * @param {string} param.database the target database name.\r\n     * @param {string} param.impersonatedUser the impersonated user\r\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\r\n     * @param {string} param.mode the access mode.\r\n     * @param {function(keys: string[])} param.beforeKeys the callback to invoke before handling the keys.\r\n     * @param {function(keys: string[])} param.afterKeys the callback to invoke after handling the keys.\r\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\r\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\r\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\r\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\r\n     * @param {boolean} param.flush whether to flush the buffered messages.\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.highRecordWatermark, highRecordWatermark = _d === void 0 ? Number.MAX_VALUE : _d, _e = _b.lowRecordWatermark, lowRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeKeys: beforeKeys,\r\n            afterKeys: afterKeys,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark\r\n        });\r\n        // bookmarks and mode are ignored in this version of the protocol\r\n        (0, bolt_protocol_util_1.assertTxConfigIsEmpty)(txConfig, this._onProtocolError, observer);\r\n        // passing in a database name on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\r\n        // passing impersonated user on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.run(query, parameters), observer, false);\r\n        this.write(request_message_1.default.pullAll(), observer, flush);\r\n        return observer;\r\n    };\r\n    Object.defineProperty(BoltProtocol.prototype, \"currentFailure\", {\r\n        get: function () {\r\n            return this._responseHandler.currentFailure;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Send a RESET through the underlying connection.\r\n     * @param {Object} param\r\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\r\n     * @param {function()} param.onComplete the callback to invoke on completion.\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.reset = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onComplete = _b.onComplete;\r\n        var observer = new stream_observers_1.ResetObserver({\r\n            onProtocolError: this._onProtocolError,\r\n            onError: onError,\r\n            onComplete: onComplete\r\n        });\r\n        this.write(request_message_1.default.reset(), observer, true);\r\n        return observer;\r\n    };\r\n    /**\r\n     * Send a TELEMETRY through the underlying connection.\r\n     *\r\n     * @param {object} param0 Message params\r\n     * @param {number} param0.api The API called\r\n     * @param {object} param1 Configuration and callbacks\r\n     * @param {function()} param1.onCompleted Called when completed\r\n     * @param {function()} param1.onError Called when error\r\n     * @return {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.telemetry = function (_a, _b) {\r\n        var api = _a.api;\r\n        var _c = _b === void 0 ? {} : _b, onError = _c.onError, onCompleted = _c.onCompleted;\r\n        var observer = new stream_observers_1.CompletedObserver();\r\n        if (onCompleted) {\r\n            onCompleted();\r\n        }\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype._createPacker = function (chunker) {\r\n        return new packstream_1.v1.Packer(chunker);\r\n    };\r\n    BoltProtocol.prototype._createUnpacker = function (disableLosslessIntegers, useBigInt) {\r\n        return new packstream_1.v1.Unpacker(disableLosslessIntegers, useBigInt);\r\n    };\r\n    /**\r\n     * Write a message to the network channel.\r\n     * @param {RequestMessage} message the message to write.\r\n     * @param {StreamObserver} observer the response observer.\r\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\r\n     */\r\n    BoltProtocol.prototype.write = function (message, observer, flush) {\r\n        var queued = this.queueObserverIfProtocolIsNotBroken(observer);\r\n        if (queued) {\r\n            if (this._log.isDebugEnabled()) {\r\n                this._log.debug(\"C: \".concat(message));\r\n            }\r\n            this._lastMessageSignature = message.signature;\r\n            var messageStruct = new packstream_1.structure.Structure(message.signature, message.fields);\r\n            this.packable(messageStruct)();\r\n            this._chunker.messageBoundary();\r\n            if (flush) {\r\n                this._chunker.flush();\r\n            }\r\n        }\r\n    };\r\n    BoltProtocol.prototype.isLastMessageLogon = function () {\r\n        return this._lastMessageSignature === request_message_1.SIGNATURES.HELLO ||\r\n            this._lastMessageSignature === request_message_1.SIGNATURES.LOGON;\r\n    };\r\n    BoltProtocol.prototype.isLastMessageReset = function () {\r\n        return this._lastMessageSignature === request_message_1.SIGNATURES.RESET;\r\n    };\r\n    /**\r\n     * Notifies faltal erros to the observers and mark the protocol in the fatal error state.\r\n     * @param {Error} error The error\r\n     */\r\n    BoltProtocol.prototype.notifyFatalError = function (error) {\r\n        this._fatalError = error;\r\n        return this._responseHandler._notifyErrorToObservers(error);\r\n    };\r\n    /**\r\n     * Updates the the current observer with the next one on the queue.\r\n     */\r\n    BoltProtocol.prototype.updateCurrentObserver = function () {\r\n        return this._responseHandler._updateCurrentObserver();\r\n    };\r\n    /**\r\n     * Checks if exist an ongoing observable requests\r\n     * @return {boolean}\r\n     */\r\n    BoltProtocol.prototype.hasOngoingObservableRequests = function () {\r\n        return this._responseHandler.hasOngoingObservableRequests();\r\n    };\r\n    /**\r\n     * Enqueue the observer if the protocol is not broken.\r\n     * In case it's broken, the observer will be notified about the error.\r\n     *\r\n     * @param {StreamObserver} observer The observer\r\n     * @returns {boolean} if it was queued\r\n     */\r\n    BoltProtocol.prototype.queueObserverIfProtocolIsNotBroken = function (observer) {\r\n        if (this.isBroken()) {\r\n            this.notifyFatalErrorToObserver(observer);\r\n            return false;\r\n        }\r\n        return this._responseHandler._queueObserver(observer);\r\n    };\r\n    /**\r\n     * Veritfy the protocol is not broken.\r\n     * @returns {boolean}\r\n     */\r\n    BoltProtocol.prototype.isBroken = function () {\r\n        return !!this._fatalError;\r\n    };\r\n    /**\r\n     * Notifies the current fatal error to the observer\r\n     *\r\n     * @param {StreamObserver} observer The observer\r\n     */\r\n    BoltProtocol.prototype.notifyFatalErrorToObserver = function (observer) {\r\n        if (observer && observer.onError) {\r\n            observer.onError(this._fatalError);\r\n        }\r\n    };\r\n    /**\r\n     * Reset current failure on the observable response handler to null.\r\n     */\r\n    BoltProtocol.prototype.resetFailure = function () {\r\n        this._responseHandler._resetFailure();\r\n    };\r\n    BoltProtocol.prototype._onLoginCompleted = function (metadata, authToken, onCompleted) {\r\n        this._initialized = true;\r\n        this._authToken = authToken;\r\n        if (metadata) {\r\n            var serverVersion = metadata.server;\r\n            if (!this._server.version) {\r\n                this._server.version = serverVersion;\r\n            }\r\n        }\r\n        if (onCompleted) {\r\n            onCompleted(metadata);\r\n        }\r\n    };\r\n    BoltProtocol.prototype._onLoginError = function (error, onError) {\r\n        this._onProtocolError(error.message);\r\n        if (onError) {\r\n            onError(error);\r\n        }\r\n    };\r\n    return BoltProtocol;\r\n}());\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.epochSecondAndNanoToLocalDateTime = exports.nanoOfDayToLocalTime = exports.epochDayToDate = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.temporalUtil, DAYS_0000_TO_1970 = _a.DAYS_0000_TO_1970, DAYS_PER_400_YEAR_CYCLE = _a.DAYS_PER_400_YEAR_CYCLE, NANOS_PER_HOUR = _a.NANOS_PER_HOUR, NANOS_PER_MINUTE = _a.NANOS_PER_MINUTE, NANOS_PER_SECOND = _a.NANOS_PER_SECOND, SECONDS_PER_DAY = _a.SECONDS_PER_DAY, floorDiv = _a.floorDiv, floorMod = _a.floorMod;\r\n/**\r\n * Converts given epoch day to a local date.\r\n * @param {Integer|number|string} epochDay the epoch day to convert.\r\n * @return {Date} the date representing the epoch day in years, months and days.\r\n */\r\nfunction epochDayToDate(epochDay) {\r\n    epochDay = (0, neo4j_driver_core_1.int)(epochDay);\r\n    var zeroDay = epochDay.add(DAYS_0000_TO_1970).subtract(60);\r\n    var adjust = (0, neo4j_driver_core_1.int)(0);\r\n    if (zeroDay.lessThan(0)) {\r\n        var adjustCycles = zeroDay\r\n            .add(1)\r\n            .div(DAYS_PER_400_YEAR_CYCLE)\r\n            .subtract(1);\r\n        adjust = adjustCycles.multiply(400);\r\n        zeroDay = zeroDay.add(adjustCycles.multiply(-DAYS_PER_400_YEAR_CYCLE));\r\n    }\r\n    var year = zeroDay\r\n        .multiply(400)\r\n        .add(591)\r\n        .div(DAYS_PER_400_YEAR_CYCLE);\r\n    var dayOfYearEst = zeroDay.subtract(year\r\n        .multiply(365)\r\n        .add(year.div(4))\r\n        .subtract(year.div(100))\r\n        .add(year.div(400)));\r\n    if (dayOfYearEst.lessThan(0)) {\r\n        year = year.subtract(1);\r\n        dayOfYearEst = zeroDay.subtract(year\r\n            .multiply(365)\r\n            .add(year.div(4))\r\n            .subtract(year.div(100))\r\n            .add(year.div(400)));\r\n    }\r\n    year = year.add(adjust);\r\n    var marchDayOfYear = dayOfYearEst;\r\n    var marchMonth = marchDayOfYear\r\n        .multiply(5)\r\n        .add(2)\r\n        .div(153);\r\n    var month = marchMonth\r\n        .add(2)\r\n        .modulo(12)\r\n        .add(1);\r\n    var day = marchDayOfYear\r\n        .subtract(marchMonth\r\n        .multiply(306)\r\n        .add(5)\r\n        .div(10))\r\n        .add(1);\r\n    year = year.add(marchMonth.div(10));\r\n    return new neo4j_driver_core_1.Date(year, month, day);\r\n}\r\nexports.epochDayToDate = epochDayToDate;\r\n/**\r\n * Converts nanoseconds of the day into local time.\r\n * @param {Integer|number|string} nanoOfDay the nanoseconds of the day to convert.\r\n * @return {LocalTime} the local time representing given nanoseconds of the day.\r\n */\r\nfunction nanoOfDayToLocalTime(nanoOfDay) {\r\n    nanoOfDay = (0, neo4j_driver_core_1.int)(nanoOfDay);\r\n    var hour = nanoOfDay.div(NANOS_PER_HOUR);\r\n    nanoOfDay = nanoOfDay.subtract(hour.multiply(NANOS_PER_HOUR));\r\n    var minute = nanoOfDay.div(NANOS_PER_MINUTE);\r\n    nanoOfDay = nanoOfDay.subtract(minute.multiply(NANOS_PER_MINUTE));\r\n    var second = nanoOfDay.div(NANOS_PER_SECOND);\r\n    var nanosecond = nanoOfDay.subtract(second.multiply(NANOS_PER_SECOND));\r\n    return new neo4j_driver_core_1.LocalTime(hour, minute, second, nanosecond);\r\n}\r\nexports.nanoOfDayToLocalTime = nanoOfDayToLocalTime;\r\n/**\r\n * Converts given epoch second and nanosecond adjustment into a local date time object.\r\n * @param {Integer|number|string} epochSecond the epoch second to use.\r\n * @param {Integer|number|string} nano the nanosecond to use.\r\n * @return {LocalDateTime} the local date time representing given epoch second and nano.\r\n */\r\nfunction epochSecondAndNanoToLocalDateTime(epochSecond, nano) {\r\n    var epochDay = floorDiv(epochSecond, SECONDS_PER_DAY);\r\n    var secondsOfDay = floorMod(epochSecond, SECONDS_PER_DAY);\r\n    var nanoOfDay = secondsOfDay.multiply(NANOS_PER_SECOND).add(nano);\r\n    var localDate = epochDayToDate(epochDay);\r\n    var localTime = nanoOfDayToLocalTime(nanoOfDay);\r\n    return new neo4j_driver_core_1.LocalDateTime(localDate.year, localDate.month, localDate.day, localTime.hour, localTime.minute, localTime.second, localTime.nanosecond);\r\n}\r\nexports.epochSecondAndNanoToLocalDateTime = epochSecondAndNanoToLocalDateTime;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar packstream_1 = require(\"../packstream\");\r\nvar transformer_1 = require(\"./transformer\");\r\nvar temporal_factory_1 = require(\"./temporal-factory\");\r\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\r\nvar _a = neo4j_driver_core_1.internal.temporalUtil, dateToEpochDay = _a.dateToEpochDay, localDateTimeToEpochSecond = _a.localDateTimeToEpochSecond, localTimeToNanoOfDay = _a.localTimeToNanoOfDay;\r\nvar POINT_2D = 0x58;\r\nvar POINT_2D_STRUCT_SIZE = 3;\r\nvar POINT_3D = 0x59;\r\nvar POINT_3D_STRUCT_SIZE = 4;\r\nvar DURATION = 0x45;\r\nvar DURATION_STRUCT_SIZE = 4;\r\nvar LOCAL_TIME = 0x74;\r\nvar LOCAL_TIME_STRUCT_SIZE = 1;\r\nvar TIME = 0x54;\r\nvar TIME_STRUCT_SIZE = 2;\r\nvar DATE = 0x44;\r\nvar DATE_STRUCT_SIZE = 1;\r\nvar LOCAL_DATE_TIME = 0x64;\r\nvar LOCAL_DATE_TIME_STRUCT_SIZE = 2;\r\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x46;\r\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\r\nvar DATE_TIME_WITH_ZONE_ID = 0x66;\r\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\r\n/**\r\n * Creates the Point2D Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createPoint2DTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: POINT_2D,\r\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && (point.z === null || point.z === undefined); },\r\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_2D, [\r\n            (0, neo4j_driver_core_1.int)(point.srid),\r\n            point.x,\r\n            point.y\r\n        ]); },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Point2D', POINT_2D_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), srid = _a[0], x = _a[1], y = _a[2];\r\n            return new neo4j_driver_core_1.Point(srid, x, y, undefined // z\r\n            );\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Point3D Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createPoint3DTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: POINT_3D,\r\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && point.z !== null && point.z !== undefined; },\r\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_3D, [\r\n            (0, neo4j_driver_core_1.int)(point.srid),\r\n            point.x,\r\n            point.y,\r\n            point.z\r\n        ]); },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Point3D', POINT_3D_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 4), srid = _a[0], x = _a[1], y = _a[2], z = _a[3];\r\n            return new neo4j_driver_core_1.Point(srid, x, y, z);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Duration Transformer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createDurationTransformer() {\r\n    return new transformer_1.TypeTransformer({\r\n        signature: DURATION,\r\n        isTypeInstance: neo4j_driver_core_1.isDuration,\r\n        toStructure: function (value) {\r\n            var months = (0, neo4j_driver_core_1.int)(value.months);\r\n            var days = (0, neo4j_driver_core_1.int)(value.days);\r\n            var seconds = (0, neo4j_driver_core_1.int)(value.seconds);\r\n            var nanoseconds = (0, neo4j_driver_core_1.int)(value.nanoseconds);\r\n            return new packstream_1.structure.Structure(DURATION, [months, days, seconds, nanoseconds]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Duration', DURATION_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 4), months = _a[0], days = _a[1], seconds = _a[2], nanoseconds = _a[3];\r\n            return new neo4j_driver_core_1.Duration(months, days, seconds, nanoseconds);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the LocalTime Transformer\r\n * @param {Object} param\r\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\r\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createLocalTimeTransformer(_a) {\r\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\r\n    return new transformer_1.TypeTransformer({\r\n        signature: LOCAL_TIME,\r\n        isTypeInstance: neo4j_driver_core_1.isLocalTime,\r\n        toStructure: function (value) {\r\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\r\n            return new packstream_1.structure.Structure(LOCAL_TIME, [nanoOfDay]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('LocalTime', LOCAL_TIME_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 1), nanoOfDay = _a[0];\r\n            var result = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Time Transformer\r\n * @param {Object} param\r\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\r\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createTimeTransformer(_a) {\r\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\r\n    return new transformer_1.TypeTransformer({\r\n        signature: TIME,\r\n        isTypeInstance: neo4j_driver_core_1.isTime,\r\n        toStructure: function (value) {\r\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\r\n            var offsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\r\n            return new packstream_1.structure.Structure(TIME, [nanoOfDay, offsetSeconds]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Time', TIME_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 2), nanoOfDay = _a[0], offsetSeconds = _a[1];\r\n            var localTime = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\r\n            var result = new neo4j_driver_core_1.Time(localTime.hour, localTime.minute, localTime.second, localTime.nanosecond, offsetSeconds);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the Date Transformer\r\n * @param {Object} param\r\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\r\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createDateTransformer(_a) {\r\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\r\n    return new transformer_1.TypeTransformer({\r\n        signature: DATE,\r\n        isTypeInstance: neo4j_driver_core_1.isDate,\r\n        toStructure: function (value) {\r\n            var epochDay = dateToEpochDay(value.year, value.month, value.day);\r\n            return new packstream_1.structure.Structure(DATE, [epochDay]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Date', DATE_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 1), epochDay = _a[0];\r\n            var result = (0, temporal_factory_1.epochDayToDate)(epochDay);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the LocalDateTime Transformer\r\n * @param {Object} param\r\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\r\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createLocalDateTimeTransformer(_a) {\r\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\r\n    return new transformer_1.TypeTransformer({\r\n        signature: LOCAL_DATE_TIME,\r\n        isTypeInstance: neo4j_driver_core_1.isLocalDateTime,\r\n        toStructure: function (value) {\r\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\r\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\r\n            return new packstream_1.structure.Structure(LOCAL_DATE_TIME, [epochSecond, nano]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('LocalDateTime', LOCAL_DATE_TIME_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 2), epochSecond = _a[0], nano = _a[1];\r\n            var result = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the DateTime with ZoneId Transformer\r\n * @param {Object} param\r\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\r\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createDateTimeWithZoneIdTransformer(_a) {\r\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\r\n    return new transformer_1.TypeTransformer({\r\n        signature: DATE_TIME_WITH_ZONE_ID,\r\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId != null; },\r\n        toStructure: function (value) {\r\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\r\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\r\n            var timeZoneId = value.timeZoneId;\r\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [epochSecond, nano, timeZoneId]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneId = _a[2];\r\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\r\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, null, timeZoneId);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Creates the DateTime with Offset Transformer\r\n * @param {Object} param\r\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\r\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createDateTimeWithOffsetTransformer(_a) {\r\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\r\n    return new transformer_1.TypeTransformer({\r\n        signature: DATE_TIME_WITH_ZONE_OFFSET,\r\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId == null; },\r\n        toStructure: function (value) {\r\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\r\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\r\n            var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\r\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [epochSecond, nano, timeZoneOffsetSeconds]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneOffsetSeconds = _a[2];\r\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\r\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\r\n    if (!disableLosslessIntegers && !useBigInt) {\r\n        return obj;\r\n    }\r\n    var convert = function (value) {\r\n        return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\r\n    };\r\n    var clone = Object.create(Object.getPrototypeOf(obj));\r\n    for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\r\n            var value = obj[prop];\r\n            clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\r\n        }\r\n    }\r\n    Object.freeze(clone);\r\n    return clone;\r\n}\r\nexports.default = __assign(__assign({}, bolt_protocol_v1_transformer_1.default), { createPoint2DTransformer: createPoint2DTransformer, createPoint3DTransformer: createPoint3DTransformer, createDurationTransformer: createDurationTransformer, createLocalTimeTransformer: createLocalTimeTransformer, createTimeTransformer: createTimeTransformer, createDateTransformer: createDateTransformer, createLocalDateTimeTransformer: createLocalDateTimeTransformer, createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer, createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer });\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v1_1 = __importDefault(require(\"./bolt-protocol-v1\"));\r\nvar packstream_1 = __importDefault(require(\"../packstream\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_v2_transformer_1 = __importDefault(require(\"./bolt-protocol-v2.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar BOLT_PROTOCOL_V2 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V2;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BoltProtocol.prototype._createPacker = function (chunker) {\r\n        return new packstream_1.default.Packer(chunker);\r\n    };\r\n    BoltProtocol.prototype._createUnpacker = function (disableLosslessIntegers, useBigInt) {\r\n        return new packstream_1.default.Unpacker(disableLosslessIntegers, useBigInt);\r\n    };\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v2_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V2;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return BoltProtocol;\r\n}(bolt_protocol_v1_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v2_transformer_1 = __importDefault(require(\"./bolt-protocol-v2.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v2_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v2_1 = __importDefault(require(\"./bolt-protocol-v2\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar bolt_protocol_v3_transformer_1 = __importDefault(require(\"./bolt-protocol-v3.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, BOLT_PROTOCOL_V3 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V3, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\r\nvar CONTEXT = 'context';\r\nvar CALL_GET_ROUTING_TABLE = \"CALL dbms.cluster.routing.getRoutingTable($\".concat(CONTEXT, \")\");\r\nvar noOpObserver = new stream_observers_1.StreamObserver();\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V3;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v3_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BoltProtocol.prototype.transformMetadata = function (metadata) {\r\n        if ('t_first' in metadata) {\r\n            // Bolt V3 uses shorter key 't_first' to represent 'result_available_after'\r\n            // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\r\n            metadata.result_available_after = metadata.t_first;\r\n            delete metadata.t_first;\r\n        }\r\n        if ('t_last' in metadata) {\r\n            // Bolt V3 uses shorter key 't_last' to represent 'result_consumed_after'\r\n            // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\r\n            metadata.result_consumed_after = metadata.t_last;\r\n            delete metadata.t_last;\r\n        }\r\n        return metadata;\r\n    };\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, authToken, onComplete); }\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.hello(userAgent, authToken), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.prepareToClose = function () {\r\n        this.write(request_message_1.default.goodbye(), noOpObserver, true);\r\n    };\r\n    BoltProtocol.prototype.beginTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        // passing in a database name on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\r\n        // passing impersonated user on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, mode: mode }), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.commitTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        this.write(request_message_1.default.commit(), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.rollbackTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        this.write(request_message_1.default.rollback(), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.highRecordWatermark, highRecordWatermark = _d === void 0 ? Number.MAX_VALUE : _d, _e = _b.lowRecordWatermark, lowRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeKeys: beforeKeys,\r\n            afterKeys: afterKeys,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark\r\n        });\r\n        // passing in a database name on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\r\n        // passing impersonated user on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\r\n            bookmarks: bookmarks,\r\n            txConfig: txConfig,\r\n            mode: mode\r\n        }), observer, false);\r\n        this.write(request_message_1.default.pullAll(), observer, flush);\r\n        return observer;\r\n    };\r\n    /**\r\n     * Request routing information\r\n     *\r\n     * @param {Object} param -\r\n     * @param {object} param.routingContext The routing context used to define the routing table.\r\n     *  Multi-datacenter deployments is one of its use cases\r\n     * @param {string} param.databaseName The database name\r\n     * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\r\n     * @param {string} params.sessionContext.mode The session mode\r\n     * @param {string} params.sessionContext.database The database name used on the session\r\n     * @param {function()} params.sessionContext.afterComplete The session param used after the session closed\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(RawRoutingTable)} param.onCompleted\r\n     * @returns {RouteObserver} the route observer\r\n     */\r\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\r\n        var _b;\r\n        var _c = _a.routingContext, routingContext = _c === void 0 ? {} : _c, _d = _a.sessionContext, sessionContext = _d === void 0 ? {} : _d, onError = _a.onError, onCompleted = _a.onCompleted;\r\n        var resultObserver = this.run(CALL_GET_ROUTING_TABLE, (_b = {}, _b[CONTEXT] = routingContext, _b), __assign(__assign({}, sessionContext), { txConfig: TxConfig.empty() }));\r\n        return new stream_observers_1.ProcedureRouteObserver({\r\n            resultObserver: resultObserver,\r\n            onProtocolError: this._onProtocolError,\r\n            onError: onError,\r\n            onCompleted: onCompleted\r\n        });\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v2_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v3_transformer_1 = __importDefault(require(\"./bolt-protocol-v3.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v3_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v3_1 = __importDefault(require(\"./bolt-protocol-v3\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar bolt_protocol_v4x0_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x0.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, FETCH_ALL = _a.FETCH_ALL, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\r\nvar CONTEXT = 'context';\r\nvar DATABASE = 'database';\r\nvar CALL_GET_ROUTING_TABLE_MULTI_DB = \"CALL dbms.routing.getRoutingTable($\".concat(CONTEXT, \", $\").concat(DATABASE, \")\");\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V4_0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x0_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BoltProtocol.prototype.beginTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        // passing impersonated user on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode }), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            reactive: reactive,\r\n            fetchSize: fetchSize,\r\n            moreFunction: this._requestMore.bind(this),\r\n            discardFunction: this._requestDiscard.bind(this),\r\n            beforeKeys: beforeKeys,\r\n            afterKeys: afterKeys,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark\r\n        });\r\n        // passing impersonated user on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        var flushRun = reactive;\r\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\r\n            bookmarks: bookmarks,\r\n            txConfig: txConfig,\r\n            database: database,\r\n            mode: mode\r\n        }), observer, flushRun && flush);\r\n        if (!reactive) {\r\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\r\n        }\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype._requestMore = function (stmtId, n, observer) {\r\n        this.write(request_message_1.default.pull({ stmtId: stmtId, n: n }), observer, true);\r\n    };\r\n    BoltProtocol.prototype._requestDiscard = function (stmtId, observer) {\r\n        this.write(request_message_1.default.discard({ stmtId: stmtId }), observer, true);\r\n    };\r\n    BoltProtocol.prototype._noOp = function () { };\r\n    /**\r\n     * Request routing information\r\n     *\r\n     * @param {Object} param -\r\n     * @param {object} param.routingContext The routing context used to define the routing table.\r\n     *  Multi-datacenter deployments is one of its use cases\r\n     * @param {string} param.databaseName The database name\r\n     * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\r\n     * @param {string} params.sessionContext.mode The session mode\r\n     * @param {string} params.sessionContext.database The database name used on the session\r\n     * @param {function()} params.sessionContext.afterComplete The session param used after the session closed\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(RawRoutingTable)} param.onCompleted\r\n     * @returns {RouteObserver} the route observer\r\n     */\r\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\r\n        var _b;\r\n        var _c = _a.routingContext, routingContext = _c === void 0 ? {} : _c, _d = _a.databaseName, databaseName = _d === void 0 ? null : _d, _e = _a.sessionContext, sessionContext = _e === void 0 ? {} : _e, onError = _a.onError, onCompleted = _a.onCompleted;\r\n        var resultObserver = this.run(CALL_GET_ROUTING_TABLE_MULTI_DB, (_b = {},\r\n            _b[CONTEXT] = routingContext,\r\n            _b[DATABASE] = databaseName,\r\n            _b), __assign(__assign({}, sessionContext), { txConfig: TxConfig.empty() }));\r\n        return new stream_observers_1.ProcedureRouteObserver({\r\n            resultObserver: resultObserver,\r\n            onProtocolError: this._onProtocolError,\r\n            onError: onError,\r\n            onCompleted: onCompleted\r\n        });\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v3_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v4x0_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x0.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v4x0_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v4x0_1 = __importDefault(require(\"./bolt-protocol-v4x0\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar bolt_protocol_v4x1_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x1.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar BOLT_PROTOCOL_V4_1 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V4_1;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {Object} server the server informatio.\r\n     * @param {Chunker} chunker the chunker.\r\n     * @param {Object} packstreamConfig Packstream configuration\r\n     * @param {boolean} packstreamConfig.disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\r\n     * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\r\n     * @param {CreateResponseHandler} createResponseHandler Function which creates the response handler\r\n     * @param {Logger} log the logger\r\n     * @param {Object} serversideRouting\r\n     *\r\n     */\r\n    function BoltProtocol(server, chunker, packstreamConfig, createResponseHandler, log, onProtocolError, serversideRouting) {\r\n        if (createResponseHandler === void 0) { createResponseHandler = function () { return null; }; }\r\n        var _this = _super.call(this, server, chunker, packstreamConfig, createResponseHandler, log, onProtocolError) || this;\r\n        _this._serversideRouting = serversideRouting;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V4_1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, authToken, onComplete); }\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.hello(userAgent, authToken, this._serversideRouting), observer, true);\r\n        return observer;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v4x0_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v4x1_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x1.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v4x1_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v4x1_1 = __importDefault(require(\"./bolt-protocol-v4x1\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_v4x2_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x2.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar BOLT_PROTOCOL_V4_2 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V4_2;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V4_2;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x2_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return BoltProtocol;\r\n}(bolt_protocol_v4x1_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v4x2_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x2.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v4x2_transformer_1.default);\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v4x3_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x3.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v4x3_transformer_1.default);\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar packstream_1 = require(\"../packstream\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_v4x4_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x4.transformer\"));\r\nvar temporal_factory_1 = require(\"./temporal-factory\");\r\nvar functional_1 = require(\"../lang/functional\");\r\nvar localDateTimeToEpochSecond = neo4j_driver_core_1.internal.temporalUtil.localDateTimeToEpochSecond;\r\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x49;\r\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\r\nvar DATE_TIME_WITH_ZONE_ID = 0x69;\r\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\r\nfunction createDateTimeWithZoneIdTransformer(config, logger) {\r\n    var disableLosslessIntegers = config.disableLosslessIntegers, useBigInt = config.useBigInt;\r\n    var dateTimeWithZoneIdTransformer = bolt_protocol_v4x4_transformer_1.default.createDateTimeWithZoneIdTransformer(config);\r\n    return dateTimeWithZoneIdTransformer.extendsWith({\r\n        signature: DATE_TIME_WITH_ZONE_ID,\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneId = _a[2];\r\n            var localDateTime = getTimeInZoneId(timeZoneId, epochSecond, nano);\r\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, (0, neo4j_driver_core_1.int)(nano), localDateTime.timeZoneOffsetSeconds, timeZoneId);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        },\r\n        toStructure: function (value) {\r\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\r\n            var offset = value.timeZoneOffsetSeconds != null\r\n                ? value.timeZoneOffsetSeconds\r\n                : getOffsetFromZoneId(value.timeZoneId, epochSecond, value.nanosecond);\r\n            if (value.timeZoneOffsetSeconds == null) {\r\n                logger.warn('DateTime objects without \"timeZoneOffsetSeconds\" property ' +\r\n                    'are prune to bugs related to ambiguous times. For instance, ' +\r\n                    '2022-10-30T2:30:00[Europe/Berlin] could be GMT+1 or GMT+2.');\r\n            }\r\n            var utc = epochSecond.subtract(offset);\r\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\r\n            var timeZoneId = value.timeZoneId;\r\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [utc, nano, timeZoneId]);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Returns the offset for a given timezone id\r\n *\r\n * Javascript doesn't have support for direct getting the timezone offset from a given\r\n * TimeZoneId and DateTime in the given TimeZoneId. For solving this issue,\r\n *\r\n * 1. The ZoneId is applied to the timestamp, so we could make the difference between the\r\n * given timestamp and the new calculated one. This is the offset for the timezone\r\n * in the utc is equal to epoch (some time in the future or past)\r\n * 2. The offset is subtracted from the timestamp, so we have an estimated utc timestamp.\r\n * 3. The ZoneId is applied to the new timestamp, se we could could make the difference\r\n * between the new timestamp and the calculated one. This is the offset for the given timezone.\r\n *\r\n * Example:\r\n *    Input: 2022-3-27 1:59:59 'Europe/Berlin'\r\n *    Apply 1, 2022-3-27 1:59:59 => 2022-3-27 3:59:59 'Europe/Berlin' +2:00\r\n *    Apply 2, 2022-3-27 1:59:59 - 2:00 => 2022-3-26 23:59:59\r\n *    Apply 3, 2022-3-26 23:59:59 => 2022-3-27 00:59:59 'Europe/Berlin' +1:00\r\n *  The offset is +1 hour.\r\n *\r\n * @param {string} timeZoneId The timezone id\r\n * @param {Integer} epochSecond The epoch second in the timezone id\r\n * @param {Integerable} nanosecond The nanoseconds in the timezone id\r\n * @returns The timezone offset\r\n */\r\nfunction getOffsetFromZoneId(timeZoneId, epochSecond, nanosecond) {\r\n    var dateTimeWithZoneAppliedTwice = getTimeInZoneId(timeZoneId, epochSecond, nanosecond);\r\n    // The wallclock form the current date time\r\n    var epochWithZoneAppliedTwice = localDateTimeToEpochSecond(dateTimeWithZoneAppliedTwice.year, dateTimeWithZoneAppliedTwice.month, dateTimeWithZoneAppliedTwice.day, dateTimeWithZoneAppliedTwice.hour, dateTimeWithZoneAppliedTwice.minute, dateTimeWithZoneAppliedTwice.second, nanosecond);\r\n    var offsetOfZoneInTheFutureUtc = epochWithZoneAppliedTwice.subtract(epochSecond);\r\n    var guessedUtc = epochSecond.subtract(offsetOfZoneInTheFutureUtc);\r\n    var zonedDateTimeFromGuessedUtc = getTimeInZoneId(timeZoneId, guessedUtc, nanosecond);\r\n    var zonedEpochFromGuessedUtc = localDateTimeToEpochSecond(zonedDateTimeFromGuessedUtc.year, zonedDateTimeFromGuessedUtc.month, zonedDateTimeFromGuessedUtc.day, zonedDateTimeFromGuessedUtc.hour, zonedDateTimeFromGuessedUtc.minute, zonedDateTimeFromGuessedUtc.second, nanosecond);\r\n    var offset = zonedEpochFromGuessedUtc.subtract(guessedUtc);\r\n    return offset;\r\n}\r\nvar dateTimeFormatCache = new Map();\r\nfunction getDateTimeFormatForZoneId(timeZoneId) {\r\n    if (!dateTimeFormatCache.has(timeZoneId)) {\r\n        var formatter = new Intl.DateTimeFormat('en-US', {\r\n            timeZone: timeZoneId,\r\n            year: 'numeric',\r\n            month: 'numeric',\r\n            day: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n            hour12: false,\r\n            era: 'narrow'\r\n        });\r\n        dateTimeFormatCache.set(timeZoneId, formatter);\r\n    }\r\n    return dateTimeFormatCache.get(timeZoneId);\r\n}\r\nfunction getTimeInZoneId(timeZoneId, epochSecond, nano) {\r\n    var formatter = getDateTimeFormatForZoneId(timeZoneId);\r\n    var utc = (0, neo4j_driver_core_1.int)(epochSecond)\r\n        .multiply(1000)\r\n        .add((0, neo4j_driver_core_1.int)(nano).div(1000000))\r\n        .toNumber();\r\n    var formattedUtcParts = formatter.formatToParts(utc);\r\n    var localDateTime = formattedUtcParts.reduce(function (obj, currentValue) {\r\n        if (currentValue.type === 'era') {\r\n            obj.adjustEra =\r\n                currentValue.value.toUpperCase() === 'B'\r\n                    ? function (year) { return year.subtract(1).negate(); } // 1BC equals to year 0 in astronomical year numbering\r\n                    : functional_1.identity;\r\n        }\r\n        else if (currentValue.type === 'hour') {\r\n            obj.hour = (0, neo4j_driver_core_1.int)(currentValue.value).modulo(24);\r\n        }\r\n        else if (currentValue.type !== 'literal') {\r\n            obj[currentValue.type] = (0, neo4j_driver_core_1.int)(currentValue.value);\r\n        }\r\n        return obj;\r\n    }, {});\r\n    localDateTime.year = localDateTime.adjustEra(localDateTime.year);\r\n    var epochInTimeZone = localDateTimeToEpochSecond(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond);\r\n    localDateTime.timeZoneOffsetSeconds = epochInTimeZone.subtract(epochSecond);\r\n    localDateTime.hour = localDateTime.hour.modulo(24);\r\n    return localDateTime;\r\n}\r\nfunction createDateTimeWithOffsetTransformer(config) {\r\n    var disableLosslessIntegers = config.disableLosslessIntegers, useBigInt = config.useBigInt;\r\n    var dateTimeWithOffsetTransformer = bolt_protocol_v4x4_transformer_1.default.createDateTimeWithOffsetTransformer(config);\r\n    return dateTimeWithOffsetTransformer.extendsWith({\r\n        signature: DATE_TIME_WITH_ZONE_OFFSET,\r\n        toStructure: function (value) {\r\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\r\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\r\n            var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\r\n            var utcSecond = epochSecond.subtract(timeZoneOffsetSeconds);\r\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [utcSecond, nano, timeZoneOffsetSeconds]);\r\n        },\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 3), utcSecond = _a[0], nano = _a[1], timeZoneOffsetSeconds = _a[2];\r\n            var epochSecond = (0, neo4j_driver_core_1.int)(utcSecond).add(timeZoneOffsetSeconds);\r\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\r\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\r\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\r\n        }\r\n    });\r\n}\r\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\r\n    if (!disableLosslessIntegers && !useBigInt) {\r\n        return obj;\r\n    }\r\n    var convert = function (value) {\r\n        return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\r\n    };\r\n    var clone = Object.create(Object.getPrototypeOf(obj));\r\n    for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\r\n            var value = obj[prop];\r\n            clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\r\n        }\r\n    }\r\n    Object.freeze(clone);\r\n    return clone;\r\n}\r\nexports.default = {\r\n    createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer,\r\n    createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer\r\n};\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v4x2_1 = __importDefault(require(\"./bolt-protocol-v4x2\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar bolt_protocol_v4x3_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x3.transformer\"));\r\nvar bolt_protocol_v5x0_utc_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x0.utc.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, BOLT_PROTOCOL_V4_3 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V4_3;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V4_3;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x3_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Request routing information\r\n     *\r\n     * @param {Object} param -\r\n     * @param {object} param.routingContext The routing context used to define the routing table.\r\n     *  Multi-datacenter deployments is one of its use cases\r\n     * @param {string} param.databaseName The database name\r\n     * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\r\n     * @param {function(err: Error)} param.onError\r\n     * @param {function(RawRoutingTable)} param.onCompleted\r\n     * @returns {RouteObserver} the route observer\r\n     */\r\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\r\n        var _b = _a.routingContext, routingContext = _b === void 0 ? {} : _b, _c = _a.databaseName, databaseName = _c === void 0 ? null : _c, _d = _a.sessionContext, sessionContext = _d === void 0 ? {} : _d, onError = _a.onError, onCompleted = _a.onCompleted;\r\n        var observer = new stream_observers_1.RouteObserver({\r\n            onProtocolError: this._onProtocolError,\r\n            onError: onError,\r\n            onCompleted: onCompleted\r\n        });\r\n        var bookmarks = sessionContext.bookmarks || Bookmarks.empty();\r\n        this.write(request_message_1.default.route(routingContext, bookmarks.values(), databaseName), observer, true);\r\n        return observer;\r\n    };\r\n    /**\r\n     * Initialize a connection with the server\r\n     *\r\n     * @param {Object} args The params\r\n     * @param {string} args.userAgent The user agent\r\n     * @param {any} args.authToken The auth token\r\n     * @param {NotificationFilter} args.notificationFilter The notification filter.\r\n     * @param {function(error)} args.onError On error callback\r\n     * @param {function(onComplte)} args.onComplete On complete callback\r\n     * @returns {LoginObserver} The Login observer\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) {\r\n                if (metadata.patch_bolt !== undefined) {\r\n                    _this._applyPatches(metadata.patch_bolt);\r\n                }\r\n                return _this._onLoginCompleted(metadata, authToken, onComplete);\r\n            }\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.hello(userAgent, authToken, this._serversideRouting, ['utc']), observer, true);\r\n        return observer;\r\n    };\r\n    /**\r\n     *\r\n     * @param {string[]} patches Patches to be applied to the protocol\r\n     */\r\n    BoltProtocol.prototype._applyPatches = function (patches) {\r\n        if (patches.includes('utc')) {\r\n            this._applyUtcPatch();\r\n        }\r\n    };\r\n    BoltProtocol.prototype._applyUtcPatch = function () {\r\n        var _this = this;\r\n        this._transformer = new transformer_1.default(Object.values(__assign(__assign({}, bolt_protocol_v4x3_transformer_1.default), bolt_protocol_v5x0_utc_transformer_1.default)).map(function (create) { return create(_this._config, _this._log); }));\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v4x2_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar bolt_protocol_v4x4_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x4.transformer\"));\r\nvar bolt_protocol_v5x0_utc_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x0.utc.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, FETCH_ALL = _a.FETCH_ALL, Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V4_4;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x4_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Request routing information\r\n    *\r\n    * @param {Object} param -\r\n    * @param {object} param.routingContext The routing context used to define the routing table.\r\n    *  Multi-datacenter deployments is one of its use cases\r\n    * @param {string} param.databaseName The database name\r\n    * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\r\n    * @param {function(err: Error)} param.onError\r\n    * @param {function(RawRoutingTable)} param.onCompleted\r\n    * @returns {RouteObserver} the route observer\r\n    */\r\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\r\n        var _b = _a.routingContext, routingContext = _b === void 0 ? {} : _b, _c = _a.databaseName, databaseName = _c === void 0 ? null : _c, _d = _a.impersonatedUser, impersonatedUser = _d === void 0 ? null : _d, _e = _a.sessionContext, sessionContext = _e === void 0 ? {} : _e, onError = _a.onError, onCompleted = _a.onCompleted;\r\n        var observer = new stream_observers_1.RouteObserver({\r\n            onProtocolError: this._onProtocolError,\r\n            onError: onError,\r\n            onCompleted: onCompleted\r\n        });\r\n        var bookmarks = sessionContext.bookmarks || Bookmarks.empty();\r\n        this.write(request_message_1.default.routeV4x4(routingContext, bookmarks.values(), { databaseName: databaseName, impersonatedUser: impersonatedUser }), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            reactive: reactive,\r\n            fetchSize: fetchSize,\r\n            moreFunction: this._requestMore.bind(this),\r\n            discardFunction: this._requestDiscard.bind(this),\r\n            beforeKeys: beforeKeys,\r\n            afterKeys: afterKeys,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        var flushRun = reactive;\r\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\r\n            bookmarks: bookmarks,\r\n            txConfig: txConfig,\r\n            database: database,\r\n            mode: mode,\r\n            impersonatedUser: impersonatedUser\r\n        }), observer, flushRun && flush);\r\n        if (!reactive) {\r\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\r\n        }\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.beginTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode, impersonatedUser: impersonatedUser }), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype._applyUtcPatch = function () {\r\n        var _this = this;\r\n        this._transformer = new transformer_1.default(Object.values(__assign(__assign({}, bolt_protocol_v4x4_transformer_1.default), bolt_protocol_v5x0_utc_transformer_1.default)).map(function (create) { return create(_this._config, _this._log); }));\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v4x3_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar packstream_1 = require(\"../packstream\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_v4x4_transformer_1 = __importDefault(require(\"./bolt-protocol-v4x4.transformer\"));\r\nvar bolt_protocol_v5x0_utc_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x0.utc.transformer\"));\r\nvar NODE_STRUCT_SIZE = 4;\r\nvar RELATIONSHIP_STRUCT_SIZE = 8;\r\nvar UNBOUND_RELATIONSHIP_STRUCT_SIZE = 4;\r\n/**\r\n * Create an extend Node transformer with support to elementId\r\n * @param {any} config\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createNodeTransformer(config) {\r\n    var node4x4Transformer = bolt_protocol_v4x4_transformer_1.default.createNodeTransformer(config);\r\n    return node4x4Transformer.extendsWith({\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Node', NODE_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 4), identity = _a[0], lables = _a[1], properties = _a[2], elementId = _a[3];\r\n            return new neo4j_driver_core_1.Node(identity, lables, properties, elementId);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Create an extend Relationship transformer with support to elementId\r\n * @param {any} config\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createRelationshipTransformer(config) {\r\n    var relationship4x4Transformer = bolt_protocol_v4x4_transformer_1.default.createRelationshipTransformer(config);\r\n    return relationship4x4Transformer.extendsWith({\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('Relationship', RELATIONSHIP_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 8), identity = _a[0], startNodeIdentity = _a[1], endNodeIdentity = _a[2], type = _a[3], properties = _a[4], elementId = _a[5], startNodeElementId = _a[6], endNodeElementId = _a[7];\r\n            return new neo4j_driver_core_1.Relationship(identity, startNodeIdentity, endNodeIdentity, type, properties, elementId, startNodeElementId, endNodeElementId);\r\n        }\r\n    });\r\n}\r\n/**\r\n * Create an extend Unbound Relationship transformer with support to elementId\r\n * @param {any} config\r\n * @returns {TypeTransformer}\r\n */\r\nfunction createUnboundRelationshipTransformer(config) {\r\n    var unboundRelationshipTransformer = bolt_protocol_v4x4_transformer_1.default.createUnboundRelationshipTransformer(config);\r\n    return unboundRelationshipTransformer.extendsWith({\r\n        fromStructure: function (struct) {\r\n            packstream_1.structure.verifyStructSize('UnboundRelationship', UNBOUND_RELATIONSHIP_STRUCT_SIZE, struct.size);\r\n            var _a = __read(struct.fields, 4), identity = _a[0], type = _a[1], properties = _a[2], elementId = _a[3];\r\n            return new neo4j_driver_core_1.UnboundRelationship(identity, type, properties, elementId);\r\n        }\r\n    });\r\n}\r\nexports.default = __assign(__assign(__assign({}, bolt_protocol_v4x4_transformer_1.default), bolt_protocol_v5x0_utc_transformer_1.default), { createNodeTransformer: createNodeTransformer, createRelationshipTransformer: createRelationshipTransformer, createUnboundRelationshipTransformer: createUnboundRelationshipTransformer });\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v4x4_1 = __importDefault(require(\"./bolt-protocol-v4x4\"));\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar bolt_protocol_v5x0_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x0.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_PROTOCOL_V5_0 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_0;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x0_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initialize a connection with the server\r\n     *\r\n     * @param {Object} args The params\r\n     * @param {string} args.userAgent The user agent\r\n     * @param {any} args.authToken The auth token\r\n     * @param {NotificationFilter} args.notificationFilter The notification filter.\r\n     * @param {function(error)} args.onError On error callback\r\n     * @param {function(onComplte)} args.onComplete On complete callback\r\n     * @returns {LoginObserver} The Login observer\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, authToken, onComplete); }\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.hello(userAgent, authToken, this._serversideRouting), observer, true);\r\n        return observer;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v4x4_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v5x0_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x0.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v5x0_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x0_1 = __importDefault(require(\"./bolt-protocol-v5x0\"));\r\nvar bolt_protocol_util_1 = require(\"./bolt-protocol-util\");\r\nvar bolt_protocol_v5x1_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x1.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_PROTOCOL_V5_1 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_1;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initialize a connection with the server\r\n     *\r\n     * @param {Object} args The params\r\n     * @param {string} args.userAgent The user agent\r\n     * @param {any} args.authToken The auth token\r\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\r\n     * @param {function(error)} args.onError On error callback\r\n     * @param {function(onComplete)} args.onComplete On complete callback\r\n     * @returns {LoginObserver} The Login observer\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var state = {};\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) {\r\n                state.metadata = metadata;\r\n                return _this._onLoginCompleted(metadata);\r\n            }\r\n        });\r\n        // passing notification filter on this protocol version throws an error\r\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\r\n        this.write(request_message_1.default.hello5x1(userAgent, this._serversideRouting), observer, false);\r\n        return this.logon({\r\n            authToken: authToken,\r\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\r\n            onError: onError,\r\n            flush: true\r\n        });\r\n    };\r\n    /**\r\n     * Performs login of the underlying connection\r\n     *\r\n     * @param {Object} args\r\n     * @param {Object} args.authToken the authentication token.\r\n     * @param {function(err: Error)} args.onError the callback to invoke on error.\r\n     * @param {function()} args.onComplete the callback to invoke on completion.\r\n     * @param {boolean} args.flush whether to flush the buffered messages.\r\n     *\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.logon = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, authToken = _b.authToken, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onCompleted: function () { return _this._onLoginCompleted(null, authToken, onComplete); },\r\n            onError: function (error) { return _this._onLoginError(error, onError); }\r\n        });\r\n        this.write(request_message_1.default.logon(authToken), observer, flush);\r\n        return observer;\r\n    };\r\n    /**\r\n     * Performs logoff of the underlying connection\r\n     *\r\n     * @param {Object} param\r\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\r\n     * @param {function()} param.onComplete the callback to invoke on completion.\r\n     * @param {boolean} param.flush whether to flush the buffered messages.\r\n     *\r\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\r\n    */\r\n    BoltProtocol.prototype.logoff = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\r\n        var observer = new stream_observers_1.LogoffObserver({\r\n            onCompleted: onComplete,\r\n            onError: onError\r\n        });\r\n        this.write(request_message_1.default.logoff(), observer, flush);\r\n        return observer;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x0_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v5x1_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x1.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v5x1_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x1_1 = __importDefault(require(\"./bolt-protocol-v5x1\"));\r\nvar bolt_protocol_v5x2_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x2.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V5_2 = _a.BOLT_PROTOCOL_V5_2, FETCH_ALL = _a.FETCH_ALL;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_2;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x2_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initialize a connection with the server\r\n     *\r\n     * @param {Object} args The params\r\n     * @param {string} args.userAgent The user agent\r\n     * @param {string} args.boltAgent The bolt agent\r\n     * @param {any} args.authToken The auth token\r\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\r\n     * @param {function(error)} args.onError On error callback\r\n     * @param {function(onComplete)} args.onComplete On complete callback\r\n     * @returns {LoginObserver} The Login observer\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var state = {};\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) {\r\n                state.metadata = metadata;\r\n                return _this._onLoginCompleted(metadata);\r\n            }\r\n        });\r\n        this.write(\r\n        // if useragent is null then for all versions before 5.3 it should be bolt agent by default\r\n        request_message_1.default.hello5x2(userAgent, notificationFilter, this._serversideRouting), observer, false);\r\n        return this.logon({\r\n            authToken: authToken,\r\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\r\n            onError: onError,\r\n            flush: true\r\n        });\r\n    };\r\n    BoltProtocol.prototype.beginTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode, impersonatedUser: impersonatedUser, notificationFilter: notificationFilter }), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            reactive: reactive,\r\n            fetchSize: fetchSize,\r\n            moreFunction: this._requestMore.bind(this),\r\n            discardFunction: this._requestDiscard.bind(this),\r\n            beforeKeys: beforeKeys,\r\n            afterKeys: afterKeys,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark\r\n        });\r\n        var flushRun = reactive;\r\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\r\n            bookmarks: bookmarks,\r\n            txConfig: txConfig,\r\n            database: database,\r\n            mode: mode,\r\n            impersonatedUser: impersonatedUser,\r\n            notificationFilter: notificationFilter\r\n        }), observer, flushRun && flush);\r\n        if (!reactive) {\r\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\r\n        }\r\n        return observer;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x1_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v5x2_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x2.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v5x2_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x2_1 = __importDefault(require(\"./bolt-protocol-v5x2\"));\r\nvar bolt_protocol_v5x3_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x3.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_PROTOCOL_V5_3 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_3;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_3;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x3_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initialize a connection with the server\r\n     *\r\n     * @param {Object} args The params\r\n     * @param {string} args.userAgent The user agent\r\n     * @param {any} args.authToken The auth token\r\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\r\n     * @param {function(error)} args.onError On error callback\r\n     * @param {function(onComplete)} args.onComplete On complete callback\r\n     * @returns {LoginObserver} The Login observer\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var state = {};\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) {\r\n                state.metadata = metadata;\r\n                return _this._onLoginCompleted(metadata);\r\n            }\r\n        });\r\n        this.write(request_message_1.default.hello5x3(userAgent, boltAgent, notificationFilter, this._serversideRouting), observer, false);\r\n        return this.logon({\r\n            authToken: authToken,\r\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\r\n            onError: onError,\r\n            flush: true\r\n        });\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x2_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v5x3_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x3.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v5x3_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x3_1 = __importDefault(require(\"./bolt-protocol-v5x3\"));\r\nvar bolt_protocol_v5x4_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x4.transformer\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_PROTOCOL_V5_4 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_4;\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_4;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x4_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Send a TELEMETRY through the underlying connection.\r\n     *\r\n     * @param {object} param0 Message params\r\n     * @param {number} param0.api The API called\r\n     * @param {object} param1 Configuration and callbacks callbacks\r\n     * @param {function()} param1.onCompleted Called when completed\r\n     * @param {function()} param1.onError Called when error\r\n     * @return {StreamObserver} the stream observer that monitors the corresponding server response.\r\n     */\r\n    BoltProtocol.prototype.telemetry = function (_a, _b) {\r\n        var api = _a.api;\r\n        var _c = _b === void 0 ? {} : _b, onError = _c.onError, onCompleted = _c.onCompleted;\r\n        var observer = new stream_observers_1.TelemetryObserver({ onCompleted: onCompleted, onError: onError });\r\n        this.write(request_message_1.default.telemetry({ api: api }), observer, false);\r\n        return observer;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x3_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bolt_protocol_v5x4_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x4.transformer\"));\r\nexports.default = __assign({}, bolt_protocol_v5x4_transformer_1.default);\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x4_1 = __importDefault(require(\"./bolt-protocol-v5x4\"));\r\nvar bolt_protocol_v5x5_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x5.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar request_message_1 = __importDefault(require(\"./request-message\"));\r\nvar stream_observers_1 = require(\"./stream-observers\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V5_5 = _a.BOLT_PROTOCOL_V5_5, FETCH_ALL = _a.FETCH_ALL;\r\nvar DEFAULT_DIAGNOSTIC_RECORD = Object.freeze({\r\n    OPERATION: '',\r\n    OPERATION_CODE: '0',\r\n    CURRENT_SCHEMA: '/'\r\n});\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_5;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x5_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initialize a connection with the server\r\n     *\r\n     * @param {Object} args The params\r\n     * @param {string} args.userAgent The user agent\r\n     * @param {any} args.authToken The auth token\r\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\r\n     * @param {function(error)} args.onError On error callback\r\n     * @param {function(onComplete)} args.onComplete On complete callback\r\n     * @returns {LoginObserver} The Login observer\r\n     */\r\n    BoltProtocol.prototype.initialize = function (_a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\r\n        var state = {};\r\n        var observer = new stream_observers_1.LoginObserver({\r\n            onError: function (error) { return _this._onLoginError(error, onError); },\r\n            onCompleted: function (metadata) {\r\n                state.metadata = metadata;\r\n                return _this._onLoginCompleted(metadata);\r\n            }\r\n        });\r\n        this.write(request_message_1.default.hello5x5(userAgent, boltAgent, notificationFilter, this._serversideRouting), observer, false);\r\n        return this.logon({\r\n            authToken: authToken,\r\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\r\n            onError: onError,\r\n            flush: true\r\n        });\r\n    };\r\n    BoltProtocol.prototype.beginTransaction = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete\r\n        });\r\n        observer.prepareToHandleSingleResponse();\r\n        this.write(request_message_1.default.begin5x5({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode, impersonatedUser: impersonatedUser, notificationFilter: notificationFilter }), observer, true);\r\n        return observer;\r\n    };\r\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\r\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\r\n        var observer = new stream_observers_1.ResultStreamObserver({\r\n            server: this._server,\r\n            reactive: reactive,\r\n            fetchSize: fetchSize,\r\n            moreFunction: this._requestMore.bind(this),\r\n            discardFunction: this._requestDiscard.bind(this),\r\n            beforeKeys: beforeKeys,\r\n            afterKeys: afterKeys,\r\n            beforeError: beforeError,\r\n            afterError: afterError,\r\n            beforeComplete: beforeComplete,\r\n            afterComplete: afterComplete,\r\n            highRecordWatermark: highRecordWatermark,\r\n            lowRecordWatermark: lowRecordWatermark,\r\n            enrichMetadata: this._enrichMetadata\r\n        });\r\n        var flushRun = reactive;\r\n        this.write(request_message_1.default.runWithMetadata5x5(query, parameters, {\r\n            bookmarks: bookmarks,\r\n            txConfig: txConfig,\r\n            database: database,\r\n            mode: mode,\r\n            impersonatedUser: impersonatedUser,\r\n            notificationFilter: notificationFilter\r\n        }), observer, flushRun && flush);\r\n        if (!reactive) {\r\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\r\n        }\r\n        return observer;\r\n    };\r\n    /**\r\n     *\r\n     * @param {object} metadata\r\n     * @returns {object}\r\n     */\r\n    BoltProtocol.prototype._enrichMetadata = function (metadata) {\r\n        if (Array.isArray(metadata.statuses)) {\r\n            metadata.statuses = metadata.statuses.map(function (status) { return (__assign(__assign({}, status), { description: status.neo4j_code != null ? status.status_description : status.description, diagnostic_record: status.diagnostic_record !== null ? __assign(__assign({}, DEFAULT_DIAGNOSTIC_RECORD), status.diagnostic_record) : null })); });\r\n        }\r\n        return metadata;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x4_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x5_1 = __importDefault(require(\"./bolt-protocol-v5x5\"));\r\nvar bolt_protocol_v5x5_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x5.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_PROTOCOL_V5_6 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_6;\r\nvar DEFAULT_DIAGNOSTIC_RECORD = Object.freeze({\r\n    OPERATION: '',\r\n    OPERATION_CODE: '0',\r\n    CURRENT_SCHEMA: '/'\r\n});\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_6;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x5_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {object} metadata\r\n     * @returns {object}\r\n     */\r\n    BoltProtocol.prototype._enrichMetadata = function (metadata) {\r\n        if (Array.isArray(metadata.statuses)) {\r\n            metadata.statuses = metadata.statuses.map(function (status) { return (__assign(__assign({}, status), { diagnostic_record: status.diagnostic_record !== null ? __assign(__assign({}, DEFAULT_DIAGNOSTIC_RECORD), status.diagnostic_record) : null })); });\r\n        }\r\n        return metadata;\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x5_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar bolt_protocol_v5x6_1 = __importDefault(require(\"./bolt-protocol-v5x6\"));\r\nvar bolt_protocol_v5x5_transformer_1 = __importDefault(require(\"./bolt-protocol-v5x5.transformer\"));\r\nvar transformer_1 = __importDefault(require(\"./transformer\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar BOLT_PROTOCOL_V5_7 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_7;\r\nvar DEFAULT_DIAGNOSTIC_RECORD = Object.freeze({\r\n    OPERATION: '',\r\n    OPERATION_CODE: '0',\r\n    CURRENT_SCHEMA: '/'\r\n});\r\nvar BoltProtocol = /** @class */ (function (_super) {\r\n    __extends(BoltProtocol, _super);\r\n    function BoltProtocol() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\r\n        get: function () {\r\n            return BOLT_PROTOCOL_V5_7;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._transformer === undefined) {\r\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x5_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\r\n            }\r\n            return this._transformer;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {object} metadata\r\n     * @returns {object}\r\n     */\r\n    BoltProtocol.prototype.enrichErrorMetadata = function (metadata) {\r\n        return __assign(__assign({}, metadata), { cause: (metadata.cause !== null && metadata.cause !== undefined) ? this.enrichErrorMetadata(metadata.cause) : null, code: metadata.neo4j_code, diagnostic_record: metadata.diagnostic_record !== null ? __assign(__assign({}, DEFAULT_DIAGNOSTIC_RECORD), metadata.diagnostic_record) : null });\r\n    };\r\n    return BoltProtocol;\r\n}(bolt_protocol_v5x6_1.default));\r\nexports.default = BoltProtocol;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\n// Signature bytes for each response message type\r\nvar SUCCESS = 0x70; // 0111 0000 // SUCCESS <metadata>\r\nvar RECORD = 0x71; // 0111 0001 // RECORD <value>\r\nvar IGNORED = 0x7e; // 0111 1110 // IGNORED <metadata>\r\nvar FAILURE = 0x7f; // 0111 1111 // FAILURE <metadata>\r\nfunction NO_OP() { }\r\nfunction NO_OP_IDENTITY(subject) {\r\n    return subject;\r\n}\r\nvar NO_OP_OBSERVER = {\r\n    onNext: NO_OP,\r\n    onCompleted: NO_OP,\r\n    onError: NO_OP\r\n};\r\n/**\r\n * Treat the protocol responses and notify the observers\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    /**\r\n     * Called when something went wrong with the connectio\r\n     * @callback ResponseHandler~Observer~OnErrorApplyTransformation\r\n     * @param {any} error The error\r\n     * @returns {any} The new error\r\n     */\r\n    /**\r\n     * Called when something went wrong with the connectio\r\n     * @callback ResponseHandler~Observer~OnError\r\n     * @param {any} error The error\r\n     */\r\n    /**\r\n     * Called when something went wrong with the connectio\r\n     * @callback ResponseHandler~MetadataTransformer\r\n     * @param {any} metadata The metadata got onSuccess\r\n     * @returns {any} The transformed metadata\r\n     */\r\n    /**\r\n     * @typedef {Object} ResponseHandler~Observer\r\n     * @property {ResponseHandler~Observer~OnError} onError Invoke when a connection error occurs\r\n     * @property {ResponseHandler~Observer~OnError} onFailure Invoke when a protocol failure occurs\r\n     * @property {ResponseHandler~Observer~OnErrorApplyTransformation} onErrorApplyTransformation Invoke just after the failure occurs,\r\n     *  before notify to respective observer. This method should transform the failure reason to the approprited one.\r\n     */\r\n    /**\r\n     * Constructor\r\n     * @param {Object} param The params\r\n     * @param {ResponseHandler~MetadataTransformer} transformMetadata Transform metadata when the SUCCESS is received.\r\n     * @param {Channel} channel The channel used to exchange messages\r\n     * @param {Logger} log The logger\r\n     * @param {ResponseHandler~Observer} observer Object which will be notified about errors\r\n     */\r\n    function ResponseHandler(_a) {\r\n        var _b = _a === void 0 ? {} : _a, transformMetadata = _b.transformMetadata, enrichErrorMetadata = _b.enrichErrorMetadata, log = _b.log, observer = _b.observer;\r\n        this._pendingObservers = [];\r\n        this._log = log;\r\n        this._transformMetadata = transformMetadata || NO_OP_IDENTITY;\r\n        this._enrichErrorMetadata = enrichErrorMetadata || NO_OP_IDENTITY;\r\n        this._observer = Object.assign({\r\n            onObserversCountChange: NO_OP,\r\n            onError: NO_OP,\r\n            onFailure: NO_OP,\r\n            onErrorApplyTransformation: NO_OP_IDENTITY\r\n        }, observer);\r\n    }\r\n    Object.defineProperty(ResponseHandler.prototype, \"currentFailure\", {\r\n        get: function () {\r\n            return this._currentFailure;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ResponseHandler.prototype.handleResponse = function (msg) {\r\n        var payload = msg.fields[0];\r\n        switch (msg.signature) {\r\n            case RECORD:\r\n                if (this._log.isDebugEnabled()) {\r\n                    this._log.debug(\"S: RECORD \".concat(neo4j_driver_core_1.json.stringify(msg)));\r\n                }\r\n                this._currentObserver.onNext(payload);\r\n                break;\r\n            case SUCCESS:\r\n                if (this._log.isDebugEnabled()) {\r\n                    this._log.debug(\"S: SUCCESS \".concat(neo4j_driver_core_1.json.stringify(msg)));\r\n                }\r\n                try {\r\n                    var metadata = this._transformMetadata(payload);\r\n                    this._currentObserver.onCompleted(metadata);\r\n                }\r\n                finally {\r\n                    this._updateCurrentObserver();\r\n                }\r\n                break;\r\n            case FAILURE:\r\n                if (this._log.isDebugEnabled()) {\r\n                    this._log.debug(\"S: FAILURE \".concat(neo4j_driver_core_1.json.stringify(msg)));\r\n                }\r\n                try {\r\n                    this._currentFailure = this._handleErrorPayload(this._enrichErrorMetadata(payload));\r\n                    this._currentObserver.onError(this._currentFailure);\r\n                }\r\n                finally {\r\n                    this._updateCurrentObserver();\r\n                    // Things are now broken. Pending observers will get FAILURE messages routed until we are done handling this failure.\r\n                    this._observer.onFailure(this._currentFailure);\r\n                }\r\n                break;\r\n            case IGNORED:\r\n                if (this._log.isDebugEnabled()) {\r\n                    this._log.debug(\"S: IGNORED \".concat(neo4j_driver_core_1.json.stringify(msg)));\r\n                }\r\n                try {\r\n                    if (this._currentFailure && this._currentObserver.onError) {\r\n                        this._currentObserver.onError(this._currentFailure);\r\n                    }\r\n                    else if (this._currentObserver.onError) {\r\n                        this._currentObserver.onError((0, neo4j_driver_core_1.newError)('Ignored either because of an error or RESET'));\r\n                    }\r\n                }\r\n                finally {\r\n                    this._updateCurrentObserver();\r\n                }\r\n                break;\r\n            default:\r\n                this._observer.onError((0, neo4j_driver_core_1.newError)('Unknown Bolt protocol message: ' + msg));\r\n        }\r\n    };\r\n    /*\r\n     * Pop next pending observer form the list of observers and make it current observer.\r\n     * @protected\r\n     */\r\n    ResponseHandler.prototype._updateCurrentObserver = function () {\r\n        this._currentObserver = this._pendingObservers.shift();\r\n        this._observer.onObserversCountChange(this._observersCount);\r\n    };\r\n    Object.defineProperty(ResponseHandler.prototype, \"_observersCount\", {\r\n        get: function () {\r\n            return this._currentObserver == null ? this._pendingObservers.length : this._pendingObservers.length + 1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ResponseHandler.prototype._queueObserver = function (observer) {\r\n        observer = observer || NO_OP_OBSERVER;\r\n        observer.onCompleted = observer.onCompleted || NO_OP;\r\n        observer.onError = observer.onError || NO_OP;\r\n        observer.onNext = observer.onNext || NO_OP;\r\n        if (this._currentObserver === undefined) {\r\n            this._currentObserver = observer;\r\n        }\r\n        else {\r\n            this._pendingObservers.push(observer);\r\n        }\r\n        this._observer.onObserversCountChange(this._observersCount);\r\n        return true;\r\n    };\r\n    ResponseHandler.prototype._notifyErrorToObservers = function (error) {\r\n        if (this._currentObserver && this._currentObserver.onError) {\r\n            this._currentObserver.onError(error);\r\n        }\r\n        while (this._pendingObservers.length > 0) {\r\n            var observer = this._pendingObservers.shift();\r\n            if (observer && observer.onError) {\r\n                observer.onError(error);\r\n            }\r\n        }\r\n    };\r\n    ResponseHandler.prototype.hasOngoingObservableRequests = function () {\r\n        return this._currentObserver != null || this._pendingObservers.length > 0;\r\n    };\r\n    ResponseHandler.prototype._resetFailure = function () {\r\n        this._currentFailure = null;\r\n    };\r\n    ResponseHandler.prototype._handleErrorPayload = function (payload) {\r\n        var standardizedCode = _standardizeCode(payload.code);\r\n        var cause = payload.cause != null ? this._handleErrorCause(payload.cause) : undefined;\r\n        var error = (0, neo4j_driver_core_1.newError)(payload.message, standardizedCode, cause, payload.gql_status, payload.description, payload.diagnostic_record);\r\n        return this._observer.onErrorApplyTransformation(error);\r\n    };\r\n    ResponseHandler.prototype._handleErrorCause = function (payload) {\r\n        var cause = payload.cause != null ? this._handleErrorCause(payload.cause) : undefined;\r\n        var error = (0, neo4j_driver_core_1.newGQLError)(payload.message, cause, payload.gql_status, payload.description, payload.diagnostic_record);\r\n        return this._observer.onErrorApplyTransformation(error);\r\n    };\r\n    return ResponseHandler;\r\n}());\r\nexports.default = ResponseHandler;\r\n/**\r\n * Standardize error classification that are different between 5.x and previous versions.\r\n *\r\n * The transient error were clean-up for being retrieable and because of this\r\n * `Terminated` and `LockClientStopped` were reclassified as `ClientError`.\r\n *\r\n * @param {string} code\r\n * @returns {string} the standardized error code\r\n */\r\nfunction _standardizeCode(code) {\r\n    if (code === 'Neo.TransientError.Transaction.Terminated') {\r\n        return 'Neo.ClientError.Transaction.Terminated';\r\n    }\r\n    else if (code === 'Neo.TransientError.Transaction.LockClientStopped') {\r\n        return 'Neo.ClientError.Transaction.LockClientStopped';\r\n    }\r\n    return code;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar bolt_protocol_v1_1 = __importDefault(require(\"./bolt-protocol-v1\"));\r\nvar bolt_protocol_v2_1 = __importDefault(require(\"./bolt-protocol-v2\"));\r\nvar bolt_protocol_v3_1 = __importDefault(require(\"./bolt-protocol-v3\"));\r\nvar bolt_protocol_v4x0_1 = __importDefault(require(\"./bolt-protocol-v4x0\"));\r\nvar bolt_protocol_v4x1_1 = __importDefault(require(\"./bolt-protocol-v4x1\"));\r\nvar bolt_protocol_v4x2_1 = __importDefault(require(\"./bolt-protocol-v4x2\"));\r\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\r\nvar bolt_protocol_v4x4_1 = __importDefault(require(\"./bolt-protocol-v4x4\"));\r\nvar bolt_protocol_v5x0_1 = __importDefault(require(\"./bolt-protocol-v5x0\"));\r\nvar bolt_protocol_v5x1_1 = __importDefault(require(\"./bolt-protocol-v5x1\"));\r\nvar bolt_protocol_v5x2_1 = __importDefault(require(\"./bolt-protocol-v5x2\"));\r\nvar bolt_protocol_v5x3_1 = __importDefault(require(\"./bolt-protocol-v5x3\"));\r\nvar bolt_protocol_v5x4_1 = __importDefault(require(\"./bolt-protocol-v5x4\"));\r\nvar bolt_protocol_v5x5_1 = __importDefault(require(\"./bolt-protocol-v5x5\"));\r\nvar bolt_protocol_v5x6_1 = __importDefault(require(\"./bolt-protocol-v5x6\"));\r\nvar bolt_protocol_v5x7_1 = __importDefault(require(\"./bolt-protocol-v5x7\"));\r\n// eslint-disable-next-line no-unused-vars\r\nvar channel_1 = require(\"../channel\");\r\nvar response_handler_1 = __importDefault(require(\"./response-handler\"));\r\n/**\r\n * Creates a protocol with a given version\r\n *\r\n * @param {object} config\r\n * @param {number} config.version The version of the protocol\r\n * @param {channel} config.channel The channel\r\n * @param {Chunker} config.chunker The chunker\r\n * @param {Dechunker} config.dechunker The dechunker\r\n * @param {Logger} config.log The logger\r\n * @param {ResponseHandler~Observer} config.observer Observer\r\n * @param {boolean} config.disableLosslessIntegers Disable the lossless integers\r\n * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\r\n * @param {boolean} config.serversideRouting It's using server side routing\r\n */\r\nfunction create(_a) {\r\n    var _b = _a === void 0 ? {} : _a, version = _b.version, chunker = _b.chunker, dechunker = _b.dechunker, channel = _b.channel, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt, serversideRouting = _b.serversideRouting, server = _b.server, // server info\r\n    log = _b.log, observer = _b.observer;\r\n    var createResponseHandler = function (protocol) {\r\n        var responseHandler = new response_handler_1.default({\r\n            transformMetadata: protocol.transformMetadata.bind(protocol),\r\n            enrichErrorMetadata: protocol.enrichErrorMetadata.bind(protocol),\r\n            log: log,\r\n            observer: observer\r\n        });\r\n        // reset the error handler to just handle errors and forget about the handshake promise\r\n        channel.onerror = observer.onError.bind(observer);\r\n        // Ok, protocol running. Simply forward all messages to the dechunker\r\n        channel.onmessage = function (buf) { return dechunker.write(buf); };\r\n        // setup dechunker to dechunk messages and forward them to the message handler\r\n        dechunker.onmessage = function (buf) {\r\n            try {\r\n                responseHandler.handleResponse(protocol.unpack(buf));\r\n            }\r\n            catch (e) {\r\n                return observer.onError(e);\r\n            }\r\n        };\r\n        return responseHandler;\r\n    };\r\n    return createProtocol(version, server, chunker, { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt }, serversideRouting, createResponseHandler, observer.onProtocolError.bind(observer), log);\r\n}\r\nexports.default = create;\r\nfunction createProtocol(version, server, chunker, packingConfig, serversideRouting, createResponseHandler, onProtocolError, log) {\r\n    switch (version) {\r\n        case 1:\r\n            return new bolt_protocol_v1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\r\n        case 2:\r\n            return new bolt_protocol_v2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\r\n        case 3:\r\n            return new bolt_protocol_v3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\r\n        case 4.0:\r\n            return new bolt_protocol_v4x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\r\n        case 4.1:\r\n            return new bolt_protocol_v4x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 4.2:\r\n            return new bolt_protocol_v4x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 4.3:\r\n            return new bolt_protocol_v4x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 4.4:\r\n            return new bolt_protocol_v4x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.0:\r\n            return new bolt_protocol_v5x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.1:\r\n            return new bolt_protocol_v5x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.2:\r\n            return new bolt_protocol_v5x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.3:\r\n            return new bolt_protocol_v5x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.4:\r\n            return new bolt_protocol_v5x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.5:\r\n            return new bolt_protocol_v5x5_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.6:\r\n            return new bolt_protocol_v5x6_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        case 5.7:\r\n            return new bolt_protocol_v5x7_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\r\n        default:\r\n            throw (0, neo4j_driver_core_1.newError)('Unknown Bolt protocol version: ' + version);\r\n    }\r\n}\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RawRoutingTable = exports.BoltProtocol = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar handshake_1 = __importDefault(require(\"./handshake\"));\r\nvar create_1 = __importDefault(require(\"./create\"));\r\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\r\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\r\n__exportStar(require(\"./stream-observers\"), exports);\r\nexports.BoltProtocol = bolt_protocol_v4x3_1.default;\r\nexports.RawRoutingTable = routing_table_raw_1.default;\r\nexports.default = {\r\n    handshake: handshake_1.default,\r\n    create: create_1.default\r\n};\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar SingleConnectionProvider = /** @class */ (function (_super) {\r\n    __extends(SingleConnectionProvider, _super);\r\n    function SingleConnectionProvider(connection) {\r\n        var _this = _super.call(this) || this;\r\n        _this._connection = connection;\r\n        return _this;\r\n    }\r\n    /**\r\n     * See {@link ConnectionProvider} for more information about this method and\r\n     * its arguments.\r\n     */\r\n    SingleConnectionProvider.prototype.acquireConnection = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks;\r\n        var connection = this._connection;\r\n        this._connection = null;\r\n        return Promise.resolve(connection);\r\n    };\r\n    return SingleConnectionProvider;\r\n}(neo4j_driver_core_1.ConnectionProvider));\r\nexports.default = SingleConnectionProvider;\r\n", "\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nvar bolt_1 = require(\"../bolt\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar Connection = /** @class */ (function (_super) {\r\n    __extends(Connection, _super);\r\n    /**\r\n     * @param {ConnectionErrorHandler} errorHandler the error handler\r\n     */\r\n    function Connection(errorHandler) {\r\n        var _this = _super.call(this) || this;\r\n        _this._errorHandler = errorHandler;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Connection.prototype, \"id\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"databaseId\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        set: function (value) {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"authToken\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        set: function (value) {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"supportsReAuth\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"creationTimestamp\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"idleTimestamp\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        set: function (value) {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @returns {BoltProtocol} the underlying bolt protocol assigned to this connection\r\n     */\r\n    Connection.prototype.protocol = function () {\r\n        throw new Error('not implemented');\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"address\", {\r\n        /**\r\n         * @returns {ServerAddress} the server address this connection is opened against\r\n         */\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"version\", {\r\n        /**\r\n         * @returns {ServerVersion} the version of the server this connection is connected to\r\n         */\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        set: function (value) {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"server\", {\r\n        get: function () {\r\n            throw new Error('not implemented');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Connect to the target address, negotiate Bolt protocol and send initialization message.\r\n     * @param {string} userAgent the user agent for this driver.\r\n     * @param {Object} boltAgent the bolt agent for this driver.\r\n     * @param {Object} authToken the object containing auth information.\r\n     * @param {boolean} shouldWaitReAuth whether ot not the connection will wait for re-authentication to happen\r\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\r\n     */\r\n    Connection.prototype.connect = function (userAgent, boltAgent, authToken, shouldWaitReAuth) {\r\n        throw new Error('not implemented');\r\n    };\r\n    /**\r\n     * Write a message to the network channel.\r\n     * @param {RequestMessage} message the message to write.\r\n     * @param {ResultStreamObserver} observer the response observer.\r\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\r\n     */\r\n    Connection.prototype.write = function (message, observer, flush) {\r\n        throw new Error('not implemented');\r\n    };\r\n    /**\r\n     * Call close on the channel.\r\n     * @returns {Promise<void>} - A promise that will be resolved when the connection is closed.\r\n     *\r\n     */\r\n    Connection.prototype.close = function () {\r\n        throw new Error('not implemented');\r\n    };\r\n    /**\r\n     *\r\n     * @param error\r\n     * @param address\r\n     * @returns {Neo4jError|*}\r\n     */\r\n    Connection.prototype.handleAndTransformError = function (error, address) {\r\n        if (this._errorHandler) {\r\n            return this._errorHandler.handleAndTransformError(error, address, this);\r\n        }\r\n        return error;\r\n    };\r\n    return Connection;\r\n}(neo4j_driver_core_1.Connection));\r\nexports.default = Connection;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createChannelConnection = void 0;\r\nvar channel_1 = require(\"../channel\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar connection_1 = __importDefault(require(\"./connection\"));\r\nvar bolt_1 = __importDefault(require(\"../bolt\"));\r\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\r\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\r\nvar idGenerator = 0;\r\n/**\r\n * Crete new connection to the provided address. Returned connection is not connected.\r\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\r\n * @param {Object} config - the driver configuration.\r\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\r\n * @param {Logger} log - configured logger.\r\n * @param {clientCertificate} clientCertificate - configured client certificate\r\n * @return {Connection} - new connection.\r\n */\r\nfunction createChannelConnection(address, config, errorHandler, log, clientCertificate, serversideRouting, createChannel) {\r\n    if (serversideRouting === void 0) { serversideRouting = null; }\r\n    if (createChannel === void 0) { createChannel = function (channelConfig) { return new channel_1.Channel(channelConfig); }; }\r\n    var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode(), clientCertificate);\r\n    var channel = createChannel(channelConfig);\r\n    return bolt_1.default.handshake(channel, log)\r\n        .then(function (_a) {\r\n        var version = _a.protocolVersion, consumeRemainingBuffer = _a.consumeRemainingBuffer;\r\n        var chunker = new channel_1.Chunker(channel);\r\n        var dechunker = new channel_1.Dechunker();\r\n        var createProtocol = function (conn) {\r\n            return bolt_1.default.create({\r\n                version: version,\r\n                channel: channel,\r\n                chunker: chunker,\r\n                dechunker: dechunker,\r\n                disableLosslessIntegers: config.disableLosslessIntegers,\r\n                useBigInt: config.useBigInt,\r\n                serversideRouting: serversideRouting,\r\n                server: conn.server,\r\n                log: conn.logger,\r\n                observer: {\r\n                    onObserversCountChange: conn._handleOngoingRequestsNumberChange.bind(conn),\r\n                    onError: conn._handleFatalError.bind(conn),\r\n                    onFailure: conn._resetOnFailure.bind(conn),\r\n                    onProtocolError: conn._handleProtocolError.bind(conn),\r\n                    onErrorApplyTransformation: function (error) {\r\n                        return conn.handleAndTransformError(error, conn._address);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, config.notificationFilter, createProtocol, config.telemetryDisabled);\r\n        // forward all pending bytes to the dechunker\r\n        consumeRemainingBuffer(function (buffer) { return dechunker.write(buffer); });\r\n        return connection;\r\n    })\r\n        .catch(function (reason) {\r\n        return channel.close().then(function () {\r\n            throw reason;\r\n        });\r\n    });\r\n}\r\nexports.createChannelConnection = createChannelConnection;\r\nvar ChannelConnection = /** @class */ (function (_super) {\r\n    __extends(ChannelConnection, _super);\r\n    /**\r\n     * @constructor\r\n     * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\r\n     * @param {ConnectionErrorHandler} errorHandler the error handler.\r\n     * @param {ServerAddress} address - the server address to connect to.\r\n     * @param {Logger} log - the configured logger.\r\n     * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\r\n     * @param {Chunker} chunker the chunker\r\n     * @param protocolSupplier Bolt protocol supplier\r\n     */\r\n    function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\r\n    notificationFilter, protocolSupplier, telemetryDisabled) {\r\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\r\n        if (serversideRouting === void 0) { serversideRouting = null; }\r\n        var _this = _super.call(this, errorHandler) || this;\r\n        _this._authToken = null;\r\n        _this._idle = false;\r\n        _this._reseting = false;\r\n        _this._resetObservers = [];\r\n        _this._id = idGenerator++;\r\n        _this._address = address;\r\n        _this._server = { address: address.asHostPort() };\r\n        _this._creationTimestamp = Date.now();\r\n        _this._disableLosslessIntegers = disableLosslessIntegers;\r\n        _this._ch = channel;\r\n        _this._chunker = chunker;\r\n        _this._log = createConnectionLogger(_this, log);\r\n        _this._serversideRouting = serversideRouting;\r\n        _this._notificationFilter = notificationFilter;\r\n        _this._telemetryDisabledDriverConfig = telemetryDisabled === true;\r\n        _this._telemetryDisabledConnection = true;\r\n        // connection from the database, returned in response for HELLO message and might not be available\r\n        _this._dbConnectionId = null;\r\n        // bolt protocol is initially not initialized\r\n        /**\r\n         * @private\r\n         * @type {BoltProtocol}\r\n         */\r\n        _this._protocol = protocolSupplier(_this);\r\n        // Set to true on fatal errors, to get this out of connection pool.\r\n        _this._isBroken = false;\r\n        if (_this._log.isDebugEnabled()) {\r\n            _this._log.debug(\"created towards \".concat(address));\r\n        }\r\n        return _this;\r\n    }\r\n    ChannelConnection.prototype.beginTransaction = function (config) {\r\n        this._sendTelemetryIfEnabled(config);\r\n        return this._protocol.beginTransaction(config);\r\n    };\r\n    ChannelConnection.prototype.run = function (query, parameters, config) {\r\n        this._sendTelemetryIfEnabled(config);\r\n        return this._protocol.run(query, parameters, config);\r\n    };\r\n    ChannelConnection.prototype._sendTelemetryIfEnabled = function (config) {\r\n        if (this._telemetryDisabledConnection ||\r\n            this._telemetryDisabledDriverConfig ||\r\n            config == null ||\r\n            config.apiTelemetryConfig == null) {\r\n            return;\r\n        }\r\n        this._protocol.telemetry({\r\n            api: config.apiTelemetryConfig.api\r\n        }, {\r\n            onCompleted: config.apiTelemetryConfig.onTelemetrySuccess,\r\n            onError: config.beforeError\r\n        });\r\n    };\r\n    ChannelConnection.prototype.commitTransaction = function (config) {\r\n        return this._protocol.commitTransaction(config);\r\n    };\r\n    ChannelConnection.prototype.rollbackTransaction = function (config) {\r\n        return this._protocol.rollbackTransaction(config);\r\n    };\r\n    ChannelConnection.prototype.getProtocolVersion = function () {\r\n        return this._protocol.version;\r\n    };\r\n    Object.defineProperty(ChannelConnection.prototype, \"authToken\", {\r\n        get: function () {\r\n            return this._authToken;\r\n        },\r\n        set: function (value) {\r\n            this._authToken = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"supportsReAuth\", {\r\n        get: function () {\r\n            return this._protocol.supportsReAuth;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"id\", {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\r\n        get: function () {\r\n            return this._dbConnectionId;\r\n        },\r\n        set: function (value) {\r\n            this._dbConnectionId = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"idleTimestamp\", {\r\n        get: function () {\r\n            return this._idleTimestamp;\r\n        },\r\n        set: function (value) {\r\n            this._idleTimestamp = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"creationTimestamp\", {\r\n        get: function () {\r\n            return this._creationTimestamp;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Send initialization message.\r\n     * @param {string} userAgent the user agent for this driver.\r\n     * @param {Object} boltAgent the bolt agent for this driver.\r\n     * @param {Object} authToken the object containing auth information.\r\n     * @param {boolean} waitReAuth whether ot not the connection will wait for re-authentication to happen\r\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\r\n     */\r\n    ChannelConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._protocol.initialized && !this._protocol.supportsReAuth) {\r\n                            throw (0, neo4j_driver_core_1.newError)('Connection does not support re-auth');\r\n                        }\r\n                        this._authToken = authToken;\r\n                        if (!!this._protocol.initialized) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._initialize(userAgent, boltAgent, authToken)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2:\r\n                        if (!waitReAuth) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                                _this._protocol.logoff({\r\n                                    onError: reject\r\n                                });\r\n                                _this._protocol.logon({\r\n                                    authToken: authToken,\r\n                                    onError: reject,\r\n                                    onComplete: function () { return resolve(_this); },\r\n                                    flush: true\r\n                                });\r\n                            })];\r\n                    case 3: return [2 /*return*/, _a.sent()];\r\n                    case 4:\r\n                        this._protocol.logoff();\r\n                        this._protocol.logon({ authToken: authToken, flush: true });\r\n                        return [2 /*return*/, this];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform protocol-specific initialization which includes authentication.\r\n     * @param {string} userAgent the user agent for this driver.\r\n     * @param {string} boltAgent the bolt agent for this driver.\r\n     * @param {Object} authToken the object containing auth information.\r\n     * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\r\n     */\r\n    ChannelConnection.prototype._initialize = function (userAgent, boltAgent, authToken) {\r\n        var _this = this;\r\n        var self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._protocol.initialize({\r\n                userAgent: userAgent,\r\n                boltAgent: boltAgent,\r\n                authToken: authToken,\r\n                notificationFilter: _this._notificationFilter,\r\n                onError: function (err) { return reject(err); },\r\n                onComplete: function (metadata) {\r\n                    if (metadata) {\r\n                        // read server version from the response metadata, if it is available\r\n                        var serverVersion = metadata.server;\r\n                        if (!_this.version || serverVersion) {\r\n                            _this.version = serverVersion;\r\n                        }\r\n                        // read database connection id from the response metadata, if it is available\r\n                        var dbConnectionId = metadata.connection_id;\r\n                        if (!_this.databaseId) {\r\n                            _this.databaseId = dbConnectionId;\r\n                        }\r\n                        if (metadata.hints) {\r\n                            var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\r\n                            if (receiveTimeoutRaw !== null &&\r\n                                receiveTimeoutRaw !== undefined) {\r\n                                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\r\n                                if (Number.isInteger(receiveTimeoutInSeconds) &&\r\n                                    receiveTimeoutInSeconds > 0) {\r\n                                    _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\r\n                                }\r\n                                else {\r\n                                    _this._log.info(\"Server located at \".concat(_this._address, \" supplied an invalid connection receive timeout value (\").concat(receiveTimeoutInSeconds, \"). \") +\r\n                                        'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\r\n                                }\r\n                            }\r\n                            var telemetryEnabledHint = metadata.hints['telemetry.enabled'];\r\n                            if (telemetryEnabledHint === true) {\r\n                                _this._telemetryDisabledConnection = false;\r\n                            }\r\n                        }\r\n                    }\r\n                    resolve(self);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the Bolt protocol for the connection.\r\n     * @return {BoltProtocol} the protocol.\r\n     */\r\n    ChannelConnection.prototype.protocol = function () {\r\n        return this._protocol;\r\n    };\r\n    Object.defineProperty(ChannelConnection.prototype, \"address\", {\r\n        get: function () {\r\n            return this._address;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"version\", {\r\n        /**\r\n         * Get the version of the connected server.\r\n         * Available only after initialization\r\n         *\r\n         * @returns {ServerVersion} version\r\n         */\r\n        get: function () {\r\n            return this._server.version;\r\n        },\r\n        set: function (value) {\r\n            this._server.version = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"server\", {\r\n        get: function () {\r\n            return this._server;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChannelConnection.prototype, \"logger\", {\r\n        get: function () {\r\n            return this._log;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * \"Fatal\" means the connection is dead. Only call this if something\r\n     * happens that cannot be recovered from. This will lead to all subscribers\r\n     * failing, and the connection getting ejected from the session pool.\r\n     *\r\n     * @param error an error object, forwarded to all current and future subscribers\r\n     */\r\n    ChannelConnection.prototype._handleFatalError = function (error) {\r\n        this._isBroken = true;\r\n        this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\r\n        if (this._log.isErrorEnabled()) {\r\n            this._log.error(\"experienced a fatal error caused by \".concat(this._error, \" (\").concat(neo4j_driver_core_1.json.stringify(this._error), \")\"));\r\n        }\r\n        this._protocol.notifyFatalError(this._error);\r\n    };\r\n    /**\r\n     * This method is used by the {@link PooledConnectionProvider}\r\n     *\r\n     * @param {any} observer\r\n     */\r\n    ChannelConnection.prototype._setIdle = function (observer) {\r\n        this._idle = true;\r\n        this._ch.stopReceiveTimeout();\r\n        this._protocol.queueObserverIfProtocolIsNotBroken(observer);\r\n    };\r\n    /**\r\n     * This method is used by the {@link PooledConnectionProvider}\r\n     */\r\n    ChannelConnection.prototype._unsetIdle = function () {\r\n        this._idle = false;\r\n        this._updateCurrentObserver();\r\n    };\r\n    /**\r\n     * This method still here because of the connection-channel.tests.js\r\n     *\r\n     * @param {any} observer\r\n     */\r\n    ChannelConnection.prototype._queueObserver = function (observer) {\r\n        return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\r\n    };\r\n    ChannelConnection.prototype.hasOngoingObservableRequests = function () {\r\n        return !this._idle && this._protocol.hasOngoingObservableRequests();\r\n    };\r\n    /**\r\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\r\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\r\n     */\r\n    ChannelConnection.prototype.resetAndFlush = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._reset({\r\n                onError: function (error) {\r\n                    if (_this._isBroken) {\r\n                        // handling a fatal error, no need to raise a protocol violation\r\n                        reject(error);\r\n                    }\r\n                    else {\r\n                        var neo4jError = _this._handleProtocolError(\"Received FAILURE as a response for RESET: \".concat(error));\r\n                        reject(neo4jError);\r\n                    }\r\n                },\r\n                onComplete: function () {\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ChannelConnection.prototype._resetOnFailure = function () {\r\n        var _this = this;\r\n        if (!this.isOpen()) {\r\n            return;\r\n        }\r\n        this._reset({\r\n            onError: function () {\r\n                _this._protocol.resetFailure();\r\n            },\r\n            onComplete: function () {\r\n                _this._protocol.resetFailure();\r\n            }\r\n        });\r\n    };\r\n    ChannelConnection.prototype._reset = function (observer) {\r\n        var _this = this;\r\n        if (this._reseting) {\r\n            if (!this._protocol.isLastMessageReset()) {\r\n                this._protocol.reset({\r\n                    onError: function (error) {\r\n                        observer.onError(error);\r\n                    },\r\n                    onComplete: function () {\r\n                        observer.onComplete();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this._resetObservers.push(observer);\r\n            }\r\n            return;\r\n        }\r\n        this._resetObservers.push(observer);\r\n        this._reseting = true;\r\n        var notifyFinish = function (notify) {\r\n            _this._reseting = false;\r\n            var observers = _this._resetObservers;\r\n            _this._resetObservers = [];\r\n            observers.forEach(notify);\r\n        };\r\n        this._protocol.reset({\r\n            onError: function (error) {\r\n                notifyFinish(function (obs) { return obs.onError(error); });\r\n            },\r\n            onComplete: function () {\r\n                notifyFinish(function (obs) { return obs.onComplete(); });\r\n            }\r\n        });\r\n    };\r\n    /*\r\n     * Pop next pending observer form the list of observers and make it current observer.\r\n     * @protected\r\n     */\r\n    ChannelConnection.prototype._updateCurrentObserver = function () {\r\n        this._protocol.updateCurrentObserver();\r\n    };\r\n    /** Check if this connection is in working condition */\r\n    ChannelConnection.prototype.isOpen = function () {\r\n        return !this._isBroken && this._ch._open;\r\n    };\r\n    /**\r\n     * Starts and stops the receive timeout timer.\r\n     * @param {number} requestsNumber Ongoing requests number\r\n     */\r\n    ChannelConnection.prototype._handleOngoingRequestsNumberChange = function (requestsNumber) {\r\n        if (this._idle) {\r\n            return;\r\n        }\r\n        if (requestsNumber === 0) {\r\n            this._ch.stopReceiveTimeout();\r\n        }\r\n        else {\r\n            this._ch.startReceiveTimeout();\r\n        }\r\n    };\r\n    /**\r\n     * Call close on the channel.\r\n     * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\r\n     */\r\n    ChannelConnection.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._log.isDebugEnabled()) {\r\n                            this._log.debug('closing');\r\n                        }\r\n                        if (this._protocol && this.isOpen()) {\r\n                            // protocol has been initialized and this connection is healthy\r\n                            // notify the database about the upcoming close of the connection\r\n                            this._protocol.prepareToClose();\r\n                        }\r\n                        return [4 /*yield*/, this._ch.close()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (this._log.isDebugEnabled()) {\r\n                            this._log.debug('closed');\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ChannelConnection.prototype.toString = function () {\r\n        return \"Connection [\".concat(this.id, \"][\").concat(this.databaseId || '', \"]\");\r\n    };\r\n    ChannelConnection.prototype._handleProtocolError = function (message) {\r\n        this._protocol.resetFailure();\r\n        this._updateCurrentObserver();\r\n        var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\r\n        this._handleFatalError(error);\r\n        return error;\r\n    };\r\n    return ChannelConnection;\r\n}(connection_1.default));\r\nexports.default = ChannelConnection;\r\n/**\r\n * Creates a log with the connection info as prefix\r\n * @param {Connection} connection The connection\r\n * @param {Logger} logger The logger\r\n * @returns {Logger} The new logger with enriched messages\r\n */\r\nfunction createConnectionLogger(connection, logger) {\r\n    return new Logger(logger._level, function (level, message) {\r\n        return logger._loggerFunction(level, \"\".concat(connection, \" \").concat(message));\r\n    });\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __importDefault(require(\"./connection\"));\r\nvar DelegateConnection = /** @class */ (function (_super) {\r\n    __extends(DelegateConnection, _super);\r\n    /**\r\n     * @param delegate {Connection} the delegated connection\r\n     * @param errorHandler {ConnectionErrorHandler} the error handler\r\n     */\r\n    function DelegateConnection(delegate, errorHandler) {\r\n        var _this = _super.call(this, errorHandler) || this;\r\n        if (errorHandler) {\r\n            _this._originalErrorHandler = delegate._errorHandler;\r\n            delegate._errorHandler = _this._errorHandler;\r\n        }\r\n        _this._delegate = delegate;\r\n        return _this;\r\n    }\r\n    DelegateConnection.prototype.beginTransaction = function (config) {\r\n        return this._delegate.beginTransaction(config);\r\n    };\r\n    DelegateConnection.prototype.run = function (query, param, config) {\r\n        return this._delegate.run(query, param, config);\r\n    };\r\n    DelegateConnection.prototype.commitTransaction = function (config) {\r\n        return this._delegate.commitTransaction(config);\r\n    };\r\n    DelegateConnection.prototype.rollbackTransaction = function (config) {\r\n        return this._delegate.rollbackTransaction(config);\r\n    };\r\n    DelegateConnection.prototype.getProtocolVersion = function () {\r\n        return this._delegate.getProtocolVersion();\r\n    };\r\n    Object.defineProperty(DelegateConnection.prototype, \"id\", {\r\n        get: function () {\r\n            return this._delegate.id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"databaseId\", {\r\n        get: function () {\r\n            return this._delegate.databaseId;\r\n        },\r\n        set: function (value) {\r\n            this._delegate.databaseId = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"server\", {\r\n        get: function () {\r\n            return this._delegate.server;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"authToken\", {\r\n        get: function () {\r\n            return this._delegate.authToken;\r\n        },\r\n        set: function (value) {\r\n            this._delegate.authToken = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"supportsReAuth\", {\r\n        get: function () {\r\n            return this._delegate.supportsReAuth;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"address\", {\r\n        get: function () {\r\n            return this._delegate.address;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"version\", {\r\n        get: function () {\r\n            return this._delegate.version;\r\n        },\r\n        set: function (value) {\r\n            this._delegate.version = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"creationTimestamp\", {\r\n        get: function () {\r\n            return this._delegate.creationTimestamp;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DelegateConnection.prototype, \"idleTimestamp\", {\r\n        get: function () {\r\n            return this._delegate.idleTimestamp;\r\n        },\r\n        set: function (value) {\r\n            this._delegate.idleTimestamp = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    DelegateConnection.prototype.isOpen = function () {\r\n        return this._delegate.isOpen();\r\n    };\r\n    DelegateConnection.prototype.protocol = function () {\r\n        return this._delegate.protocol();\r\n    };\r\n    DelegateConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\r\n        return this._delegate.connect(userAgent, boltAgent, authToken, waitReAuth);\r\n    };\r\n    DelegateConnection.prototype.write = function (message, observer, flush) {\r\n        return this._delegate.write(message, observer, flush);\r\n    };\r\n    DelegateConnection.prototype.resetAndFlush = function () {\r\n        return this._delegate.resetAndFlush();\r\n    };\r\n    DelegateConnection.prototype.hasOngoingObservableRequests = function () {\r\n        return this._delegate.hasOngoingObservableRequests();\r\n    };\r\n    DelegateConnection.prototype.close = function () {\r\n        return this._delegate.close();\r\n    };\r\n    DelegateConnection.prototype.release = function () {\r\n        if (this._originalErrorHandler) {\r\n            this._delegate._errorHandler = this._originalErrorHandler;\r\n        }\r\n        return this._delegate.release();\r\n    };\r\n    return DelegateConnection;\r\n}(connection_1.default));\r\nexports.default = DelegateConnection;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\r\nvar ConnectionErrorHandler = /** @class */ (function () {\r\n    function ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleSecurityError) {\r\n        this._errorCode = errorCode;\r\n        this._handleUnavailability = handleUnavailability || noOpHandler;\r\n        this._handleWriteFailure = handleWriteFailure || noOpHandler;\r\n        this._handleSecurityError = handleSecurityError || noOpHandler;\r\n    }\r\n    ConnectionErrorHandler.create = function (_a) {\r\n        var errorCode = _a.errorCode, handleUnavailability = _a.handleUnavailability, handleWriteFailure = _a.handleWriteFailure, handleSecurityError = _a.handleSecurityError;\r\n        return new ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleSecurityError);\r\n    };\r\n    /**\r\n     * Error code to use for network errors.\r\n     * @return {string} the error code.\r\n     */\r\n    ConnectionErrorHandler.prototype.errorCode = function () {\r\n        return this._errorCode;\r\n    };\r\n    /**\r\n     * Handle and transform the error.\r\n     * @param {Neo4jError} error the original error.\r\n     * @param {ServerAddress} address the address of the connection where the error happened.\r\n     * @return {Neo4jError} new error that should be propagated to the user.\r\n     */\r\n    ConnectionErrorHandler.prototype.handleAndTransformError = function (error, address, connection) {\r\n        if (isSecurityError(error)) {\r\n            return this._handleSecurityError(error, address, connection);\r\n        }\r\n        if (isAvailabilityError(error)) {\r\n            return this._handleUnavailability(error, address, connection);\r\n        }\r\n        if (isFailureToWrite(error)) {\r\n            return this._handleWriteFailure(error, address, connection);\r\n        }\r\n        return error;\r\n    };\r\n    return ConnectionErrorHandler;\r\n}());\r\nexports.default = ConnectionErrorHandler;\r\nfunction isSecurityError(error) {\r\n    return error != null &&\r\n        error.code != null &&\r\n        error.code.startsWith('Neo.ClientError.Security.');\r\n}\r\nfunction isAvailabilityError(error) {\r\n    if (error) {\r\n        return (error.code === SESSION_EXPIRED ||\r\n            error.code === SERVICE_UNAVAILABLE ||\r\n            error.code === 'Neo.TransientError.General.DatabaseUnavailable');\r\n    }\r\n    return false;\r\n}\r\nfunction isFailureToWrite(error) {\r\n    if (error) {\r\n        return (error.code === 'Neo.ClientError.Cluster.NotALeader' ||\r\n            error.code === 'Neo.ClientError.General.ForbiddenOnReadOnlyDatabase');\r\n    }\r\n    return false;\r\n}\r\nfunction noOpHandler(error) {\r\n    return error;\r\n}\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createChannelConnection = exports.ConnectionErrorHandler = exports.DelegateConnection = exports.ChannelConnection = exports.Connection = void 0;\r\nvar connection_1 = __importDefault(require(\"./connection\"));\r\nexports.Connection = connection_1.default;\r\nvar connection_channel_1 = __importStar(require(\"./connection-channel\"));\r\nexports.ChannelConnection = connection_channel_1.default;\r\nObject.defineProperty(exports, \"createChannelConnection\", { enumerable: true, get: function () { return connection_channel_1.createChannelConnection; } });\r\nvar connection_delegate_1 = __importDefault(require(\"./connection-delegate\"));\r\nexports.DelegateConnection = connection_delegate_1.default;\r\nvar connection_error_handler_1 = __importDefault(require(\"./connection-error-handler\"));\r\nexports.ConnectionErrorHandler = connection_error_handler_1.default;\r\nexports.default = connection_1.default;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar lang_1 = require(\"../lang\");\r\n/**\r\n * Class which provides Authorization for {@link Connection}\r\n */\r\nvar AuthenticationProvider = /** @class */ (function () {\r\n    function AuthenticationProvider(_a) {\r\n        var authTokenManager = _a.authTokenManager, userAgent = _a.userAgent, boltAgent = _a.boltAgent;\r\n        this._authTokenManager = authTokenManager || (0, neo4j_driver_core_1.staticAuthTokenManager)({});\r\n        this._userAgent = userAgent;\r\n        this._boltAgent = boltAgent;\r\n    }\r\n    AuthenticationProvider.prototype.authenticate = function (_a) {\r\n        var connection = _a.connection, auth = _a.auth, skipReAuth = _a.skipReAuth, waitReAuth = _a.waitReAuth, forceReAuth = _a.forceReAuth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var shouldReAuth, authToken;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(auth != null)) return [3 /*break*/, 3];\r\n                        shouldReAuth = connection.supportsReAuth === true && ((!lang_1.object.equals(connection.authToken, auth) && skipReAuth !== true) ||\r\n                            forceReAuth === true);\r\n                        if (!(connection.authToken == null || shouldReAuth)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, connection.connect(this._userAgent, this._boltAgent, auth, waitReAuth || false)];\r\n                    case 1: return [2 /*return*/, _b.sent()];\r\n                    case 2: return [2 /*return*/, connection];\r\n                    case 3: return [4 /*yield*/, this._authTokenManager.getToken()];\r\n                    case 4:\r\n                        authToken = _b.sent();\r\n                        if (!!lang_1.object.equals(authToken, connection.authToken)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, connection.connect(this._userAgent, this._boltAgent, authToken, false)];\r\n                    case 5: return [2 /*return*/, _b.sent()];\r\n                    case 6: return [2 /*return*/, connection];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthenticationProvider.prototype.handleError = function (_a) {\r\n        var connection = _a.connection, code = _a.code;\r\n        if (connection &&\r\n            code.startsWith('Neo.ClientError.Security.')) {\r\n            return this._authTokenManager.handleSecurityException(connection.authToken, code);\r\n        }\r\n        return false;\r\n    };\r\n    return AuthenticationProvider;\r\n}());\r\nexports.default = AuthenticationProvider;\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LivenessCheckProvider = /** @class */ (function () {\r\n    function LivenessCheckProvider(_a) {\r\n        var connectionLivenessCheckTimeout = _a.connectionLivenessCheckTimeout;\r\n        this._connectionLivenessCheckTimeout = connectionLivenessCheckTimeout;\r\n    }\r\n    /**\r\n     * Checks connection liveness with configured params.\r\n     *\r\n     * @param {Connection} connection\r\n     * @returns {Promise<true>} If liveness checks succeed, throws otherwise\r\n     */\r\n    LivenessCheckProvider.prototype.check = function (connection) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var idleFor;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._isCheckDisabled || this._isNewlyCreatedConnection(connection)) {\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        idleFor = Date.now() - connection.idleTimestamp;\r\n                        if (!(this._connectionLivenessCheckTimeout === 0 ||\r\n                            idleFor > this._connectionLivenessCheckTimeout)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, connection.resetAndFlush()\r\n                                .then(function () { return true; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2: return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(LivenessCheckProvider.prototype, \"_isCheckDisabled\", {\r\n        get: function () {\r\n            return this._connectionLivenessCheckTimeout == null || this._connectionLivenessCheckTimeout < 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LivenessCheckProvider.prototype._isNewlyCreatedConnection = function (connection) {\r\n        return connection.authToken == null;\r\n    };\r\n    return LivenessCheckProvider;\r\n}());\r\nexports.default = LivenessCheckProvider;\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar channel_1 = require(\"../channel\");\r\nvar ClientCertificateHolder = /** @class */ (function () {\r\n    function ClientCertificateHolder(_a) {\r\n        var clientCertificateProvider = _a.clientCertificateProvider, loader = _a.loader;\r\n        this._clientCertificateProvider = clientCertificateProvider;\r\n        this._loader = loader || channel_1.ClientCertificatesLoader;\r\n        this._clientCertificate = null;\r\n    }\r\n    ClientCertificateHolder.prototype.getClientCertificate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = this._clientCertificateProvider != null;\r\n                        if (!_a) return [3 /*break*/, 3];\r\n                        _b = this._clientCertificate == null;\r\n                        if (_b) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this._clientCertificateProvider.hasUpdate()];\r\n                    case 1:\r\n                        _b = (_c.sent());\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        _a = (_b);\r\n                        _c.label = 3;\r\n                    case 3:\r\n                        if (_a) {\r\n                            this._clientCertificate = Promise.resolve(this._clientCertificateProvider.getClientCertificate())\r\n                                .then(this._loader.load)\r\n                                .then(function (clientCertificate) {\r\n                                _this._clientCertificate = clientCertificate;\r\n                                return _this._clientCertificate;\r\n                            })\r\n                                .catch(function (error) {\r\n                                _this._clientCertificate = null;\r\n                                throw error;\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, this._clientCertificate];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ClientCertificateHolder;\r\n}());\r\nexports.default = ClientCertificateHolder;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = require(\"../connection\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar authentication_provider_1 = __importDefault(require(\"./authentication-provider\"));\r\nvar lang_1 = require(\"../lang\");\r\nvar liveness_check_provider_1 = __importDefault(require(\"./liveness-check-provider\"));\r\nvar client_certificate_holder_1 = __importDefault(require(\"./client-certificate-holder\"));\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\r\nvar AUTHENTICATION_ERRORS = [\r\n    'Neo.ClientError.Security.CredentialsExpired',\r\n    'Neo.ClientError.Security.Forbidden',\r\n    'Neo.ClientError.Security.TokenExpired',\r\n    'Neo.ClientError.Security.Unauthorized'\r\n];\r\nvar _a = neo4j_driver_core_1.internal.pool, Pool = _a.Pool, PoolConfig = _a.PoolConfig;\r\nvar PooledConnectionProvider = /** @class */ (function (_super) {\r\n    __extends(PooledConnectionProvider, _super);\r\n    function PooledConnectionProvider(_a, createChannelConnectionHook) {\r\n        var id = _a.id, config = _a.config, log = _a.log, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, _b = _a.newPool, newPool = _b === void 0 ? function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return new (Pool.bind.apply(Pool, __spreadArray([void 0], __read(args), false)))();\r\n        } : _b;\r\n        if (createChannelConnectionHook === void 0) { createChannelConnectionHook = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._id = id;\r\n        _this._config = config;\r\n        _this._log = log;\r\n        _this._clientCertificateHolder = new client_certificate_holder_1.default({ clientCertificateProvider: _this._config.clientCertificate });\r\n        _this._authenticationProvider = new authentication_provider_1.default({ authTokenManager: authTokenManager, userAgent: userAgent, boltAgent: boltAgent });\r\n        _this._livenessCheckProvider = new liveness_check_provider_1.default({ connectionLivenessCheckTimeout: config.connectionLivenessCheckTimeout });\r\n        _this._userAgent = userAgent;\r\n        _this._boltAgent = boltAgent;\r\n        _this._createChannelConnection =\r\n            createChannelConnectionHook ||\r\n                (function (address) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _a, _b;\r\n                    return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                _a = connection_1.createChannelConnection;\r\n                                _b = [address,\r\n                                    this._config,\r\n                                    this._createConnectionErrorHandler(),\r\n                                    this._log];\r\n                                return [4 /*yield*/, this._clientCertificateHolder.getClientCertificate()];\r\n                            case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent()]))];\r\n                        }\r\n                    });\r\n                }); });\r\n        _this._connectionPool = newPool({\r\n            create: _this._createConnection.bind(_this),\r\n            destroy: _this._destroyConnection.bind(_this),\r\n            validateOnAcquire: _this._validateConnectionOnAcquire.bind(_this),\r\n            validateOnRelease: _this._validateConnectionOnRelease.bind(_this),\r\n            installIdleObserver: PooledConnectionProvider._installIdleObserverOnConnection.bind(_this),\r\n            removeIdleObserver: PooledConnectionProvider._removeIdleObserverOnConnection.bind(_this),\r\n            config: PoolConfig.fromDriverConfig(config),\r\n            log: _this._log\r\n        });\r\n        _this._openConnections = {};\r\n        return _this;\r\n    }\r\n    PooledConnectionProvider.prototype._createConnectionErrorHandler = function () {\r\n        return new connection_1.ConnectionErrorHandler(SERVICE_UNAVAILABLE);\r\n    };\r\n    PooledConnectionProvider.prototype._getClientCertificate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this._config.clientCertificate.getClientCertificate()];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a new connection and initialize it.\r\n     * @return {Promise<Connection>} promise resolved with a new connection or rejected when failed to connect.\r\n     * @access private\r\n     */\r\n    PooledConnectionProvider.prototype._createConnection = function (_a, address, release) {\r\n        var _this = this;\r\n        var auth = _a.auth;\r\n        return this._createChannelConnection(address).then(function (connection) {\r\n            connection.release = function () {\r\n                connection.idleTimestamp = Date.now();\r\n                return release(address, connection);\r\n            };\r\n            _this._openConnections[connection.id] = connection;\r\n            return _this._authenticationProvider.authenticate({ connection: connection, auth: auth })\r\n                .catch(function (error) {\r\n                // let's destroy this connection\r\n                _this._destroyConnection(connection);\r\n                // propagate the error because connection failed to connect / initialize\r\n                throw error;\r\n            });\r\n        });\r\n    };\r\n    PooledConnectionProvider.prototype._validateConnectionOnAcquire = function (_a, conn) {\r\n        var auth = _a.auth, skipReAuth = _a.skipReAuth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var error_1, error_2;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this._validateConnection(conn)) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this._livenessCheckProvider.check(conn)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        this._log.debug(\"The connection \".concat(conn.id, \" is not alive because of an error \").concat(error_1.code, \" '\").concat(error_1.message, \"'\"));\r\n                        return [2 /*return*/, false];\r\n                    case 4:\r\n                        _b.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, this._authenticationProvider.authenticate({ connection: conn, auth: auth, skipReAuth: skipReAuth })];\r\n                    case 5:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                    case 6:\r\n                        error_2 = _b.sent();\r\n                        this._log.debug(\"The connection \".concat(conn.id, \" is not valid because of an error \").concat(error_2.code, \" '\").concat(error_2.message, \"'\"));\r\n                        return [2 /*return*/, false];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PooledConnectionProvider.prototype._validateConnectionOnRelease = function (conn) {\r\n        return conn._sticky !== true && this._validateConnection(conn);\r\n    };\r\n    /**\r\n     * Check that a connection is usable\r\n     * @return {boolean} true if the connection is open\r\n     * @access private\r\n     **/\r\n    PooledConnectionProvider.prototype._validateConnection = function (conn) {\r\n        if (!conn.isOpen()) {\r\n            return false;\r\n        }\r\n        var maxConnectionLifetime = this._config.maxConnectionLifetime;\r\n        var lifetime = Date.now() - conn.creationTimestamp;\r\n        if (lifetime > maxConnectionLifetime) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Dispose of a connection.\r\n     * @return {Connection} the connection to dispose.\r\n     * @access private\r\n     */\r\n    PooledConnectionProvider.prototype._destroyConnection = function (conn) {\r\n        delete this._openConnections[conn.id];\r\n        return conn.close();\r\n    };\r\n    /**\r\n     * Acquire a connection from the pool and return it ServerInfo\r\n     * @param {object} param\r\n     * @param {string} param.address the server address\r\n     * @return {Promise<ServerInfo>} the server info\r\n     */\r\n    PooledConnectionProvider.prototype._verifyConnectivityAndGetServerVersion = function (_a) {\r\n        var address = _a.address;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connection, serverInfo;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this._connectionPool.acquire({}, address)];\r\n                    case 1:\r\n                        connection = _b.sent();\r\n                        serverInfo = new neo4j_driver_core_1.ServerInfo(connection.server, connection.protocol().version);\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, , 5, 7]);\r\n                        if (!!connection.protocol().isLastMessageLogon()) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, connection.resetAndFlush()];\r\n                    case 3:\r\n                        _b.sent();\r\n                        _b.label = 4;\r\n                    case 4: return [3 /*break*/, 7];\r\n                    case 5: return [4 /*yield*/, connection.release()];\r\n                    case 6:\r\n                        _b.sent();\r\n                        return [7 /*endfinally*/];\r\n                    case 7: return [2 /*return*/, serverInfo];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PooledConnectionProvider.prototype._verifyAuthentication = function (_a) {\r\n        var getAddress = _a.getAddress, auth = _a.auth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectionsToRelease, address, connection, lastMessageIsNotLogin, stickyConnection, error_3;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        connectionsToRelease = [];\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 8, 9, 11]);\r\n                        return [4 /*yield*/, getAddress()];\r\n                    case 2:\r\n                        address = _b.sent();\r\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth, skipReAuth: true }, address)];\r\n                    case 3:\r\n                        connection = _b.sent();\r\n                        connectionsToRelease.push(connection);\r\n                        lastMessageIsNotLogin = !connection.protocol().isLastMessageLogon();\r\n                        if (!connection.supportsReAuth) {\r\n                            throw (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support user switch.');\r\n                        }\r\n                        if (!(lastMessageIsNotLogin && connection.supportsReAuth)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this._authenticationProvider.authenticate({ connection: connection, auth: auth, waitReAuth: true, forceReAuth: true })];\r\n                    case 4:\r\n                        _b.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 5:\r\n                        if (!(lastMessageIsNotLogin && !connection.supportsReAuth)) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, address, { requireNew: true })];\r\n                    case 6:\r\n                        stickyConnection = _b.sent();\r\n                        stickyConnection._sticky = true;\r\n                        connectionsToRelease.push(stickyConnection);\r\n                        _b.label = 7;\r\n                    case 7: return [2 /*return*/, true];\r\n                    case 8:\r\n                        error_3 = _b.sent();\r\n                        if (AUTHENTICATION_ERRORS.includes(error_3.code)) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        throw error_3;\r\n                    case 9: return [4 /*yield*/, Promise.all(connectionsToRelease.map(function (conn) { return conn.release(); }))];\r\n                    case 10:\r\n                        _b.sent();\r\n                        return [7 /*endfinally*/];\r\n                    case 11: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PooledConnectionProvider.prototype._verifyStickyConnection = function (_a) {\r\n        var auth = _a.auth, connection = _a.connection, address = _a.address;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connectionWithSameCredentials, shouldCreateStickyConnection;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        connectionWithSameCredentials = lang_1.object.equals(auth, connection.authToken);\r\n                        shouldCreateStickyConnection = !connectionWithSameCredentials;\r\n                        connection._sticky = connectionWithSameCredentials && !connection.supportsReAuth;\r\n                        if (!(shouldCreateStickyConnection || connection._sticky)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, connection.release()];\r\n                    case 1:\r\n                        _b.sent();\r\n                        throw (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support user switch.');\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PooledConnectionProvider.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // purge all idle connections in the connection pool\r\n                    return [4 /*yield*/, this._connectionPool.close()\r\n                        // then close all connections driver has ever created\r\n                        // it is needed to close connections that are active right now and are acquired from the pool\r\n                    ];\r\n                    case 1:\r\n                        // purge all idle connections in the connection pool\r\n                        _a.sent();\r\n                        // then close all connections driver has ever created\r\n                        // it is needed to close connections that are active right now and are acquired from the pool\r\n                        return [4 /*yield*/, Promise.all(Object.values(this._openConnections).map(function (c) { return c.close(); }))];\r\n                    case 2:\r\n                        // then close all connections driver has ever created\r\n                        // it is needed to close connections that are active right now and are acquired from the pool\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PooledConnectionProvider._installIdleObserverOnConnection = function (conn, observer) {\r\n        conn._setIdle(observer);\r\n    };\r\n    PooledConnectionProvider._removeIdleObserverOnConnection = function (conn) {\r\n        conn._unsetIdle();\r\n    };\r\n    PooledConnectionProvider.prototype._handleSecurityError = function (error, address, connection) {\r\n        var handled = this._authenticationProvider.handleError({ connection: connection, code: error.code });\r\n        if (handled) {\r\n            error.retriable = true;\r\n        }\r\n        if (error.code === 'Neo.ClientError.Security.AuthorizationExpired') {\r\n            this._connectionPool.apply(address, function (conn) { conn.authToken = null; });\r\n        }\r\n        if (connection) {\r\n            connection.close().catch(function () { return undefined; });\r\n        }\r\n        return error;\r\n    };\r\n    return PooledConnectionProvider;\r\n}(neo4j_driver_core_1.ConnectionProvider));\r\nexports.default = PooledConnectionProvider;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\r\nvar connection_1 = require(\"../connection\");\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\r\nvar DirectConnectionProvider = /** @class */ (function (_super) {\r\n    __extends(DirectConnectionProvider, _super);\r\n    function DirectConnectionProvider(_a) {\r\n        var id = _a.id, config = _a.config, log = _a.log, address = _a.address, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, newPool = _a.newPool;\r\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, boltAgent: boltAgent, authTokenManager: authTokenManager, newPool: newPool }) || this;\r\n        _this._address = address;\r\n        return _this;\r\n    }\r\n    /**\r\n     * See {@link ConnectionProvider} for more information about this method and\r\n     * its arguments.\r\n     */\r\n    DirectConnectionProvider.prototype.acquireConnection = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, auth = _b.auth, forceReAuth = _b.forceReAuth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var databaseSpecificErrorHandler, connection;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\r\n                            errorCode: SERVICE_UNAVAILABLE,\r\n                            handleSecurityError: function (error, address, conn) {\r\n                                return _this._handleSecurityError(error, address, conn, database);\r\n                            }\r\n                        });\r\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth, forceReAuth: forceReAuth }, this._address)];\r\n                    case 1:\r\n                        connection = _c.sent();\r\n                        if (!auth) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this._verifyStickyConnection({\r\n                                auth: auth,\r\n                                connection: connection,\r\n                                address: this._address\r\n                            })];\r\n                    case 2:\r\n                        _c.sent();\r\n                        return [2 /*return*/, connection];\r\n                    case 3: return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\r\n        this._log.warn(\"Direct driver \".concat(this._id, \" will close connection to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\r\n        return _super.prototype._handleSecurityError.call(this, error, address, connection);\r\n    };\r\n    DirectConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connection, protocolVersion;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._createChannelConnection(this._address)];\r\n                    case 1:\r\n                        connection = _a.sent();\r\n                        protocolVersion = connection.protocol()\r\n                            ? connection.protocol().version\r\n                            : null;\r\n                        return [4 /*yield*/, connection.close()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        if (protocolVersion) {\r\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\r\n                        }\r\n                        return [2 /*return*/, false];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.supportsMultiDb = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._hasProtocolVersion(resolve)\r\n                .catch(reject);\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.supportsTransactionConfig = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.supportsUserImpersonation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.supportsSessionAuth = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V5_1; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.verifyAuthentication = function (_a) {\r\n        var auth = _a.auth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this._verifyAuthentication({\r\n                        auth: auth,\r\n                        getAddress: function () { return _this._address; }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    DirectConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({ address: this._address })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return DirectConnectionProvider;\r\n}(connection_provider_pooled_1.default));\r\nexports.default = DirectConnectionProvider;\r\n", "\"use strict\";\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createValidRoutingTable = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar _a = neo4j_driver_core_1.internal.constants, WRITE = _a.ACCESS_MODE_WRITE, READ = _a.ACCESS_MODE_READ, ServerAddress = neo4j_driver_core_1.internal.serverAddress.ServerAddress;\r\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\r\nvar MIN_ROUTERS = 1;\r\n/**\r\n * The routing table object used to determine the role of the servers in the driver.\r\n */\r\nvar RoutingTable = /** @class */ (function () {\r\n    function RoutingTable(_a) {\r\n        var _b = _a === void 0 ? {} : _a, database = _b.database, routers = _b.routers, readers = _b.readers, writers = _b.writers, expirationTime = _b.expirationTime, ttl = _b.ttl;\r\n        this.database = database || null;\r\n        this.databaseName = database || 'default database';\r\n        this.routers = routers || [];\r\n        this.readers = readers || [];\r\n        this.writers = writers || [];\r\n        this.expirationTime = expirationTime || (0, neo4j_driver_core_1.int)(0);\r\n        this.ttl = ttl;\r\n    }\r\n    /**\r\n     * Create a valid routing table from a raw object\r\n     *\r\n     * @param {string} database the database name. It is used for logging purposes\r\n     * @param {ServerAddress} routerAddress The router address, it is used for loggin purposes\r\n     * @param {RawRoutingTable} rawRoutingTable Method used to get the raw routing table to be processed\r\n     * @param {RoutingTable} The valid Routing Table\r\n     */\r\n    RoutingTable.fromRawRoutingTable = function (database, routerAddress, rawRoutingTable) {\r\n        return createValidRoutingTable(database, routerAddress, rawRoutingTable);\r\n    };\r\n    RoutingTable.prototype.forget = function (address) {\r\n        // Don't remove it from the set of routers, since that might mean we lose our ability to re-discover,\r\n        // just remove it from the set of readers and writers, so that we don't use it for actual work without\r\n        // performing discovery first.\r\n        this.readers = removeFromArray(this.readers, address);\r\n        this.writers = removeFromArray(this.writers, address);\r\n    };\r\n    RoutingTable.prototype.forgetRouter = function (address) {\r\n        this.routers = removeFromArray(this.routers, address);\r\n    };\r\n    RoutingTable.prototype.forgetWriter = function (address) {\r\n        this.writers = removeFromArray(this.writers, address);\r\n    };\r\n    /**\r\n     * Check if this routing table is fresh to perform the required operation.\r\n     * @param {string} accessMode the type of operation. Allowed values are {@link READ} and {@link WRITE}.\r\n     * @return {boolean} `true` when this table contains servers to serve the required operation, `false` otherwise.\r\n     */\r\n    RoutingTable.prototype.isStaleFor = function (accessMode) {\r\n        return (this.expirationTime.lessThan(Date.now()) ||\r\n            this.routers.length < MIN_ROUTERS ||\r\n            (accessMode === READ && this.readers.length === 0) ||\r\n            (accessMode === WRITE && this.writers.length === 0));\r\n    };\r\n    /**\r\n     * Check if this routing table is expired for specified amount of duration\r\n     *\r\n     * @param {Integer} duration amount of duration in milliseconds to check for expiration\r\n     * @returns {boolean}\r\n     */\r\n    RoutingTable.prototype.isExpiredFor = function (duration) {\r\n        return this.expirationTime.add(duration).lessThan(Date.now());\r\n    };\r\n    RoutingTable.prototype.allServers = function () {\r\n        return __spreadArray(__spreadArray(__spreadArray([], __read(this.routers), false), __read(this.readers), false), __read(this.writers), false);\r\n    };\r\n    RoutingTable.prototype.toString = function () {\r\n        return ('RoutingTable[' +\r\n            \"database=\".concat(this.databaseName, \", \") +\r\n            \"expirationTime=\".concat(this.expirationTime, \", \") +\r\n            \"currentTime=\".concat(Date.now(), \", \") +\r\n            \"routers=[\".concat(this.routers, \"], \") +\r\n            \"readers=[\".concat(this.readers, \"], \") +\r\n            \"writers=[\".concat(this.writers, \"]]\"));\r\n    };\r\n    return RoutingTable;\r\n}());\r\nexports.default = RoutingTable;\r\n/**\r\n * Remove all occurrences of the element in the array.\r\n * @param {Array} array the array to filter.\r\n * @param {Object} element the element to remove.\r\n * @return {Array} new filtered array.\r\n */\r\nfunction removeFromArray(array, element) {\r\n    return array.filter(function (item) { return item.asKey() !== element.asKey(); });\r\n}\r\n/**\r\n * Create a valid routing table from a raw object\r\n *\r\n * @param {string} db the database name. It is used for logging purposes\r\n * @param {ServerAddress} routerAddress The router address, it is used for loggin purposes\r\n * @param {RawRoutingTable} rawRoutingTable Method used to get the raw routing table to be processed\r\n * @param {RoutingTable} The valid Routing Table\r\n */\r\nfunction createValidRoutingTable(database, routerAddress, rawRoutingTable) {\r\n    var ttl = rawRoutingTable.ttl;\r\n    var expirationTime = calculateExpirationTime(rawRoutingTable, routerAddress);\r\n    var _a = parseServers(rawRoutingTable, routerAddress), routers = _a.routers, readers = _a.readers, writers = _a.writers;\r\n    assertNonEmpty(routers, 'routers', routerAddress);\r\n    assertNonEmpty(readers, 'readers', routerAddress);\r\n    return new RoutingTable({\r\n        database: database || rawRoutingTable.db,\r\n        routers: routers,\r\n        readers: readers,\r\n        writers: writers,\r\n        expirationTime: expirationTime,\r\n        ttl: ttl\r\n    });\r\n}\r\nexports.createValidRoutingTable = createValidRoutingTable;\r\n/**\r\n * Parse server from the RawRoutingTable.\r\n *\r\n * @param {RawRoutingTable} rawRoutingTable the raw routing table\r\n * @param {string} routerAddress the router address\r\n * @returns {Object} The object with the list of routers, readers and writers\r\n */\r\nfunction parseServers(rawRoutingTable, routerAddress) {\r\n    try {\r\n        var routers_1 = [];\r\n        var readers_1 = [];\r\n        var writers_1 = [];\r\n        rawRoutingTable.servers.forEach(function (server) {\r\n            var role = server.role;\r\n            var addresses = server.addresses;\r\n            if (role === 'ROUTE') {\r\n                routers_1 = parseArray(addresses).map(function (address) {\r\n                    return ServerAddress.fromUrl(address);\r\n                });\r\n            }\r\n            else if (role === 'WRITE') {\r\n                writers_1 = parseArray(addresses).map(function (address) {\r\n                    return ServerAddress.fromUrl(address);\r\n                });\r\n            }\r\n            else if (role === 'READ') {\r\n                readers_1 = parseArray(addresses).map(function (address) {\r\n                    return ServerAddress.fromUrl(address);\r\n                });\r\n            }\r\n        });\r\n        return {\r\n            routers: routers_1,\r\n            readers: readers_1,\r\n            writers: writers_1\r\n        };\r\n    }\r\n    catch (error) {\r\n        throw (0, neo4j_driver_core_1.newError)(\"Unable to parse servers entry from router \".concat(routerAddress, \" from addresses:\\n\").concat(neo4j_driver_core_1.json.stringify(rawRoutingTable.servers), \"\\nError message: \").concat(error.message), PROTOCOL_ERROR);\r\n    }\r\n}\r\n/**\r\n * Call the expiration time using the ttls from the raw routing table and return it\r\n *\r\n * @param {RawRoutingTable} rawRoutingTable the routing table\r\n * @param {string} routerAddress the router address\r\n * @returns {number} the ttl\r\n */\r\nfunction calculateExpirationTime(rawRoutingTable, routerAddress) {\r\n    try {\r\n        var now = (0, neo4j_driver_core_1.int)(Date.now());\r\n        var expires = (0, neo4j_driver_core_1.int)(rawRoutingTable.ttl)\r\n            .multiply(1000)\r\n            .add(now);\r\n        // if the server uses a really big expire time like Long.MAX_VALUE this may have overflowed\r\n        if (expires.lessThan(now)) {\r\n            return neo4j_driver_core_1.Integer.MAX_VALUE;\r\n        }\r\n        return expires;\r\n    }\r\n    catch (error) {\r\n        throw (0, neo4j_driver_core_1.newError)(\"Unable to parse TTL entry from router \".concat(routerAddress, \" from raw routing table:\\n\").concat(neo4j_driver_core_1.json.stringify(rawRoutingTable), \"\\nError message: \").concat(error.message), PROTOCOL_ERROR);\r\n    }\r\n}\r\n/**\r\n * Assert if serverAddressesArray is not empty, throws and PROTOCOL_ERROR otherwise\r\n *\r\n * @param {string[]} serverAddressesArray array of addresses\r\n * @param {string} serversName the server name\r\n * @param {string} routerAddress the router address\r\n */\r\nfunction assertNonEmpty(serverAddressesArray, serversName, routerAddress) {\r\n    if (serverAddressesArray.length === 0) {\r\n        throw (0, neo4j_driver_core_1.newError)('Received no ' + serversName + ' from router ' + routerAddress, PROTOCOL_ERROR);\r\n    }\r\n}\r\nfunction parseArray(addresses) {\r\n    if (!Array.isArray(addresses)) {\r\n        throw new TypeError('Array expected but got: ' + addresses);\r\n    }\r\n    return Array.from(addresses);\r\n}\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar routing_table_1 = __importDefault(require(\"./routing-table\"));\r\n// eslint-disable-next-line no-unused-vars\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar Rediscovery = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param {object} routingContext\r\n     */\r\n    function Rediscovery(routingContext) {\r\n        this._routingContext = routingContext;\r\n    }\r\n    /**\r\n     * Try to fetch new routing table from the given router.\r\n     * @param {Session} session the session to use.\r\n     * @param {string} database the database for which to lookup routing table.\r\n     * @param {ServerAddress} routerAddress the URL of the router.\r\n     * @param {string} impersonatedUser The impersonated user\r\n     * @return {Promise<RoutingTable>} promise resolved with new routing table or null when connection error happened.\r\n     */\r\n    Rediscovery.prototype.lookupRoutingTableOnRouter = function (session, database, routerAddress, impersonatedUser) {\r\n        var _this = this;\r\n        return session._acquireConnection(function (connection) {\r\n            return _this._requestRawRoutingTable(connection, session, database, routerAddress, impersonatedUser).then(function (rawRoutingTable) {\r\n                if (rawRoutingTable.isNull) {\r\n                    return null;\r\n                }\r\n                return routing_table_1.default.fromRawRoutingTable(database, routerAddress, rawRoutingTable);\r\n            });\r\n        });\r\n    };\r\n    Rediscovery.prototype._requestRawRoutingTable = function (connection, session, database, routerAddress, impersonatedUser) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            connection.protocol().requestRoutingInformation({\r\n                routingContext: _this._routingContext,\r\n                databaseName: database,\r\n                impersonatedUser: impersonatedUser,\r\n                sessionContext: {\r\n                    bookmarks: session._lastBookmarks,\r\n                    mode: session._mode,\r\n                    database: session._database,\r\n                    afterComplete: session._onComplete\r\n                },\r\n                onCompleted: resolve,\r\n                onError: reject\r\n            });\r\n        });\r\n    };\r\n    return Rediscovery;\r\n}());\r\nexports.default = Rediscovery;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RoutingTable = exports.Rediscovery = void 0;\r\nvar rediscovery_1 = __importDefault(require(\"./rediscovery\"));\r\nexports.Rediscovery = rediscovery_1.default;\r\nvar routing_table_1 = __importDefault(require(\"./routing-table\"));\r\nexports.RoutingTable = routing_table_1.default;\r\nexports.default = rediscovery_1.default;\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\r\nvar channel_1 = require(\"../channel\");\r\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\r\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\r\nvar load_balancing_1 = require(\"../load-balancing\");\r\nvar connection_1 = require(\"../connection\");\r\nvar lang_1 = require(\"../lang\");\r\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\r\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, READ = _a.ACCESS_MODE_READ, WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\r\nvar PROCEDURE_NOT_FOUND_CODE = 'Neo.ClientError.Procedure.ProcedureNotFound';\r\nvar DATABASE_NOT_FOUND_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\r\nvar INVALID_BOOKMARK_CODE = 'Neo.ClientError.Transaction.InvalidBookmark';\r\nvar INVALID_BOOKMARK_MIXTURE_CODE = 'Neo.ClientError.Transaction.InvalidBookmarkMixture';\r\nvar AUTHORIZATION_EXPIRED_CODE = 'Neo.ClientError.Security.AuthorizationExpired';\r\nvar INVALID_ARGUMENT_ERROR = 'Neo.ClientError.Statement.ArgumentError';\r\nvar INVALID_REQUEST_ERROR = 'Neo.ClientError.Request.Invalid';\r\nvar STATEMENT_TYPE_ERROR = 'Neo.ClientError.Statement.TypeError';\r\nvar NOT_AVAILABLE = 'N/A';\r\nvar SYSTEM_DB_NAME = 'system';\r\nvar DEFAULT_DB_NAME = null;\r\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\r\nvar RoutingConnectionProvider = /** @class */ (function (_super) {\r\n    __extends(RoutingConnectionProvider, _super);\r\n    function RoutingConnectionProvider(_a) {\r\n        var id = _a.id, address = _a.address, routingContext = _a.routingContext, hostNameResolver = _a.hostNameResolver, config = _a.config, log = _a.log, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, routingTablePurgeDelay = _a.routingTablePurgeDelay, newPool = _a.newPool;\r\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, boltAgent: boltAgent, authTokenManager: authTokenManager, newPool: newPool }, function (address) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = connection_1.createChannelConnection;\r\n                        _b = [address,\r\n                            this._config,\r\n                            this._createConnectionErrorHandler(),\r\n                            this._log];\r\n                        return [4 /*yield*/, this._clientCertificateHolder.getClientCertificate()];\r\n                    case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent(), this._routingContext]))];\r\n                }\r\n            });\r\n        }); }) || this;\r\n        _this._routingContext = __assign(__assign({}, routingContext), { address: address.toString() });\r\n        _this._seedRouter = address;\r\n        _this._rediscovery = new rediscovery_1.default(_this._routingContext);\r\n        _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\r\n        _this._hostNameResolver = hostNameResolver;\r\n        _this._dnsResolver = new channel_1.HostNameResolver();\r\n        _this._log = log;\r\n        _this._useSeedRouter = true;\r\n        _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay\r\n            ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay)\r\n            : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\r\n        _this._refreshRoutingTable = lang_1.functional.reuseOngoingRequest(_this._refreshRoutingTable, _this);\r\n        return _this;\r\n    }\r\n    RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\r\n        // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\r\n        // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\r\n        return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\r\n    };\r\n    RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\r\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\r\n        this.forget(address, database || DEFAULT_DB_NAME);\r\n        return error;\r\n    };\r\n    RoutingConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\r\n        this._log.warn(\"Routing driver \".concat(this._id, \" will close connections to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\r\n        return _super.prototype._handleSecurityError.call(this, error, address, connection, database);\r\n    };\r\n    RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\r\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget writer \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\r\n        this.forgetWriter(address, database || DEFAULT_DB_NAME);\r\n        return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED, error);\r\n    };\r\n    /**\r\n     * See {@link ConnectionProvider} for more information about this method and\r\n     * its arguments.\r\n     */\r\n    RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var name, address, context, databaseSpecificErrorHandler, routingTable, connection, error_1, transformed;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        context = { database: database || DEFAULT_DB_NAME };\r\n                        databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) { return _this._handleUnavailability(error, address, context.database); }, function (error, address) { return _this._handleWriteFailure(error, address, context.database); }, function (error, address, conn) {\r\n                            return _this._handleSecurityError(error, address, conn, context.database);\r\n                        });\r\n                        return [4 /*yield*/, this._freshRoutingTable({\r\n                                accessMode: accessMode,\r\n                                database: context.database,\r\n                                bookmarks: bookmarks,\r\n                                impersonatedUser: impersonatedUser,\r\n                                auth: auth,\r\n                                onDatabaseNameResolved: function (databaseName) {\r\n                                    context.database = context.database || databaseName;\r\n                                    if (onDatabaseNameResolved) {\r\n                                        onDatabaseNameResolved(databaseName);\r\n                                    }\r\n                                }\r\n                            })\r\n                            // select a target server based on specified access mode\r\n                        ];\r\n                    case 1:\r\n                        routingTable = _c.sent();\r\n                        // select a target server based on specified access mode\r\n                        if (accessMode === READ) {\r\n                            address = this._loadBalancingStrategy.selectReader(routingTable.readers);\r\n                            name = 'read';\r\n                        }\r\n                        else if (accessMode === WRITE) {\r\n                            address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\r\n                            name = 'write';\r\n                        }\r\n                        else {\r\n                            throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\r\n                        }\r\n                        // we couldn't select a target server\r\n                        if (!address) {\r\n                            throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \".concat(name, \" server. Known routing table is: \").concat(routingTable), SESSION_EXPIRED);\r\n                        }\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        _c.trys.push([2, 6, , 7]);\r\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, address)];\r\n                    case 3:\r\n                        connection = _c.sent();\r\n                        if (!auth) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this._verifyStickyConnection({\r\n                                auth: auth,\r\n                                connection: connection,\r\n                                address: address\r\n                            })];\r\n                    case 4:\r\n                        _c.sent();\r\n                        return [2 /*return*/, connection];\r\n                    case 5: return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\r\n                    case 6:\r\n                        error_1 = _c.sent();\r\n                        transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\r\n                        throw transformed;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var addresses, lastError, i, connection, protocolVersion, error_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\r\n                    case 1:\r\n                        addresses = _a.sent();\r\n                        i = 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!(i < addresses.length)) return [3 /*break*/, 8];\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 6, , 7]);\r\n                        return [4 /*yield*/, this._createChannelConnection(addresses[i])];\r\n                    case 4:\r\n                        connection = _a.sent();\r\n                        protocolVersion = connection.protocol()\r\n                            ? connection.protocol().version\r\n                            : null;\r\n                        return [4 /*yield*/, connection.close()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        if (protocolVersion) {\r\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\r\n                        }\r\n                        return [2 /*return*/, false];\r\n                    case 6:\r\n                        error_2 = _a.sent();\r\n                        lastError = error_2;\r\n                        return [3 /*break*/, 7];\r\n                    case 7:\r\n                        i++;\r\n                        return [3 /*break*/, 2];\r\n                    case 8:\r\n                        if (lastError) {\r\n                            throw lastError;\r\n                        }\r\n                        return [2 /*return*/, false];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.supportsMultiDb = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.supportsSessionAuth = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V5_1; })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this._hasProtocolVersion(resolve)\r\n                .catch(reject);\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.verifyAuthentication = function (_a) {\r\n        var database = _a.database, accessMode = _a.accessMode, auth = _a.auth;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                return [2 /*return*/, this._verifyAuthentication({\r\n                        auth: auth,\r\n                        getAddress: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var context, routingTable, servers;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        context = { database: database || DEFAULT_DB_NAME };\r\n                                        return [4 /*yield*/, this._freshRoutingTable({\r\n                                                accessMode: accessMode,\r\n                                                database: context.database,\r\n                                                auth: auth,\r\n                                                onDatabaseNameResolved: function (databaseName) {\r\n                                                    context.database = context.database || databaseName;\r\n                                                }\r\n                                            })];\r\n                                    case 1:\r\n                                        routingTable = _a.sent();\r\n                                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\r\n                                        if (servers.length === 0) {\r\n                                            throw (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\r\n                                        }\r\n                                        return [2 /*return*/, servers[0]];\r\n                                }\r\n                            });\r\n                        }); }\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (_a) {\r\n        var database = _a.database, accessMode = _a.accessMode;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var context, routingTable, servers, error, servers_1, servers_1_1, address, serverInfo, e_1, e_2_1;\r\n            var e_2, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        context = { database: database || DEFAULT_DB_NAME };\r\n                        return [4 /*yield*/, this._freshRoutingTable({\r\n                                accessMode: accessMode,\r\n                                database: context.database,\r\n                                onDatabaseNameResolved: function (databaseName) {\r\n                                    context.database = context.database || databaseName;\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        routingTable = _c.sent();\r\n                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\r\n                        error = (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        _c.trys.push([2, 9, 10, 11]);\r\n                        servers_1 = __values(servers), servers_1_1 = servers_1.next();\r\n                        _c.label = 3;\r\n                    case 3:\r\n                        if (!!servers_1_1.done) return [3 /*break*/, 8];\r\n                        address = servers_1_1.value;\r\n                        _c.label = 4;\r\n                    case 4:\r\n                        _c.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({ address: address })];\r\n                    case 5:\r\n                        serverInfo = _c.sent();\r\n                        return [2 /*return*/, serverInfo];\r\n                    case 6:\r\n                        e_1 = _c.sent();\r\n                        error = e_1;\r\n                        return [3 /*break*/, 7];\r\n                    case 7:\r\n                        servers_1_1 = servers_1.next();\r\n                        return [3 /*break*/, 3];\r\n                    case 8: return [3 /*break*/, 11];\r\n                    case 9:\r\n                        e_2_1 = _c.sent();\r\n                        e_2 = { error: e_2_1 };\r\n                        return [3 /*break*/, 11];\r\n                    case 10:\r\n                        try {\r\n                            if (servers_1_1 && !servers_1_1.done && (_b = servers_1.return)) _b.call(servers_1);\r\n                        }\r\n                        finally { if (e_2) throw e_2.error; }\r\n                        return [7 /*endfinally*/];\r\n                    case 11: throw error;\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype.forget = function (address, database) {\r\n        this._routingTableRegistry.apply(database, {\r\n            applyWhenExists: function (routingTable) { return routingTable.forget(address); }\r\n        });\r\n        // We're firing and forgetting this operation explicitly and listening for any\r\n        // errors to avoid unhandled promise rejection\r\n        this._connectionPool.purge(address).catch(function () { });\r\n    };\r\n    RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\r\n        this._routingTableRegistry.apply(database, {\r\n            applyWhenExists: function (routingTable) { return routingTable.forgetWriter(address); }\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\r\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\r\n        var currentRoutingTable = this._routingTableRegistry.get(database, function () { return new rediscovery_1.RoutingTable({ database: database }); });\r\n        if (!currentRoutingTable.isStaleFor(accessMode)) {\r\n            return currentRoutingTable;\r\n        }\r\n        this._log.info(\"Routing table is stale for database: \\\"\".concat(database, \"\\\" and access mode: \\\"\").concat(accessMode, \"\\\": \").concat(currentRoutingTable));\r\n        return this._refreshRoutingTable(currentRoutingTable, bookmarks, impersonatedUser, auth)\r\n            .then(function (newRoutingTable) {\r\n            onDatabaseNameResolved(newRoutingTable.database);\r\n            return newRoutingTable;\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmarks, impersonatedUser, auth) {\r\n        var knownRouters = currentRoutingTable.routers;\r\n        if (this._useSeedRouter) {\r\n            return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\r\n        }\r\n        return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\r\n    };\r\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var seenRouters, _a, newRoutingTable, error, _b, newRoutingTable2, error2;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        seenRouters = [];\r\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\r\n                    case 1:\r\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\r\n                        if (!newRoutingTable) return [3 /*break*/, 2];\r\n                        this._useSeedRouter = false;\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\r\n                    case 3:\r\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable2 = _b[0], error2 = _b[1];\r\n                        newRoutingTable = newRoutingTable2;\r\n                        error = error2 || error;\r\n                        _c.label = 4;\r\n                    case 4: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\r\n                    case 5: return [2 /*return*/, _c.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, newRoutingTable, error;\r\n            var _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\r\n                    case 1:\r\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\r\n                        if (!!newRoutingTable) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\r\n                    case 2:\r\n                        // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\r\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _b[0], error = _b[1];\r\n                        _c.label = 3;\r\n                    case 3: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\r\n                    case 4: return [2 /*return*/, _c.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, newRoutingTable, error, lastRouterIndex;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\r\n                    case 1:\r\n                        _a = __read.apply(void 0, [_b.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\r\n                        if (newRoutingTable) {\r\n                            // one of the known routers returned a valid routing table - use it\r\n                            return [2 /*return*/, [newRoutingTable, null]];\r\n                        }\r\n                        lastRouterIndex = knownRouters.length - 1;\r\n                        RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\r\n                        return [2 /*return*/, [null, error]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmarks, impersonatedUser, auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var resolvedAddresses, newAddresses;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\r\n                        // filter out all addresses that we've already tried\r\n                    ];\r\n                    case 1:\r\n                        resolvedAddresses = _a.sent();\r\n                        newAddresses = resolvedAddresses.filter(function (address) { return seenRouters.indexOf(address) < 0; });\r\n                        return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmarks, impersonatedUser, auth)];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var resolvedAddresses, dnsResolvedAddresses;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\r\n                    case 1:\r\n                        resolvedAddresses = _a.sent();\r\n                        return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) { return _this._dnsResolver.resolve(address); }))];\r\n                    case 2:\r\n                        dnsResolvedAddresses = _a.sent();\r\n                        return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmarks, impersonatedUser, auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) { return __awaiter(_this, void 0, void 0, function () {\r\n                        var _a, newRoutingTable, previousRouterIndex, _b, session, error, error_3;\r\n                        return __generator(this, function (_c) {\r\n                            switch (_c.label) {\r\n                                case 0: return [4 /*yield*/, refreshedTablePromise];\r\n                                case 1:\r\n                                    _a = __read.apply(void 0, [_c.sent(), 1]), newRoutingTable = _a[0];\r\n                                    if (newRoutingTable) {\r\n                                        // valid routing table was fetched - just return it, try next router otherwise\r\n                                        return [2 /*return*/, [newRoutingTable, null]];\r\n                                    }\r\n                                    else {\r\n                                        previousRouterIndex = currentIndex - 1;\r\n                                        RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\r\n                                    }\r\n                                    return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmarks, impersonatedUser, auth)];\r\n                                case 2:\r\n                                    _b = __read.apply(void 0, [_c.sent(), 2]), session = _b[0], error = _b[1];\r\n                                    if (!session) return [3 /*break*/, 8];\r\n                                    _c.label = 3;\r\n                                case 3:\r\n                                    _c.trys.push([3, 5, 6, 7]);\r\n                                    return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\r\n                                case 4: return [2 /*return*/, [_c.sent(), null]];\r\n                                case 5:\r\n                                    error_3 = _c.sent();\r\n                                    return [2 /*return*/, this._handleRediscoveryError(error_3, currentRouter)];\r\n                                case 6:\r\n                                    session.close();\r\n                                    return [7 /*endfinally*/];\r\n                                case 7: return [3 /*break*/, 9];\r\n                                case 8: \r\n                                // unable to acquire connection and create session towards the current router\r\n                                // return null to signal that the next router should be tried\r\n                                return [2 /*return*/, [null, error]];\r\n                                case 9: return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); }, Promise.resolve([null, null]))];\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmarks, impersonatedUser, auth) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connection, databaseSpecificErrorHandler, delegateConnection, connectionProvider, protocolVersion, error_4;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 5]);\r\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, routerAddress)];\r\n                    case 1:\r\n                        connection = _a.sent();\r\n                        if (!auth) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this._verifyStickyConnection({\r\n                                auth: auth,\r\n                                connection: connection,\r\n                                address: routerAddress\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\r\n                            errorCode: SESSION_EXPIRED,\r\n                            handleSecurityError: function (error, address, conn) { return _this._handleSecurityError(error, address, conn); }\r\n                        });\r\n                        delegateConnection = !connection._sticky\r\n                            ? new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)\r\n                            : new connection_1.DelegateConnection(connection);\r\n                        connectionProvider = new connection_provider_single_1.default(delegateConnection);\r\n                        protocolVersion = connection.protocol().version;\r\n                        if (protocolVersion < 4.0) {\r\n                            return [2 /*return*/, [new neo4j_driver_core_1.Session({\r\n                                        mode: WRITE,\r\n                                        bookmarks: Bookmarks.empty(),\r\n                                        connectionProvider: connectionProvider\r\n                                    }), null]];\r\n                        }\r\n                        return [2 /*return*/, [new neo4j_driver_core_1.Session({\r\n                                    mode: READ,\r\n                                    database: SYSTEM_DB_NAME,\r\n                                    bookmarks: bookmarks,\r\n                                    connectionProvider: connectionProvider,\r\n                                    impersonatedUser: impersonatedUser\r\n                                }), null]];\r\n                    case 4:\r\n                        error_4 = _a.sent();\r\n                        return [2 /*return*/, this._handleRediscoveryError(error_4, routerAddress)];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._handleRediscoveryError = function (error, routerAddress) {\r\n        if (_isFailFastError(error) || _isFailFastSecurityError(error)) {\r\n            throw error;\r\n        }\r\n        else if (error.code === PROCEDURE_NOT_FOUND_CODE) {\r\n            // throw when getServers procedure not found because this is clearly a configuration issue\r\n            throw (0, neo4j_driver_core_1.newError)(\"Server at \".concat(routerAddress.asHostPort(), \" can't perform routing. Make sure you are connecting to a causal cluster\"), SERVICE_UNAVAILABLE, error);\r\n        }\r\n        this._log.warn(\"unable to fetch routing table because of an error \".concat(error));\r\n        return [null, error];\r\n    };\r\n    RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, error) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!newRoutingTable) {\r\n                            // none of routing servers returned valid routing table, throw exception\r\n                            throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \".concat(currentRoutingTable), SERVICE_UNAVAILABLE, error);\r\n                        }\r\n                        if (newRoutingTable.writers.length === 0) {\r\n                            // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\r\n                            // does not always get routing table without writers because it talks exclusively to a minority partition\r\n                            this._useSeedRouter = true;\r\n                        }\r\n                        return [4 /*yield*/, this._updateRoutingTable(newRoutingTable)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, newRoutingTable];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // close old connections to servers not present in the new routing table\r\n                    return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\r\n                    case 1:\r\n                        // close old connections to servers not present in the new routing table\r\n                        _a.sent();\r\n                        this._routingTableRegistry.removeExpired();\r\n                        this._routingTableRegistry.register(newRoutingTable);\r\n                        this._log.info(\"Updated routing table \".concat(newRoutingTable));\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\r\n        var address = routersArray[routerIndex];\r\n        if (routingTable && address) {\r\n            routingTable.forgetRouter(address);\r\n        }\r\n    };\r\n    return RoutingConnectionProvider;\r\n}(connection_provider_pooled_1.default));\r\nexports.default = RoutingConnectionProvider;\r\n/**\r\n * Responsible for keeping track of the existing routing tables\r\n */\r\nvar RoutingTableRegistry = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param {int} routingTablePurgeDelay The routing table purge delay\r\n     */\r\n    function RoutingTableRegistry(routingTablePurgeDelay) {\r\n        this._tables = new Map();\r\n        this._routingTablePurgeDelay = routingTablePurgeDelay;\r\n    }\r\n    /**\r\n     * Put a routing table in the registry\r\n     *\r\n     * @param {RoutingTable} table The routing table\r\n     * @returns {RoutingTableRegistry} this\r\n     */\r\n    RoutingTableRegistry.prototype.register = function (table) {\r\n        this._tables.set(table.database, table);\r\n        return this;\r\n    };\r\n    /**\r\n     * Apply function in the routing table for an specific database. If the database name is not defined, the function will\r\n     * be applied for each element\r\n     *\r\n     * @param {string} database The database name\r\n     * @param {object} callbacks The actions\r\n     * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\r\n     * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\r\n     * @returns {RoutingTableRegistry} this\r\n     */\r\n    RoutingTableRegistry.prototype.apply = function (database, _a) {\r\n        var _b = _a === void 0 ? {} : _a, applyWhenExists = _b.applyWhenExists, _c = _b.applyWhenDontExists, applyWhenDontExists = _c === void 0 ? function () { } : _c;\r\n        if (this._tables.has(database)) {\r\n            applyWhenExists(this._tables.get(database));\r\n        }\r\n        else if (typeof database === 'string' || database === null) {\r\n            applyWhenDontExists();\r\n        }\r\n        else {\r\n            this._forEach(applyWhenExists);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Retrieves a routing table from a given database name\r\n     *\r\n     * @param {string|impersonatedUser} impersonatedUser The impersonated User\r\n     * @param {string} database The database name\r\n     * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\r\n     * @returns {RoutingTable} The routing table for the respective database\r\n     */\r\n    RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\r\n        if (this._tables.has(database)) {\r\n            return this._tables.get(database);\r\n        }\r\n        return typeof defaultSupplier === 'function'\r\n            ? defaultSupplier()\r\n            : defaultSupplier;\r\n    };\r\n    /**\r\n     * Remove the routing table which is already expired\r\n     * @returns {RoutingTableRegistry} this\r\n     */\r\n    RoutingTableRegistry.prototype.removeExpired = function () {\r\n        var _this = this;\r\n        return this._removeIf(function (value) {\r\n            return value.isExpiredFor(_this._routingTablePurgeDelay);\r\n        });\r\n    };\r\n    RoutingTableRegistry.prototype._forEach = function (apply) {\r\n        var e_3, _a;\r\n        try {\r\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), value = _d[1];\r\n                apply(value);\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return this;\r\n    };\r\n    RoutingTableRegistry.prototype._remove = function (key) {\r\n        this._tables.delete(key);\r\n        return this;\r\n    };\r\n    RoutingTableRegistry.prototype._removeIf = function (predicate) {\r\n        var e_4, _a;\r\n        try {\r\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\r\n                if (predicate(value)) {\r\n                    this._remove(key);\r\n                }\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return this;\r\n    };\r\n    return RoutingTableRegistry;\r\n}());\r\nfunction _isFailFastError(error) {\r\n    return [\r\n        DATABASE_NOT_FOUND_CODE,\r\n        INVALID_BOOKMARK_CODE,\r\n        INVALID_BOOKMARK_MIXTURE_CODE,\r\n        INVALID_ARGUMENT_ERROR,\r\n        INVALID_REQUEST_ERROR,\r\n        STATEMENT_TYPE_ERROR,\r\n        NOT_AVAILABLE\r\n    ].includes(error.code);\r\n}\r\nfunction _isFailFastSecurityError(error) {\r\n    return error.code.startsWith('Neo.ClientError.Security.') &&\r\n        ![\r\n            AUTHORIZATION_EXPIRED_CODE\r\n        ].includes(error.code);\r\n}\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RoutingConnectionProvider = exports.DirectConnectionProvider = exports.PooledConnectionProvider = exports.SingleConnectionProvider = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar connection_provider_single_1 = require(\"./connection-provider-single\");\r\nObject.defineProperty(exports, \"SingleConnectionProvider\", { enumerable: true, get: function () { return __importDefault(connection_provider_single_1).default; } });\r\nvar connection_provider_pooled_1 = require(\"./connection-provider-pooled\");\r\nObject.defineProperty(exports, \"PooledConnectionProvider\", { enumerable: true, get: function () { return __importDefault(connection_provider_pooled_1).default; } });\r\nvar connection_provider_direct_1 = require(\"./connection-provider-direct\");\r\nObject.defineProperty(exports, \"DirectConnectionProvider\", { enumerable: true, get: function () { return __importDefault(connection_provider_direct_1).default; } });\r\nvar connection_provider_routing_1 = require(\"./connection-provider-routing\");\r\nObject.defineProperty(exports, \"RoutingConnectionProvider\", { enumerable: true, get: function () { return __importDefault(connection_provider_routing_1).default; } });\r\n", "\"use strict\";\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.packstream = exports.channel = exports.buf = exports.bolt = exports.loadBalancing = void 0;\r\nexports.loadBalancing = __importStar(require(\"./load-balancing\"));\r\nexports.bolt = __importStar(require(\"./bolt\"));\r\nexports.buf = __importStar(require(\"./buf\"));\r\nexports.channel = __importStar(require(\"./channel\"));\r\nexports.packstream = __importStar(require(\"./packstream\"));\r\n__exportStar(require(\"./connection-provider\"), exports);\r\n", "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.UnboundRelationship = exports.Relationship = exports.Node = exports.Record = exports.ServerInfo = exports.GqlStatusObject = exports.Notification = exports.QueryStatistics = exports.ProfiledPlan = exports.Plan = exports.ResultSummary = exports.RxResult = exports.RxManagedTransaction = exports.RxTransaction = exports.RxSession = exports.EagerResult = exports.Result = exports.ManagedTransaction = exports.Transaction = exports.Session = exports.Driver = exports.temporal = exports.spatial = exports.graph = exports.error = exports.routing = exports.session = exports.types = exports.logging = exports.auth = exports.isRetryableError = exports.Neo4jError = exports.integer = exports.isUnboundRelationship = exports.isRelationship = exports.isPathSegment = exports.isPath = exports.isNode = exports.isDateTime = exports.isLocalDateTime = exports.isDate = exports.isTime = exports.isLocalTime = exports.isDuration = exports.isPoint = exports.isInt = exports.int = exports.hasReachableServer = exports.driver = exports.authTokenManagers = void 0;\r\nexports.clientCertificateProviders = exports.notificationFilterMinimumSeverityLevel = exports.notificationFilterDisabledClassification = exports.notificationFilterDisabledCategory = exports.notificationSeverityLevel = exports.notificationClassification = exports.notificationCategory = exports.resultTransformers = exports.bookmarkManager = exports.DateTime = exports.LocalDateTime = exports.Date = exports.Time = exports.LocalTime = exports.Duration = exports.Integer = exports.Point = exports.PathSegment = exports.Path = void 0;\r\n/**\r\n * Copyright (c) \"Neo4j\"\r\n * Neo4j Sweden AB [https://neo4j.com]\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar driver_1 = require(\"./driver\");\r\nObject.defineProperty(exports, \"Driver\", { enumerable: true, get: function () { return driver_1.Driver; } });\r\nvar version_1 = __importDefault(require(\"./version\"));\r\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\r\nObject.defineProperty(exports, \"authTokenManagers\", { enumerable: true, get: function () { return neo4j_driver_core_1.authTokenManagers; } });\r\nObject.defineProperty(exports, \"Neo4jError\", { enumerable: true, get: function () { return neo4j_driver_core_1.Neo4jError; } });\r\nObject.defineProperty(exports, \"isRetryableError\", { enumerable: true, get: function () { return neo4j_driver_core_1.isRetryableError; } });\r\nObject.defineProperty(exports, \"error\", { enumerable: true, get: function () { return neo4j_driver_core_1.error; } });\r\nObject.defineProperty(exports, \"Integer\", { enumerable: true, get: function () { return neo4j_driver_core_1.Integer; } });\r\nObject.defineProperty(exports, \"int\", { enumerable: true, get: function () { return neo4j_driver_core_1.int; } });\r\nObject.defineProperty(exports, \"isInt\", { enumerable: true, get: function () { return neo4j_driver_core_1.isInt; } });\r\nObject.defineProperty(exports, \"isPoint\", { enumerable: true, get: function () { return neo4j_driver_core_1.isPoint; } });\r\nObject.defineProperty(exports, \"Point\", { enumerable: true, get: function () { return neo4j_driver_core_1.Point; } });\r\nObject.defineProperty(exports, \"Date\", { enumerable: true, get: function () { return neo4j_driver_core_1.Date; } });\r\nObject.defineProperty(exports, \"DateTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.DateTime; } });\r\nObject.defineProperty(exports, \"Duration\", { enumerable: true, get: function () { return neo4j_driver_core_1.Duration; } });\r\nObject.defineProperty(exports, \"isDate\", { enumerable: true, get: function () { return neo4j_driver_core_1.isDate; } });\r\nObject.defineProperty(exports, \"isDateTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.isDateTime; } });\r\nObject.defineProperty(exports, \"isDuration\", { enumerable: true, get: function () { return neo4j_driver_core_1.isDuration; } });\r\nObject.defineProperty(exports, \"isLocalDateTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.isLocalDateTime; } });\r\nObject.defineProperty(exports, \"isLocalTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.isLocalTime; } });\r\nObject.defineProperty(exports, \"isNode\", { enumerable: true, get: function () { return neo4j_driver_core_1.isNode; } });\r\nObject.defineProperty(exports, \"isPath\", { enumerable: true, get: function () { return neo4j_driver_core_1.isPath; } });\r\nObject.defineProperty(exports, \"isPathSegment\", { enumerable: true, get: function () { return neo4j_driver_core_1.isPathSegment; } });\r\nObject.defineProperty(exports, \"isRelationship\", { enumerable: true, get: function () { return neo4j_driver_core_1.isRelationship; } });\r\nObject.defineProperty(exports, \"isTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.isTime; } });\r\nObject.defineProperty(exports, \"isUnboundRelationship\", { enumerable: true, get: function () { return neo4j_driver_core_1.isUnboundRelationship; } });\r\nObject.defineProperty(exports, \"LocalDateTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.LocalDateTime; } });\r\nObject.defineProperty(exports, \"LocalTime\", { enumerable: true, get: function () { return neo4j_driver_core_1.LocalTime; } });\r\nObject.defineProperty(exports, \"Time\", { enumerable: true, get: function () { return neo4j_driver_core_1.Time; } });\r\nObject.defineProperty(exports, \"Node\", { enumerable: true, get: function () { return neo4j_driver_core_1.Node; } });\r\nObject.defineProperty(exports, \"Path\", { enumerable: true, get: function () { return neo4j_driver_core_1.Path; } });\r\nObject.defineProperty(exports, \"PathSegment\", { enumerable: true, get: function () { return neo4j_driver_core_1.PathSegment; } });\r\nObject.defineProperty(exports, \"Relationship\", { enumerable: true, get: function () { return neo4j_driver_core_1.Relationship; } });\r\nObject.defineProperty(exports, \"UnboundRelationship\", { enumerable: true, get: function () { return neo4j_driver_core_1.UnboundRelationship; } });\r\nObject.defineProperty(exports, \"Record\", { enumerable: true, get: function () { return neo4j_driver_core_1.Record; } });\r\nObject.defineProperty(exports, \"ResultSummary\", { enumerable: true, get: function () { return neo4j_driver_core_1.ResultSummary; } });\r\nObject.defineProperty(exports, \"Plan\", { enumerable: true, get: function () { return neo4j_driver_core_1.Plan; } });\r\nObject.defineProperty(exports, \"ProfiledPlan\", { enumerable: true, get: function () { return neo4j_driver_core_1.ProfiledPlan; } });\r\nObject.defineProperty(exports, \"QueryStatistics\", { enumerable: true, get: function () { return neo4j_driver_core_1.QueryStatistics; } });\r\nObject.defineProperty(exports, \"Notification\", { enumerable: true, get: function () { return neo4j_driver_core_1.Notification; } });\r\nObject.defineProperty(exports, \"GqlStatusObject\", { enumerable: true, get: function () { return neo4j_driver_core_1.GqlStatusObject; } });\r\nObject.defineProperty(exports, \"ServerInfo\", { enumerable: true, get: function () { return neo4j_driver_core_1.ServerInfo; } });\r\nObject.defineProperty(exports, \"Result\", { enumerable: true, get: function () { return neo4j_driver_core_1.Result; } });\r\nObject.defineProperty(exports, \"EagerResult\", { enumerable: true, get: function () { return neo4j_driver_core_1.EagerResult; } });\r\nObject.defineProperty(exports, \"auth\", { enumerable: true, get: function () { return neo4j_driver_core_1.auth; } });\r\nObject.defineProperty(exports, \"Session\", { enumerable: true, get: function () { return neo4j_driver_core_1.Session; } });\r\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return neo4j_driver_core_1.Transaction; } });\r\nObject.defineProperty(exports, \"ManagedTransaction\", { enumerable: true, get: function () { return neo4j_driver_core_1.ManagedTransaction; } });\r\nObject.defineProperty(exports, \"bookmarkManager\", { enumerable: true, get: function () { return neo4j_driver_core_1.bookmarkManager; } });\r\nObject.defineProperty(exports, \"routing\", { enumerable: true, get: function () { return neo4j_driver_core_1.routing; } });\r\nObject.defineProperty(exports, \"resultTransformers\", { enumerable: true, get: function () { return neo4j_driver_core_1.resultTransformers; } });\r\nObject.defineProperty(exports, \"notificationCategory\", { enumerable: true, get: function () { return neo4j_driver_core_1.notificationCategory; } });\r\nObject.defineProperty(exports, \"notificationClassification\", { enumerable: true, get: function () { return neo4j_driver_core_1.notificationClassification; } });\r\nObject.defineProperty(exports, \"notificationSeverityLevel\", { enumerable: true, get: function () { return neo4j_driver_core_1.notificationSeverityLevel; } });\r\nObject.defineProperty(exports, \"notificationFilterDisabledCategory\", { enumerable: true, get: function () { return neo4j_driver_core_1.notificationFilterDisabledCategory; } });\r\nObject.defineProperty(exports, \"notificationFilterDisabledClassification\", { enumerable: true, get: function () { return neo4j_driver_core_1.notificationFilterDisabledClassification; } });\r\nObject.defineProperty(exports, \"notificationFilterMinimumSeverityLevel\", { enumerable: true, get: function () { return neo4j_driver_core_1.notificationFilterMinimumSeverityLevel; } });\r\nObject.defineProperty(exports, \"clientCertificateProviders\", { enumerable: true, get: function () { return neo4j_driver_core_1.clientCertificateProviders; } });\r\nvar neo4j_driver_bolt_connection_1 = require(\"neo4j-driver-bolt-connection\");\r\nvar session_rx_1 = __importDefault(require(\"./session-rx\"));\r\nexports.RxSession = session_rx_1.default;\r\nvar transaction_rx_1 = __importDefault(require(\"./transaction-rx\"));\r\nexports.RxTransaction = transaction_rx_1.default;\r\nvar transaction_managed_rx_1 = __importDefault(require(\"./transaction-managed-rx\"));\r\nexports.RxManagedTransaction = transaction_managed_rx_1.default;\r\nvar result_rx_1 = __importDefault(require(\"./result-rx\"));\r\nexports.RxResult = result_rx_1.default;\r\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_ON = _a.ENCRYPTION_ON, assertString = _a.assertString, isEmptyObjectOrNull = _a.isEmptyObjectOrNull, ServerAddress = neo4j_driver_core_1.internal.serverAddress.ServerAddress, urlUtil = neo4j_driver_core_1.internal.urlUtil;\r\nvar USER_AGENT = 'neo4j-javascript/' + version_1.default;\r\nfunction isAuthTokenManager(value) {\r\n    return typeof value === 'object' &&\r\n        value != null &&\r\n        'getToken' in value &&\r\n        'handleSecurityException' in value &&\r\n        typeof value.getToken === 'function' &&\r\n        typeof value.handleSecurityException === 'function';\r\n}\r\nfunction createAuthManager(authTokenOrManager) {\r\n    if (isAuthTokenManager(authTokenOrManager)) {\r\n        return authTokenOrManager;\r\n    }\r\n    var authToken = authTokenOrManager;\r\n    // Sanitize authority token. Nicer error from server when a scheme is set.\r\n    authToken = authToken || {};\r\n    authToken.scheme = authToken.scheme || 'none';\r\n    return (0, neo4j_driver_core_1.staticAuthTokenManager)({ authToken: authToken });\r\n}\r\n/**\r\n * Construct a new Neo4j Driver. This is your main entry point for this\r\n * library.\r\n *\r\n * @param {string} url The URL for the Neo4j database, for instance \"neo4j://localhost\" and/or \"bolt://localhost\"\r\n * @param {Map<string,string>} authToken Authentication credentials. See {@link auth} for helpers.\r\n * @param {Config} config Configuration object.\r\n * @returns {Driver}\r\n */\r\nfunction driver(url, authToken, config) {\r\n    if (config === void 0) { config = {}; }\r\n    assertString(url, 'Bolt URL');\r\n    var parsedUrl = urlUtil.parseDatabaseUrl(url);\r\n    // Determine encryption/trust options from the URL.\r\n    var routing = false;\r\n    var encrypted = false;\r\n    var trust;\r\n    switch (parsedUrl.scheme) {\r\n        case 'bolt':\r\n            break;\r\n        case 'bolt+s':\r\n            encrypted = true;\r\n            trust = 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES';\r\n            break;\r\n        case 'bolt+ssc':\r\n            encrypted = true;\r\n            trust = 'TRUST_ALL_CERTIFICATES';\r\n            break;\r\n        case 'neo4j':\r\n            routing = true;\r\n            break;\r\n        case 'neo4j+s':\r\n            encrypted = true;\r\n            trust = 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES';\r\n            routing = true;\r\n            break;\r\n        case 'neo4j+ssc':\r\n            encrypted = true;\r\n            trust = 'TRUST_ALL_CERTIFICATES';\r\n            routing = true;\r\n            break;\r\n        default:\r\n            throw new Error(\"Unknown scheme: \".concat(parsedUrl.scheme));\r\n    }\r\n    // Encryption enabled on URL, propagate trust to the config.\r\n    if (encrypted) {\r\n        // Check for configuration conflict between URL and config.\r\n        if ('encrypted' in config || 'trust' in config) {\r\n            throw new Error('Encryption/trust can only be configured either through URL or config, not both');\r\n        }\r\n        config.encrypted = ENCRYPTION_ON;\r\n        config.trust = trust;\r\n        config.clientCertificate = (0, neo4j_driver_core_1.resolveCertificateProvider)(config.clientCertificate);\r\n    }\r\n    var authTokenManager = createAuthManager(authToken);\r\n    // Use default user agent or user agent specified by user.\r\n    config.userAgent = config.userAgent || USER_AGENT;\r\n    config.boltAgent = neo4j_driver_core_1.internal.boltAgent.fromVersion(version_1.default);\r\n    var address = ServerAddress.fromUrl(parsedUrl.hostAndPort);\r\n    var meta = {\r\n        address: address,\r\n        typename: routing ? 'Routing' : 'Direct',\r\n        routing: routing\r\n    };\r\n    return new driver_1.Driver(meta, config, createConnectionProviderFunction());\r\n    function createConnectionProviderFunction() {\r\n        if (routing) {\r\n            return function (id, config, log, hostNameResolver) {\r\n                return new neo4j_driver_bolt_connection_1.RoutingConnectionProvider({\r\n                    id: id,\r\n                    config: config,\r\n                    log: log,\r\n                    hostNameResolver: hostNameResolver,\r\n                    authTokenManager: authTokenManager,\r\n                    address: address,\r\n                    userAgent: config.userAgent,\r\n                    boltAgent: config.boltAgent,\r\n                    routingContext: parsedUrl.query\r\n                });\r\n            };\r\n        }\r\n        else {\r\n            if (!isEmptyObjectOrNull(parsedUrl.query)) {\r\n                throw new Error(\"Parameters are not supported with none routed scheme. Given URL: '\".concat(url, \"'\"));\r\n            }\r\n            return function (id, config, log) {\r\n                return new neo4j_driver_bolt_connection_1.DirectConnectionProvider({\r\n                    id: id,\r\n                    config: config,\r\n                    log: log,\r\n                    authTokenManager: authTokenManager,\r\n                    address: address,\r\n                    userAgent: config.userAgent,\r\n                    boltAgent: config.boltAgent\r\n                });\r\n            };\r\n        }\r\n    }\r\n}\r\nexports.driver = driver;\r\n/**\r\n * Verifies if the driver can reach a server at the given url.\r\n *\r\n * @experimental\r\n * @since 5.0.0\r\n * @param {string} url The URL for the Neo4j database, for instance \"neo4j://localhost\" and/or \"bolt://localhost\"\r\n * @param {object} config Configuration object. See the {@link driver}\r\n * @returns {true} When the server is reachable\r\n * @throws {Error} When the server is not reachable or the url is invalid\r\n */\r\nfunction hasReachableServer(url, config) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var nonLoggedDriver;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    nonLoggedDriver = driver(url, { scheme: 'none', principal: '', credentials: '' }, config);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, , 3, 5]);\r\n                    return [4 /*yield*/, nonLoggedDriver.getNegotiatedProtocolVersion()];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, true];\r\n                case 3: return [4 /*yield*/, nonLoggedDriver.close()];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [7 /*endfinally*/];\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.hasReachableServer = hasReachableServer;\r\n/**\r\n * Object containing predefined logging configurations. These are expected to be used as values of the driver config's `logging` property.\r\n * @property {function(level: ?string): object} console the function to create a logging config that prints all messages to `console.log` with\r\n * timestamp, level and message. It takes an optional `level` parameter which represents the maximum log level to be logged. Default value is 'info'.\r\n */\r\nvar logging = {\r\n    console: function (level) {\r\n        return {\r\n            level: level,\r\n            logger: function (level, message) {\r\n                return console.log(\"\".concat(global.Date.now(), \" \").concat(level.toUpperCase(), \" \").concat(message));\r\n            }\r\n        };\r\n    }\r\n};\r\nexports.logging = logging;\r\n/**\r\n * Object containing constructors for all neo4j types.\r\n */\r\nvar types = {\r\n    Node: neo4j_driver_core_1.Node,\r\n    Relationship: neo4j_driver_core_1.Relationship,\r\n    UnboundRelationship: neo4j_driver_core_1.UnboundRelationship,\r\n    PathSegment: neo4j_driver_core_1.PathSegment,\r\n    Path: neo4j_driver_core_1.Path,\r\n    Result: neo4j_driver_core_1.Result,\r\n    EagerResult: neo4j_driver_core_1.EagerResult,\r\n    ResultSummary: neo4j_driver_core_1.ResultSummary,\r\n    Record: neo4j_driver_core_1.Record,\r\n    Point: neo4j_driver_core_1.Point,\r\n    Date: neo4j_driver_core_1.Date,\r\n    DateTime: neo4j_driver_core_1.DateTime,\r\n    Duration: neo4j_driver_core_1.Duration,\r\n    LocalDateTime: neo4j_driver_core_1.LocalDateTime,\r\n    LocalTime: neo4j_driver_core_1.LocalTime,\r\n    Time: neo4j_driver_core_1.Time,\r\n    Integer: neo4j_driver_core_1.Integer\r\n};\r\nexports.types = types;\r\n/**\r\n * Object containing string constants representing session access modes.\r\n */\r\nvar session = {\r\n    READ: driver_1.READ,\r\n    WRITE: driver_1.WRITE\r\n};\r\nexports.session = session;\r\n/**\r\n * Object containing functions to work with {@link Integer} objects.\r\n */\r\nvar integer = {\r\n    toNumber: neo4j_driver_core_1.toNumber,\r\n    toString: neo4j_driver_core_1.toString,\r\n    inSafeRange: neo4j_driver_core_1.inSafeRange\r\n};\r\nexports.integer = integer;\r\n/**\r\n * Object containing functions to work with spatial types, like {@link Point}.\r\n */\r\nvar spatial = {\r\n    isPoint: neo4j_driver_core_1.isPoint\r\n};\r\nexports.spatial = spatial;\r\n/**\r\n * Object containing functions to work with temporal types, like {@link Time} or {@link Duration}.\r\n */\r\nvar temporal = {\r\n    isDuration: neo4j_driver_core_1.isDuration,\r\n    isLocalTime: neo4j_driver_core_1.isLocalTime,\r\n    isTime: neo4j_driver_core_1.isTime,\r\n    isDate: neo4j_driver_core_1.isDate,\r\n    isLocalDateTime: neo4j_driver_core_1.isLocalDateTime,\r\n    isDateTime: neo4j_driver_core_1.isDateTime\r\n};\r\nexports.temporal = temporal;\r\n/**\r\n * Object containing functions to work with graph types, like {@link Node} or {@link Relationship}.\r\n */\r\nvar graph = {\r\n    isNode: neo4j_driver_core_1.isNode,\r\n    isPath: neo4j_driver_core_1.isPath,\r\n    isPathSegment: neo4j_driver_core_1.isPathSegment,\r\n    isRelationship: neo4j_driver_core_1.isRelationship,\r\n    isUnboundRelationship: neo4j_driver_core_1.isUnboundRelationship\r\n};\r\nexports.graph = graph;\r\n/**\r\n * @private\r\n */\r\nvar forExport = {\r\n    authTokenManagers: neo4j_driver_core_1.authTokenManagers,\r\n    driver: driver,\r\n    hasReachableServer: hasReachableServer,\r\n    int: neo4j_driver_core_1.int,\r\n    isInt: neo4j_driver_core_1.isInt,\r\n    isPoint: neo4j_driver_core_1.isPoint,\r\n    isDuration: neo4j_driver_core_1.isDuration,\r\n    isLocalTime: neo4j_driver_core_1.isLocalTime,\r\n    isTime: neo4j_driver_core_1.isTime,\r\n    isDate: neo4j_driver_core_1.isDate,\r\n    isLocalDateTime: neo4j_driver_core_1.isLocalDateTime,\r\n    isDateTime: neo4j_driver_core_1.isDateTime,\r\n    isNode: neo4j_driver_core_1.isNode,\r\n    isPath: neo4j_driver_core_1.isPath,\r\n    isPathSegment: neo4j_driver_core_1.isPathSegment,\r\n    isRelationship: neo4j_driver_core_1.isRelationship,\r\n    isUnboundRelationship: neo4j_driver_core_1.isUnboundRelationship,\r\n    integer: integer,\r\n    Neo4jError: neo4j_driver_core_1.Neo4jError,\r\n    isRetryableError: neo4j_driver_core_1.isRetryableError,\r\n    auth: neo4j_driver_core_1.auth,\r\n    logging: logging,\r\n    types: types,\r\n    session: session,\r\n    routing: neo4j_driver_core_1.routing,\r\n    error: neo4j_driver_core_1.error,\r\n    graph: graph,\r\n    spatial: spatial,\r\n    temporal: temporal,\r\n    Driver: driver_1.Driver,\r\n    Session: neo4j_driver_core_1.Session,\r\n    Transaction: neo4j_driver_core_1.Transaction,\r\n    ManagedTransaction: neo4j_driver_core_1.ManagedTransaction,\r\n    Result: neo4j_driver_core_1.Result,\r\n    EagerResult: neo4j_driver_core_1.EagerResult,\r\n    RxSession: session_rx_1.default,\r\n    RxTransaction: transaction_rx_1.default,\r\n    RxManagedTransaction: transaction_managed_rx_1.default,\r\n    RxResult: result_rx_1.default,\r\n    ResultSummary: neo4j_driver_core_1.ResultSummary,\r\n    Plan: neo4j_driver_core_1.Plan,\r\n    ProfiledPlan: neo4j_driver_core_1.ProfiledPlan,\r\n    QueryStatistics: neo4j_driver_core_1.QueryStatistics,\r\n    Notification: neo4j_driver_core_1.Notification,\r\n    GqlStatusObject: neo4j_driver_core_1.GqlStatusObject,\r\n    ServerInfo: neo4j_driver_core_1.ServerInfo,\r\n    Record: neo4j_driver_core_1.Record,\r\n    Node: neo4j_driver_core_1.Node,\r\n    Relationship: neo4j_driver_core_1.Relationship,\r\n    UnboundRelationship: neo4j_driver_core_1.UnboundRelationship,\r\n    Path: neo4j_driver_core_1.Path,\r\n    PathSegment: neo4j_driver_core_1.PathSegment,\r\n    Point: neo4j_driver_core_1.Point,\r\n    Integer: neo4j_driver_core_1.Integer,\r\n    Duration: neo4j_driver_core_1.Duration,\r\n    LocalTime: neo4j_driver_core_1.LocalTime,\r\n    Time: neo4j_driver_core_1.Time,\r\n    Date: neo4j_driver_core_1.Date,\r\n    LocalDateTime: neo4j_driver_core_1.LocalDateTime,\r\n    DateTime: neo4j_driver_core_1.DateTime,\r\n    bookmarkManager: neo4j_driver_core_1.bookmarkManager,\r\n    resultTransformers: neo4j_driver_core_1.resultTransformers,\r\n    notificationCategory: neo4j_driver_core_1.notificationCategory,\r\n    notificationSeverityLevel: neo4j_driver_core_1.notificationSeverityLevel,\r\n    notificationFilterDisabledCategory: neo4j_driver_core_1.notificationFilterDisabledCategory,\r\n    notificationFilterMinimumSeverityLevel: neo4j_driver_core_1.notificationFilterMinimumSeverityLevel,\r\n    clientCertificateProviders: neo4j_driver_core_1.clientCertificateProviders\r\n};\r\nexports.default = forExport;"],
  "mappings": "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",
  "names": ["d", "b", "GQLError", "Neo4jError", "Integer", "ValueRange", "Duration", "LocalTime", "Time", "Date", "LocalDateTime", "DateTime", "Node", "Relationship", "UnboundRelationship", "PathSegment", "Path", "Record", "Point", "CompletedObserver", "FailedObserver", "Bookmarks", "d", "b", "Logger", "NoOpLogger", "_a", "d", "b", "ConnectionHolder", "ReadOnlyConnectionHolder", "EmptyConnectionHolder", "TxConfig", "TransactionExecutor", "error", "tx", "Url", "rpartition", "value", "parsed", "parts", "ServerAddress", "BaseHostNameResolver", "ConfiguredCustomResolver", "exports", "PoolConfig", "Pool", "_a", "address", "resource", "pool", "PendingRequest", "SingleAddressPool", "require_pool", "Notification", "GqlStatusObject", "ResultSummary", "Plan", "ProfiledPlan", "Stats", "QueryStatistics", "ServerInfo", "NotificationFilter", "Result", "EagerResult", "Releasable", "ConnectionProvider", "Connection", "Transaction", "_this", "ManagedTransaction", "d", "b", "TransactionPromise", "Session", "_this", "_a", "BookmarkManager", "Neo4jBookmarkManager", "ResultTransformers", "summary", "QueryExecutor", "_a", "SessionConfig", "QueryConfig", "Driver", "createSession", "AuthTokenManager", "AuthTokenAndExpiration", "AuthTokenManagers", "_a", "TokenRefreshObservable", "ExpirationBasedAuthTokenManager", "StaticAuthTokenManager", "d", "b", "Config", "InternalConfig", "d", "b", "ClientCertificate", "ClientCertificateProvider", "RotatingClientCertificateProvider", "ClientCertificateProviders", "InternalRotatingClientCertificateProvider", "Subscription", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "OperatorSubscriber", "err", "ConnectableObservable", "Subject", "AnonymousSubject", "BehaviorSubject", "ReplaySubject", "AsyncSubject", "Action", "AsyncAction", "AsapAction", "Scheduler", "AsyncScheduler", "AsapScheduler", "QueueAction", "QueueScheduler", "AnimationFrameAction", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "NotificationKind", "Notification", "_i", "i", "sourceIndex", "_a", "i", "sourceIndex", "require_types", "_a", "TimeInterval", "window", "window", "_a", "window", "window", "i", "RxResult", "result", "StreamControl", "RxTransaction", "RxManagedTransaction", "RxRetryLogic", "RxSession", "_a", "require_driver", "d", "b", "Driver", "LoadBalancingStrategy", "RoundRobinArrayIndex", "d", "b", "LeastConnectedLoadBalancingStrategy", "len", "i", "len2", "require_buffer", "i", "byteLength", "d", "b", "BaseBuffer", "SliceBuffer", "d", "b", "ChannelBuffer", "WebSocketChannel", "_a", "d", "b", "BrowserHostNameResolver", "require_browser", "d", "b", "CombinedBuffer", "d", "b", "Chunker", "Dechunker", "ChannelConfig", "exports", "version", "d", "b", "RawRoutingTable", "ResponseRawRoutingTable", "NullRawRoutingTable", "RecordRawRoutingTable", "d", "b", "StreamObserver", "ResultStreamObserver", "LoginObserver", "LogoffObserver", "ResetObserver", "TelemetryObserver", "FailedObserver", "CompletedObserver", "ProcedureRouteObserver", "RouteObserver", "Structure", "Packer", "i", "Unpacker", "d", "b", "Packer", "Unpacker", "RequestMessage", "_a", "Transformer", "TypeTransformer", "BoltProtocol", "_a", "error", "_a", "value", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "_a", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "value", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "_a", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "_a", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "_a", "d", "b", "BoltProtocol", "d", "b", "BoltProtocol", "ResponseHandler", "exports", "d", "b", "SingleConnectionProvider", "require_connection", "d", "b", "Connection", "d", "b", "channelConfig", "ChannelConnection", "d", "b", "DelegateConnection", "ConnectionErrorHandler", "require_connection", "AuthenticationProvider", "LivenessCheckProvider", "ClientCertificateHolder", "d", "b", "PooledConnectionProvider", "_a", "_b", "d", "b", "DirectConnectionProvider", "_a", "RoutingTable", "_a", "Rediscovery", "require_rediscovery", "d", "b", "RoutingConnectionProvider", "_a", "address", "RoutingTableRegistry", "require_connection_provider", "require_lib", "exports", "require_lib", "config", "_a", "level"]
}
